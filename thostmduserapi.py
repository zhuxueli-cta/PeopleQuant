# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.2.1
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


# openctp-ctp is supported by openctp(https://github.com/openctp).
# Author: Jedore(https://github.com/Jedore)
#
# BSD 3-Clause License
#
# Copyright (c) 2022, openctp
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
# 1. Redistributions of source code must retain the above copyright notice, this
#    list of conditions and the following disclaimer.
#
# 2. Redistributions in binary form must reproduce the above copyright notice,
#    this list of conditions and the following disclaimer in the documentation
#    and/or other materials provided with the distribution.
#
# 3. Neither the name of the copyright holder nor the names of its
#    contributors may be used to endorse or promote products derived from
#    this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
# OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _thostmduserapi
else:
    import _thostmduserapi

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _thostmduserapi.SWIG_PyInstanceMethod_New
_swig_new_static_method = _thostmduserapi.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import weakref

THOST_TERT_RESTART = _thostmduserapi.THOST_TERT_RESTART
THOST_TERT_RESUME = _thostmduserapi.THOST_TERT_RESUME
THOST_TERT_QUICK = _thostmduserapi.THOST_TERT_QUICK
THOST_TERT_NONE = _thostmduserapi.THOST_TERT_NONE
THOST_FTDC_EXP_Normal = _thostmduserapi.THOST_FTDC_EXP_Normal
r"""
    TFtdcExchangePropertyType是一个交易所属性类型
    正常
    """
THOST_FTDC_EXP_GenOrderByTrade = _thostmduserapi.THOST_FTDC_EXP_GenOrderByTrade
r"""根据成交生成报单"""
THOST_FTDC_ICT_EID = _thostmduserapi.THOST_FTDC_ICT_EID
r"""
    TFtdcIdCardTypeType是一个证件类型类型
    组织机构代码
    """
THOST_FTDC_ICT_IDCard = _thostmduserapi.THOST_FTDC_ICT_IDCard
r"""中国公民身份证"""
THOST_FTDC_ICT_OfficerIDCard = _thostmduserapi.THOST_FTDC_ICT_OfficerIDCard
r"""军官证"""
THOST_FTDC_ICT_PoliceIDCard = _thostmduserapi.THOST_FTDC_ICT_PoliceIDCard
r"""警官证"""
THOST_FTDC_ICT_SoldierIDCard = _thostmduserapi.THOST_FTDC_ICT_SoldierIDCard
r"""士兵证"""
THOST_FTDC_ICT_HouseholdRegister = _thostmduserapi.THOST_FTDC_ICT_HouseholdRegister
r"""户口簿"""
THOST_FTDC_ICT_Passport = _thostmduserapi.THOST_FTDC_ICT_Passport
r"""护照"""
THOST_FTDC_ICT_TaiwanCompatriotIDCard = _thostmduserapi.THOST_FTDC_ICT_TaiwanCompatriotIDCard
r"""台胞证"""
THOST_FTDC_ICT_HomeComingCard = _thostmduserapi.THOST_FTDC_ICT_HomeComingCard
r"""回乡证"""
THOST_FTDC_ICT_LicenseNo = _thostmduserapi.THOST_FTDC_ICT_LicenseNo
r"""营业执照号"""
THOST_FTDC_ICT_TaxNo = _thostmduserapi.THOST_FTDC_ICT_TaxNo
r"""税务登记号/当地纳税ID"""
THOST_FTDC_ICT_HMMainlandTravelPermit = _thostmduserapi.THOST_FTDC_ICT_HMMainlandTravelPermit
r"""港澳居民来往内地通行证"""
THOST_FTDC_ICT_TwMainlandTravelPermit = _thostmduserapi.THOST_FTDC_ICT_TwMainlandTravelPermit
r"""台湾居民来往大陆通行证"""
THOST_FTDC_ICT_DrivingLicense = _thostmduserapi.THOST_FTDC_ICT_DrivingLicense
r"""驾照"""
THOST_FTDC_ICT_SocialID = _thostmduserapi.THOST_FTDC_ICT_SocialID
r"""当地社保ID"""
THOST_FTDC_ICT_LocalID = _thostmduserapi.THOST_FTDC_ICT_LocalID
r"""当地身份证"""
THOST_FTDC_ICT_BusinessRegistration = _thostmduserapi.THOST_FTDC_ICT_BusinessRegistration
r"""商业登记证"""
THOST_FTDC_ICT_HKMCIDCard = _thostmduserapi.THOST_FTDC_ICT_HKMCIDCard
r"""港澳永久性居民身份证"""
THOST_FTDC_ICT_AccountsPermits = _thostmduserapi.THOST_FTDC_ICT_AccountsPermits
r"""人行开户许可证"""
THOST_FTDC_ICT_FrgPrmtRdCard = _thostmduserapi.THOST_FTDC_ICT_FrgPrmtRdCard
r"""外国人永久居留证"""
THOST_FTDC_ICT_CptMngPrdLetter = _thostmduserapi.THOST_FTDC_ICT_CptMngPrdLetter
r"""资管产品备案函"""
THOST_FTDC_ICT_HKMCTwResidencePermit = _thostmduserapi.THOST_FTDC_ICT_HKMCTwResidencePermit
r"""港澳台居民居住证"""
THOST_FTDC_ICT_UniformSocialCreditCode = _thostmduserapi.THOST_FTDC_ICT_UniformSocialCreditCode
r"""统一社会信用代码"""
THOST_FTDC_ICT_CorporationCertNo = _thostmduserapi.THOST_FTDC_ICT_CorporationCertNo
r"""机构成立证明文件"""
THOST_FTDC_ICT_OtherCard = _thostmduserapi.THOST_FTDC_ICT_OtherCard
r"""其他证件"""
THOST_FTDC_IR_All = _thostmduserapi.THOST_FTDC_IR_All
r"""
    TFtdcInvestorRangeType是一个投资者范围类型
    所有
    """
THOST_FTDC_IR_Group = _thostmduserapi.THOST_FTDC_IR_Group
r"""投资者组"""
THOST_FTDC_IR_Single = _thostmduserapi.THOST_FTDC_IR_Single
r"""单一投资者"""
THOST_FTDC_DR_All = _thostmduserapi.THOST_FTDC_DR_All
r"""
    TFtdcDepartmentRangeType是一个投资者范围类型
    所有
    """
THOST_FTDC_DR_Group = _thostmduserapi.THOST_FTDC_DR_Group
r"""组织架构"""
THOST_FTDC_DR_Single = _thostmduserapi.THOST_FTDC_DR_Single
r"""单一投资者"""
THOST_FTDC_DS_Asynchronous = _thostmduserapi.THOST_FTDC_DS_Asynchronous
r"""
    TFtdcDataSyncStatusType是一个数据同步状态类型
    未同步
    """
THOST_FTDC_DS_Synchronizing = _thostmduserapi.THOST_FTDC_DS_Synchronizing
r"""同步中"""
THOST_FTDC_DS_Synchronized = _thostmduserapi.THOST_FTDC_DS_Synchronized
r"""已同步"""
THOST_FTDC_BDS_Synchronized = _thostmduserapi.THOST_FTDC_BDS_Synchronized
r"""
    TFtdcBrokerDataSyncStatusType是一个经纪公司数据同步状态类型
    已同步
    """
THOST_FTDC_BDS_Synchronizing = _thostmduserapi.THOST_FTDC_BDS_Synchronizing
r"""同步中"""
THOST_FTDC_ECS_NoConnection = _thostmduserapi.THOST_FTDC_ECS_NoConnection
r"""
    TFtdcExchangeConnectStatusType是一个交易所连接状态类型
    没有任何连接
    """
THOST_FTDC_ECS_QryInstrumentSent = _thostmduserapi.THOST_FTDC_ECS_QryInstrumentSent
r"""已经发出合约查询请求"""
THOST_FTDC_ECS_GotInformation = _thostmduserapi.THOST_FTDC_ECS_GotInformation
r"""已经获取信息"""
THOST_FTDC_TCS_NotConnected = _thostmduserapi.THOST_FTDC_TCS_NotConnected
r"""
    TFtdcTraderConnectStatusType是一个交易所交易员连接状态类型
    没有任何连接
    """
THOST_FTDC_TCS_Connected = _thostmduserapi.THOST_FTDC_TCS_Connected
r"""已经连接"""
THOST_FTDC_TCS_QryInstrumentSent = _thostmduserapi.THOST_FTDC_TCS_QryInstrumentSent
r"""已经发出合约查询请求"""
THOST_FTDC_TCS_SubPrivateFlow = _thostmduserapi.THOST_FTDC_TCS_SubPrivateFlow
r"""订阅私有流"""
THOST_FTDC_FC_DataAsync = _thostmduserapi.THOST_FTDC_FC_DataAsync
r"""
    TFtdcFunctionCodeType是一个功能代码类型
    数据异步化
    """
THOST_FTDC_FC_ForceUserLogout = _thostmduserapi.THOST_FTDC_FC_ForceUserLogout
r"""强制用户登出"""
THOST_FTDC_FC_UserPasswordUpdate = _thostmduserapi.THOST_FTDC_FC_UserPasswordUpdate
r"""变更管理用户口令"""
THOST_FTDC_FC_BrokerPasswordUpdate = _thostmduserapi.THOST_FTDC_FC_BrokerPasswordUpdate
r"""变更经纪公司口令"""
THOST_FTDC_FC_InvestorPasswordUpdate = _thostmduserapi.THOST_FTDC_FC_InvestorPasswordUpdate
r"""变更投资者口令"""
THOST_FTDC_FC_OrderInsert = _thostmduserapi.THOST_FTDC_FC_OrderInsert
r"""报单插入"""
THOST_FTDC_FC_OrderAction = _thostmduserapi.THOST_FTDC_FC_OrderAction
r"""报单操作"""
THOST_FTDC_FC_SyncSystemData = _thostmduserapi.THOST_FTDC_FC_SyncSystemData
r"""同步系统数据"""
THOST_FTDC_FC_SyncBrokerData = _thostmduserapi.THOST_FTDC_FC_SyncBrokerData
r"""同步经纪公司数据"""
THOST_FTDC_FC_BachSyncBrokerData = _thostmduserapi.THOST_FTDC_FC_BachSyncBrokerData
r"""批量同步经纪公司数据"""
THOST_FTDC_FC_SuperQuery = _thostmduserapi.THOST_FTDC_FC_SuperQuery
r"""超级查询"""
THOST_FTDC_FC_ParkedOrderInsert = _thostmduserapi.THOST_FTDC_FC_ParkedOrderInsert
r"""预埋报单插入"""
THOST_FTDC_FC_ParkedOrderAction = _thostmduserapi.THOST_FTDC_FC_ParkedOrderAction
r"""预埋报单操作"""
THOST_FTDC_FC_SyncOTP = _thostmduserapi.THOST_FTDC_FC_SyncOTP
r"""同步动态令牌"""
THOST_FTDC_FC_DeleteOrder = _thostmduserapi.THOST_FTDC_FC_DeleteOrder
r"""删除未知单"""
THOST_FTDC_BFC_ForceUserLogout = _thostmduserapi.THOST_FTDC_BFC_ForceUserLogout
r"""
    TFtdcBrokerFunctionCodeType是一个经纪公司功能代码类型
    强制用户登出
    """
THOST_FTDC_BFC_UserPasswordUpdate = _thostmduserapi.THOST_FTDC_BFC_UserPasswordUpdate
r"""变更用户口令"""
THOST_FTDC_BFC_SyncBrokerData = _thostmduserapi.THOST_FTDC_BFC_SyncBrokerData
r"""同步经纪公司数据"""
THOST_FTDC_BFC_BachSyncBrokerData = _thostmduserapi.THOST_FTDC_BFC_BachSyncBrokerData
r"""批量同步经纪公司数据"""
THOST_FTDC_BFC_OrderInsert = _thostmduserapi.THOST_FTDC_BFC_OrderInsert
r"""报单插入"""
THOST_FTDC_BFC_OrderAction = _thostmduserapi.THOST_FTDC_BFC_OrderAction
r"""报单操作"""
THOST_FTDC_BFC_AllQuery = _thostmduserapi.THOST_FTDC_BFC_AllQuery
r"""全部查询"""
THOST_FTDC_BFC_log = _thostmduserapi.THOST_FTDC_BFC_log
r"""系统功能：登入/登出/修改密码等"""
THOST_FTDC_BFC_BaseQry = _thostmduserapi.THOST_FTDC_BFC_BaseQry
r"""基本查询：查询基础数据，如合约，交易所等常量"""
THOST_FTDC_BFC_TradeQry = _thostmduserapi.THOST_FTDC_BFC_TradeQry
r"""交易查询：如查成交，委托"""
THOST_FTDC_BFC_Trade = _thostmduserapi.THOST_FTDC_BFC_Trade
r"""交易功能：报单，撤单"""
THOST_FTDC_BFC_Virement = _thostmduserapi.THOST_FTDC_BFC_Virement
r"""银期转账"""
THOST_FTDC_BFC_Risk = _thostmduserapi.THOST_FTDC_BFC_Risk
r"""风险监控"""
THOST_FTDC_BFC_Session = _thostmduserapi.THOST_FTDC_BFC_Session
r"""查询/管理：查询会话，踢人等"""
THOST_FTDC_BFC_RiskNoticeCtl = _thostmduserapi.THOST_FTDC_BFC_RiskNoticeCtl
r"""风控通知控制"""
THOST_FTDC_BFC_RiskNotice = _thostmduserapi.THOST_FTDC_BFC_RiskNotice
r"""风控通知发送"""
THOST_FTDC_BFC_BrokerDeposit = _thostmduserapi.THOST_FTDC_BFC_BrokerDeposit
r"""察看经纪公司资金权限"""
THOST_FTDC_BFC_QueryFund = _thostmduserapi.THOST_FTDC_BFC_QueryFund
r"""资金查询"""
THOST_FTDC_BFC_QueryOrder = _thostmduserapi.THOST_FTDC_BFC_QueryOrder
r"""报单查询"""
THOST_FTDC_BFC_QueryTrade = _thostmduserapi.THOST_FTDC_BFC_QueryTrade
r"""成交查询"""
THOST_FTDC_BFC_QueryPosition = _thostmduserapi.THOST_FTDC_BFC_QueryPosition
r"""持仓查询"""
THOST_FTDC_BFC_QueryMarketData = _thostmduserapi.THOST_FTDC_BFC_QueryMarketData
r"""行情查询"""
THOST_FTDC_BFC_QueryUserEvent = _thostmduserapi.THOST_FTDC_BFC_QueryUserEvent
r"""用户事件查询"""
THOST_FTDC_BFC_QueryRiskNotify = _thostmduserapi.THOST_FTDC_BFC_QueryRiskNotify
r"""风险通知查询"""
THOST_FTDC_BFC_QueryFundChange = _thostmduserapi.THOST_FTDC_BFC_QueryFundChange
r"""出入金查询"""
THOST_FTDC_BFC_QueryInvestor = _thostmduserapi.THOST_FTDC_BFC_QueryInvestor
r"""投资者信息查询"""
THOST_FTDC_BFC_QueryTradingCode = _thostmduserapi.THOST_FTDC_BFC_QueryTradingCode
r"""交易编码查询"""
THOST_FTDC_BFC_ForceClose = _thostmduserapi.THOST_FTDC_BFC_ForceClose
r"""强平"""
THOST_FTDC_BFC_PressTest = _thostmduserapi.THOST_FTDC_BFC_PressTest
r"""压力测试"""
THOST_FTDC_BFC_RemainCalc = _thostmduserapi.THOST_FTDC_BFC_RemainCalc
r"""权益反算"""
THOST_FTDC_BFC_NetPositionInd = _thostmduserapi.THOST_FTDC_BFC_NetPositionInd
r"""净持仓保证金指标"""
THOST_FTDC_BFC_RiskPredict = _thostmduserapi.THOST_FTDC_BFC_RiskPredict
r"""风险预算"""
THOST_FTDC_BFC_DataExport = _thostmduserapi.THOST_FTDC_BFC_DataExport
r"""数据导出"""
THOST_FTDC_BFC_RiskTargetSetup = _thostmduserapi.THOST_FTDC_BFC_RiskTargetSetup
r"""风控指标设置"""
THOST_FTDC_BFC_MarketDataWarn = _thostmduserapi.THOST_FTDC_BFC_MarketDataWarn
r"""行情预警"""
THOST_FTDC_BFC_QryBizNotice = _thostmduserapi.THOST_FTDC_BFC_QryBizNotice
r"""业务通知查询"""
THOST_FTDC_BFC_CfgBizNotice = _thostmduserapi.THOST_FTDC_BFC_CfgBizNotice
r"""业务通知模板设置"""
THOST_FTDC_BFC_SyncOTP = _thostmduserapi.THOST_FTDC_BFC_SyncOTP
r"""同步动态令牌"""
THOST_FTDC_BFC_SendBizNotice = _thostmduserapi.THOST_FTDC_BFC_SendBizNotice
r"""发送业务通知"""
THOST_FTDC_BFC_CfgRiskLevelStd = _thostmduserapi.THOST_FTDC_BFC_CfgRiskLevelStd
r"""风险级别标准设置"""
THOST_FTDC_BFC_TbCommand = _thostmduserapi.THOST_FTDC_BFC_TbCommand
r"""交易终端应急功能"""
THOST_FTDC_BFC_DeleteOrder = _thostmduserapi.THOST_FTDC_BFC_DeleteOrder
r"""删除未知单"""
THOST_FTDC_BFC_ParkedOrderInsert = _thostmduserapi.THOST_FTDC_BFC_ParkedOrderInsert
r"""预埋报单插入"""
THOST_FTDC_BFC_ParkedOrderAction = _thostmduserapi.THOST_FTDC_BFC_ParkedOrderAction
r"""预埋报单操作"""
THOST_FTDC_BFC_ExecOrderNoCheck = _thostmduserapi.THOST_FTDC_BFC_ExecOrderNoCheck
r"""资金不够仍允许行权"""
THOST_FTDC_BFC_Designate = _thostmduserapi.THOST_FTDC_BFC_Designate
r"""指定"""
THOST_FTDC_BFC_StockDisposal = _thostmduserapi.THOST_FTDC_BFC_StockDisposal
r"""证券处置"""
THOST_FTDC_BFC_BrokerDepositWarn = _thostmduserapi.THOST_FTDC_BFC_BrokerDepositWarn
r"""席位资金预警"""
THOST_FTDC_BFC_CoverWarn = _thostmduserapi.THOST_FTDC_BFC_CoverWarn
r"""备兑不足预警"""
THOST_FTDC_BFC_PreExecOrder = _thostmduserapi.THOST_FTDC_BFC_PreExecOrder
r"""行权试算"""
THOST_FTDC_BFC_ExecOrderRisk = _thostmduserapi.THOST_FTDC_BFC_ExecOrderRisk
r"""行权交收风险"""
THOST_FTDC_BFC_PosiLimitWarn = _thostmduserapi.THOST_FTDC_BFC_PosiLimitWarn
r"""持仓限额预警"""
THOST_FTDC_BFC_QryPosiLimit = _thostmduserapi.THOST_FTDC_BFC_QryPosiLimit
r"""持仓限额查询"""
THOST_FTDC_BFC_FBSign = _thostmduserapi.THOST_FTDC_BFC_FBSign
r"""银期签到签退"""
THOST_FTDC_BFC_FBAccount = _thostmduserapi.THOST_FTDC_BFC_FBAccount
r"""银期签约解约"""
THOST_FTDC_OAS_Submitted = _thostmduserapi.THOST_FTDC_OAS_Submitted
r"""
    TFtdcOrderActionStatusType是一个报单操作状态类型
    已经提交
    """
THOST_FTDC_OAS_Accepted = _thostmduserapi.THOST_FTDC_OAS_Accepted
r"""已经接受"""
THOST_FTDC_OAS_Rejected = _thostmduserapi.THOST_FTDC_OAS_Rejected
r"""已经被拒绝"""
THOST_FTDC_OST_AllTraded = _thostmduserapi.THOST_FTDC_OST_AllTraded
r"""
    TFtdcOrderStatusType是一个报单状态类型
    全部成交
    """
THOST_FTDC_OST_PartTradedQueueing = _thostmduserapi.THOST_FTDC_OST_PartTradedQueueing
r"""部分成交还在队列中"""
THOST_FTDC_OST_PartTradedNotQueueing = _thostmduserapi.THOST_FTDC_OST_PartTradedNotQueueing
r"""部分成交不在队列中"""
THOST_FTDC_OST_NoTradeQueueing = _thostmduserapi.THOST_FTDC_OST_NoTradeQueueing
r"""未成交还在队列中"""
THOST_FTDC_OST_NoTradeNotQueueing = _thostmduserapi.THOST_FTDC_OST_NoTradeNotQueueing
r"""未成交不在队列中"""
THOST_FTDC_OST_Canceled = _thostmduserapi.THOST_FTDC_OST_Canceled
r"""撤单"""
THOST_FTDC_OST_Unknown = _thostmduserapi.THOST_FTDC_OST_Unknown
r"""未知"""
THOST_FTDC_OST_NotTouched = _thostmduserapi.THOST_FTDC_OST_NotTouched
r"""尚未触发"""
THOST_FTDC_OST_Touched = _thostmduserapi.THOST_FTDC_OST_Touched
r"""已触发"""
THOST_FTDC_OSS_InsertSubmitted = _thostmduserapi.THOST_FTDC_OSS_InsertSubmitted
r"""
    TFtdcOrderSubmitStatusType是一个报单提交状态类型
    已经提交
    """
THOST_FTDC_OSS_CancelSubmitted = _thostmduserapi.THOST_FTDC_OSS_CancelSubmitted
r"""撤单已经提交"""
THOST_FTDC_OSS_ModifySubmitted = _thostmduserapi.THOST_FTDC_OSS_ModifySubmitted
r"""修改已经提交"""
THOST_FTDC_OSS_Accepted = _thostmduserapi.THOST_FTDC_OSS_Accepted
r"""已经接受"""
THOST_FTDC_OSS_InsertRejected = _thostmduserapi.THOST_FTDC_OSS_InsertRejected
r"""报单已经被拒绝"""
THOST_FTDC_OSS_CancelRejected = _thostmduserapi.THOST_FTDC_OSS_CancelRejected
r"""撤单已经被拒绝"""
THOST_FTDC_OSS_ModifyRejected = _thostmduserapi.THOST_FTDC_OSS_ModifyRejected
r"""改单已经被拒绝"""
THOST_FTDC_PSD_Today = _thostmduserapi.THOST_FTDC_PSD_Today
r"""
    TFtdcPositionDateType是一个持仓日期类型
    今日持仓
    """
THOST_FTDC_PSD_History = _thostmduserapi.THOST_FTDC_PSD_History
r"""历史持仓"""
THOST_FTDC_PDT_UseHistory = _thostmduserapi.THOST_FTDC_PDT_UseHistory
r"""
    TFtdcPositionDateTypeType是一个持仓日期类型类型
    使用历史持仓
    """
THOST_FTDC_PDT_NoUseHistory = _thostmduserapi.THOST_FTDC_PDT_NoUseHistory
r"""不使用历史持仓"""
THOST_FTDC_ER_Broker = _thostmduserapi.THOST_FTDC_ER_Broker
r"""
    TFtdcTradingRoleType是一个交易角色类型
    代理
    """
THOST_FTDC_ER_Host = _thostmduserapi.THOST_FTDC_ER_Host
r"""自营"""
THOST_FTDC_ER_Maker = _thostmduserapi.THOST_FTDC_ER_Maker
r"""做市商"""
THOST_FTDC_PC_Futures = _thostmduserapi.THOST_FTDC_PC_Futures
r"""
    TFtdcProductClassType是一个产品类型类型
    期货
    """
THOST_FTDC_PC_Options = _thostmduserapi.THOST_FTDC_PC_Options
r"""期货期权"""
THOST_FTDC_PC_Combination = _thostmduserapi.THOST_FTDC_PC_Combination
r"""组合"""
THOST_FTDC_PC_Spot = _thostmduserapi.THOST_FTDC_PC_Spot
r"""即期"""
THOST_FTDC_PC_EFP = _thostmduserapi.THOST_FTDC_PC_EFP
r"""期转现"""
THOST_FTDC_PC_SpotOption = _thostmduserapi.THOST_FTDC_PC_SpotOption
r"""现货期权"""
THOST_FTDC_PC_TAS = _thostmduserapi.THOST_FTDC_PC_TAS
r"""TAS合约"""
THOST_FTDC_PC_MI = _thostmduserapi.THOST_FTDC_PC_MI
r"""金属指数"""
THOST_FTDC_APC_FutureSingle = _thostmduserapi.THOST_FTDC_APC_FutureSingle
r"""
    TFtdcAPIProductClassType是一个产品类型类型
    期货单一合约
    """
THOST_FTDC_APC_OptionSingle = _thostmduserapi.THOST_FTDC_APC_OptionSingle
r"""期权单一合约"""
THOST_FTDC_APC_Futures = _thostmduserapi.THOST_FTDC_APC_Futures
r"""可交易期货(含期货组合和期货单一合约)"""
THOST_FTDC_APC_Options = _thostmduserapi.THOST_FTDC_APC_Options
r"""可交易期权(含期权组合和期权单一合约)"""
THOST_FTDC_APC_TradingComb = _thostmduserapi.THOST_FTDC_APC_TradingComb
r"""可下单套利组合"""
THOST_FTDC_APC_UnTradingComb = _thostmduserapi.THOST_FTDC_APC_UnTradingComb
r"""可申请的组合（可以申请的组合合约 包含可以交易的合约）"""
THOST_FTDC_APC_AllTrading = _thostmduserapi.THOST_FTDC_APC_AllTrading
r"""所有可以交易合约"""
THOST_FTDC_APC_All = _thostmduserapi.THOST_FTDC_APC_All
r"""所有合约（包含不能交易合约 慎用）"""
THOST_FTDC_IP_NotStart = _thostmduserapi.THOST_FTDC_IP_NotStart
r"""
    TFtdcInstLifePhaseType是一个合约生命周期状态类型
    未上市
    """
THOST_FTDC_IP_Started = _thostmduserapi.THOST_FTDC_IP_Started
r"""上市"""
THOST_FTDC_IP_Pause = _thostmduserapi.THOST_FTDC_IP_Pause
r"""停牌"""
THOST_FTDC_IP_Expired = _thostmduserapi.THOST_FTDC_IP_Expired
r"""到期"""
THOST_FTDC_D_Buy = _thostmduserapi.THOST_FTDC_D_Buy
r"""
    TFtdcDirectionType是一个买卖方向类型
    买
    """
THOST_FTDC_D_Sell = _thostmduserapi.THOST_FTDC_D_Sell
r"""卖"""
THOST_FTDC_PT_Net = _thostmduserapi.THOST_FTDC_PT_Net
r"""
    TFtdcPositionTypeType是一个持仓类型类型
    净持仓
    """
THOST_FTDC_PT_Gross = _thostmduserapi.THOST_FTDC_PT_Gross
r"""综合持仓"""
THOST_FTDC_PD_Net = _thostmduserapi.THOST_FTDC_PD_Net
r"""
    TFtdcPosiDirectionType是一个持仓多空方向类型
    净
    """
THOST_FTDC_PD_Long = _thostmduserapi.THOST_FTDC_PD_Long
r"""多头"""
THOST_FTDC_PD_Short = _thostmduserapi.THOST_FTDC_PD_Short
r"""空头"""
THOST_FTDC_SS_NonActive = _thostmduserapi.THOST_FTDC_SS_NonActive
r"""
    TFtdcSysSettlementStatusType是一个系统结算状态类型
    不活跃
    """
THOST_FTDC_SS_Startup = _thostmduserapi.THOST_FTDC_SS_Startup
r"""启动"""
THOST_FTDC_SS_Operating = _thostmduserapi.THOST_FTDC_SS_Operating
r"""操作"""
THOST_FTDC_SS_Settlement = _thostmduserapi.THOST_FTDC_SS_Settlement
r"""结算"""
THOST_FTDC_SS_SettlementFinished = _thostmduserapi.THOST_FTDC_SS_SettlementFinished
r"""结算完成"""
THOST_FTDC_RA_Trade = _thostmduserapi.THOST_FTDC_RA_Trade
r"""
    TFtdcRatioAttrType是一个费率属性类型
    交易费率
    """
THOST_FTDC_RA_Settlement = _thostmduserapi.THOST_FTDC_RA_Settlement
r"""结算费率"""
THOST_FTDC_HF_Speculation = _thostmduserapi.THOST_FTDC_HF_Speculation
r"""
    TFtdcHedgeFlagType是一个投机套保标志类型
    投机
    """
THOST_FTDC_HF_Arbitrage = _thostmduserapi.THOST_FTDC_HF_Arbitrage
r"""套利"""
THOST_FTDC_HF_Hedge = _thostmduserapi.THOST_FTDC_HF_Hedge
r"""套保"""
THOST_FTDC_HF_MarketMaker = _thostmduserapi.THOST_FTDC_HF_MarketMaker
r"""做市商"""
THOST_FTDC_HF_SpecHedge = _thostmduserapi.THOST_FTDC_HF_SpecHedge
r"""第一腿投机第二腿套保"""
THOST_FTDC_HF_HedgeSpec = _thostmduserapi.THOST_FTDC_HF_HedgeSpec
r"""第一腿套保第二腿投机"""
THOST_FTDC_BHF_Speculation = _thostmduserapi.THOST_FTDC_BHF_Speculation
r"""
    TFtdcBillHedgeFlagType是一个投机套保标志类型
    投机
    """
THOST_FTDC_BHF_Arbitrage = _thostmduserapi.THOST_FTDC_BHF_Arbitrage
r"""套利"""
THOST_FTDC_BHF_Hedge = _thostmduserapi.THOST_FTDC_BHF_Hedge
r"""套保"""
THOST_FTDC_CIDT_Speculation = _thostmduserapi.THOST_FTDC_CIDT_Speculation
r"""
    TFtdcClientIDTypeType是一个交易编码类型类型
    投机
    """
THOST_FTDC_CIDT_Arbitrage = _thostmduserapi.THOST_FTDC_CIDT_Arbitrage
r"""套利"""
THOST_FTDC_CIDT_Hedge = _thostmduserapi.THOST_FTDC_CIDT_Hedge
r"""套保"""
THOST_FTDC_CIDT_MarketMaker = _thostmduserapi.THOST_FTDC_CIDT_MarketMaker
r"""做市商"""
THOST_FTDC_OPT_AnyPrice = _thostmduserapi.THOST_FTDC_OPT_AnyPrice
r"""
    TFtdcOrderPriceTypeType是一个报单价格条件类型
    任意价
    """
THOST_FTDC_OPT_LimitPrice = _thostmduserapi.THOST_FTDC_OPT_LimitPrice
r"""限价"""
THOST_FTDC_OPT_BestPrice = _thostmduserapi.THOST_FTDC_OPT_BestPrice
r"""最优价"""
THOST_FTDC_OPT_LastPrice = _thostmduserapi.THOST_FTDC_OPT_LastPrice
r"""最新价"""
THOST_FTDC_OPT_LastPricePlusOneTicks = _thostmduserapi.THOST_FTDC_OPT_LastPricePlusOneTicks
r"""最新价浮动上浮1个ticks"""
THOST_FTDC_OPT_LastPricePlusTwoTicks = _thostmduserapi.THOST_FTDC_OPT_LastPricePlusTwoTicks
r"""最新价浮动上浮2个ticks"""
THOST_FTDC_OPT_LastPricePlusThreeTicks = _thostmduserapi.THOST_FTDC_OPT_LastPricePlusThreeTicks
r"""最新价浮动上浮3个ticks"""
THOST_FTDC_OPT_AskPrice1 = _thostmduserapi.THOST_FTDC_OPT_AskPrice1
r"""卖一价"""
THOST_FTDC_OPT_AskPrice1PlusOneTicks = _thostmduserapi.THOST_FTDC_OPT_AskPrice1PlusOneTicks
r"""卖一价浮动上浮1个ticks"""
THOST_FTDC_OPT_AskPrice1PlusTwoTicks = _thostmduserapi.THOST_FTDC_OPT_AskPrice1PlusTwoTicks
r"""卖一价浮动上浮2个ticks"""
THOST_FTDC_OPT_AskPrice1PlusThreeTicks = _thostmduserapi.THOST_FTDC_OPT_AskPrice1PlusThreeTicks
r"""卖一价浮动上浮3个ticks"""
THOST_FTDC_OPT_BidPrice1 = _thostmduserapi.THOST_FTDC_OPT_BidPrice1
r"""买一价"""
THOST_FTDC_OPT_BidPrice1PlusOneTicks = _thostmduserapi.THOST_FTDC_OPT_BidPrice1PlusOneTicks
r"""买一价浮动上浮1个ticks"""
THOST_FTDC_OPT_BidPrice1PlusTwoTicks = _thostmduserapi.THOST_FTDC_OPT_BidPrice1PlusTwoTicks
r"""买一价浮动上浮2个ticks"""
THOST_FTDC_OPT_BidPrice1PlusThreeTicks = _thostmduserapi.THOST_FTDC_OPT_BidPrice1PlusThreeTicks
r"""买一价浮动上浮3个ticks"""
THOST_FTDC_OPT_FiveLevelPrice = _thostmduserapi.THOST_FTDC_OPT_FiveLevelPrice
r"""五档价"""
THOST_FTDC_OF_Open = _thostmduserapi.THOST_FTDC_OF_Open
r"""
    TFtdcOffsetFlagType是一个开平标志类型
    开仓
    """
THOST_FTDC_OF_Close = _thostmduserapi.THOST_FTDC_OF_Close
r"""平仓"""
THOST_FTDC_OF_ForceClose = _thostmduserapi.THOST_FTDC_OF_ForceClose
r"""强平"""
THOST_FTDC_OF_CloseToday = _thostmduserapi.THOST_FTDC_OF_CloseToday
r"""平今"""
THOST_FTDC_OF_CloseYesterday = _thostmduserapi.THOST_FTDC_OF_CloseYesterday
r"""平昨"""
THOST_FTDC_OF_ForceOff = _thostmduserapi.THOST_FTDC_OF_ForceOff
r"""强减"""
THOST_FTDC_OF_LocalForceClose = _thostmduserapi.THOST_FTDC_OF_LocalForceClose
r"""本地强平"""
THOST_FTDC_FCC_NotForceClose = _thostmduserapi.THOST_FTDC_FCC_NotForceClose
r"""
    TFtdcForceCloseReasonType是一个强平原因类型
    非强平
    """
THOST_FTDC_FCC_LackDeposit = _thostmduserapi.THOST_FTDC_FCC_LackDeposit
r"""资金不足"""
THOST_FTDC_FCC_ClientOverPositionLimit = _thostmduserapi.THOST_FTDC_FCC_ClientOverPositionLimit
r"""客户超仓"""
THOST_FTDC_FCC_MemberOverPositionLimit = _thostmduserapi.THOST_FTDC_FCC_MemberOverPositionLimit
r"""会员超仓"""
THOST_FTDC_FCC_NotMultiple = _thostmduserapi.THOST_FTDC_FCC_NotMultiple
r"""持仓非整数倍"""
THOST_FTDC_FCC_Violation = _thostmduserapi.THOST_FTDC_FCC_Violation
r"""违规"""
THOST_FTDC_FCC_Other = _thostmduserapi.THOST_FTDC_FCC_Other
r"""其它"""
THOST_FTDC_FCC_PersonDeliv = _thostmduserapi.THOST_FTDC_FCC_PersonDeliv
r"""自然人临近交割"""
THOST_FTDC_FCC_Notverifycapital = _thostmduserapi.THOST_FTDC_FCC_Notverifycapital
r"""风控强平不验证资金"""
THOST_FTDC_ORDT_Normal = _thostmduserapi.THOST_FTDC_ORDT_Normal
r"""
    TFtdcOrderTypeType是一个报单类型类型
    正常
    """
THOST_FTDC_ORDT_DeriveFromQuote = _thostmduserapi.THOST_FTDC_ORDT_DeriveFromQuote
r"""报价衍生"""
THOST_FTDC_ORDT_DeriveFromCombination = _thostmduserapi.THOST_FTDC_ORDT_DeriveFromCombination
r"""组合衍生"""
THOST_FTDC_ORDT_Combination = _thostmduserapi.THOST_FTDC_ORDT_Combination
r"""组合报单"""
THOST_FTDC_ORDT_ConditionalOrder = _thostmduserapi.THOST_FTDC_ORDT_ConditionalOrder
r"""条件单"""
THOST_FTDC_ORDT_Swap = _thostmduserapi.THOST_FTDC_ORDT_Swap
r"""互换单"""
THOST_FTDC_ORDT_DeriveFromBlockTrade = _thostmduserapi.THOST_FTDC_ORDT_DeriveFromBlockTrade
r"""大宗交易成交衍生"""
THOST_FTDC_ORDT_DeriveFromEFPTrade = _thostmduserapi.THOST_FTDC_ORDT_DeriveFromEFPTrade
r"""期转现成交衍生"""
THOST_FTDC_TC_IOC = _thostmduserapi.THOST_FTDC_TC_IOC
r"""
    TFtdcTimeConditionType是一个有效期类型类型
    立即完成，否则撤销
    """
THOST_FTDC_TC_GFS = _thostmduserapi.THOST_FTDC_TC_GFS
r"""本节有效"""
THOST_FTDC_TC_GFD = _thostmduserapi.THOST_FTDC_TC_GFD
r"""当日有效"""
THOST_FTDC_TC_GTD = _thostmduserapi.THOST_FTDC_TC_GTD
r"""指定日期前有效"""
THOST_FTDC_TC_GTC = _thostmduserapi.THOST_FTDC_TC_GTC
r"""撤销前有效"""
THOST_FTDC_TC_GFA = _thostmduserapi.THOST_FTDC_TC_GFA
r"""集合竞价有效"""
THOST_FTDC_VC_AV = _thostmduserapi.THOST_FTDC_VC_AV
r"""
    TFtdcVolumeConditionType是一个成交量类型类型
    任何数量
    """
THOST_FTDC_VC_MV = _thostmduserapi.THOST_FTDC_VC_MV
r"""最小数量"""
THOST_FTDC_VC_CV = _thostmduserapi.THOST_FTDC_VC_CV
r"""全部数量"""
THOST_FTDC_CC_Immediately = _thostmduserapi.THOST_FTDC_CC_Immediately
r"""
    TFtdcContingentConditionType是一个触发条件类型
    立即
    """
THOST_FTDC_CC_Touch = _thostmduserapi.THOST_FTDC_CC_Touch
r"""止损"""
THOST_FTDC_CC_TouchProfit = _thostmduserapi.THOST_FTDC_CC_TouchProfit
r"""止赢"""
THOST_FTDC_CC_ParkedOrder = _thostmduserapi.THOST_FTDC_CC_ParkedOrder
r"""预埋单"""
THOST_FTDC_CC_LastPriceGreaterThanStopPrice = _thostmduserapi.THOST_FTDC_CC_LastPriceGreaterThanStopPrice
r"""最新价大于条件价"""
THOST_FTDC_CC_LastPriceGreaterEqualStopPrice = _thostmduserapi.THOST_FTDC_CC_LastPriceGreaterEqualStopPrice
r"""最新价大于等于条件价"""
THOST_FTDC_CC_LastPriceLesserThanStopPrice = _thostmduserapi.THOST_FTDC_CC_LastPriceLesserThanStopPrice
r"""最新价小于条件价"""
THOST_FTDC_CC_LastPriceLesserEqualStopPrice = _thostmduserapi.THOST_FTDC_CC_LastPriceLesserEqualStopPrice
r"""最新价小于等于条件价"""
THOST_FTDC_CC_AskPriceGreaterThanStopPrice = _thostmduserapi.THOST_FTDC_CC_AskPriceGreaterThanStopPrice
r"""卖一价大于条件价"""
THOST_FTDC_CC_AskPriceGreaterEqualStopPrice = _thostmduserapi.THOST_FTDC_CC_AskPriceGreaterEqualStopPrice
r"""卖一价大于等于条件价"""
THOST_FTDC_CC_AskPriceLesserThanStopPrice = _thostmduserapi.THOST_FTDC_CC_AskPriceLesserThanStopPrice
r"""卖一价小于条件价"""
THOST_FTDC_CC_AskPriceLesserEqualStopPrice = _thostmduserapi.THOST_FTDC_CC_AskPriceLesserEqualStopPrice
r"""卖一价小于等于条件价"""
THOST_FTDC_CC_BidPriceGreaterThanStopPrice = _thostmduserapi.THOST_FTDC_CC_BidPriceGreaterThanStopPrice
r"""买一价大于条件价"""
THOST_FTDC_CC_BidPriceGreaterEqualStopPrice = _thostmduserapi.THOST_FTDC_CC_BidPriceGreaterEqualStopPrice
r"""买一价大于等于条件价"""
THOST_FTDC_CC_BidPriceLesserThanStopPrice = _thostmduserapi.THOST_FTDC_CC_BidPriceLesserThanStopPrice
r"""买一价小于条件价"""
THOST_FTDC_CC_BidPriceLesserEqualStopPrice = _thostmduserapi.THOST_FTDC_CC_BidPriceLesserEqualStopPrice
r"""买一价小于等于条件价"""
THOST_FTDC_AF_Delete = _thostmduserapi.THOST_FTDC_AF_Delete
r"""
    TFtdcActionFlagType是一个操作标志类型
    删除
    """
THOST_FTDC_AF_Modify = _thostmduserapi.THOST_FTDC_AF_Modify
r"""修改"""
THOST_FTDC_TR_Allow = _thostmduserapi.THOST_FTDC_TR_Allow
r"""
    TFtdcTradingRightType是一个交易权限类型
    可以交易
    """
THOST_FTDC_TR_CloseOnly = _thostmduserapi.THOST_FTDC_TR_CloseOnly
r"""只能平仓"""
THOST_FTDC_TR_Forbidden = _thostmduserapi.THOST_FTDC_TR_Forbidden
r"""不能交易"""
THOST_FTDC_OSRC_Participant = _thostmduserapi.THOST_FTDC_OSRC_Participant
r"""
    TFtdcOrderSourceType是一个报单来源类型
    来自参与者
    """
THOST_FTDC_OSRC_Administrator = _thostmduserapi.THOST_FTDC_OSRC_Administrator
r"""来自管理员"""
THOST_FTDC_TRDT_SplitCombination = _thostmduserapi.THOST_FTDC_TRDT_SplitCombination
r"""
    TFtdcTradeTypeType是一个成交类型类型
    组合持仓拆分为单一持仓,初始化不应包含该类型的持仓
    """
THOST_FTDC_TRDT_Common = _thostmduserapi.THOST_FTDC_TRDT_Common
r"""普通成交"""
THOST_FTDC_TRDT_OptionsExecution = _thostmduserapi.THOST_FTDC_TRDT_OptionsExecution
r"""期权执行"""
THOST_FTDC_TRDT_OTC = _thostmduserapi.THOST_FTDC_TRDT_OTC
r"""OTC成交"""
THOST_FTDC_TRDT_EFPDerived = _thostmduserapi.THOST_FTDC_TRDT_EFPDerived
r"""期转现衍生成交"""
THOST_FTDC_TRDT_CombinationDerived = _thostmduserapi.THOST_FTDC_TRDT_CombinationDerived
r"""组合衍生成交"""
THOST_FTDC_TRDT_BlockTrade = _thostmduserapi.THOST_FTDC_TRDT_BlockTrade
r"""大宗交易成交"""
THOST_FTDC_SPOST_Common = _thostmduserapi.THOST_FTDC_SPOST_Common
r"""
    TFtdcSpecPosiTypeType是一个特殊持仓明细标识类型
    普通持仓明细
    """
THOST_FTDC_SPOST_Tas = _thostmduserapi.THOST_FTDC_SPOST_Tas
r"""TAS合约成交产生的标的合约持仓明细"""
THOST_FTDC_PSRC_LastPrice = _thostmduserapi.THOST_FTDC_PSRC_LastPrice
r"""
    TFtdcPriceSourceType是一个成交价来源类型
    前成交价
    """
THOST_FTDC_PSRC_Buy = _thostmduserapi.THOST_FTDC_PSRC_Buy
r"""买委托价"""
THOST_FTDC_PSRC_Sell = _thostmduserapi.THOST_FTDC_PSRC_Sell
r"""卖委托价"""
THOST_FTDC_PSRC_OTC = _thostmduserapi.THOST_FTDC_PSRC_OTC
r"""场外成交价"""
THOST_FTDC_IS_BeforeTrading = _thostmduserapi.THOST_FTDC_IS_BeforeTrading
r"""
    TFtdcInstrumentStatusType是一个合约交易状态类型
    开盘前
    """
THOST_FTDC_IS_NoTrading = _thostmduserapi.THOST_FTDC_IS_NoTrading
r"""非交易"""
THOST_FTDC_IS_Continous = _thostmduserapi.THOST_FTDC_IS_Continous
r"""连续交易"""
THOST_FTDC_IS_AuctionOrdering = _thostmduserapi.THOST_FTDC_IS_AuctionOrdering
r"""集合竞价报单"""
THOST_FTDC_IS_AuctionBalance = _thostmduserapi.THOST_FTDC_IS_AuctionBalance
r"""集合竞价价格平衡"""
THOST_FTDC_IS_AuctionMatch = _thostmduserapi.THOST_FTDC_IS_AuctionMatch
r"""集合竞价撮合"""
THOST_FTDC_IS_Closed = _thostmduserapi.THOST_FTDC_IS_Closed
r"""收盘"""
THOST_FTDC_IER_Automatic = _thostmduserapi.THOST_FTDC_IER_Automatic
r"""
    TFtdcInstStatusEnterReasonType是一个品种进入交易状态原因类型
    自动切换
    """
THOST_FTDC_IER_Manual = _thostmduserapi.THOST_FTDC_IER_Manual
r"""手动切换"""
THOST_FTDC_IER_Fuse = _thostmduserapi.THOST_FTDC_IER_Fuse
r"""熔断"""
THOST_FTDC_BS_NoUpload = _thostmduserapi.THOST_FTDC_BS_NoUpload
r"""
    TFtdcBatchStatusType是一个处理状态类型
    未上传
    """
THOST_FTDC_BS_Uploaded = _thostmduserapi.THOST_FTDC_BS_Uploaded
r"""已上传"""
THOST_FTDC_BS_Failed = _thostmduserapi.THOST_FTDC_BS_Failed
r"""审核失败"""
THOST_FTDC_RS_All = _thostmduserapi.THOST_FTDC_RS_All
r"""
    TFtdcReturnStyleType是一个按品种返还方式类型
    按所有品种
    """
THOST_FTDC_RS_ByProduct = _thostmduserapi.THOST_FTDC_RS_ByProduct
r"""按品种"""
THOST_FTDC_RP_ByVolume = _thostmduserapi.THOST_FTDC_RP_ByVolume
r"""
    TFtdcReturnPatternType是一个返还模式类型
    按成交手数
    """
THOST_FTDC_RP_ByFeeOnHand = _thostmduserapi.THOST_FTDC_RP_ByFeeOnHand
r"""按留存手续费"""
THOST_FTDC_RL_Level1 = _thostmduserapi.THOST_FTDC_RL_Level1
r"""
    TFtdcReturnLevelType是一个返还级别类型
    级别1
    """
THOST_FTDC_RL_Level2 = _thostmduserapi.THOST_FTDC_RL_Level2
r"""级别2"""
THOST_FTDC_RL_Level3 = _thostmduserapi.THOST_FTDC_RL_Level3
r"""级别3"""
THOST_FTDC_RL_Level4 = _thostmduserapi.THOST_FTDC_RL_Level4
r"""级别4"""
THOST_FTDC_RL_Level5 = _thostmduserapi.THOST_FTDC_RL_Level5
r"""级别5"""
THOST_FTDC_RL_Level6 = _thostmduserapi.THOST_FTDC_RL_Level6
r"""级别6"""
THOST_FTDC_RL_Level7 = _thostmduserapi.THOST_FTDC_RL_Level7
r"""级别7"""
THOST_FTDC_RL_Level8 = _thostmduserapi.THOST_FTDC_RL_Level8
r"""级别8"""
THOST_FTDC_RL_Level9 = _thostmduserapi.THOST_FTDC_RL_Level9
r"""级别9"""
THOST_FTDC_RSD_ByPeriod = _thostmduserapi.THOST_FTDC_RSD_ByPeriod
r"""
    TFtdcReturnStandardType是一个返还标准类型
    分阶段返还
    """
THOST_FTDC_RSD_ByStandard = _thostmduserapi.THOST_FTDC_RSD_ByStandard
r"""按某一标准"""
THOST_FTDC_MT_Out = _thostmduserapi.THOST_FTDC_MT_Out
r"""
    TFtdcMortgageTypeType是一个质押类型类型
    质出
    """
THOST_FTDC_MT_In = _thostmduserapi.THOST_FTDC_MT_In
r"""质入"""
THOST_FTDC_ISPI_MortgageRatio = _thostmduserapi.THOST_FTDC_ISPI_MortgageRatio
r"""
    TFtdcInvestorSettlementParamIDType是一个投资者结算参数代码类型
    质押比例
    """
THOST_FTDC_ISPI_MarginWay = _thostmduserapi.THOST_FTDC_ISPI_MarginWay
r"""保证金算法"""
THOST_FTDC_ISPI_BillDeposit = _thostmduserapi.THOST_FTDC_ISPI_BillDeposit
r"""结算单结存是否包含质押"""
THOST_FTDC_ESPI_MortgageRatio = _thostmduserapi.THOST_FTDC_ESPI_MortgageRatio
r"""
    TFtdcExchangeSettlementParamIDType是一个交易所结算参数代码类型
    质押比例
    """
THOST_FTDC_ESPI_OtherFundItem = _thostmduserapi.THOST_FTDC_ESPI_OtherFundItem
r"""分项资金导入项"""
THOST_FTDC_ESPI_OtherFundImport = _thostmduserapi.THOST_FTDC_ESPI_OtherFundImport
r"""分项资金入交易所出入金"""
THOST_FTDC_ESPI_CFFEXMinPrepa = _thostmduserapi.THOST_FTDC_ESPI_CFFEXMinPrepa
r"""中金所开户最低可用金额"""
THOST_FTDC_ESPI_CZCESettlementType = _thostmduserapi.THOST_FTDC_ESPI_CZCESettlementType
r"""郑商所结算方式"""
THOST_FTDC_ESPI_ExchDelivFeeMode = _thostmduserapi.THOST_FTDC_ESPI_ExchDelivFeeMode
r"""交易所交割手续费收取方式"""
THOST_FTDC_ESPI_DelivFeeMode = _thostmduserapi.THOST_FTDC_ESPI_DelivFeeMode
r"""投资者交割手续费收取方式"""
THOST_FTDC_ESPI_CZCEComMarginType = _thostmduserapi.THOST_FTDC_ESPI_CZCEComMarginType
r"""郑商所组合持仓保证金收取方式"""
THOST_FTDC_ESPI_DceComMarginType = _thostmduserapi.THOST_FTDC_ESPI_DceComMarginType
r"""大商所套利保证金是否优惠"""
THOST_FTDC_ESPI_OptOutDisCountRate = _thostmduserapi.THOST_FTDC_ESPI_OptOutDisCountRate
r"""虚值期权保证金优惠比率"""
THOST_FTDC_ESPI_OptMiniGuarantee = _thostmduserapi.THOST_FTDC_ESPI_OptMiniGuarantee
r"""最低保障系数"""
THOST_FTDC_SPI_InvestorIDMinLength = _thostmduserapi.THOST_FTDC_SPI_InvestorIDMinLength
r"""
    TFtdcSystemParamIDType是一个系统参数代码类型
    投资者代码最小长度
    """
THOST_FTDC_SPI_AccountIDMinLength = _thostmduserapi.THOST_FTDC_SPI_AccountIDMinLength
r"""投资者帐号代码最小长度"""
THOST_FTDC_SPI_UserRightLogon = _thostmduserapi.THOST_FTDC_SPI_UserRightLogon
r"""投资者开户默认登录权限"""
THOST_FTDC_SPI_SettlementBillTrade = _thostmduserapi.THOST_FTDC_SPI_SettlementBillTrade
r"""投资者交易结算单成交汇总方式"""
THOST_FTDC_SPI_TradingCode = _thostmduserapi.THOST_FTDC_SPI_TradingCode
r"""统一开户更新交易编码方式"""
THOST_FTDC_SPI_CheckFund = _thostmduserapi.THOST_FTDC_SPI_CheckFund
r"""结算是否判断存在未复核的出入金和分项资金"""
THOST_FTDC_SPI_CommModelRight = _thostmduserapi.THOST_FTDC_SPI_CommModelRight
r"""是否启用手续费模板数据权限"""
THOST_FTDC_SPI_MarginModelRight = _thostmduserapi.THOST_FTDC_SPI_MarginModelRight
r"""是否启用保证金率模板数据权限"""
THOST_FTDC_SPI_IsStandardActive = _thostmduserapi.THOST_FTDC_SPI_IsStandardActive
r"""是否规范用户才能激活"""
THOST_FTDC_SPI_UploadSettlementFile = _thostmduserapi.THOST_FTDC_SPI_UploadSettlementFile
r"""上传的交易所结算文件路径"""
THOST_FTDC_SPI_DownloadCSRCFile = _thostmduserapi.THOST_FTDC_SPI_DownloadCSRCFile
r"""上报保证金监控中心文件路径"""
THOST_FTDC_SPI_SettlementBillFile = _thostmduserapi.THOST_FTDC_SPI_SettlementBillFile
r"""生成的结算单文件路径"""
THOST_FTDC_SPI_CSRCOthersFile = _thostmduserapi.THOST_FTDC_SPI_CSRCOthersFile
r"""证监会文件标识"""
THOST_FTDC_SPI_InvestorPhoto = _thostmduserapi.THOST_FTDC_SPI_InvestorPhoto
r"""投资者照片路径"""
THOST_FTDC_SPI_CSRCData = _thostmduserapi.THOST_FTDC_SPI_CSRCData
r"""全结经纪公司上传文件路径"""
THOST_FTDC_SPI_InvestorPwdModel = _thostmduserapi.THOST_FTDC_SPI_InvestorPwdModel
r"""开户密码录入方式"""
THOST_FTDC_SPI_CFFEXInvestorSettleFile = _thostmduserapi.THOST_FTDC_SPI_CFFEXInvestorSettleFile
r"""投资者中金所结算文件下载路径"""
THOST_FTDC_SPI_InvestorIDType = _thostmduserapi.THOST_FTDC_SPI_InvestorIDType
r"""投资者代码编码方式"""
THOST_FTDC_SPI_FreezeMaxReMain = _thostmduserapi.THOST_FTDC_SPI_FreezeMaxReMain
r"""休眠户最高权益"""
THOST_FTDC_SPI_IsSync = _thostmduserapi.THOST_FTDC_SPI_IsSync
r"""手续费相关操作实时上场开关"""
THOST_FTDC_SPI_RelieveOpenLimit = _thostmduserapi.THOST_FTDC_SPI_RelieveOpenLimit
r"""解除开仓权限限制"""
THOST_FTDC_SPI_IsStandardFreeze = _thostmduserapi.THOST_FTDC_SPI_IsStandardFreeze
r"""是否规范用户才能休眠"""
THOST_FTDC_SPI_CZCENormalProductHedge = _thostmduserapi.THOST_FTDC_SPI_CZCENormalProductHedge
r"""郑商所是否开放所有品种套保交易"""
THOST_FTDC_TPID_EncryptionStandard = _thostmduserapi.THOST_FTDC_TPID_EncryptionStandard
r"""
    TFtdcTradeParamIDType是一个交易系统参数代码类型
    系统加密算法
    """
THOST_FTDC_TPID_RiskMode = _thostmduserapi.THOST_FTDC_TPID_RiskMode
r"""系统风险算法"""
THOST_FTDC_TPID_RiskModeGlobal = _thostmduserapi.THOST_FTDC_TPID_RiskModeGlobal
r"""系统风险算法是否全局 0-否 1-是"""
THOST_FTDC_TPID_modeEncode = _thostmduserapi.THOST_FTDC_TPID_modeEncode
r"""密码加密算法"""
THOST_FTDC_TPID_tickMode = _thostmduserapi.THOST_FTDC_TPID_tickMode
r"""价格小数位数参数"""
THOST_FTDC_TPID_SingleUserSessionMaxNum = _thostmduserapi.THOST_FTDC_TPID_SingleUserSessionMaxNum
r"""用户最大会话数"""
THOST_FTDC_TPID_LoginFailMaxNum = _thostmduserapi.THOST_FTDC_TPID_LoginFailMaxNum
r"""最大连续登录失败数"""
THOST_FTDC_TPID_IsAuthForce = _thostmduserapi.THOST_FTDC_TPID_IsAuthForce
r"""是否强制认证"""
THOST_FTDC_TPID_IsPosiFreeze = _thostmduserapi.THOST_FTDC_TPID_IsPosiFreeze
r"""是否冻结证券持仓"""
THOST_FTDC_TPID_IsPosiLimit = _thostmduserapi.THOST_FTDC_TPID_IsPosiLimit
r"""是否限仓"""
THOST_FTDC_TPID_ForQuoteTimeInterval = _thostmduserapi.THOST_FTDC_TPID_ForQuoteTimeInterval
r"""郑商所询价时间间隔"""
THOST_FTDC_TPID_IsFuturePosiLimit = _thostmduserapi.THOST_FTDC_TPID_IsFuturePosiLimit
r"""是否期货限仓"""
THOST_FTDC_TPID_IsFutureOrderFreq = _thostmduserapi.THOST_FTDC_TPID_IsFutureOrderFreq
r"""是否期货下单频率限制"""
THOST_FTDC_TPID_IsExecOrderProfit = _thostmduserapi.THOST_FTDC_TPID_IsExecOrderProfit
r"""行权冻结是否计算盈利"""
THOST_FTDC_TPID_IsCheckBankAcc = _thostmduserapi.THOST_FTDC_TPID_IsCheckBankAcc
r"""银期开户是否验证开户银行卡号是否是预留银行账户"""
THOST_FTDC_TPID_PasswordDeadLine = _thostmduserapi.THOST_FTDC_TPID_PasswordDeadLine
r"""弱密码最后修改日期"""
THOST_FTDC_TPID_IsStrongPassword = _thostmduserapi.THOST_FTDC_TPID_IsStrongPassword
r"""强密码校验"""
THOST_FTDC_TPID_BalanceMorgage = _thostmduserapi.THOST_FTDC_TPID_BalanceMorgage
r"""自有资金质押比"""
THOST_FTDC_TPID_MinPwdLen = _thostmduserapi.THOST_FTDC_TPID_MinPwdLen
r"""最小密码长度"""
THOST_FTDC_TPID_LoginFailMaxNumForIP = _thostmduserapi.THOST_FTDC_TPID_LoginFailMaxNumForIP
r"""IP当日最大登陆失败次数"""
THOST_FTDC_TPID_PasswordPeriod = _thostmduserapi.THOST_FTDC_TPID_PasswordPeriod
r"""密码有效期"""
THOST_FTDC_FI_SettlementFund = _thostmduserapi.THOST_FTDC_FI_SettlementFund
r"""
    TFtdcFileIDType是一个文件标识类型
    资金数据
    """
THOST_FTDC_FI_Trade = _thostmduserapi.THOST_FTDC_FI_Trade
r"""成交数据"""
THOST_FTDC_FI_InvestorPosition = _thostmduserapi.THOST_FTDC_FI_InvestorPosition
r"""投资者持仓数据"""
THOST_FTDC_FI_SubEntryFund = _thostmduserapi.THOST_FTDC_FI_SubEntryFund
r"""投资者分项资金数据"""
THOST_FTDC_FI_CZCECombinationPos = _thostmduserapi.THOST_FTDC_FI_CZCECombinationPos
r"""组合持仓数据"""
THOST_FTDC_FI_CSRCData = _thostmduserapi.THOST_FTDC_FI_CSRCData
r"""上报保证金监控中心数据"""
THOST_FTDC_FI_CZCEClose = _thostmduserapi.THOST_FTDC_FI_CZCEClose
r"""郑商所平仓了结数据"""
THOST_FTDC_FI_CZCENoClose = _thostmduserapi.THOST_FTDC_FI_CZCENoClose
r"""郑商所非平仓了结数据"""
THOST_FTDC_FI_PositionDtl = _thostmduserapi.THOST_FTDC_FI_PositionDtl
r"""持仓明细数据"""
THOST_FTDC_FI_OptionStrike = _thostmduserapi.THOST_FTDC_FI_OptionStrike
r"""期权执行文件"""
THOST_FTDC_FI_SettlementPriceComparison = _thostmduserapi.THOST_FTDC_FI_SettlementPriceComparison
r"""结算价比对文件"""
THOST_FTDC_FI_NonTradePosChange = _thostmduserapi.THOST_FTDC_FI_NonTradePosChange
r"""上期所非持仓变动明细"""
THOST_FTDC_FUT_Settlement = _thostmduserapi.THOST_FTDC_FUT_Settlement
r"""
    TFtdcFileTypeType是一个文件上传类型类型
    结算
    """
THOST_FTDC_FUT_Check = _thostmduserapi.THOST_FTDC_FUT_Check
r"""核对"""
THOST_FTDC_FFT_Txt = _thostmduserapi.THOST_FTDC_FFT_Txt
r"""
    TFtdcFileFormatType是一个文件格式类型
    文本文件(.txt)
    """
THOST_FTDC_FFT_Zip = _thostmduserapi.THOST_FTDC_FFT_Zip
r"""压缩文件(.zip)"""
THOST_FTDC_FFT_DBF = _thostmduserapi.THOST_FTDC_FFT_DBF
r"""DBF文件(.dbf)"""
THOST_FTDC_FUS_SucceedUpload = _thostmduserapi.THOST_FTDC_FUS_SucceedUpload
r"""
    TFtdcFileUploadStatusType是一个文件状态类型
    上传成功
    """
THOST_FTDC_FUS_FailedUpload = _thostmduserapi.THOST_FTDC_FUS_FailedUpload
r"""上传失败"""
THOST_FTDC_FUS_SucceedLoad = _thostmduserapi.THOST_FTDC_FUS_SucceedLoad
r"""导入成功"""
THOST_FTDC_FUS_PartSucceedLoad = _thostmduserapi.THOST_FTDC_FUS_PartSucceedLoad
r"""导入部分成功"""
THOST_FTDC_FUS_FailedLoad = _thostmduserapi.THOST_FTDC_FUS_FailedLoad
r"""导入失败"""
THOST_FTDC_TD_Out = _thostmduserapi.THOST_FTDC_TD_Out
r"""
    TFtdcTransferDirectionType是一个移仓方向类型
    移出
    """
THOST_FTDC_TD_In = _thostmduserapi.THOST_FTDC_TD_In
r"""移入"""
THOST_FTDC_SC_NoSpecialRule = _thostmduserapi.THOST_FTDC_SC_NoSpecialRule
r"""
    TFtdcSpecialCreateRuleType是一个特殊的创建规则类型
    没有特殊创建规则
    """
THOST_FTDC_SC_NoSpringFestival = _thostmduserapi.THOST_FTDC_SC_NoSpringFestival
r"""不包含春节"""
THOST_FTDC_IPT_LastSettlement = _thostmduserapi.THOST_FTDC_IPT_LastSettlement
r"""
    TFtdcBasisPriceTypeType是一个挂牌基准价类型类型
    上一合约结算价
    """
THOST_FTDC_IPT_LaseClose = _thostmduserapi.THOST_FTDC_IPT_LaseClose
r"""上一合约收盘价"""
THOST_FTDC_PLP_Active = _thostmduserapi.THOST_FTDC_PLP_Active
r"""
    TFtdcProductLifePhaseType是一个产品生命周期状态类型
    活跃
    """
THOST_FTDC_PLP_NonActive = _thostmduserapi.THOST_FTDC_PLP_NonActive
r"""不活跃"""
THOST_FTDC_PLP_Canceled = _thostmduserapi.THOST_FTDC_PLP_Canceled
r"""注销"""
THOST_FTDC_DM_CashDeliv = _thostmduserapi.THOST_FTDC_DM_CashDeliv
r"""
    TFtdcDeliveryModeType是一个交割方式类型
    现金交割
    """
THOST_FTDC_DM_CommodityDeliv = _thostmduserapi.THOST_FTDC_DM_CommodityDeliv
r"""实物交割"""
THOST_FTDC_FIOT_FundIO = _thostmduserapi.THOST_FTDC_FIOT_FundIO
r"""
    TFtdcFundIOTypeType是一个出入金类型类型
    出入金
    """
THOST_FTDC_FIOT_Transfer = _thostmduserapi.THOST_FTDC_FIOT_Transfer
r"""银期转帐"""
THOST_FTDC_FIOT_SwapCurrency = _thostmduserapi.THOST_FTDC_FIOT_SwapCurrency
r"""银期换汇"""
THOST_FTDC_FT_Deposite = _thostmduserapi.THOST_FTDC_FT_Deposite
r"""
    TFtdcFundTypeType是一个资金类型类型
    银行存款
    """
THOST_FTDC_FT_ItemFund = _thostmduserapi.THOST_FTDC_FT_ItemFund
r"""分项资金"""
THOST_FTDC_FT_Company = _thostmduserapi.THOST_FTDC_FT_Company
r"""公司调整"""
THOST_FTDC_FT_InnerTransfer = _thostmduserapi.THOST_FTDC_FT_InnerTransfer
r"""资金内转"""
THOST_FTDC_FD_In = _thostmduserapi.THOST_FTDC_FD_In
r"""
    TFtdcFundDirectionType是一个出入金方向类型
    入金
    """
THOST_FTDC_FD_Out = _thostmduserapi.THOST_FTDC_FD_Out
r"""出金"""
THOST_FTDC_FS_Record = _thostmduserapi.THOST_FTDC_FS_Record
r"""
    TFtdcFundStatusType是一个资金状态类型
    已录入
    """
THOST_FTDC_FS_Check = _thostmduserapi.THOST_FTDC_FS_Check
r"""已复核"""
THOST_FTDC_FS_Charge = _thostmduserapi.THOST_FTDC_FS_Charge
r"""已冲销"""
THOST_FTDC_PS_None = _thostmduserapi.THOST_FTDC_PS_None
r"""
    TFtdcPublishStatusType是一个发布状态类型
    未发布
    """
THOST_FTDC_PS_Publishing = _thostmduserapi.THOST_FTDC_PS_Publishing
r"""正在发布"""
THOST_FTDC_PS_Published = _thostmduserapi.THOST_FTDC_PS_Published
r"""已发布"""
THOST_FTDC_ES_NonActive = _thostmduserapi.THOST_FTDC_ES_NonActive
r"""
    TFtdcSystemStatusType是一个系统状态类型
    不活跃
    """
THOST_FTDC_ES_Startup = _thostmduserapi.THOST_FTDC_ES_Startup
r"""启动"""
THOST_FTDC_ES_Initialize = _thostmduserapi.THOST_FTDC_ES_Initialize
r"""交易开始初始化"""
THOST_FTDC_ES_Initialized = _thostmduserapi.THOST_FTDC_ES_Initialized
r"""交易完成初始化"""
THOST_FTDC_ES_Close = _thostmduserapi.THOST_FTDC_ES_Close
r"""收市开始"""
THOST_FTDC_ES_Closed = _thostmduserapi.THOST_FTDC_ES_Closed
r"""收市完成"""
THOST_FTDC_ES_Settlement = _thostmduserapi.THOST_FTDC_ES_Settlement
r"""结算"""
THOST_FTDC_STS_Initialize = _thostmduserapi.THOST_FTDC_STS_Initialize
r"""
    TFtdcSettlementStatusType是一个结算状态类型
    初始
    """
THOST_FTDC_STS_Settlementing = _thostmduserapi.THOST_FTDC_STS_Settlementing
r"""结算中"""
THOST_FTDC_STS_Settlemented = _thostmduserapi.THOST_FTDC_STS_Settlemented
r"""已结算"""
THOST_FTDC_STS_Finished = _thostmduserapi.THOST_FTDC_STS_Finished
r"""结算完成"""
THOST_FTDC_CT_Person = _thostmduserapi.THOST_FTDC_CT_Person
r"""
    TFtdcInvestorTypeType是一个投资者类型类型
    自然人
    """
THOST_FTDC_CT_Company = _thostmduserapi.THOST_FTDC_CT_Company
r"""法人"""
THOST_FTDC_CT_Fund = _thostmduserapi.THOST_FTDC_CT_Fund
r"""投资基金"""
THOST_FTDC_CT_SpecialOrgan = _thostmduserapi.THOST_FTDC_CT_SpecialOrgan
r"""特殊法人"""
THOST_FTDC_CT_Asset = _thostmduserapi.THOST_FTDC_CT_Asset
r"""资管户"""
THOST_FTDC_BT_Trade = _thostmduserapi.THOST_FTDC_BT_Trade
r"""
    TFtdcBrokerTypeType是一个经纪公司类型类型
    交易会员
    """
THOST_FTDC_BT_TradeSettle = _thostmduserapi.THOST_FTDC_BT_TradeSettle
r"""交易结算会员"""
THOST_FTDC_FAS_Low = _thostmduserapi.THOST_FTDC_FAS_Low
r"""
    TFtdcRiskLevelType是一个风险等级类型
    低风险客户
    """
THOST_FTDC_FAS_Normal = _thostmduserapi.THOST_FTDC_FAS_Normal
r"""普通客户"""
THOST_FTDC_FAS_Focus = _thostmduserapi.THOST_FTDC_FAS_Focus
r"""关注客户"""
THOST_FTDC_FAS_Risk = _thostmduserapi.THOST_FTDC_FAS_Risk
r"""风险客户"""
THOST_FTDC_FAS_ByTrade = _thostmduserapi.THOST_FTDC_FAS_ByTrade
r"""
    TFtdcFeeAcceptStyleType是一个手续费收取方式类型
    按交易收取
    """
THOST_FTDC_FAS_ByDeliv = _thostmduserapi.THOST_FTDC_FAS_ByDeliv
r"""按交割收取"""
THOST_FTDC_FAS_None = _thostmduserapi.THOST_FTDC_FAS_None
r"""不收"""
THOST_FTDC_FAS_FixFee = _thostmduserapi.THOST_FTDC_FAS_FixFee
r"""按指定手续费收取"""
THOST_FTDC_PWDT_Trade = _thostmduserapi.THOST_FTDC_PWDT_Trade
r"""
    TFtdcPasswordTypeType是一个密码类型类型
    交易密码
    """
THOST_FTDC_PWDT_Account = _thostmduserapi.THOST_FTDC_PWDT_Account
r"""资金密码"""
THOST_FTDC_AG_All = _thostmduserapi.THOST_FTDC_AG_All
r"""
    TFtdcAlgorithmType是一个盈亏算法类型
    浮盈浮亏都计算
    """
THOST_FTDC_AG_OnlyLost = _thostmduserapi.THOST_FTDC_AG_OnlyLost
r"""浮盈不计，浮亏计"""
THOST_FTDC_AG_OnlyGain = _thostmduserapi.THOST_FTDC_AG_OnlyGain
r"""浮盈计，浮亏不计"""
THOST_FTDC_AG_None = _thostmduserapi.THOST_FTDC_AG_None
r"""浮盈浮亏都不计算"""
THOST_FTDC_ICP_Include = _thostmduserapi.THOST_FTDC_ICP_Include
r"""
    TFtdcIncludeCloseProfitType是一个是否包含平仓盈利类型
    包含平仓盈利
    """
THOST_FTDC_ICP_NotInclude = _thostmduserapi.THOST_FTDC_ICP_NotInclude
r"""不包含平仓盈利"""
THOST_FTDC_AWT_Enable = _thostmduserapi.THOST_FTDC_AWT_Enable
r"""
    TFtdcAllWithoutTradeType是一个是否受可提比例限制类型
    无仓无成交不受可提比例限制
    """
THOST_FTDC_AWT_Disable = _thostmduserapi.THOST_FTDC_AWT_Disable
r"""受可提比例限制"""
THOST_FTDC_AWT_NoHoldEnable = _thostmduserapi.THOST_FTDC_AWT_NoHoldEnable
r"""无仓不受可提比例限制"""
THOST_FTDC_FPWD_UnCheck = _thostmduserapi.THOST_FTDC_FPWD_UnCheck
r"""
    TFtdcFuturePwdFlagType是一个资金密码核对标志类型
    不核对
    """
THOST_FTDC_FPWD_Check = _thostmduserapi.THOST_FTDC_FPWD_Check
r"""核对"""
THOST_FTDC_TT_BankToFuture = _thostmduserapi.THOST_FTDC_TT_BankToFuture
r"""
    TFtdcTransferTypeType是一个银期转账类型类型
    银行转期货
    """
THOST_FTDC_TT_FutureToBank = _thostmduserapi.THOST_FTDC_TT_FutureToBank
r"""期货转银行"""
THOST_FTDC_TVF_Invalid = _thostmduserapi.THOST_FTDC_TVF_Invalid
r"""
    TFtdcTransferValidFlagType是一个转账有效标志类型
    无效或失败
    """
THOST_FTDC_TVF_Valid = _thostmduserapi.THOST_FTDC_TVF_Valid
r"""有效"""
THOST_FTDC_TVF_Reverse = _thostmduserapi.THOST_FTDC_TVF_Reverse
r"""冲正"""
THOST_FTDC_RN_CD = _thostmduserapi.THOST_FTDC_RN_CD
r"""
    TFtdcReasonType是一个事由类型
    错单
    """
THOST_FTDC_RN_ZT = _thostmduserapi.THOST_FTDC_RN_ZT
r"""资金在途"""
THOST_FTDC_RN_QT = _thostmduserapi.THOST_FTDC_RN_QT
r"""其它"""
THOST_FTDC_SEX_None = _thostmduserapi.THOST_FTDC_SEX_None
r"""
    TFtdcSexType是一个性别类型
    未知
    """
THOST_FTDC_SEX_Man = _thostmduserapi.THOST_FTDC_SEX_Man
r"""男"""
THOST_FTDC_SEX_Woman = _thostmduserapi.THOST_FTDC_SEX_Woman
r"""女"""
THOST_FTDC_UT_Investor = _thostmduserapi.THOST_FTDC_UT_Investor
r"""
    TFtdcUserTypeType是一个用户类型类型
    投资者
    """
THOST_FTDC_UT_Operator = _thostmduserapi.THOST_FTDC_UT_Operator
r"""操作员"""
THOST_FTDC_UT_SuperUser = _thostmduserapi.THOST_FTDC_UT_SuperUser
r"""管理员"""
THOST_FTDC_RATETYPE_MarginRate = _thostmduserapi.THOST_FTDC_RATETYPE_MarginRate
r"""
    TFtdcRateTypeType是一个费率类型类型
    保证金率
    """
THOST_FTDC_NOTETYPE_TradeSettleBill = _thostmduserapi.THOST_FTDC_NOTETYPE_TradeSettleBill
r"""
    TFtdcNoteTypeType是一个通知类型类型
    交易结算单
    """
THOST_FTDC_NOTETYPE_TradeSettleMonth = _thostmduserapi.THOST_FTDC_NOTETYPE_TradeSettleMonth
r"""交易结算月报"""
THOST_FTDC_NOTETYPE_CallMarginNotes = _thostmduserapi.THOST_FTDC_NOTETYPE_CallMarginNotes
r"""追加保证金通知书"""
THOST_FTDC_NOTETYPE_ForceCloseNotes = _thostmduserapi.THOST_FTDC_NOTETYPE_ForceCloseNotes
r"""强行平仓通知书"""
THOST_FTDC_NOTETYPE_TradeNotes = _thostmduserapi.THOST_FTDC_NOTETYPE_TradeNotes
r"""成交通知书"""
THOST_FTDC_NOTETYPE_DelivNotes = _thostmduserapi.THOST_FTDC_NOTETYPE_DelivNotes
r"""交割通知书"""
THOST_FTDC_SBS_Day = _thostmduserapi.THOST_FTDC_SBS_Day
r"""
    TFtdcSettlementStyleType是一个结算单方式类型
    逐日盯市
    """
THOST_FTDC_SBS_Volume = _thostmduserapi.THOST_FTDC_SBS_Volume
r"""逐笔对冲"""
THOST_FTDC_ST_Day = _thostmduserapi.THOST_FTDC_ST_Day
r"""
    TFtdcSettlementBillTypeType是一个结算单类型类型
    日报
    """
THOST_FTDC_ST_Month = _thostmduserapi.THOST_FTDC_ST_Month
r"""月报"""
THOST_FTDC_URT_Logon = _thostmduserapi.THOST_FTDC_URT_Logon
r"""
    TFtdcUserRightTypeType是一个客户权限类型类型
    登录
    """
THOST_FTDC_URT_Transfer = _thostmduserapi.THOST_FTDC_URT_Transfer
r"""银期转帐"""
THOST_FTDC_URT_EMail = _thostmduserapi.THOST_FTDC_URT_EMail
r"""邮寄结算单"""
THOST_FTDC_URT_Fax = _thostmduserapi.THOST_FTDC_URT_Fax
r"""传真结算单"""
THOST_FTDC_URT_ConditionOrder = _thostmduserapi.THOST_FTDC_URT_ConditionOrder
r"""条件单"""
THOST_FTDC_MPT_PreSettlementPrice = _thostmduserapi.THOST_FTDC_MPT_PreSettlementPrice
r"""
    TFtdcMarginPriceTypeType是一个保证金价格类型类型
    昨结算价
    """
THOST_FTDC_MPT_SettlementPrice = _thostmduserapi.THOST_FTDC_MPT_SettlementPrice
r"""最新价"""
THOST_FTDC_MPT_AveragePrice = _thostmduserapi.THOST_FTDC_MPT_AveragePrice
r"""成交均价"""
THOST_FTDC_MPT_OpenPrice = _thostmduserapi.THOST_FTDC_MPT_OpenPrice
r"""开仓价"""
THOST_FTDC_BGS_None = _thostmduserapi.THOST_FTDC_BGS_None
r"""
    TFtdcBillGenStatusType是一个结算单生成状态类型
    未生成
    """
THOST_FTDC_BGS_NoGenerated = _thostmduserapi.THOST_FTDC_BGS_NoGenerated
r"""生成中"""
THOST_FTDC_BGS_Generated = _thostmduserapi.THOST_FTDC_BGS_Generated
r"""已生成"""
THOST_FTDC_AT_HandlePositionAlgo = _thostmduserapi.THOST_FTDC_AT_HandlePositionAlgo
r"""
    TFtdcAlgoTypeType是一个算法类型类型
    持仓处理算法
    """
THOST_FTDC_AT_FindMarginRateAlgo = _thostmduserapi.THOST_FTDC_AT_FindMarginRateAlgo
r"""寻找保证金率算法"""
THOST_FTDC_HPA_Base = _thostmduserapi.THOST_FTDC_HPA_Base
r"""
    TFtdcHandlePositionAlgoIDType是一个持仓处理算法编号类型
    基本
    """
THOST_FTDC_HPA_DCE = _thostmduserapi.THOST_FTDC_HPA_DCE
r"""大连商品交易所"""
THOST_FTDC_HPA_CZCE = _thostmduserapi.THOST_FTDC_HPA_CZCE
r"""郑州商品交易所"""
THOST_FTDC_FMRA_Base = _thostmduserapi.THOST_FTDC_FMRA_Base
r"""
    TFtdcFindMarginRateAlgoIDType是一个寻找保证金率算法编号类型
    基本
    """
THOST_FTDC_FMRA_DCE = _thostmduserapi.THOST_FTDC_FMRA_DCE
r"""大连商品交易所"""
THOST_FTDC_FMRA_CZCE = _thostmduserapi.THOST_FTDC_FMRA_CZCE
r"""郑州商品交易所"""
THOST_FTDC_HTAA_Base = _thostmduserapi.THOST_FTDC_HTAA_Base
r"""
    TFtdcHandleTradingAccountAlgoIDType是一个资金处理算法编号类型
    基本
    """
THOST_FTDC_HTAA_DCE = _thostmduserapi.THOST_FTDC_HTAA_DCE
r"""大连商品交易所"""
THOST_FTDC_HTAA_CZCE = _thostmduserapi.THOST_FTDC_HTAA_CZCE
r"""郑州商品交易所"""
THOST_FTDC_PST_Order = _thostmduserapi.THOST_FTDC_PST_Order
r"""
    TFtdcPersonTypeType是一个联系人类型类型
    指定下单人
    """
THOST_FTDC_PST_Open = _thostmduserapi.THOST_FTDC_PST_Open
r"""开户授权人"""
THOST_FTDC_PST_Fund = _thostmduserapi.THOST_FTDC_PST_Fund
r"""资金调拨人"""
THOST_FTDC_PST_Settlement = _thostmduserapi.THOST_FTDC_PST_Settlement
r"""结算单确认人"""
THOST_FTDC_PST_Company = _thostmduserapi.THOST_FTDC_PST_Company
r"""法人"""
THOST_FTDC_PST_Corporation = _thostmduserapi.THOST_FTDC_PST_Corporation
r"""法人代表"""
THOST_FTDC_PST_LinkMan = _thostmduserapi.THOST_FTDC_PST_LinkMan
r"""投资者联系人"""
THOST_FTDC_PST_Ledger = _thostmduserapi.THOST_FTDC_PST_Ledger
r"""分户管理资产负责人"""
THOST_FTDC_PST_Trustee = _thostmduserapi.THOST_FTDC_PST_Trustee
r"""托（保）管人"""
THOST_FTDC_PST_TrusteeCorporation = _thostmduserapi.THOST_FTDC_PST_TrusteeCorporation
r"""托（保）管机构法人代表"""
THOST_FTDC_PST_TrusteeOpen = _thostmduserapi.THOST_FTDC_PST_TrusteeOpen
r"""托（保）管机构开户授权人"""
THOST_FTDC_PST_TrusteeContact = _thostmduserapi.THOST_FTDC_PST_TrusteeContact
r"""托（保）管机构联系人"""
THOST_FTDC_PST_ForeignerRefer = _thostmduserapi.THOST_FTDC_PST_ForeignerRefer
r"""境外自然人参考证件"""
THOST_FTDC_PST_CorporationRefer = _thostmduserapi.THOST_FTDC_PST_CorporationRefer
r"""法人代表参考证件"""
THOST_FTDC_QIR_All = _thostmduserapi.THOST_FTDC_QIR_All
r"""
    TFtdcQueryInvestorRangeType是一个查询范围类型
    所有
    """
THOST_FTDC_QIR_Group = _thostmduserapi.THOST_FTDC_QIR_Group
r"""查询分类"""
THOST_FTDC_QIR_Single = _thostmduserapi.THOST_FTDC_QIR_Single
r"""单一投资者"""
THOST_FTDC_IRS_Normal = _thostmduserapi.THOST_FTDC_IRS_Normal
r"""
    TFtdcInvestorRiskStatusType是一个投资者风险状态类型
    正常
    """
THOST_FTDC_IRS_Warn = _thostmduserapi.THOST_FTDC_IRS_Warn
r"""警告"""
THOST_FTDC_IRS_Call = _thostmduserapi.THOST_FTDC_IRS_Call
r"""追保"""
THOST_FTDC_IRS_Force = _thostmduserapi.THOST_FTDC_IRS_Force
r"""强平"""
THOST_FTDC_IRS_Exception = _thostmduserapi.THOST_FTDC_IRS_Exception
r"""异常"""
THOST_FTDC_UET_Login = _thostmduserapi.THOST_FTDC_UET_Login
r"""
    TFtdcUserEventTypeType是一个用户事件类型类型
    登录
    """
THOST_FTDC_UET_Logout = _thostmduserapi.THOST_FTDC_UET_Logout
r"""登出"""
THOST_FTDC_UET_Trading = _thostmduserapi.THOST_FTDC_UET_Trading
r"""CTP校验通过"""
THOST_FTDC_UET_TradingError = _thostmduserapi.THOST_FTDC_UET_TradingError
r"""CTP校验失败"""
THOST_FTDC_UET_UpdatePassword = _thostmduserapi.THOST_FTDC_UET_UpdatePassword
r"""修改密码"""
THOST_FTDC_UET_Authenticate = _thostmduserapi.THOST_FTDC_UET_Authenticate
r"""客户端认证"""
THOST_FTDC_UET_SubmitSysInfo = _thostmduserapi.THOST_FTDC_UET_SubmitSysInfo
r"""终端信息上报"""
THOST_FTDC_UET_Transfer = _thostmduserapi.THOST_FTDC_UET_Transfer
r"""转账"""
THOST_FTDC_UET_Other = _thostmduserapi.THOST_FTDC_UET_Other
r"""其他"""
THOST_FTDC_ICS_Close = _thostmduserapi.THOST_FTDC_ICS_Close
r"""
    TFtdcCloseStyleType是一个平仓方式类型
    先开先平
    """
THOST_FTDC_ICS_CloseToday = _thostmduserapi.THOST_FTDC_ICS_CloseToday
r"""先平今再平昨"""
THOST_FTDC_SM_Non = _thostmduserapi.THOST_FTDC_SM_Non
r"""
    TFtdcStatModeType是一个统计方式类型
    ----
    """
THOST_FTDC_SM_Instrument = _thostmduserapi.THOST_FTDC_SM_Instrument
r"""按合约统计"""
THOST_FTDC_SM_Product = _thostmduserapi.THOST_FTDC_SM_Product
r"""按产品统计"""
THOST_FTDC_SM_Investor = _thostmduserapi.THOST_FTDC_SM_Investor
r"""按投资者统计"""
THOST_FTDC_PAOS_NotSend = _thostmduserapi.THOST_FTDC_PAOS_NotSend
r"""
    TFtdcParkedOrderStatusType是一个预埋单状态类型
    未发送
    """
THOST_FTDC_PAOS_Send = _thostmduserapi.THOST_FTDC_PAOS_Send
r"""已发送"""
THOST_FTDC_PAOS_Deleted = _thostmduserapi.THOST_FTDC_PAOS_Deleted
r"""已删除"""
THOST_FTDC_VDS_Dealing = _thostmduserapi.THOST_FTDC_VDS_Dealing
r"""
    TFtdcVirDealStatusType是一个处理状态类型
    正在处理
    """
THOST_FTDC_VDS_DeaclSucceed = _thostmduserapi.THOST_FTDC_VDS_DeaclSucceed
r"""处理成功"""
THOST_FTDC_ORGS_Standard = _thostmduserapi.THOST_FTDC_ORGS_Standard
r"""
    TFtdcOrgSystemIDType是一个原有系统代码类型
    综合交易平台
    """
THOST_FTDC_ORGS_ESunny = _thostmduserapi.THOST_FTDC_ORGS_ESunny
r"""易盛系统"""
THOST_FTDC_ORGS_KingStarV6 = _thostmduserapi.THOST_FTDC_ORGS_KingStarV6
r"""金仕达V6系统"""
THOST_FTDC_VTS_NaturalDeal = _thostmduserapi.THOST_FTDC_VTS_NaturalDeal
r"""
    TFtdcVirTradeStatusType是一个交易状态类型
    正常处理中
    """
THOST_FTDC_VTS_SucceedEnd = _thostmduserapi.THOST_FTDC_VTS_SucceedEnd
r"""成功结束"""
THOST_FTDC_VTS_FailedEND = _thostmduserapi.THOST_FTDC_VTS_FailedEND
r"""失败结束"""
THOST_FTDC_VTS_Exception = _thostmduserapi.THOST_FTDC_VTS_Exception
r"""异常中"""
THOST_FTDC_VTS_ManualDeal = _thostmduserapi.THOST_FTDC_VTS_ManualDeal
r"""已人工异常处理"""
THOST_FTDC_VTS_MesException = _thostmduserapi.THOST_FTDC_VTS_MesException
r"""通讯异常 ，请人工处理"""
THOST_FTDC_VTS_SysException = _thostmduserapi.THOST_FTDC_VTS_SysException
r"""系统出错，请人工处理"""
THOST_FTDC_VBAT_BankBook = _thostmduserapi.THOST_FTDC_VBAT_BankBook
r"""
    TFtdcVirBankAccTypeType是一个银行帐户类型类型
    存折
    """
THOST_FTDC_VBAT_BankCard = _thostmduserapi.THOST_FTDC_VBAT_BankCard
r"""储蓄卡"""
THOST_FTDC_VBAT_CreditCard = _thostmduserapi.THOST_FTDC_VBAT_CreditCard
r"""信用卡"""
THOST_FTDC_VMS_Natural = _thostmduserapi.THOST_FTDC_VMS_Natural
r"""
    TFtdcVirementStatusType是一个银行帐户类型类型
    正常
    """
THOST_FTDC_VMS_Canceled = _thostmduserapi.THOST_FTDC_VMS_Canceled
r"""销户"""
THOST_FTDC_VAA_NoAvailAbility = _thostmduserapi.THOST_FTDC_VAA_NoAvailAbility
r"""
    TFtdcVirementAvailAbilityType是一个有效标志类型
    未确认
    """
THOST_FTDC_VAA_AvailAbility = _thostmduserapi.THOST_FTDC_VAA_AvailAbility
r"""有效"""
THOST_FTDC_VAA_Repeal = _thostmduserapi.THOST_FTDC_VAA_Repeal
r"""冲正"""
THOST_FTDC_GEN_Program = _thostmduserapi.THOST_FTDC_GEN_Program
r"""
    TFtdcAMLGenStatusType是一个Aml生成方式类型
    程序生成
    """
THOST_FTDC_GEN_HandWork = _thostmduserapi.THOST_FTDC_GEN_HandWork
r"""人工生成"""
THOST_FTDC_CFMMCKK_REQUEST = _thostmduserapi.THOST_FTDC_CFMMCKK_REQUEST
r"""
    TFtdcCFMMCKeyKindType是一个动态密钥类别(保证金监管)类型
    主动请求更新
    """
THOST_FTDC_CFMMCKK_AUTO = _thostmduserapi.THOST_FTDC_CFMMCKK_AUTO
r"""CFMMC自动更新"""
THOST_FTDC_CFMMCKK_MANUAL = _thostmduserapi.THOST_FTDC_CFMMCKK_MANUAL
r"""CFMMC手动更新"""
THOST_FTDC_CFT_IDCard = _thostmduserapi.THOST_FTDC_CFT_IDCard
r"""
    TFtdcCertificationTypeType是一个证件类型类型
    身份证
    """
THOST_FTDC_CFT_Passport = _thostmduserapi.THOST_FTDC_CFT_Passport
r"""护照"""
THOST_FTDC_CFT_OfficerIDCard = _thostmduserapi.THOST_FTDC_CFT_OfficerIDCard
r"""军官证"""
THOST_FTDC_CFT_SoldierIDCard = _thostmduserapi.THOST_FTDC_CFT_SoldierIDCard
r"""士兵证"""
THOST_FTDC_CFT_HomeComingCard = _thostmduserapi.THOST_FTDC_CFT_HomeComingCard
r"""回乡证"""
THOST_FTDC_CFT_HouseholdRegister = _thostmduserapi.THOST_FTDC_CFT_HouseholdRegister
r"""户口簿"""
THOST_FTDC_CFT_LicenseNo = _thostmduserapi.THOST_FTDC_CFT_LicenseNo
r"""营业执照号"""
THOST_FTDC_CFT_InstitutionCodeCard = _thostmduserapi.THOST_FTDC_CFT_InstitutionCodeCard
r"""组织机构代码证"""
THOST_FTDC_CFT_TempLicenseNo = _thostmduserapi.THOST_FTDC_CFT_TempLicenseNo
r"""临时营业执照号"""
THOST_FTDC_CFT_NoEnterpriseLicenseNo = _thostmduserapi.THOST_FTDC_CFT_NoEnterpriseLicenseNo
r"""民办非企业登记证书"""
THOST_FTDC_CFT_OtherCard = _thostmduserapi.THOST_FTDC_CFT_OtherCard
r"""其他证件"""
THOST_FTDC_CFT_SuperDepAgree = _thostmduserapi.THOST_FTDC_CFT_SuperDepAgree
r"""主管部门批文"""
THOST_FTDC_FBC_Others = _thostmduserapi.THOST_FTDC_FBC_Others
r"""
    TFtdcFileBusinessCodeType是一个文件业务功能类型
    其他
    """
THOST_FTDC_FBC_TransferDetails = _thostmduserapi.THOST_FTDC_FBC_TransferDetails
r"""转账交易明细对账"""
THOST_FTDC_FBC_CustAccStatus = _thostmduserapi.THOST_FTDC_FBC_CustAccStatus
r"""客户账户状态对账"""
THOST_FTDC_FBC_AccountTradeDetails = _thostmduserapi.THOST_FTDC_FBC_AccountTradeDetails
r"""账户类交易明细对账"""
THOST_FTDC_FBC_FutureAccountChangeInfoDetails = _thostmduserapi.THOST_FTDC_FBC_FutureAccountChangeInfoDetails
r"""期货账户信息变更明细对账"""
THOST_FTDC_FBC_CustMoneyDetail = _thostmduserapi.THOST_FTDC_FBC_CustMoneyDetail
r"""客户资金台账余额明细对账"""
THOST_FTDC_FBC_CustCancelAccountInfo = _thostmduserapi.THOST_FTDC_FBC_CustCancelAccountInfo
r"""客户销户结息明细对账"""
THOST_FTDC_FBC_CustMoneyResult = _thostmduserapi.THOST_FTDC_FBC_CustMoneyResult
r"""客户资金余额对账结果"""
THOST_FTDC_FBC_OthersExceptionResult = _thostmduserapi.THOST_FTDC_FBC_OthersExceptionResult
r"""其它对账异常结果文件"""
THOST_FTDC_FBC_CustInterestNetMoneyDetails = _thostmduserapi.THOST_FTDC_FBC_CustInterestNetMoneyDetails
r"""客户结息净额明细"""
THOST_FTDC_FBC_CustMoneySendAndReceiveDetails = _thostmduserapi.THOST_FTDC_FBC_CustMoneySendAndReceiveDetails
r"""客户资金交收明细"""
THOST_FTDC_FBC_CorporationMoneyTotal = _thostmduserapi.THOST_FTDC_FBC_CorporationMoneyTotal
r"""法人存管银行资金交收汇总"""
THOST_FTDC_FBC_MainbodyMoneyTotal = _thostmduserapi.THOST_FTDC_FBC_MainbodyMoneyTotal
r"""主体间资金交收汇总"""
THOST_FTDC_FBC_MainPartMonitorData = _thostmduserapi.THOST_FTDC_FBC_MainPartMonitorData
r"""总分平衡监管数据"""
THOST_FTDC_FBC_PreparationMoney = _thostmduserapi.THOST_FTDC_FBC_PreparationMoney
r"""存管银行备付金余额"""
THOST_FTDC_FBC_BankMoneyMonitorData = _thostmduserapi.THOST_FTDC_FBC_BankMoneyMonitorData
r"""协办存管银行资金监管数据"""
THOST_FTDC_CEC_Exchange = _thostmduserapi.THOST_FTDC_CEC_Exchange
r"""
    TFtdcCashExchangeCodeType是一个汇钞标志类型
    汇
    """
THOST_FTDC_CEC_Cash = _thostmduserapi.THOST_FTDC_CEC_Cash
r"""钞"""
THOST_FTDC_YNI_Yes = _thostmduserapi.THOST_FTDC_YNI_Yes
r"""
    TFtdcYesNoIndicatorType是一个是或否标识类型
    是
    """
THOST_FTDC_YNI_No = _thostmduserapi.THOST_FTDC_YNI_No
r"""否"""
THOST_FTDC_BLT_CurrentMoney = _thostmduserapi.THOST_FTDC_BLT_CurrentMoney
r"""
    TFtdcBanlanceTypeType是一个余额类型类型
    当前余额
    """
THOST_FTDC_BLT_UsableMoney = _thostmduserapi.THOST_FTDC_BLT_UsableMoney
r"""可用余额"""
THOST_FTDC_BLT_FetchableMoney = _thostmduserapi.THOST_FTDC_BLT_FetchableMoney
r"""可取余额"""
THOST_FTDC_BLT_FreezeMoney = _thostmduserapi.THOST_FTDC_BLT_FreezeMoney
r"""冻结余额"""
THOST_FTDC_GD_Unknown = _thostmduserapi.THOST_FTDC_GD_Unknown
r"""
    TFtdcGenderType是一个性别类型
    未知状态
    """
THOST_FTDC_GD_Male = _thostmduserapi.THOST_FTDC_GD_Male
r"""男"""
THOST_FTDC_GD_Female = _thostmduserapi.THOST_FTDC_GD_Female
r"""女"""
THOST_FTDC_FPF_BEN = _thostmduserapi.THOST_FTDC_FPF_BEN
r"""
    TFtdcFeePayFlagType是一个费用支付标志类型
    由受益方支付费用
    """
THOST_FTDC_FPF_OUR = _thostmduserapi.THOST_FTDC_FPF_OUR
r"""由发送方支付费用"""
THOST_FTDC_FPF_SHA = _thostmduserapi.THOST_FTDC_FPF_SHA
r"""由发送方支付发起的费用，受益方支付接受的费用"""
THOST_FTDC_PWKT_ExchangeKey = _thostmduserapi.THOST_FTDC_PWKT_ExchangeKey
r"""
    TFtdcPassWordKeyTypeType是一个密钥类型类型
    交换密钥
    """
THOST_FTDC_PWKT_PassWordKey = _thostmduserapi.THOST_FTDC_PWKT_PassWordKey
r"""密码密钥"""
THOST_FTDC_PWKT_MACKey = _thostmduserapi.THOST_FTDC_PWKT_MACKey
r"""MAC密钥"""
THOST_FTDC_PWKT_MessageKey = _thostmduserapi.THOST_FTDC_PWKT_MessageKey
r"""报文密钥"""
THOST_FTDC_PWT_Query = _thostmduserapi.THOST_FTDC_PWT_Query
r"""
    TFtdcFBTPassWordTypeType是一个密码类型类型
    查询
    """
THOST_FTDC_PWT_Fetch = _thostmduserapi.THOST_FTDC_PWT_Fetch
r"""取款"""
THOST_FTDC_PWT_Transfer = _thostmduserapi.THOST_FTDC_PWT_Transfer
r"""转帐"""
THOST_FTDC_PWT_Trade = _thostmduserapi.THOST_FTDC_PWT_Trade
r"""交易"""
THOST_FTDC_EM_NoEncry = _thostmduserapi.THOST_FTDC_EM_NoEncry
r"""
    TFtdcFBTEncryModeType是一个加密方式类型
    不加密
    """
THOST_FTDC_EM_DES = _thostmduserapi.THOST_FTDC_EM_DES
r"""DES"""
THOST_FTDC_EM_3DES = _thostmduserapi.THOST_FTDC_EM_3DES
r"""3DES"""
THOST_FTDC_BRF_BankNotNeedRepeal = _thostmduserapi.THOST_FTDC_BRF_BankNotNeedRepeal
r"""
    TFtdcBankRepealFlagType是一个银行冲正标志类型
    银行无需自动冲正
    """
THOST_FTDC_BRF_BankWaitingRepeal = _thostmduserapi.THOST_FTDC_BRF_BankWaitingRepeal
r"""银行待自动冲正"""
THOST_FTDC_BRF_BankBeenRepealed = _thostmduserapi.THOST_FTDC_BRF_BankBeenRepealed
r"""银行已自动冲正"""
THOST_FTDC_BRORF_BrokerNotNeedRepeal = _thostmduserapi.THOST_FTDC_BRORF_BrokerNotNeedRepeal
r"""
    TFtdcBrokerRepealFlagType是一个期商冲正标志类型
    期商无需自动冲正
    """
THOST_FTDC_BRORF_BrokerWaitingRepeal = _thostmduserapi.THOST_FTDC_BRORF_BrokerWaitingRepeal
r"""期商待自动冲正"""
THOST_FTDC_BRORF_BrokerBeenRepealed = _thostmduserapi.THOST_FTDC_BRORF_BrokerBeenRepealed
r"""期商已自动冲正"""
THOST_FTDC_TS_Bank = _thostmduserapi.THOST_FTDC_TS_Bank
r"""
    TFtdcInstitutionTypeType是一个机构类别类型
    银行
    """
THOST_FTDC_TS_Future = _thostmduserapi.THOST_FTDC_TS_Future
r"""期商"""
THOST_FTDC_TS_Store = _thostmduserapi.THOST_FTDC_TS_Store
r"""券商"""
THOST_FTDC_LF_Yes = _thostmduserapi.THOST_FTDC_LF_Yes
r"""
    TFtdcLastFragmentType是一个最后分片标志类型
    是最后分片
    """
THOST_FTDC_LF_No = _thostmduserapi.THOST_FTDC_LF_No
r"""不是最后分片"""
THOST_FTDC_BAS_Normal = _thostmduserapi.THOST_FTDC_BAS_Normal
r"""
    TFtdcBankAccStatusType是一个银行账户状态类型
    正常
    """
THOST_FTDC_BAS_Freeze = _thostmduserapi.THOST_FTDC_BAS_Freeze
r"""冻结"""
THOST_FTDC_BAS_ReportLoss = _thostmduserapi.THOST_FTDC_BAS_ReportLoss
r"""挂失"""
THOST_FTDC_MAS_Normal = _thostmduserapi.THOST_FTDC_MAS_Normal
r"""
    TFtdcMoneyAccountStatusType是一个资金账户状态类型
    正常
    """
THOST_FTDC_MAS_Cancel = _thostmduserapi.THOST_FTDC_MAS_Cancel
r"""销户"""
THOST_FTDC_MSS_Point = _thostmduserapi.THOST_FTDC_MSS_Point
r"""
    TFtdcManageStatusType是一个存管状态类型
    指定存管
    """
THOST_FTDC_MSS_PrePoint = _thostmduserapi.THOST_FTDC_MSS_PrePoint
r"""预指定"""
THOST_FTDC_MSS_CancelPoint = _thostmduserapi.THOST_FTDC_MSS_CancelPoint
r"""撤销指定"""
THOST_FTDC_SYT_FutureBankTransfer = _thostmduserapi.THOST_FTDC_SYT_FutureBankTransfer
r"""
    TFtdcSystemTypeType是一个应用系统类型类型
    银期转帐
    """
THOST_FTDC_SYT_StockBankTransfer = _thostmduserapi.THOST_FTDC_SYT_StockBankTransfer
r"""银证转帐"""
THOST_FTDC_SYT_TheThirdPartStore = _thostmduserapi.THOST_FTDC_SYT_TheThirdPartStore
r"""第三方存管"""
THOST_FTDC_TEF_NormalProcessing = _thostmduserapi.THOST_FTDC_TEF_NormalProcessing
r"""
    TFtdcTxnEndFlagType是一个银期转帐划转结果标志类型
    正常处理中
    """
THOST_FTDC_TEF_Success = _thostmduserapi.THOST_FTDC_TEF_Success
r"""成功结束"""
THOST_FTDC_TEF_Failed = _thostmduserapi.THOST_FTDC_TEF_Failed
r"""失败结束"""
THOST_FTDC_TEF_Abnormal = _thostmduserapi.THOST_FTDC_TEF_Abnormal
r"""异常中"""
THOST_FTDC_TEF_ManualProcessedForException = _thostmduserapi.THOST_FTDC_TEF_ManualProcessedForException
r"""已人工异常处理"""
THOST_FTDC_TEF_CommuFailedNeedManualProcess = _thostmduserapi.THOST_FTDC_TEF_CommuFailedNeedManualProcess
r"""通讯异常 ，请人工处理"""
THOST_FTDC_TEF_SysErrorNeedManualProcess = _thostmduserapi.THOST_FTDC_TEF_SysErrorNeedManualProcess
r"""系统出错，请人工处理"""
THOST_FTDC_PSS_NotProcess = _thostmduserapi.THOST_FTDC_PSS_NotProcess
r"""
    TFtdcProcessStatusType是一个银期转帐服务处理状态类型
    未处理
    """
THOST_FTDC_PSS_StartProcess = _thostmduserapi.THOST_FTDC_PSS_StartProcess
r"""开始处理"""
THOST_FTDC_PSS_Finished = _thostmduserapi.THOST_FTDC_PSS_Finished
r"""处理完成"""
THOST_FTDC_CUSTT_Person = _thostmduserapi.THOST_FTDC_CUSTT_Person
r"""
    TFtdcCustTypeType是一个客户类型类型
    自然人
    """
THOST_FTDC_CUSTT_Institution = _thostmduserapi.THOST_FTDC_CUSTT_Institution
r"""机构户"""
THOST_FTDC_FBTTD_FromBankToFuture = _thostmduserapi.THOST_FTDC_FBTTD_FromBankToFuture
r"""
    TFtdcFBTTransferDirectionType是一个银期转帐方向类型
    入金，银行转期货
    """
THOST_FTDC_FBTTD_FromFutureToBank = _thostmduserapi.THOST_FTDC_FBTTD_FromFutureToBank
r"""出金，期货转银行"""
THOST_FTDC_OOD_Open = _thostmduserapi.THOST_FTDC_OOD_Open
r"""
    TFtdcOpenOrDestroyType是一个开销户类别类型
    开户
    """
THOST_FTDC_OOD_Destroy = _thostmduserapi.THOST_FTDC_OOD_Destroy
r"""销户"""
THOST_FTDC_AVAF_Invalid = _thostmduserapi.THOST_FTDC_AVAF_Invalid
r"""
    TFtdcAvailabilityFlagType是一个有效标志类型
    未确认
    """
THOST_FTDC_AVAF_Valid = _thostmduserapi.THOST_FTDC_AVAF_Valid
r"""有效"""
THOST_FTDC_AVAF_Repeal = _thostmduserapi.THOST_FTDC_AVAF_Repeal
r"""冲正"""
THOST_FTDC_OT_Bank = _thostmduserapi.THOST_FTDC_OT_Bank
r"""
    TFtdcOrganTypeType是一个机构类型类型
    银行代理
    """
THOST_FTDC_OT_Future = _thostmduserapi.THOST_FTDC_OT_Future
r"""交易前置"""
THOST_FTDC_OT_PlateForm = _thostmduserapi.THOST_FTDC_OT_PlateForm
r"""银期转帐平台管理"""
THOST_FTDC_OL_HeadQuarters = _thostmduserapi.THOST_FTDC_OL_HeadQuarters
r"""
    TFtdcOrganLevelType是一个机构级别类型
    银行总行或期商总部
    """
THOST_FTDC_OL_Branch = _thostmduserapi.THOST_FTDC_OL_Branch
r"""银行分中心或期货公司营业部"""
THOST_FTDC_PID_FutureProtocal = _thostmduserapi.THOST_FTDC_PID_FutureProtocal
r"""
    TFtdcProtocalIDType是一个协议类型类型
    期商协议
    """
THOST_FTDC_PID_ICBCProtocal = _thostmduserapi.THOST_FTDC_PID_ICBCProtocal
r"""工行协议"""
THOST_FTDC_PID_ABCProtocal = _thostmduserapi.THOST_FTDC_PID_ABCProtocal
r"""农行协议"""
THOST_FTDC_PID_CBCProtocal = _thostmduserapi.THOST_FTDC_PID_CBCProtocal
r"""中国银行协议"""
THOST_FTDC_PID_CCBProtocal = _thostmduserapi.THOST_FTDC_PID_CCBProtocal
r"""建行协议"""
THOST_FTDC_PID_BOCOMProtocal = _thostmduserapi.THOST_FTDC_PID_BOCOMProtocal
r"""交行协议"""
THOST_FTDC_PID_FBTPlateFormProtocal = _thostmduserapi.THOST_FTDC_PID_FBTPlateFormProtocal
r"""银期转帐平台协议"""
THOST_FTDC_CM_ShortConnect = _thostmduserapi.THOST_FTDC_CM_ShortConnect
r"""
    TFtdcConnectModeType是一个套接字连接方式类型
    短连接
    """
THOST_FTDC_CM_LongConnect = _thostmduserapi.THOST_FTDC_CM_LongConnect
r"""长连接"""
THOST_FTDC_SRM_ASync = _thostmduserapi.THOST_FTDC_SRM_ASync
r"""
    TFtdcSyncModeType是一个套接字通信方式类型
    异步
    """
THOST_FTDC_SRM_Sync = _thostmduserapi.THOST_FTDC_SRM_Sync
r"""同步"""
THOST_FTDC_BAT_BankBook = _thostmduserapi.THOST_FTDC_BAT_BankBook
r"""
    TFtdcBankAccTypeType是一个银行帐号类型类型
    银行存折
    """
THOST_FTDC_BAT_SavingCard = _thostmduserapi.THOST_FTDC_BAT_SavingCard
r"""储蓄卡"""
THOST_FTDC_BAT_CreditCard = _thostmduserapi.THOST_FTDC_BAT_CreditCard
r"""信用卡"""
THOST_FTDC_FAT_BankBook = _thostmduserapi.THOST_FTDC_FAT_BankBook
r"""
    TFtdcFutureAccTypeType是一个期货公司帐号类型类型
    银行存折
    """
THOST_FTDC_FAT_SavingCard = _thostmduserapi.THOST_FTDC_FAT_SavingCard
r"""储蓄卡"""
THOST_FTDC_FAT_CreditCard = _thostmduserapi.THOST_FTDC_FAT_CreditCard
r"""信用卡"""
THOST_FTDC_OS_Ready = _thostmduserapi.THOST_FTDC_OS_Ready
r"""
    TFtdcOrganStatusType是一个接入机构状态类型
    启用
    """
THOST_FTDC_OS_CheckIn = _thostmduserapi.THOST_FTDC_OS_CheckIn
r"""签到"""
THOST_FTDC_OS_CheckOut = _thostmduserapi.THOST_FTDC_OS_CheckOut
r"""签退"""
THOST_FTDC_OS_CheckFileArrived = _thostmduserapi.THOST_FTDC_OS_CheckFileArrived
r"""对帐文件到达"""
THOST_FTDC_OS_CheckDetail = _thostmduserapi.THOST_FTDC_OS_CheckDetail
r"""对帐"""
THOST_FTDC_OS_DayEndClean = _thostmduserapi.THOST_FTDC_OS_DayEndClean
r"""日终清理"""
THOST_FTDC_OS_Invalid = _thostmduserapi.THOST_FTDC_OS_Invalid
r"""注销"""
THOST_FTDC_CCBFM_ByAmount = _thostmduserapi.THOST_FTDC_CCBFM_ByAmount
r"""
    TFtdcCCBFeeModeType是一个建行收费模式类型
    按金额扣收
    """
THOST_FTDC_CCBFM_ByMonth = _thostmduserapi.THOST_FTDC_CCBFM_ByMonth
r"""按月扣收"""
THOST_FTDC_CAPIT_Client = _thostmduserapi.THOST_FTDC_CAPIT_Client
r"""
    TFtdcCommApiTypeType是一个通讯API类型类型
    客户端
    """
THOST_FTDC_CAPIT_Server = _thostmduserapi.THOST_FTDC_CAPIT_Server
r"""服务端"""
THOST_FTDC_CAPIT_UserApi = _thostmduserapi.THOST_FTDC_CAPIT_UserApi
r"""交易系统的UserApi"""
THOST_FTDC_LS_Connected = _thostmduserapi.THOST_FTDC_LS_Connected
r"""
    TFtdcLinkStatusType是一个连接状态类型
    已经连接
    """
THOST_FTDC_LS_Disconnected = _thostmduserapi.THOST_FTDC_LS_Disconnected
r"""没有连接"""
THOST_FTDC_BPWDF_NoCheck = _thostmduserapi.THOST_FTDC_BPWDF_NoCheck
r"""
    TFtdcPwdFlagType是一个密码核对标志类型
    不核对
    """
THOST_FTDC_BPWDF_BlankCheck = _thostmduserapi.THOST_FTDC_BPWDF_BlankCheck
r"""明文核对"""
THOST_FTDC_BPWDF_EncryptCheck = _thostmduserapi.THOST_FTDC_BPWDF_EncryptCheck
r"""密文核对"""
THOST_FTDC_SAT_AccountID = _thostmduserapi.THOST_FTDC_SAT_AccountID
r"""
    TFtdcSecuAccTypeType是一个期货帐号类型类型
    资金帐号
    """
THOST_FTDC_SAT_CardID = _thostmduserapi.THOST_FTDC_SAT_CardID
r"""资金卡号"""
THOST_FTDC_SAT_SHStockholderID = _thostmduserapi.THOST_FTDC_SAT_SHStockholderID
r"""上海股东帐号"""
THOST_FTDC_SAT_SZStockholderID = _thostmduserapi.THOST_FTDC_SAT_SZStockholderID
r"""深圳股东帐号"""
THOST_FTDC_TRFS_Normal = _thostmduserapi.THOST_FTDC_TRFS_Normal
r"""
    TFtdcTransferStatusType是一个转账交易状态类型
    正常
    """
THOST_FTDC_TRFS_Repealed = _thostmduserapi.THOST_FTDC_TRFS_Repealed
r"""被冲正"""
THOST_FTDC_SPTYPE_Broker = _thostmduserapi.THOST_FTDC_SPTYPE_Broker
r"""
    TFtdcSponsorTypeType是一个发起方类型
    期商
    """
THOST_FTDC_SPTYPE_Bank = _thostmduserapi.THOST_FTDC_SPTYPE_Bank
r"""银行"""
THOST_FTDC_REQRSP_Request = _thostmduserapi.THOST_FTDC_REQRSP_Request
r"""
    TFtdcReqRspTypeType是一个请求响应类别类型
    请求
    """
THOST_FTDC_REQRSP_Response = _thostmduserapi.THOST_FTDC_REQRSP_Response
r"""响应"""
THOST_FTDC_FBTUET_SignIn = _thostmduserapi.THOST_FTDC_FBTUET_SignIn
r"""
    TFtdcFBTUserEventTypeType是一个银期转帐用户事件类型类型
    签到
    """
THOST_FTDC_FBTUET_FromBankToFuture = _thostmduserapi.THOST_FTDC_FBTUET_FromBankToFuture
r"""银行转期货"""
THOST_FTDC_FBTUET_FromFutureToBank = _thostmduserapi.THOST_FTDC_FBTUET_FromFutureToBank
r"""期货转银行"""
THOST_FTDC_FBTUET_OpenAccount = _thostmduserapi.THOST_FTDC_FBTUET_OpenAccount
r"""开户"""
THOST_FTDC_FBTUET_CancelAccount = _thostmduserapi.THOST_FTDC_FBTUET_CancelAccount
r"""销户"""
THOST_FTDC_FBTUET_ChangeAccount = _thostmduserapi.THOST_FTDC_FBTUET_ChangeAccount
r"""变更银行账户"""
THOST_FTDC_FBTUET_RepealFromBankToFuture = _thostmduserapi.THOST_FTDC_FBTUET_RepealFromBankToFuture
r"""冲正银行转期货"""
THOST_FTDC_FBTUET_RepealFromFutureToBank = _thostmduserapi.THOST_FTDC_FBTUET_RepealFromFutureToBank
r"""冲正期货转银行"""
THOST_FTDC_FBTUET_QueryBankAccount = _thostmduserapi.THOST_FTDC_FBTUET_QueryBankAccount
r"""查询银行账户"""
THOST_FTDC_FBTUET_QueryFutureAccount = _thostmduserapi.THOST_FTDC_FBTUET_QueryFutureAccount
r"""查询期货账户"""
THOST_FTDC_FBTUET_SignOut = _thostmduserapi.THOST_FTDC_FBTUET_SignOut
r"""签退"""
THOST_FTDC_FBTUET_SyncKey = _thostmduserapi.THOST_FTDC_FBTUET_SyncKey
r"""密钥同步"""
THOST_FTDC_FBTUET_ReserveOpenAccount = _thostmduserapi.THOST_FTDC_FBTUET_ReserveOpenAccount
r"""预约开户"""
THOST_FTDC_FBTUET_CancelReserveOpenAccount = _thostmduserapi.THOST_FTDC_FBTUET_CancelReserveOpenAccount
r"""撤销预约开户"""
THOST_FTDC_FBTUET_ReserveOpenAccountConfirm = _thostmduserapi.THOST_FTDC_FBTUET_ReserveOpenAccountConfirm
r"""预约开户确认"""
THOST_FTDC_FBTUET_Other = _thostmduserapi.THOST_FTDC_FBTUET_Other
r"""其他"""
THOST_FTDC_DBOP_Insert = _thostmduserapi.THOST_FTDC_DBOP_Insert
r"""
    TFtdcDBOperationType是一个记录操作类型类型
    插入
    """
THOST_FTDC_DBOP_Update = _thostmduserapi.THOST_FTDC_DBOP_Update
r"""更新"""
THOST_FTDC_DBOP_Delete = _thostmduserapi.THOST_FTDC_DBOP_Delete
r"""删除"""
THOST_FTDC_SYNF_Yes = _thostmduserapi.THOST_FTDC_SYNF_Yes
r"""
    TFtdcSyncFlagType是一个同步标记类型
    已同步
    """
THOST_FTDC_SYNF_No = _thostmduserapi.THOST_FTDC_SYNF_No
r"""未同步"""
THOST_FTDC_SYNT_OneOffSync = _thostmduserapi.THOST_FTDC_SYNT_OneOffSync
r"""
    TFtdcSyncTypeType是一个同步类型类型
    一次同步
    """
THOST_FTDC_SYNT_TimerSync = _thostmduserapi.THOST_FTDC_SYNT_TimerSync
r"""定时同步"""
THOST_FTDC_SYNT_TimerFullSync = _thostmduserapi.THOST_FTDC_SYNT_TimerFullSync
r"""定时完全同步"""
THOST_FTDC_FBEDIR_Settlement = _thostmduserapi.THOST_FTDC_FBEDIR_Settlement
r"""
    TFtdcExDirectionType是一个换汇方向类型
    结汇
    """
THOST_FTDC_FBEDIR_Sale = _thostmduserapi.THOST_FTDC_FBEDIR_Sale
r"""售汇"""
THOST_FTDC_FBERES_Success = _thostmduserapi.THOST_FTDC_FBERES_Success
r"""
    TFtdcFBEResultFlagType是一个换汇成功标志类型
    成功
    """
THOST_FTDC_FBERES_InsufficientBalance = _thostmduserapi.THOST_FTDC_FBERES_InsufficientBalance
r"""账户余额不足"""
THOST_FTDC_FBERES_UnknownTrading = _thostmduserapi.THOST_FTDC_FBERES_UnknownTrading
r"""交易结果未知"""
THOST_FTDC_FBERES_Fail = _thostmduserapi.THOST_FTDC_FBERES_Fail
r"""失败"""
THOST_FTDC_FBEES_Normal = _thostmduserapi.THOST_FTDC_FBEES_Normal
r"""
    TFtdcFBEExchStatusType是一个换汇交易状态类型
    正常
    """
THOST_FTDC_FBEES_ReExchange = _thostmduserapi.THOST_FTDC_FBEES_ReExchange
r"""交易重发"""
THOST_FTDC_FBEFG_DataPackage = _thostmduserapi.THOST_FTDC_FBEFG_DataPackage
r"""
    TFtdcFBEFileFlagType是一个换汇文件标志类型
    数据包
    """
THOST_FTDC_FBEFG_File = _thostmduserapi.THOST_FTDC_FBEFG_File
r"""文件"""
THOST_FTDC_FBEAT_NotTrade = _thostmduserapi.THOST_FTDC_FBEAT_NotTrade
r"""
    TFtdcFBEAlreadyTradeType是一个换汇已交易标志类型
    未交易
    """
THOST_FTDC_FBEAT_Trade = _thostmduserapi.THOST_FTDC_FBEAT_Trade
r"""已交易"""
THOST_FTDC_FBEUET_SignIn = _thostmduserapi.THOST_FTDC_FBEUET_SignIn
r"""
    TFtdcFBEUserEventTypeType是一个银期换汇用户事件类型类型
    签到
    """
THOST_FTDC_FBEUET_Exchange = _thostmduserapi.THOST_FTDC_FBEUET_Exchange
r"""换汇"""
THOST_FTDC_FBEUET_ReExchange = _thostmduserapi.THOST_FTDC_FBEUET_ReExchange
r"""换汇重发"""
THOST_FTDC_FBEUET_QueryBankAccount = _thostmduserapi.THOST_FTDC_FBEUET_QueryBankAccount
r"""银行账户查询"""
THOST_FTDC_FBEUET_QueryExchDetial = _thostmduserapi.THOST_FTDC_FBEUET_QueryExchDetial
r"""换汇明细查询"""
THOST_FTDC_FBEUET_QueryExchSummary = _thostmduserapi.THOST_FTDC_FBEUET_QueryExchSummary
r"""换汇汇总查询"""
THOST_FTDC_FBEUET_QueryExchRate = _thostmduserapi.THOST_FTDC_FBEUET_QueryExchRate
r"""换汇汇率查询"""
THOST_FTDC_FBEUET_CheckBankAccount = _thostmduserapi.THOST_FTDC_FBEUET_CheckBankAccount
r"""对账文件通知"""
THOST_FTDC_FBEUET_SignOut = _thostmduserapi.THOST_FTDC_FBEUET_SignOut
r"""签退"""
THOST_FTDC_FBEUET_Other = _thostmduserapi.THOST_FTDC_FBEUET_Other
r"""其他"""
THOST_FTDC_FBERF_UnProcessed = _thostmduserapi.THOST_FTDC_FBERF_UnProcessed
r"""
    TFtdcFBEReqFlagType是一个换汇发送标志类型
    未处理
    """
THOST_FTDC_FBERF_WaitSend = _thostmduserapi.THOST_FTDC_FBERF_WaitSend
r"""等待发送"""
THOST_FTDC_FBERF_SendSuccess = _thostmduserapi.THOST_FTDC_FBERF_SendSuccess
r"""发送成功"""
THOST_FTDC_FBERF_SendFailed = _thostmduserapi.THOST_FTDC_FBERF_SendFailed
r"""发送失败"""
THOST_FTDC_FBERF_WaitReSend = _thostmduserapi.THOST_FTDC_FBERF_WaitReSend
r"""等待重发"""
THOST_FTDC_NC_NOERROR = _thostmduserapi.THOST_FTDC_NC_NOERROR
r"""
    TFtdcNotifyClassType是一个风险通知类型类型
    正常
    """
THOST_FTDC_NC_Warn = _thostmduserapi.THOST_FTDC_NC_Warn
r"""警示"""
THOST_FTDC_NC_Call = _thostmduserapi.THOST_FTDC_NC_Call
r"""追保"""
THOST_FTDC_NC_Force = _thostmduserapi.THOST_FTDC_NC_Force
r"""强平"""
THOST_FTDC_NC_CHUANCANG = _thostmduserapi.THOST_FTDC_NC_CHUANCANG
r"""穿仓"""
THOST_FTDC_NC_Exception = _thostmduserapi.THOST_FTDC_NC_Exception
r"""异常"""
THOST_FTDC_FCT_Manual = _thostmduserapi.THOST_FTDC_FCT_Manual
r"""
    TFtdcForceCloseTypeType是一个强平单类型类型
    手工强平
    """
THOST_FTDC_FCT_Single = _thostmduserapi.THOST_FTDC_FCT_Single
r"""单一投资者辅助强平"""
THOST_FTDC_FCT_Group = _thostmduserapi.THOST_FTDC_FCT_Group
r"""批量投资者辅助强平"""
THOST_FTDC_RNM_System = _thostmduserapi.THOST_FTDC_RNM_System
r"""
    TFtdcRiskNotifyMethodType是一个风险通知途径类型
    系统通知
    """
THOST_FTDC_RNM_SMS = _thostmduserapi.THOST_FTDC_RNM_SMS
r"""短信通知"""
THOST_FTDC_RNM_EMail = _thostmduserapi.THOST_FTDC_RNM_EMail
r"""邮件通知"""
THOST_FTDC_RNM_Manual = _thostmduserapi.THOST_FTDC_RNM_Manual
r"""人工通知"""
THOST_FTDC_RNS_NotGen = _thostmduserapi.THOST_FTDC_RNS_NotGen
r"""
    TFtdcRiskNotifyStatusType是一个风险通知状态类型
    未生成
    """
THOST_FTDC_RNS_Generated = _thostmduserapi.THOST_FTDC_RNS_Generated
r"""已生成未发送"""
THOST_FTDC_RNS_SendError = _thostmduserapi.THOST_FTDC_RNS_SendError
r"""发送失败"""
THOST_FTDC_RNS_SendOk = _thostmduserapi.THOST_FTDC_RNS_SendOk
r"""已发送未接收"""
THOST_FTDC_RNS_Received = _thostmduserapi.THOST_FTDC_RNS_Received
r"""已接收未确认"""
THOST_FTDC_RNS_Confirmed = _thostmduserapi.THOST_FTDC_RNS_Confirmed
r"""已确认"""
THOST_FTDC_RUE_ExportData = _thostmduserapi.THOST_FTDC_RUE_ExportData
r"""
    TFtdcRiskUserEventType是一个风控用户操作事件类型
    导出数据
    """
THOST_FTDC_COST_LastPriceAsc = _thostmduserapi.THOST_FTDC_COST_LastPriceAsc
r"""
    TFtdcConditionalOrderSortTypeType是一个条件单索引条件类型
    使用最新价升序
    """
THOST_FTDC_COST_LastPriceDesc = _thostmduserapi.THOST_FTDC_COST_LastPriceDesc
r"""使用最新价降序"""
THOST_FTDC_COST_AskPriceAsc = _thostmduserapi.THOST_FTDC_COST_AskPriceAsc
r"""使用卖价升序"""
THOST_FTDC_COST_AskPriceDesc = _thostmduserapi.THOST_FTDC_COST_AskPriceDesc
r"""使用卖价降序"""
THOST_FTDC_COST_BidPriceAsc = _thostmduserapi.THOST_FTDC_COST_BidPriceAsc
r"""使用买价升序"""
THOST_FTDC_COST_BidPriceDesc = _thostmduserapi.THOST_FTDC_COST_BidPriceDesc
r"""使用买价降序"""
THOST_FTDC_UOAST_NoSend = _thostmduserapi.THOST_FTDC_UOAST_NoSend
r"""
    TFtdcSendTypeType是一个报送状态类型
    未发送
    """
THOST_FTDC_UOAST_Sended = _thostmduserapi.THOST_FTDC_UOAST_Sended
r"""已发送"""
THOST_FTDC_UOAST_Generated = _thostmduserapi.THOST_FTDC_UOAST_Generated
r"""已生成"""
THOST_FTDC_UOAST_SendFail = _thostmduserapi.THOST_FTDC_UOAST_SendFail
r"""报送失败"""
THOST_FTDC_UOAST_Success = _thostmduserapi.THOST_FTDC_UOAST_Success
r"""接收成功"""
THOST_FTDC_UOAST_Fail = _thostmduserapi.THOST_FTDC_UOAST_Fail
r"""接收失败"""
THOST_FTDC_UOAST_Cancel = _thostmduserapi.THOST_FTDC_UOAST_Cancel
r"""取消报送"""
THOST_FTDC_UOACS_NoApply = _thostmduserapi.THOST_FTDC_UOACS_NoApply
r"""
    TFtdcClientIDStatusType是一个交易编码状态类型
    未申请
    """
THOST_FTDC_UOACS_Submited = _thostmduserapi.THOST_FTDC_UOACS_Submited
r"""已提交申请"""
THOST_FTDC_UOACS_Sended = _thostmduserapi.THOST_FTDC_UOACS_Sended
r"""已发送申请"""
THOST_FTDC_UOACS_Success = _thostmduserapi.THOST_FTDC_UOACS_Success
r"""完成"""
THOST_FTDC_UOACS_Refuse = _thostmduserapi.THOST_FTDC_UOACS_Refuse
r"""拒绝"""
THOST_FTDC_UOACS_Cancel = _thostmduserapi.THOST_FTDC_UOACS_Cancel
r"""已撤销编码"""
THOST_FTDC_QT_Radio = _thostmduserapi.THOST_FTDC_QT_Radio
r"""
    TFtdcQuestionTypeType是一个特有信息类型类型
    单选
    """
THOST_FTDC_QT_Option = _thostmduserapi.THOST_FTDC_QT_Option
r"""多选"""
THOST_FTDC_QT_Blank = _thostmduserapi.THOST_FTDC_QT_Blank
r"""填空"""
THOST_FTDC_BT_Request = _thostmduserapi.THOST_FTDC_BT_Request
r"""
    TFtdcBusinessTypeType是一个业务类型类型
    请求
    """
THOST_FTDC_BT_Response = _thostmduserapi.THOST_FTDC_BT_Response
r"""应答"""
THOST_FTDC_BT_Notice = _thostmduserapi.THOST_FTDC_BT_Notice
r"""通知"""
THOST_FTDC_CRC_Success = _thostmduserapi.THOST_FTDC_CRC_Success
r"""
    TFtdcCfmmcReturnCodeType是一个监控中心返回码类型
    成功
    """
THOST_FTDC_CRC_Working = _thostmduserapi.THOST_FTDC_CRC_Working
r"""该客户已经有流程在处理中"""
THOST_FTDC_CRC_InfoFail = _thostmduserapi.THOST_FTDC_CRC_InfoFail
r"""监控中客户资料检查失败"""
THOST_FTDC_CRC_IDCardFail = _thostmduserapi.THOST_FTDC_CRC_IDCardFail
r"""监控中实名制检查失败"""
THOST_FTDC_CRC_OtherFail = _thostmduserapi.THOST_FTDC_CRC_OtherFail
r"""其他错误"""
THOST_FTDC_CfMMCCT_All = _thostmduserapi.THOST_FTDC_CfMMCCT_All
r"""
    TFtdcClientTypeType是一个客户类型类型
    所有
    """
THOST_FTDC_CfMMCCT_Person = _thostmduserapi.THOST_FTDC_CfMMCCT_Person
r"""个人"""
THOST_FTDC_CfMMCCT_Company = _thostmduserapi.THOST_FTDC_CfMMCCT_Company
r"""单位"""
THOST_FTDC_CfMMCCT_Other = _thostmduserapi.THOST_FTDC_CfMMCCT_Other
r"""其他"""
THOST_FTDC_CfMMCCT_SpecialOrgan = _thostmduserapi.THOST_FTDC_CfMMCCT_SpecialOrgan
r"""特殊法人"""
THOST_FTDC_CfMMCCT_Asset = _thostmduserapi.THOST_FTDC_CfMMCCT_Asset
r"""资管户"""
THOST_FTDC_EIDT_SHFE = _thostmduserapi.THOST_FTDC_EIDT_SHFE
r"""
    TFtdcExchangeIDTypeType是一个交易所编号类型
    上海期货交易所
    """
THOST_FTDC_EIDT_CZCE = _thostmduserapi.THOST_FTDC_EIDT_CZCE
r"""郑州商品交易所"""
THOST_FTDC_EIDT_DCE = _thostmduserapi.THOST_FTDC_EIDT_DCE
r"""大连商品交易所"""
THOST_FTDC_EIDT_CFFEX = _thostmduserapi.THOST_FTDC_EIDT_CFFEX
r"""中国金融期货交易所"""
THOST_FTDC_EIDT_INE = _thostmduserapi.THOST_FTDC_EIDT_INE
r"""上海国际能源交易中心股份有限公司"""
THOST_FTDC_ECIDT_Hedge = _thostmduserapi.THOST_FTDC_ECIDT_Hedge
r"""
    TFtdcExClientIDTypeType是一个交易编码类型类型
    套保
    """
THOST_FTDC_ECIDT_Arbitrage = _thostmduserapi.THOST_FTDC_ECIDT_Arbitrage
r"""套利"""
THOST_FTDC_ECIDT_Speculation = _thostmduserapi.THOST_FTDC_ECIDT_Speculation
r"""投机"""
THOST_FTDC_UF_NoUpdate = _thostmduserapi.THOST_FTDC_UF_NoUpdate
r"""
    TFtdcUpdateFlagType是一个更新状态类型
    未更新
    """
THOST_FTDC_UF_Success = _thostmduserapi.THOST_FTDC_UF_Success
r"""更新全部信息成功"""
THOST_FTDC_UF_Fail = _thostmduserapi.THOST_FTDC_UF_Fail
r"""更新全部信息失败"""
THOST_FTDC_UF_TCSuccess = _thostmduserapi.THOST_FTDC_UF_TCSuccess
r"""更新交易编码成功"""
THOST_FTDC_UF_TCFail = _thostmduserapi.THOST_FTDC_UF_TCFail
r"""更新交易编码失败"""
THOST_FTDC_UF_Cancel = _thostmduserapi.THOST_FTDC_UF_Cancel
r"""已丢弃"""
THOST_FTDC_AOID_OpenInvestor = _thostmduserapi.THOST_FTDC_AOID_OpenInvestor
r"""
    TFtdcApplyOperateIDType是一个申请动作类型
    开户
    """
THOST_FTDC_AOID_ModifyIDCard = _thostmduserapi.THOST_FTDC_AOID_ModifyIDCard
r"""修改身份信息"""
THOST_FTDC_AOID_ModifyNoIDCard = _thostmduserapi.THOST_FTDC_AOID_ModifyNoIDCard
r"""修改一般信息"""
THOST_FTDC_AOID_ApplyTradingCode = _thostmduserapi.THOST_FTDC_AOID_ApplyTradingCode
r"""申请交易编码"""
THOST_FTDC_AOID_CancelTradingCode = _thostmduserapi.THOST_FTDC_AOID_CancelTradingCode
r"""撤销交易编码"""
THOST_FTDC_AOID_CancelInvestor = _thostmduserapi.THOST_FTDC_AOID_CancelInvestor
r"""销户"""
THOST_FTDC_AOID_FreezeAccount = _thostmduserapi.THOST_FTDC_AOID_FreezeAccount
r"""账户休眠"""
THOST_FTDC_AOID_ActiveFreezeAccount = _thostmduserapi.THOST_FTDC_AOID_ActiveFreezeAccount
r"""激活休眠账户"""
THOST_FTDC_ASID_NoComplete = _thostmduserapi.THOST_FTDC_ASID_NoComplete
r"""
    TFtdcApplyStatusIDType是一个申请状态类型
    未补全
    """
THOST_FTDC_ASID_Submited = _thostmduserapi.THOST_FTDC_ASID_Submited
r"""已提交"""
THOST_FTDC_ASID_Checked = _thostmduserapi.THOST_FTDC_ASID_Checked
r"""已审核"""
THOST_FTDC_ASID_Refused = _thostmduserapi.THOST_FTDC_ASID_Refused
r"""已拒绝"""
THOST_FTDC_ASID_Deleted = _thostmduserapi.THOST_FTDC_ASID_Deleted
r"""已删除"""
THOST_FTDC_UOASM_ByAPI = _thostmduserapi.THOST_FTDC_UOASM_ByAPI
r"""
    TFtdcSendMethodType是一个发送方式类型
    文件发送
    """
THOST_FTDC_UOASM_ByFile = _thostmduserapi.THOST_FTDC_UOASM_ByFile
r"""电子发送"""
THOST_FTDC_EvM_ADD = _thostmduserapi.THOST_FTDC_EvM_ADD
r"""
    TFtdcEventModeType是一个操作方法类型
    增加
    """
THOST_FTDC_EvM_UPDATE = _thostmduserapi.THOST_FTDC_EvM_UPDATE
r"""修改"""
THOST_FTDC_EvM_DELETE = _thostmduserapi.THOST_FTDC_EvM_DELETE
r"""删除"""
THOST_FTDC_EvM_CHECK = _thostmduserapi.THOST_FTDC_EvM_CHECK
r"""复核"""
THOST_FTDC_EvM_COPY = _thostmduserapi.THOST_FTDC_EvM_COPY
r"""复制"""
THOST_FTDC_EvM_CANCEL = _thostmduserapi.THOST_FTDC_EvM_CANCEL
r"""注销"""
THOST_FTDC_EvM_Reverse = _thostmduserapi.THOST_FTDC_EvM_Reverse
r"""冲销"""
THOST_FTDC_UOAA_ASR = _thostmduserapi.THOST_FTDC_UOAA_ASR
r"""
    TFtdcUOAAutoSendType是一个统一开户申请自动发送类型
    自动发送并接收
    """
THOST_FTDC_UOAA_ASNR = _thostmduserapi.THOST_FTDC_UOAA_ASNR
r"""自动发送，不自动接收"""
THOST_FTDC_UOAA_NSAR = _thostmduserapi.THOST_FTDC_UOAA_NSAR
r"""不自动发送，自动接收"""
THOST_FTDC_UOAA_NSR = _thostmduserapi.THOST_FTDC_UOAA_NSR
r"""不自动发送，也不自动接收"""
THOST_FTDC_EvM_InvestorGroupFlow = _thostmduserapi.THOST_FTDC_EvM_InvestorGroupFlow
r"""
    TFtdcFlowIDType是一个流程ID类型
    投资者对应投资者组设置
    """
THOST_FTDC_EvM_InvestorRate = _thostmduserapi.THOST_FTDC_EvM_InvestorRate
r"""投资者手续费率设置"""
THOST_FTDC_EvM_InvestorCommRateModel = _thostmduserapi.THOST_FTDC_EvM_InvestorCommRateModel
r"""投资者手续费率模板关系设置"""
THOST_FTDC_CL_Zero = _thostmduserapi.THOST_FTDC_CL_Zero
r"""
    TFtdcCheckLevelType是一个复核级别类型
    零级复核
    """
THOST_FTDC_CL_One = _thostmduserapi.THOST_FTDC_CL_One
r"""一级复核"""
THOST_FTDC_CL_Two = _thostmduserapi.THOST_FTDC_CL_Two
r"""二级复核"""
THOST_FTDC_CHS_Init = _thostmduserapi.THOST_FTDC_CHS_Init
r"""
    TFtdcCheckStatusType是一个复核级别类型
    未复核
    """
THOST_FTDC_CHS_Checking = _thostmduserapi.THOST_FTDC_CHS_Checking
r"""复核中"""
THOST_FTDC_CHS_Checked = _thostmduserapi.THOST_FTDC_CHS_Checked
r"""已复核"""
THOST_FTDC_CHS_Refuse = _thostmduserapi.THOST_FTDC_CHS_Refuse
r"""拒绝"""
THOST_FTDC_CHS_Cancel = _thostmduserapi.THOST_FTDC_CHS_Cancel
r"""作废"""
THOST_FTDC_CHU_Unused = _thostmduserapi.THOST_FTDC_CHU_Unused
r"""
    TFtdcUsedStatusType是一个生效状态类型
    未生效
    """
THOST_FTDC_CHU_Used = _thostmduserapi.THOST_FTDC_CHU_Used
r"""已生效"""
THOST_FTDC_CHU_Fail = _thostmduserapi.THOST_FTDC_CHU_Fail
r"""生效失败"""
THOST_FTDC_BAO_ByAccProperty = _thostmduserapi.THOST_FTDC_BAO_ByAccProperty
r"""
    TFtdcBankAcountOriginType是一个账户来源类型
    手工录入
    """
THOST_FTDC_BAO_ByFBTransfer = _thostmduserapi.THOST_FTDC_BAO_ByFBTransfer
r"""银期转账"""
THOST_FTDC_MBTS_ByInstrument = _thostmduserapi.THOST_FTDC_MBTS_ByInstrument
r"""
    TFtdcMonthBillTradeSumType是一个结算单月报成交汇总方式类型
    同日同合约
    """
THOST_FTDC_MBTS_ByDayInsPrc = _thostmduserapi.THOST_FTDC_MBTS_ByDayInsPrc
r"""同日同合约同价格"""
THOST_FTDC_MBTS_ByDayIns = _thostmduserapi.THOST_FTDC_MBTS_ByDayIns
r"""同合约"""
THOST_FTDC_OTP_NONE = _thostmduserapi.THOST_FTDC_OTP_NONE
r"""
    TFtdcOTPTypeType是一个动态令牌类型类型
    无动态令牌
    """
THOST_FTDC_OTP_TOTP = _thostmduserapi.THOST_FTDC_OTP_TOTP
r"""时间令牌"""
THOST_FTDC_OTPS_Unused = _thostmduserapi.THOST_FTDC_OTPS_Unused
r"""
    TFtdcOTPStatusType是一个动态令牌状态类型
    未使用
    """
THOST_FTDC_OTPS_Used = _thostmduserapi.THOST_FTDC_OTPS_Used
r"""已使用"""
THOST_FTDC_OTPS_Disuse = _thostmduserapi.THOST_FTDC_OTPS_Disuse
r"""注销"""
THOST_FTDC_BUT_Investor = _thostmduserapi.THOST_FTDC_BUT_Investor
r"""
    TFtdcBrokerUserTypeType是一个经济公司用户类型类型
    投资者
    """
THOST_FTDC_BUT_BrokerUser = _thostmduserapi.THOST_FTDC_BUT_BrokerUser
r"""操作员"""
THOST_FTDC_FUTT_Commodity = _thostmduserapi.THOST_FTDC_FUTT_Commodity
r"""
    TFtdcFutureTypeType是一个期货类型类型
    商品期货
    """
THOST_FTDC_FUTT_Financial = _thostmduserapi.THOST_FTDC_FUTT_Financial
r"""金融期货"""
THOST_FTDC_FET_Restriction = _thostmduserapi.THOST_FTDC_FET_Restriction
r"""
    TFtdcFundEventTypeType是一个资金管理操作类型类型
    转账限额
    """
THOST_FTDC_FET_TodayRestriction = _thostmduserapi.THOST_FTDC_FET_TodayRestriction
r"""当日转账限额"""
THOST_FTDC_FET_Transfer = _thostmduserapi.THOST_FTDC_FET_Transfer
r"""期商流水"""
THOST_FTDC_FET_Credit = _thostmduserapi.THOST_FTDC_FET_Credit
r"""资金冻结"""
THOST_FTDC_FET_InvestorWithdrawAlm = _thostmduserapi.THOST_FTDC_FET_InvestorWithdrawAlm
r"""投资者可提资金比例"""
THOST_FTDC_FET_BankRestriction = _thostmduserapi.THOST_FTDC_FET_BankRestriction
r"""单个银行帐户转账限额"""
THOST_FTDC_FET_Accountregister = _thostmduserapi.THOST_FTDC_FET_Accountregister
r"""银期签约账户"""
THOST_FTDC_FET_ExchangeFundIO = _thostmduserapi.THOST_FTDC_FET_ExchangeFundIO
r"""交易所出入金"""
THOST_FTDC_FET_InvestorFundIO = _thostmduserapi.THOST_FTDC_FET_InvestorFundIO
r"""投资者出入金"""
THOST_FTDC_AST_FBTransfer = _thostmduserapi.THOST_FTDC_AST_FBTransfer
r"""
    TFtdcAccountSourceTypeType是一个资金账户来源类型
    银期同步
    """
THOST_FTDC_AST_ManualEntry = _thostmduserapi.THOST_FTDC_AST_ManualEntry
r"""手工录入"""
THOST_FTDC_CST_UnifyAccount = _thostmduserapi.THOST_FTDC_CST_UnifyAccount
r"""
    TFtdcCodeSourceTypeType是一个交易编码来源类型
    统一开户(已规范)
    """
THOST_FTDC_CST_ManualEntry = _thostmduserapi.THOST_FTDC_CST_ManualEntry
r"""手工录入(未规范)"""
THOST_FTDC_UR_All = _thostmduserapi.THOST_FTDC_UR_All
r"""
    TFtdcUserRangeType是一个操作员范围类型
    所有
    """
THOST_FTDC_UR_Single = _thostmduserapi.THOST_FTDC_UR_Single
r"""单一操作员"""
THOST_FTDC_BG_Investor = _thostmduserapi.THOST_FTDC_BG_Investor
r"""
    TFtdcByGroupType是一个交易统计表按客户统计方式类型
    按投资者统计
    """
THOST_FTDC_BG_Group = _thostmduserapi.THOST_FTDC_BG_Group
r"""按类统计"""
THOST_FTDC_TSSM_Instrument = _thostmduserapi.THOST_FTDC_TSSM_Instrument
r"""
    TFtdcTradeSumStatModeType是一个交易统计表按范围统计方式类型
    按合约统计
    """
THOST_FTDC_TSSM_Product = _thostmduserapi.THOST_FTDC_TSSM_Product
r"""按产品统计"""
THOST_FTDC_TSSM_Exchange = _thostmduserapi.THOST_FTDC_TSSM_Exchange
r"""按交易所统计"""
THOST_FTDC_ESM_Relative = _thostmduserapi.THOST_FTDC_ESM_Relative
r"""
    TFtdcExprSetModeType是一个日期表达式设置类型类型
    相对已有规则设置
    """
THOST_FTDC_ESM_Typical = _thostmduserapi.THOST_FTDC_ESM_Typical
r"""典型设置"""
THOST_FTDC_RIR_All = _thostmduserapi.THOST_FTDC_RIR_All
r"""
    TFtdcRateInvestorRangeType是一个投资者范围类型
    公司标准
    """
THOST_FTDC_RIR_Model = _thostmduserapi.THOST_FTDC_RIR_Model
r"""模板"""
THOST_FTDC_RIR_Single = _thostmduserapi.THOST_FTDC_RIR_Single
r"""单一投资者"""
THOST_FTDC_SDS_Initialize = _thostmduserapi.THOST_FTDC_SDS_Initialize
r"""
    TFtdcSyncDataStatusType是一个主次用系统数据同步状态类型
    未同步
    """
THOST_FTDC_SDS_Settlementing = _thostmduserapi.THOST_FTDC_SDS_Settlementing
r"""同步中"""
THOST_FTDC_SDS_Settlemented = _thostmduserapi.THOST_FTDC_SDS_Settlemented
r"""已同步"""
THOST_FTDC_TSRC_NORMAL = _thostmduserapi.THOST_FTDC_TSRC_NORMAL
r"""
    TFtdcTradeSourceType是一个成交来源类型
    来自交易所普通回报
    """
THOST_FTDC_TSRC_QUERY = _thostmduserapi.THOST_FTDC_TSRC_QUERY
r"""来自查询"""
THOST_FTDC_FSM_Product = _thostmduserapi.THOST_FTDC_FSM_Product
r"""
    TFtdcFlexStatModeType是一个产品合约统计方式类型
    产品统计
    """
THOST_FTDC_FSM_Exchange = _thostmduserapi.THOST_FTDC_FSM_Exchange
r"""交易所统计"""
THOST_FTDC_FSM_All = _thostmduserapi.THOST_FTDC_FSM_All
r"""统计所有"""
THOST_FTDC_BIR_Property = _thostmduserapi.THOST_FTDC_BIR_Property
r"""
    TFtdcByInvestorRangeType是一个投资者范围统计方式类型
    属性统计
    """
THOST_FTDC_BIR_All = _thostmduserapi.THOST_FTDC_BIR_All
r"""统计所有"""
THOST_FTDC_PIR_All = _thostmduserapi.THOST_FTDC_PIR_All
r"""
    TFtdcPropertyInvestorRangeType是一个投资者范围类型
    所有
    """
THOST_FTDC_PIR_Property = _thostmduserapi.THOST_FTDC_PIR_Property
r"""投资者属性"""
THOST_FTDC_PIR_Single = _thostmduserapi.THOST_FTDC_PIR_Single
r"""单一投资者"""
THOST_FTDC_FIS_NoCreate = _thostmduserapi.THOST_FTDC_FIS_NoCreate
r"""
    TFtdcFileStatusType是一个文件状态类型
    未生成
    """
THOST_FTDC_FIS_Created = _thostmduserapi.THOST_FTDC_FIS_Created
r"""已生成"""
THOST_FTDC_FIS_Failed = _thostmduserapi.THOST_FTDC_FIS_Failed
r"""生成失败"""
THOST_FTDC_FGS_FileTransmit = _thostmduserapi.THOST_FTDC_FGS_FileTransmit
r"""
    TFtdcFileGenStyleType是一个文件生成方式类型
    下发
    """
THOST_FTDC_FGS_FileGen = _thostmduserapi.THOST_FTDC_FGS_FileGen
r"""生成"""
THOST_FTDC_SoM_Add = _thostmduserapi.THOST_FTDC_SoM_Add
r"""
    TFtdcSysOperModeType是一个系统日志操作方法类型
    增加
    """
THOST_FTDC_SoM_Update = _thostmduserapi.THOST_FTDC_SoM_Update
r"""修改"""
THOST_FTDC_SoM_Delete = _thostmduserapi.THOST_FTDC_SoM_Delete
r"""删除"""
THOST_FTDC_SoM_Copy = _thostmduserapi.THOST_FTDC_SoM_Copy
r"""复制"""
THOST_FTDC_SoM_AcTive = _thostmduserapi.THOST_FTDC_SoM_AcTive
r"""激活"""
THOST_FTDC_SoM_CanCel = _thostmduserapi.THOST_FTDC_SoM_CanCel
r"""注销"""
THOST_FTDC_SoM_ReSet = _thostmduserapi.THOST_FTDC_SoM_ReSet
r"""重置"""
THOST_FTDC_SoT_UpdatePassword = _thostmduserapi.THOST_FTDC_SoT_UpdatePassword
r"""
    TFtdcSysOperTypeType是一个系统日志操作类型类型
    修改操作员密码
    """
THOST_FTDC_SoT_UserDepartment = _thostmduserapi.THOST_FTDC_SoT_UserDepartment
r"""操作员组织架构关系"""
THOST_FTDC_SoT_RoleManager = _thostmduserapi.THOST_FTDC_SoT_RoleManager
r"""角色管理"""
THOST_FTDC_SoT_RoleFunction = _thostmduserapi.THOST_FTDC_SoT_RoleFunction
r"""角色功能设置"""
THOST_FTDC_SoT_BaseParam = _thostmduserapi.THOST_FTDC_SoT_BaseParam
r"""基础参数设置"""
THOST_FTDC_SoT_SetUserID = _thostmduserapi.THOST_FTDC_SoT_SetUserID
r"""设置操作员"""
THOST_FTDC_SoT_SetUserRole = _thostmduserapi.THOST_FTDC_SoT_SetUserRole
r"""用户角色设置"""
THOST_FTDC_SoT_UserIpRestriction = _thostmduserapi.THOST_FTDC_SoT_UserIpRestriction
r"""用户IP限制"""
THOST_FTDC_SoT_DepartmentManager = _thostmduserapi.THOST_FTDC_SoT_DepartmentManager
r"""组织架构管理"""
THOST_FTDC_SoT_DepartmentCopy = _thostmduserapi.THOST_FTDC_SoT_DepartmentCopy
r"""组织架构向查询分类复制"""
THOST_FTDC_SoT_Tradingcode = _thostmduserapi.THOST_FTDC_SoT_Tradingcode
r"""交易编码管理"""
THOST_FTDC_SoT_InvestorStatus = _thostmduserapi.THOST_FTDC_SoT_InvestorStatus
r"""投资者状态维护"""
THOST_FTDC_SoT_InvestorAuthority = _thostmduserapi.THOST_FTDC_SoT_InvestorAuthority
r"""投资者权限管理"""
THOST_FTDC_SoT_PropertySet = _thostmduserapi.THOST_FTDC_SoT_PropertySet
r"""属性设置"""
THOST_FTDC_SoT_ReSetInvestorPasswd = _thostmduserapi.THOST_FTDC_SoT_ReSetInvestorPasswd
r"""重置投资者密码"""
THOST_FTDC_SoT_InvestorPersonalityInfo = _thostmduserapi.THOST_FTDC_SoT_InvestorPersonalityInfo
r"""投资者个性信息维护"""
THOST_FTDC_CSRCQ_Current = _thostmduserapi.THOST_FTDC_CSRCQ_Current
r"""
    TFtdcCSRCDataQueyTypeType是一个上报数据查询类型类型
    查询当前交易日报送的数据
    """
THOST_FTDC_CSRCQ_History = _thostmduserapi.THOST_FTDC_CSRCQ_History
r"""查询历史报送的代理经纪公司的数据"""
THOST_FTDC_FRS_Normal = _thostmduserapi.THOST_FTDC_FRS_Normal
r"""
    TFtdcFreezeStatusType是一个休眠状态类型
    活跃
    """
THOST_FTDC_FRS_Freeze = _thostmduserapi.THOST_FTDC_FRS_Freeze
r"""休眠"""
THOST_FTDC_STST_Standard = _thostmduserapi.THOST_FTDC_STST_Standard
r"""
    TFtdcStandardStatusType是一个规范状态类型
    已规范
    """
THOST_FTDC_STST_NonStandard = _thostmduserapi.THOST_FTDC_STST_NonStandard
r"""未规范"""
THOST_FTDC_RPT_Freeze = _thostmduserapi.THOST_FTDC_RPT_Freeze
r"""
    TFtdcRightParamTypeType是一个配置类型类型
    休眠户
    """
THOST_FTDC_RPT_FreezeActive = _thostmduserapi.THOST_FTDC_RPT_FreezeActive
r"""激活休眠户"""
THOST_FTDC_RPT_OpenLimit = _thostmduserapi.THOST_FTDC_RPT_OpenLimit
r"""开仓权限限制"""
THOST_FTDC_RPT_RelieveOpenLimit = _thostmduserapi.THOST_FTDC_RPT_RelieveOpenLimit
r"""解除开仓权限限制"""
THOST_FTDC_AMLDS_Normal = _thostmduserapi.THOST_FTDC_AMLDS_Normal
r"""
    TFtdcDataStatusType是一个反洗钱审核表数据状态类型
    正常
    """
THOST_FTDC_AMLDS_Deleted = _thostmduserapi.THOST_FTDC_AMLDS_Deleted
r"""已删除"""
THOST_FTDC_AMLCHS_Init = _thostmduserapi.THOST_FTDC_AMLCHS_Init
r"""
    TFtdcAMLCheckStatusType是一个审核状态类型
    未复核
    """
THOST_FTDC_AMLCHS_Checking = _thostmduserapi.THOST_FTDC_AMLCHS_Checking
r"""复核中"""
THOST_FTDC_AMLCHS_Checked = _thostmduserapi.THOST_FTDC_AMLCHS_Checked
r"""已复核"""
THOST_FTDC_AMLCHS_RefuseReport = _thostmduserapi.THOST_FTDC_AMLCHS_RefuseReport
r"""拒绝上报"""
THOST_FTDC_AMLDT_DrawDay = _thostmduserapi.THOST_FTDC_AMLDT_DrawDay
r"""
    TFtdcAmlDateTypeType是一个日期类型类型
    检查日期
    """
THOST_FTDC_AMLDT_TouchDay = _thostmduserapi.THOST_FTDC_AMLDT_TouchDay
r"""发生日期"""
THOST_FTDC_AMLCL_CheckLevel0 = _thostmduserapi.THOST_FTDC_AMLCL_CheckLevel0
r"""
    TFtdcAmlCheckLevelType是一个审核级别类型
    零级审核
    """
THOST_FTDC_AMLCL_CheckLevel1 = _thostmduserapi.THOST_FTDC_AMLCL_CheckLevel1
r"""一级审核"""
THOST_FTDC_AMLCL_CheckLevel2 = _thostmduserapi.THOST_FTDC_AMLCL_CheckLevel2
r"""二级审核"""
THOST_FTDC_AMLCL_CheckLevel3 = _thostmduserapi.THOST_FTDC_AMLCL_CheckLevel3
r"""三级审核"""
THOST_FTDC_EFT_CSV = _thostmduserapi.THOST_FTDC_EFT_CSV
r"""
    TFtdcExportFileTypeType是一个导出文件类型类型
    CSV
    """
THOST_FTDC_EFT_EXCEL = _thostmduserapi.THOST_FTDC_EFT_EXCEL
r"""Excel"""
THOST_FTDC_EFT_DBF = _thostmduserapi.THOST_FTDC_EFT_DBF
r"""DBF"""
THOST_FTDC_SMT_Before = _thostmduserapi.THOST_FTDC_SMT_Before
r"""
    TFtdcSettleManagerTypeType是一个结算配置类型类型
    结算前准备
    """
THOST_FTDC_SMT_Settlement = _thostmduserapi.THOST_FTDC_SMT_Settlement
r"""结算"""
THOST_FTDC_SMT_After = _thostmduserapi.THOST_FTDC_SMT_After
r"""结算后核对"""
THOST_FTDC_SMT_Settlemented = _thostmduserapi.THOST_FTDC_SMT_Settlemented
r"""结算后处理"""
THOST_FTDC_SML_Must = _thostmduserapi.THOST_FTDC_SML_Must
r"""
    TFtdcSettleManagerLevelType是一个结算配置等级类型
    必要
    """
THOST_FTDC_SML_Alarm = _thostmduserapi.THOST_FTDC_SML_Alarm
r"""警告"""
THOST_FTDC_SML_Prompt = _thostmduserapi.THOST_FTDC_SML_Prompt
r"""提示"""
THOST_FTDC_SML_Ignore = _thostmduserapi.THOST_FTDC_SML_Ignore
r"""不检查"""
THOST_FTDC_SMG_Exhcange = _thostmduserapi.THOST_FTDC_SMG_Exhcange
r"""
    TFtdcSettleManagerGroupType是一个模块分组类型
    交易所核对
    """
THOST_FTDC_SMG_ASP = _thostmduserapi.THOST_FTDC_SMG_ASP
r"""内部核对"""
THOST_FTDC_SMG_CSRC = _thostmduserapi.THOST_FTDC_SMG_CSRC
r"""上报数据核对"""
THOST_FTDC_LUT_Repeatable = _thostmduserapi.THOST_FTDC_LUT_Repeatable
r"""
    TFtdcLimitUseTypeType是一个保值额度使用类型类型
    可重复使用
    """
THOST_FTDC_LUT_Unrepeatable = _thostmduserapi.THOST_FTDC_LUT_Unrepeatable
r"""不可重复使用"""
THOST_FTDC_DAR_Settle = _thostmduserapi.THOST_FTDC_DAR_Settle
r"""
    TFtdcDataResourceType是一个数据来源类型
    本系统
    """
THOST_FTDC_DAR_Exchange = _thostmduserapi.THOST_FTDC_DAR_Exchange
r"""交易所"""
THOST_FTDC_DAR_CSRC = _thostmduserapi.THOST_FTDC_DAR_CSRC
r"""报送数据"""
THOST_FTDC_MGT_ExchMarginRate = _thostmduserapi.THOST_FTDC_MGT_ExchMarginRate
r"""
    TFtdcMarginTypeType是一个保证金类型类型
    交易所保证金率
    """
THOST_FTDC_MGT_InstrMarginRate = _thostmduserapi.THOST_FTDC_MGT_InstrMarginRate
r"""投资者保证金率"""
THOST_FTDC_MGT_InstrMarginRateTrade = _thostmduserapi.THOST_FTDC_MGT_InstrMarginRateTrade
r"""投资者交易保证金率"""
THOST_FTDC_ACT_Intraday = _thostmduserapi.THOST_FTDC_ACT_Intraday
r"""
    TFtdcActiveTypeType是一个生效类型类型
    仅当日生效
    """
THOST_FTDC_ACT_Long = _thostmduserapi.THOST_FTDC_ACT_Long
r"""长期生效"""
THOST_FTDC_MRT_Exchange = _thostmduserapi.THOST_FTDC_MRT_Exchange
r"""
    TFtdcMarginRateTypeType是一个冲突保证金率类型类型
    交易所保证金率
    """
THOST_FTDC_MRT_Investor = _thostmduserapi.THOST_FTDC_MRT_Investor
r"""投资者保证金率"""
THOST_FTDC_MRT_InvestorTrade = _thostmduserapi.THOST_FTDC_MRT_InvestorTrade
r"""投资者交易保证金率"""
THOST_FTDC_BUS_UnBak = _thostmduserapi.THOST_FTDC_BUS_UnBak
r"""
    TFtdcBackUpStatusType是一个备份数据状态类型
    未生成备份数据
    """
THOST_FTDC_BUS_BakUp = _thostmduserapi.THOST_FTDC_BUS_BakUp
r"""备份数据生成中"""
THOST_FTDC_BUS_BakUped = _thostmduserapi.THOST_FTDC_BUS_BakUped
r"""已生成备份数据"""
THOST_FTDC_BUS_BakFail = _thostmduserapi.THOST_FTDC_BUS_BakFail
r"""备份数据失败"""
THOST_FTDC_SIS_UnInitialize = _thostmduserapi.THOST_FTDC_SIS_UnInitialize
r"""
    TFtdcInitSettlementType是一个结算初始化状态类型
    结算初始化未开始
    """
THOST_FTDC_SIS_Initialize = _thostmduserapi.THOST_FTDC_SIS_Initialize
r"""结算初始化中"""
THOST_FTDC_SIS_Initialized = _thostmduserapi.THOST_FTDC_SIS_Initialized
r"""结算初始化完成"""
THOST_FTDC_SRS_NoCreate = _thostmduserapi.THOST_FTDC_SRS_NoCreate
r"""
    TFtdcReportStatusType是一个报表数据生成状态类型
    未生成报表数据
    """
THOST_FTDC_SRS_Create = _thostmduserapi.THOST_FTDC_SRS_Create
r"""报表数据生成中"""
THOST_FTDC_SRS_Created = _thostmduserapi.THOST_FTDC_SRS_Created
r"""已生成报表数据"""
THOST_FTDC_SRS_CreateFail = _thostmduserapi.THOST_FTDC_SRS_CreateFail
r"""生成报表数据失败"""
THOST_FTDC_SSS_UnSaveData = _thostmduserapi.THOST_FTDC_SSS_UnSaveData
r"""
    TFtdcSaveStatusType是一个数据归档状态类型
    归档未完成
    """
THOST_FTDC_SSS_SaveDatad = _thostmduserapi.THOST_FTDC_SSS_SaveDatad
r"""归档完成"""
THOST_FTDC_SAS_UnArchived = _thostmduserapi.THOST_FTDC_SAS_UnArchived
r"""
    TFtdcSettArchiveStatusType是一个结算确认数据归档状态类型
    未归档数据
    """
THOST_FTDC_SAS_Archiving = _thostmduserapi.THOST_FTDC_SAS_Archiving
r"""数据归档中"""
THOST_FTDC_SAS_Archived = _thostmduserapi.THOST_FTDC_SAS_Archived
r"""已归档数据"""
THOST_FTDC_SAS_ArchiveFail = _thostmduserapi.THOST_FTDC_SAS_ArchiveFail
r"""归档数据失败"""
THOST_FTDC_CTPT_Unkown = _thostmduserapi.THOST_FTDC_CTPT_Unkown
r"""
    TFtdcCTPTypeType是一个CTP交易系统类型类型
    未知类型
    """
THOST_FTDC_CTPT_MainCenter = _thostmduserapi.THOST_FTDC_CTPT_MainCenter
r"""主中心"""
THOST_FTDC_CTPT_BackUp = _thostmduserapi.THOST_FTDC_CTPT_BackUp
r"""备中心"""
THOST_FTDC_CDT_Normal = _thostmduserapi.THOST_FTDC_CDT_Normal
r"""
    TFtdcCloseDealTypeType是一个平仓处理类型类型
    正常
    """
THOST_FTDC_CDT_SpecFirst = _thostmduserapi.THOST_FTDC_CDT_SpecFirst
r"""投机平仓优先"""
THOST_FTDC_MFUR_None = _thostmduserapi.THOST_FTDC_MFUR_None
r"""
    TFtdcMortgageFundUseRangeType是一个货币质押资金可用范围类型
    不能使用
    """
THOST_FTDC_MFUR_Margin = _thostmduserapi.THOST_FTDC_MFUR_Margin
r"""用于保证金"""
THOST_FTDC_MFUR_All = _thostmduserapi.THOST_FTDC_MFUR_All
r"""用于手续费、盈亏、保证金"""
THOST_FTDC_MFUR_CNY3 = _thostmduserapi.THOST_FTDC_MFUR_CNY3
r"""人民币方案3"""
THOST_FTDC_SPT_CzceHedge = _thostmduserapi.THOST_FTDC_SPT_CzceHedge
r"""
    TFtdcSpecProductTypeType是一个特殊产品类型类型
    郑商所套保产品
    """
THOST_FTDC_SPT_IneForeignCurrency = _thostmduserapi.THOST_FTDC_SPT_IneForeignCurrency
r"""货币质押产品"""
THOST_FTDC_SPT_DceOpenClose = _thostmduserapi.THOST_FTDC_SPT_DceOpenClose
r"""大连短线开平仓产品"""
THOST_FTDC_FMT_Mortgage = _thostmduserapi.THOST_FTDC_FMT_Mortgage
r"""
    TFtdcFundMortgageTypeType是一个货币质押类型类型
    质押
    """
THOST_FTDC_FMT_Redemption = _thostmduserapi.THOST_FTDC_FMT_Redemption
r"""解质"""
THOST_FTDC_ASPI_BaseMargin = _thostmduserapi.THOST_FTDC_ASPI_BaseMargin
r"""
    TFtdcAccountSettlementParamIDType是一个投资者账户结算参数代码类型
    基础保证金
    """
THOST_FTDC_ASPI_LowestInterest = _thostmduserapi.THOST_FTDC_ASPI_LowestInterest
r"""最低权益标准"""
THOST_FTDC_FMD_In = _thostmduserapi.THOST_FTDC_FMD_In
r"""
    TFtdcFundMortDirectionType是一个货币质押方向类型
    货币质入
    """
THOST_FTDC_FMD_Out = _thostmduserapi.THOST_FTDC_FMD_Out
r"""货币质出"""
THOST_FTDC_BT_Profit = _thostmduserapi.THOST_FTDC_BT_Profit
r"""
    TFtdcBusinessClassType是一个换汇类别类型
    盈利
    """
THOST_FTDC_BT_Loss = _thostmduserapi.THOST_FTDC_BT_Loss
r"""亏损"""
THOST_FTDC_BT_Other = _thostmduserapi.THOST_FTDC_BT_Other
r"""其他"""
THOST_FTDC_SST_Manual = _thostmduserapi.THOST_FTDC_SST_Manual
r"""
    TFtdcSwapSourceTypeType是一个换汇数据来源类型
    手工
    """
THOST_FTDC_SST_Automatic = _thostmduserapi.THOST_FTDC_SST_Automatic
r"""自动生成"""
THOST_FTDC_CED_Settlement = _thostmduserapi.THOST_FTDC_CED_Settlement
r"""
    TFtdcCurrExDirectionType是一个换汇类型类型
    结汇
    """
THOST_FTDC_CED_Sale = _thostmduserapi.THOST_FTDC_CED_Sale
r"""售汇"""
THOST_FTDC_CSS_Entry = _thostmduserapi.THOST_FTDC_CSS_Entry
r"""
    TFtdcCurrencySwapStatusType是一个申请状态类型
    已录入
    """
THOST_FTDC_CSS_Approve = _thostmduserapi.THOST_FTDC_CSS_Approve
r"""已审核"""
THOST_FTDC_CSS_Refuse = _thostmduserapi.THOST_FTDC_CSS_Refuse
r"""已拒绝"""
THOST_FTDC_CSS_Revoke = _thostmduserapi.THOST_FTDC_CSS_Revoke
r"""已撤销"""
THOST_FTDC_CSS_Send = _thostmduserapi.THOST_FTDC_CSS_Send
r"""已发送"""
THOST_FTDC_CSS_Success = _thostmduserapi.THOST_FTDC_CSS_Success
r"""换汇成功"""
THOST_FTDC_CSS_Failure = _thostmduserapi.THOST_FTDC_CSS_Failure
r"""换汇失败"""
THOST_FTDC_REQF_NoSend = _thostmduserapi.THOST_FTDC_REQF_NoSend
r"""
    TFtdcReqFlagType是一个换汇发送标志类型
    未发送
    """
THOST_FTDC_REQF_SendSuccess = _thostmduserapi.THOST_FTDC_REQF_SendSuccess
r"""发送成功"""
THOST_FTDC_REQF_SendFailed = _thostmduserapi.THOST_FTDC_REQF_SendFailed
r"""发送失败"""
THOST_FTDC_REQF_WaitReSend = _thostmduserapi.THOST_FTDC_REQF_WaitReSend
r"""等待重发"""
THOST_FTDC_RESF_Success = _thostmduserapi.THOST_FTDC_RESF_Success
r"""
    TFtdcResFlagType是一个换汇返回成功标志类型
    成功
    """
THOST_FTDC_RESF_InsuffiCient = _thostmduserapi.THOST_FTDC_RESF_InsuffiCient
r"""账户余额不足"""
THOST_FTDC_RESF_UnKnown = _thostmduserapi.THOST_FTDC_RESF_UnKnown
r"""交易结果未知"""
THOST_FTDC_EXS_Before = _thostmduserapi.THOST_FTDC_EXS_Before
r"""
    TFtdcExStatusType是一个修改状态类型
    修改前
    """
THOST_FTDC_EXS_After = _thostmduserapi.THOST_FTDC_EXS_After
r"""修改后"""
THOST_FTDC_CR_Domestic = _thostmduserapi.THOST_FTDC_CR_Domestic
r"""
    TFtdcClientRegionType是一个开户客户地域类型
    国内客户
    """
THOST_FTDC_CR_GMT = _thostmduserapi.THOST_FTDC_CR_GMT
r"""港澳台客户"""
THOST_FTDC_CR_Foreign = _thostmduserapi.THOST_FTDC_CR_Foreign
r"""国外客户"""
THOST_FTDC_HB_No = _thostmduserapi.THOST_FTDC_HB_No
r"""
    TFtdcHasBoardType是一个是否有董事会类型
    没有
    """
THOST_FTDC_HB_Yes = _thostmduserapi.THOST_FTDC_HB_Yes
r"""有"""
THOST_FTDC_SM_Normal = _thostmduserapi.THOST_FTDC_SM_Normal
r"""
    TFtdcStartModeType是一个启动模式类型
    正常
    """
THOST_FTDC_SM_Emerge = _thostmduserapi.THOST_FTDC_SM_Emerge
r"""应急"""
THOST_FTDC_SM_Restore = _thostmduserapi.THOST_FTDC_SM_Restore
r"""恢复"""
THOST_FTDC_TPT_Full = _thostmduserapi.THOST_FTDC_TPT_Full
r"""
    TFtdcTemplateTypeType是一个模型类型类型
    全量
    """
THOST_FTDC_TPT_Increment = _thostmduserapi.THOST_FTDC_TPT_Increment
r"""增量"""
THOST_FTDC_TPT_BackUp = _thostmduserapi.THOST_FTDC_TPT_BackUp
r"""备份"""
THOST_FTDC_LM_Trade = _thostmduserapi.THOST_FTDC_LM_Trade
r"""
    TFtdcLoginModeType是一个登录模式类型
    交易
    """
THOST_FTDC_LM_Transfer = _thostmduserapi.THOST_FTDC_LM_Transfer
r"""转账"""
THOST_FTDC_CPT_Instrument = _thostmduserapi.THOST_FTDC_CPT_Instrument
r"""
    TFtdcPromptTypeType是一个日历提示类型类型
    合约上下市
    """
THOST_FTDC_CPT_Margin = _thostmduserapi.THOST_FTDC_CPT_Margin
r"""保证金分段生效"""
THOST_FTDC_HT_Yes = _thostmduserapi.THOST_FTDC_HT_Yes
r"""
    TFtdcHasTrusteeType是一个是否有托管人类型
    有
    """
THOST_FTDC_HT_No = _thostmduserapi.THOST_FTDC_HT_No
r"""没有"""
THOST_FTDC_AMT_Bank = _thostmduserapi.THOST_FTDC_AMT_Bank
r"""
    TFtdcAmTypeType是一个机构类型类型
    银行
    """
THOST_FTDC_AMT_Securities = _thostmduserapi.THOST_FTDC_AMT_Securities
r"""证券公司"""
THOST_FTDC_AMT_Fund = _thostmduserapi.THOST_FTDC_AMT_Fund
r"""基金公司"""
THOST_FTDC_AMT_Insurance = _thostmduserapi.THOST_FTDC_AMT_Insurance
r"""保险公司"""
THOST_FTDC_AMT_Trust = _thostmduserapi.THOST_FTDC_AMT_Trust
r"""信托公司"""
THOST_FTDC_AMT_Other = _thostmduserapi.THOST_FTDC_AMT_Other
r"""其他"""
THOST_FTDC_CFIOT_FundIO = _thostmduserapi.THOST_FTDC_CFIOT_FundIO
r"""
    TFtdcCSRCFundIOTypeType是一个出入金类型类型
    出入金
    """
THOST_FTDC_CFIOT_SwapCurrency = _thostmduserapi.THOST_FTDC_CFIOT_SwapCurrency
r"""银期换汇"""
THOST_FTDC_CAT_Futures = _thostmduserapi.THOST_FTDC_CAT_Futures
r"""
    TFtdcCusAccountTypeType是一个结算账户类型类型
    期货结算账户
    """
THOST_FTDC_CAT_AssetmgrFuture = _thostmduserapi.THOST_FTDC_CAT_AssetmgrFuture
r"""纯期货资管业务下的资管结算账户"""
THOST_FTDC_CAT_AssetmgrTrustee = _thostmduserapi.THOST_FTDC_CAT_AssetmgrTrustee
r"""综合类资管业务下的期货资管托管账户"""
THOST_FTDC_CAT_AssetmgrTransfer = _thostmduserapi.THOST_FTDC_CAT_AssetmgrTransfer
r"""综合类资管业务下的资金中转账户"""
THOST_FTDC_LT_Chinese = _thostmduserapi.THOST_FTDC_LT_Chinese
r"""
    TFtdcLanguageTypeType是一个通知语言类型类型
    中文
    """
THOST_FTDC_LT_English = _thostmduserapi.THOST_FTDC_LT_English
r"""英文"""
THOST_FTDC_AMCT_Person = _thostmduserapi.THOST_FTDC_AMCT_Person
r"""
    TFtdcAssetmgrClientTypeType是一个资产管理客户类型类型
    个人资管客户
    """
THOST_FTDC_AMCT_Organ = _thostmduserapi.THOST_FTDC_AMCT_Organ
r"""单位资管客户"""
THOST_FTDC_AMCT_SpecialOrgan = _thostmduserapi.THOST_FTDC_AMCT_SpecialOrgan
r"""特殊单位资管客户"""
THOST_FTDC_ASST_Futures = _thostmduserapi.THOST_FTDC_ASST_Futures
r"""
    TFtdcAssetmgrTypeType是一个投资类型类型
    期货类
    """
THOST_FTDC_ASST_SpecialOrgan = _thostmduserapi.THOST_FTDC_ASST_SpecialOrgan
r"""综合类"""
THOST_FTDC_CIT_HasExch = _thostmduserapi.THOST_FTDC_CIT_HasExch
r"""
    TFtdcCheckInstrTypeType是一个合约比较类型类型
    合约交易所不存在
    """
THOST_FTDC_CIT_HasATP = _thostmduserapi.THOST_FTDC_CIT_HasATP
r"""合约本系统不存在"""
THOST_FTDC_CIT_HasDiff = _thostmduserapi.THOST_FTDC_CIT_HasDiff
r"""合约比较不一致"""
THOST_FTDC_DT_HandDeliv = _thostmduserapi.THOST_FTDC_DT_HandDeliv
r"""
    TFtdcDeliveryTypeType是一个交割类型类型
    手工交割
    """
THOST_FTDC_DT_PersonDeliv = _thostmduserapi.THOST_FTDC_DT_PersonDeliv
r"""到期交割"""
THOST_FTDC_MMSA_NO = _thostmduserapi.THOST_FTDC_MMSA_NO
r"""
    TFtdcMaxMarginSideAlgorithmType是一个大额单边保证金算法类型
    不使用大额单边保证金算法
    """
THOST_FTDC_MMSA_YES = _thostmduserapi.THOST_FTDC_MMSA_YES
r"""使用大额单边保证金算法"""
THOST_FTDC_CACT_Person = _thostmduserapi.THOST_FTDC_CACT_Person
r"""
    TFtdcDAClientTypeType是一个资产管理客户类型类型
    自然人
    """
THOST_FTDC_CACT_Company = _thostmduserapi.THOST_FTDC_CACT_Company
r"""法人"""
THOST_FTDC_CACT_Other = _thostmduserapi.THOST_FTDC_CACT_Other
r"""其他"""
THOST_FTDC_UOAAT_Futures = _thostmduserapi.THOST_FTDC_UOAAT_Futures
r"""
    TFtdcUOAAssetmgrTypeType是一个投资类型类型
    期货类
    """
THOST_FTDC_UOAAT_SpecialOrgan = _thostmduserapi.THOST_FTDC_UOAAT_SpecialOrgan
r"""综合类"""
THOST_FTDC_DEN_Buy = _thostmduserapi.THOST_FTDC_DEN_Buy
r"""
    TFtdcDirectionEnType是一个买卖方向类型
    Buy
    """
THOST_FTDC_DEN_Sell = _thostmduserapi.THOST_FTDC_DEN_Sell
r"""Sell"""
THOST_FTDC_OFEN_Open = _thostmduserapi.THOST_FTDC_OFEN_Open
r"""
    TFtdcOffsetFlagEnType是一个开平标志类型
    Position Opening
    """
THOST_FTDC_OFEN_Close = _thostmduserapi.THOST_FTDC_OFEN_Close
r"""Position Close"""
THOST_FTDC_OFEN_ForceClose = _thostmduserapi.THOST_FTDC_OFEN_ForceClose
r"""Forced Liquidation"""
THOST_FTDC_OFEN_CloseToday = _thostmduserapi.THOST_FTDC_OFEN_CloseToday
r"""Close Today"""
THOST_FTDC_OFEN_CloseYesterday = _thostmduserapi.THOST_FTDC_OFEN_CloseYesterday
r"""Close Prev."""
THOST_FTDC_OFEN_ForceOff = _thostmduserapi.THOST_FTDC_OFEN_ForceOff
r"""Forced Reduction"""
THOST_FTDC_OFEN_LocalForceClose = _thostmduserapi.THOST_FTDC_OFEN_LocalForceClose
r"""Local Forced Liquidation"""
THOST_FTDC_HFEN_Speculation = _thostmduserapi.THOST_FTDC_HFEN_Speculation
r"""
    TFtdcHedgeFlagEnType是一个投机套保标志类型
    Speculation
    """
THOST_FTDC_HFEN_Arbitrage = _thostmduserapi.THOST_FTDC_HFEN_Arbitrage
r"""Arbitrage"""
THOST_FTDC_HFEN_Hedge = _thostmduserapi.THOST_FTDC_HFEN_Hedge
r"""Hedge"""
THOST_FTDC_FIOTEN_FundIO = _thostmduserapi.THOST_FTDC_FIOTEN_FundIO
r"""
    TFtdcFundIOTypeEnType是一个出入金类型类型
    Deposit/Withdrawal
    """
THOST_FTDC_FIOTEN_Transfer = _thostmduserapi.THOST_FTDC_FIOTEN_Transfer
r"""Bank-Futures Transfer"""
THOST_FTDC_FIOTEN_SwapCurrency = _thostmduserapi.THOST_FTDC_FIOTEN_SwapCurrency
r"""Bank-Futures FX Exchange"""
THOST_FTDC_FTEN_Deposite = _thostmduserapi.THOST_FTDC_FTEN_Deposite
r"""
    TFtdcFundTypeEnType是一个资金类型类型
    Bank Deposit
    """
THOST_FTDC_FTEN_ItemFund = _thostmduserapi.THOST_FTDC_FTEN_ItemFund
r"""Payment/Fee"""
THOST_FTDC_FTEN_Company = _thostmduserapi.THOST_FTDC_FTEN_Company
r"""Brokerage Adj"""
THOST_FTDC_FTEN_InnerTransfer = _thostmduserapi.THOST_FTDC_FTEN_InnerTransfer
r"""Internal Transfer"""
THOST_FTDC_FDEN_In = _thostmduserapi.THOST_FTDC_FDEN_In
r"""
    TFtdcFundDirectionEnType是一个出入金方向类型
    Deposit
    """
THOST_FTDC_FDEN_Out = _thostmduserapi.THOST_FTDC_FDEN_Out
r"""Withdrawal"""
THOST_FTDC_FMDEN_In = _thostmduserapi.THOST_FTDC_FMDEN_In
r"""
    TFtdcFundMortDirectionEnType是一个货币质押方向类型
    Pledge
    """
THOST_FTDC_FMDEN_Out = _thostmduserapi.THOST_FTDC_FMDEN_Out
r"""Redemption"""
THOST_FTDC_CP_CallOptions = _thostmduserapi.THOST_FTDC_CP_CallOptions
r"""
    TFtdcOptionsTypeType是一个期权类型类型
    看涨
    """
THOST_FTDC_CP_PutOptions = _thostmduserapi.THOST_FTDC_CP_PutOptions
r"""看跌"""
THOST_FTDC_STM_Continental = _thostmduserapi.THOST_FTDC_STM_Continental
r"""
    TFtdcStrikeModeType是一个执行方式类型
    欧式
    """
THOST_FTDC_STM_American = _thostmduserapi.THOST_FTDC_STM_American
r"""美式"""
THOST_FTDC_STM_Bermuda = _thostmduserapi.THOST_FTDC_STM_Bermuda
r"""百慕大"""
THOST_FTDC_STT_Hedge = _thostmduserapi.THOST_FTDC_STT_Hedge
r"""
    TFtdcStrikeTypeType是一个执行类型类型
    自身对冲
    """
THOST_FTDC_STT_Match = _thostmduserapi.THOST_FTDC_STT_Match
r"""匹配执行"""
THOST_FTDC_APPT_NotStrikeNum = _thostmduserapi.THOST_FTDC_APPT_NotStrikeNum
r"""
    TFtdcApplyTypeType是一个中金所期权放弃执行申请类型类型
    不执行数量
    """
THOST_FTDC_GUDS_Gen = _thostmduserapi.THOST_FTDC_GUDS_Gen
r"""
    TFtdcGiveUpDataSourceType是一个放弃执行申请数据来源类型
    系统生成
    """
THOST_FTDC_GUDS_Hand = _thostmduserapi.THOST_FTDC_GUDS_Hand
r"""手工添加"""
THOST_FTDC_OER_NoExec = _thostmduserapi.THOST_FTDC_OER_NoExec
r"""
    TFtdcExecResultType是一个执行结果类型
    没有执行
    """
THOST_FTDC_OER_Canceled = _thostmduserapi.THOST_FTDC_OER_Canceled
r"""已经取消"""
THOST_FTDC_OER_OK = _thostmduserapi.THOST_FTDC_OER_OK
r"""执行成功"""
THOST_FTDC_OER_NoPosition = _thostmduserapi.THOST_FTDC_OER_NoPosition
r"""期权持仓不够"""
THOST_FTDC_OER_NoDeposit = _thostmduserapi.THOST_FTDC_OER_NoDeposit
r"""资金不够"""
THOST_FTDC_OER_NoParticipant = _thostmduserapi.THOST_FTDC_OER_NoParticipant
r"""会员不存在"""
THOST_FTDC_OER_NoClient = _thostmduserapi.THOST_FTDC_OER_NoClient
r"""客户不存在"""
THOST_FTDC_OER_NoInstrument = _thostmduserapi.THOST_FTDC_OER_NoInstrument
r"""合约不存在"""
THOST_FTDC_OER_NoRight = _thostmduserapi.THOST_FTDC_OER_NoRight
r"""没有执行权限"""
THOST_FTDC_OER_InvalidVolume = _thostmduserapi.THOST_FTDC_OER_InvalidVolume
r"""不合理的数量"""
THOST_FTDC_OER_NoEnoughHistoryTrade = _thostmduserapi.THOST_FTDC_OER_NoEnoughHistoryTrade
r"""没有足够的历史成交"""
THOST_FTDC_OER_Unknown = _thostmduserapi.THOST_FTDC_OER_Unknown
r"""未知"""
THOST_FTDC_COMBT_Future = _thostmduserapi.THOST_FTDC_COMBT_Future
r"""
    TFtdcCombinationTypeType是一个组合类型类型
    期货组合
    """
THOST_FTDC_COMBT_BUL = _thostmduserapi.THOST_FTDC_COMBT_BUL
r"""垂直价差BUL"""
THOST_FTDC_COMBT_BER = _thostmduserapi.THOST_FTDC_COMBT_BER
r"""垂直价差BER"""
THOST_FTDC_COMBT_STD = _thostmduserapi.THOST_FTDC_COMBT_STD
r"""跨式组合"""
THOST_FTDC_COMBT_STG = _thostmduserapi.THOST_FTDC_COMBT_STG
r"""宽跨式组合"""
THOST_FTDC_COMBT_PRT = _thostmduserapi.THOST_FTDC_COMBT_PRT
r"""备兑组合"""
THOST_FTDC_COMBT_CAS = _thostmduserapi.THOST_FTDC_COMBT_CAS
r"""时间价差组合"""
THOST_FTDC_COMBT_OPL = _thostmduserapi.THOST_FTDC_COMBT_OPL
r"""期权对锁组合"""
THOST_FTDC_COMBT_BFO = _thostmduserapi.THOST_FTDC_COMBT_BFO
r"""买备兑组合"""
THOST_FTDC_COMBT_BLS = _thostmduserapi.THOST_FTDC_COMBT_BLS
r"""买入期权垂直价差组合"""
THOST_FTDC_COMBT_BES = _thostmduserapi.THOST_FTDC_COMBT_BES
r"""卖出期权垂直价差组合"""
THOST_FTDC_DCECOMBT_SPL = _thostmduserapi.THOST_FTDC_DCECOMBT_SPL
r"""
    TFtdcDceCombinationTypeType是一个组合类型类型
    期货对锁组合
    """
THOST_FTDC_DCECOMBT_OPL = _thostmduserapi.THOST_FTDC_DCECOMBT_OPL
r"""期权对锁组合"""
THOST_FTDC_DCECOMBT_SP = _thostmduserapi.THOST_FTDC_DCECOMBT_SP
r"""期货跨期组合"""
THOST_FTDC_DCECOMBT_SPC = _thostmduserapi.THOST_FTDC_DCECOMBT_SPC
r"""期货跨品种组合"""
THOST_FTDC_DCECOMBT_BLS = _thostmduserapi.THOST_FTDC_DCECOMBT_BLS
r"""买入期权垂直价差组合"""
THOST_FTDC_DCECOMBT_BES = _thostmduserapi.THOST_FTDC_DCECOMBT_BES
r"""卖出期权垂直价差组合"""
THOST_FTDC_DCECOMBT_CAS = _thostmduserapi.THOST_FTDC_DCECOMBT_CAS
r"""期权日历价差组合"""
THOST_FTDC_DCECOMBT_STD = _thostmduserapi.THOST_FTDC_DCECOMBT_STD
r"""期权跨式组合"""
THOST_FTDC_DCECOMBT_STG = _thostmduserapi.THOST_FTDC_DCECOMBT_STG
r"""期权宽跨式组合"""
THOST_FTDC_DCECOMBT_BFO = _thostmduserapi.THOST_FTDC_DCECOMBT_BFO
r"""买入期货期权组合"""
THOST_FTDC_DCECOMBT_SFO = _thostmduserapi.THOST_FTDC_DCECOMBT_SFO
r"""卖出期货期权组合"""
THOST_FTDC_ORPT_PreSettlementPrice = _thostmduserapi.THOST_FTDC_ORPT_PreSettlementPrice
r"""
    TFtdcOptionRoyaltyPriceTypeType是一个期权权利金价格类型类型
    昨结算价
    """
THOST_FTDC_ORPT_OpenPrice = _thostmduserapi.THOST_FTDC_ORPT_OpenPrice
r"""开仓价"""
THOST_FTDC_ORPT_MaxPreSettlementPrice = _thostmduserapi.THOST_FTDC_ORPT_MaxPreSettlementPrice
r"""最新价与昨结算价较大值"""
THOST_FTDC_BLAG_Default = _thostmduserapi.THOST_FTDC_BLAG_Default
r"""
    TFtdcBalanceAlgorithmType是一个权益算法类型
    不计算期权市值盈亏
    """
THOST_FTDC_BLAG_IncludeOptValLost = _thostmduserapi.THOST_FTDC_BLAG_IncludeOptValLost
r"""计算期权市值亏损"""
THOST_FTDC_ACTP_Exec = _thostmduserapi.THOST_FTDC_ACTP_Exec
r"""
    TFtdcActionTypeType是一个执行类型类型
    执行
    """
THOST_FTDC_ACTP_Abandon = _thostmduserapi.THOST_FTDC_ACTP_Abandon
r"""放弃"""
THOST_FTDC_FQST_Submitted = _thostmduserapi.THOST_FTDC_FQST_Submitted
r"""
    TFtdcForQuoteStatusType是一个询价状态类型
    已经提交
    """
THOST_FTDC_FQST_Accepted = _thostmduserapi.THOST_FTDC_FQST_Accepted
r"""已经接受"""
THOST_FTDC_FQST_Rejected = _thostmduserapi.THOST_FTDC_FQST_Rejected
r"""已经被拒绝"""
THOST_FTDC_VM_Absolute = _thostmduserapi.THOST_FTDC_VM_Absolute
r"""
    TFtdcValueMethodType是一个取值方式类型
    按绝对值
    """
THOST_FTDC_VM_Ratio = _thostmduserapi.THOST_FTDC_VM_Ratio
r"""按比率"""
THOST_FTDC_EOPF_Reserve = _thostmduserapi.THOST_FTDC_EOPF_Reserve
r"""
    TFtdcExecOrderPositionFlagType是一个期权行权后是否保留期货头寸的标记类型
    保留
    """
THOST_FTDC_EOPF_UnReserve = _thostmduserapi.THOST_FTDC_EOPF_UnReserve
r"""不保留"""
THOST_FTDC_EOCF_AutoClose = _thostmduserapi.THOST_FTDC_EOCF_AutoClose
r"""
    TFtdcExecOrderCloseFlagType是一个期权行权后生成的头寸是否自动平仓类型
    自动平仓
    """
THOST_FTDC_EOCF_NotToClose = _thostmduserapi.THOST_FTDC_EOCF_NotToClose
r"""免于自动平仓"""
THOST_FTDC_PTE_Futures = _thostmduserapi.THOST_FTDC_PTE_Futures
r"""
    TFtdcProductTypeType是一个产品类型类型
    期货
    """
THOST_FTDC_PTE_Options = _thostmduserapi.THOST_FTDC_PTE_Options
r"""期权"""
THOST_FTDC_CUFN_CUFN_O = _thostmduserapi.THOST_FTDC_CUFN_CUFN_O
r"""
    TFtdcCZCEUploadFileNameType是一个郑商所结算文件名类型
    ^\d{8}_zz_\d{4}
    """
THOST_FTDC_CUFN_CUFN_T = _thostmduserapi.THOST_FTDC_CUFN_CUFN_T
r"""^\d{8}成交表"""
THOST_FTDC_CUFN_CUFN_P = _thostmduserapi.THOST_FTDC_CUFN_CUFN_P
r"""^\d{8}单腿持仓表new"""
THOST_FTDC_CUFN_CUFN_N = _thostmduserapi.THOST_FTDC_CUFN_CUFN_N
r"""^\d{8}非平仓了结表"""
THOST_FTDC_CUFN_CUFN_L = _thostmduserapi.THOST_FTDC_CUFN_CUFN_L
r"""^\d{8}平仓表"""
THOST_FTDC_CUFN_CUFN_F = _thostmduserapi.THOST_FTDC_CUFN_CUFN_F
r"""^\d{8}资金表"""
THOST_FTDC_CUFN_CUFN_C = _thostmduserapi.THOST_FTDC_CUFN_CUFN_C
r"""^\d{8}组合持仓表"""
THOST_FTDC_CUFN_CUFN_M = _thostmduserapi.THOST_FTDC_CUFN_CUFN_M
r"""^\d{8}保证金参数表"""
THOST_FTDC_DUFN_DUFN_O = _thostmduserapi.THOST_FTDC_DUFN_DUFN_O
r"""
    TFtdcDCEUploadFileNameType是一个大商所结算文件名类型
    ^\d{8}_dl_\d{3}
    """
THOST_FTDC_DUFN_DUFN_T = _thostmduserapi.THOST_FTDC_DUFN_DUFN_T
r"""^\d{8}_成交表"""
THOST_FTDC_DUFN_DUFN_P = _thostmduserapi.THOST_FTDC_DUFN_DUFN_P
r"""^\d{8}_持仓表"""
THOST_FTDC_DUFN_DUFN_F = _thostmduserapi.THOST_FTDC_DUFN_DUFN_F
r"""^\d{8}_资金结算表"""
THOST_FTDC_DUFN_DUFN_C = _thostmduserapi.THOST_FTDC_DUFN_DUFN_C
r"""^\d{8}_优惠组合持仓明细表"""
THOST_FTDC_DUFN_DUFN_D = _thostmduserapi.THOST_FTDC_DUFN_DUFN_D
r"""^\d{8}_持仓明细表"""
THOST_FTDC_DUFN_DUFN_M = _thostmduserapi.THOST_FTDC_DUFN_DUFN_M
r"""^\d{8}_保证金参数表"""
THOST_FTDC_DUFN_DUFN_S = _thostmduserapi.THOST_FTDC_DUFN_DUFN_S
r"""^\d{8}_期权执行表"""
THOST_FTDC_SUFN_SUFN_O = _thostmduserapi.THOST_FTDC_SUFN_SUFN_O
r"""
    TFtdcSHFEUploadFileNameType是一个上期所结算文件名类型
    ^\d{4}_\d{8}_\d{8}_DailyFundChg
    """
THOST_FTDC_SUFN_SUFN_T = _thostmduserapi.THOST_FTDC_SUFN_SUFN_T
r"""^\d{4}_\d{8}_\d{8}_Trade"""
THOST_FTDC_SUFN_SUFN_P = _thostmduserapi.THOST_FTDC_SUFN_SUFN_P
r"""^\d{4}_\d{8}_\d{8}_SettlementDetail"""
THOST_FTDC_SUFN_SUFN_F = _thostmduserapi.THOST_FTDC_SUFN_SUFN_F
r"""^\d{4}_\d{8}_\d{8}_Capital"""
THOST_FTDC_CFUFN_SUFN_T = _thostmduserapi.THOST_FTDC_CFUFN_SUFN_T
r"""
    TFtdcCFFEXUploadFileNameType是一个中金所结算文件名类型
    ^\d{4}_SG\d{1}_\d{8}_\d{1}_Trade
    """
THOST_FTDC_CFUFN_SUFN_P = _thostmduserapi.THOST_FTDC_CFUFN_SUFN_P
r"""^\d{4}_SG\d{1}_\d{8}_\d{1}_SettlementDetail"""
THOST_FTDC_CFUFN_SUFN_F = _thostmduserapi.THOST_FTDC_CFUFN_SUFN_F
r"""^\d{4}_SG\d{1}_\d{8}_\d{1}_Capital"""
THOST_FTDC_CFUFN_SUFN_S = _thostmduserapi.THOST_FTDC_CFUFN_SUFN_S
r"""^\d{4}_SG\d{1}_\d{8}_\d{1}_OptionExec"""
THOST_FTDC_CMDR_Comb = _thostmduserapi.THOST_FTDC_CMDR_Comb
r"""
    TFtdcCombDirectionType是一个组合指令方向类型
    申请组合
    """
THOST_FTDC_CMDR_UnComb = _thostmduserapi.THOST_FTDC_CMDR_UnComb
r"""申请拆分"""
THOST_FTDC_CMDR_DelComb = _thostmduserapi.THOST_FTDC_CMDR_DelComb
r"""操作员删组合单"""
THOST_FTDC_STOV_RealValue = _thostmduserapi.THOST_FTDC_STOV_RealValue
r"""
    TFtdcStrikeOffsetTypeType是一个行权偏移类型类型
    实值额
    """
THOST_FTDC_STOV_ProfitValue = _thostmduserapi.THOST_FTDC_STOV_ProfitValue
r"""盈利额"""
THOST_FTDC_STOV_RealRatio = _thostmduserapi.THOST_FTDC_STOV_RealRatio
r"""实值比例"""
THOST_FTDC_STOV_ProfitRatio = _thostmduserapi.THOST_FTDC_STOV_ProfitRatio
r"""盈利比例"""
THOST_FTDC_ROAST_Processing = _thostmduserapi.THOST_FTDC_ROAST_Processing
r"""
    TFtdcReserveOpenAccStasType是一个预约开户状态类型
    等待处理中
    """
THOST_FTDC_ROAST_Cancelled = _thostmduserapi.THOST_FTDC_ROAST_Cancelled
r"""已撤销"""
THOST_FTDC_ROAST_Opened = _thostmduserapi.THOST_FTDC_ROAST_Opened
r"""已开户"""
THOST_FTDC_ROAST_Invalid = _thostmduserapi.THOST_FTDC_ROAST_Invalid
r"""无效请求"""
THOST_FTDC_WPSR_Lib = _thostmduserapi.THOST_FTDC_WPSR_Lib
r"""
    TFtdcWeakPasswordSourceType是一个弱密码来源类型
    弱密码库
    """
THOST_FTDC_WPSR_Manual = _thostmduserapi.THOST_FTDC_WPSR_Manual
r"""手工录入"""
THOST_FTDC_OSCF_CloseSelfOptionPosition = _thostmduserapi.THOST_FTDC_OSCF_CloseSelfOptionPosition
r"""
    TFtdcOptSelfCloseFlagType是一个期权行权的头寸是否自对冲类型
    自对冲期权仓位
    """
THOST_FTDC_OSCF_ReserveOptionPosition = _thostmduserapi.THOST_FTDC_OSCF_ReserveOptionPosition
r"""保留期权仓位"""
THOST_FTDC_OSCF_SellCloseSelfFuturePosition = _thostmduserapi.THOST_FTDC_OSCF_SellCloseSelfFuturePosition
r"""自对冲卖方履约后的期货仓位"""
THOST_FTDC_OSCF_ReserveFuturePosition = _thostmduserapi.THOST_FTDC_OSCF_ReserveFuturePosition
r"""保留卖方履约后的期货仓位"""
THOST_FTDC_BZTP_Future = _thostmduserapi.THOST_FTDC_BZTP_Future
r"""
    TFtdcBizTypeType是一个业务类型类型
    期货
    """
THOST_FTDC_BZTP_Stock = _thostmduserapi.THOST_FTDC_BZTP_Stock
r"""证券"""
THOST_FTDC_APP_TYPE_Investor = _thostmduserapi.THOST_FTDC_APP_TYPE_Investor
r"""
    TFtdcAppTypeType是一个用户App类型类型
    直连的投资者
    """
THOST_FTDC_APP_TYPE_InvestorRelay = _thostmduserapi.THOST_FTDC_APP_TYPE_InvestorRelay
r"""为每个投资者都创建连接的中继"""
THOST_FTDC_APP_TYPE_OperatorRelay = _thostmduserapi.THOST_FTDC_APP_TYPE_OperatorRelay
r"""所有投资者共享一个操作员连接的中继"""
THOST_FTDC_APP_TYPE_UnKnown = _thostmduserapi.THOST_FTDC_APP_TYPE_UnKnown
r"""未知"""
THOST_FTDC_RV_Right = _thostmduserapi.THOST_FTDC_RV_Right
r"""
    TFtdcResponseValueType是一个应答类型类型
    检查成功
    """
THOST_FTDC_RV_Refuse = _thostmduserapi.THOST_FTDC_RV_Refuse
r"""检查失败"""
THOST_FTDC_OTC_TRDT_Block = _thostmduserapi.THOST_FTDC_OTC_TRDT_Block
r"""
    TFtdcOTCTradeTypeType是一个OTC成交类型类型
    大宗交易
    """
THOST_FTDC_OTC_TRDT_EFP = _thostmduserapi.THOST_FTDC_OTC_TRDT_EFP
r"""期转现"""
THOST_FTDC_OTC_MT_DV01 = _thostmduserapi.THOST_FTDC_OTC_MT_DV01
r"""
    TFtdcMatchTypeType是一个期现风险匹配方式类型
    基点价值
    """
THOST_FTDC_OTC_MT_ParValue = _thostmduserapi.THOST_FTDC_OTC_MT_ParValue
r"""面值"""
THOST_FTDC_AU_WHITE = _thostmduserapi.THOST_FTDC_AU_WHITE
r"""
    TFtdcAuthTypeType是一个用户终端认证方式类型
    白名单校验
    """
THOST_FTDC_AU_BLACK = _thostmduserapi.THOST_FTDC_AU_BLACK
r"""黑名单校验"""
THOST_FTDC_INS_ALL = _thostmduserapi.THOST_FTDC_INS_ALL
r"""
    TFtdcClassTypeType是一个合约分类方式类型
    所有合约
    """
THOST_FTDC_INS_FUTURE = _thostmduserapi.THOST_FTDC_INS_FUTURE
r"""期货、即期、期转现、Tas、金属指数合约"""
THOST_FTDC_INS_OPTION = _thostmduserapi.THOST_FTDC_INS_OPTION
r"""期货、现货期权合约"""
THOST_FTDC_INS_COMB = _thostmduserapi.THOST_FTDC_INS_COMB
r"""组合合约"""
THOST_FTDC_TD_ALL = _thostmduserapi.THOST_FTDC_TD_ALL
r"""
    TFtdcTradingTypeType是一个合约交易状态分类方式类型
    所有状态
    """
THOST_FTDC_TD_TRADE = _thostmduserapi.THOST_FTDC_TD_TRADE
r"""交易"""
THOST_FTDC_TD_UNTRADE = _thostmduserapi.THOST_FTDC_TD_UNTRADE
r"""非交易"""
THOST_FTDC_PS_tradeable = _thostmduserapi.THOST_FTDC_PS_tradeable
r"""
    TFtdcProductStatusType是一个产品状态类型
    可交易
    """
THOST_FTDC_PS_untradeable = _thostmduserapi.THOST_FTDC_PS_untradeable
r"""不可交易"""
THOST_FTDC_SDS_Readable = _thostmduserapi.THOST_FTDC_SDS_Readable
r"""
    TFtdcSyncDeltaStatusType是一个追平状态类型
    交易可读
    """
THOST_FTDC_SDS_Reading = _thostmduserapi.THOST_FTDC_SDS_Reading
r"""交易在读"""
THOST_FTDC_SDS_Readend = _thostmduserapi.THOST_FTDC_SDS_Readend
r"""交易读取完成"""
THOST_FTDC_SDS_OptErr = _thostmduserapi.THOST_FTDC_SDS_OptErr
r"""追平失败 交易本地状态结算不存在"""
THOST_FTDC_ACD_Add = _thostmduserapi.THOST_FTDC_ACD_Add
r"""
    TFtdcActionDirectionType是一个操作标志类型
    增加
    """
THOST_FTDC_ACD_Del = _thostmduserapi.THOST_FTDC_ACD_Del
r"""删除"""
THOST_FTDC_ACD_Upd = _thostmduserapi.THOST_FTDC_ACD_Upd
r"""更新"""
THOST_FTDC_OAC_Balance = _thostmduserapi.THOST_FTDC_OAC_Balance
r"""
    TFtdcOrderCancelAlgType是一个撤单时选择席位算法类型
    轮询席位撤单
    """
THOST_FTDC_OAC_OrigFirst = _thostmduserapi.THOST_FTDC_OAC_OrigFirst
r"""优先原报单席位撤单"""
THOST_FTDC_PLCL_None = _thostmduserapi.THOST_FTDC_PLCL_None
r"""
    TFtdcOpenLimitControlLevelType是一个开仓量限制粒度类型
    不控制
    """
THOST_FTDC_PLCL_Product = _thostmduserapi.THOST_FTDC_PLCL_Product
r"""产品级别"""
THOST_FTDC_PLCL_Inst = _thostmduserapi.THOST_FTDC_PLCL_Inst
r"""合约级别"""
THOST_FTDC_OFCL_None = _thostmduserapi.THOST_FTDC_OFCL_None
r"""
    TFtdcOrderFreqControlLevelType是一个报单频率控制粒度类型
    不控制
    """
THOST_FTDC_OFCL_Product = _thostmduserapi.THOST_FTDC_OFCL_Product
r"""产品级别"""
THOST_FTDC_OFCL_Inst = _thostmduserapi.THOST_FTDC_OFCL_Inst
r"""合约级别"""
THOST_FTDC_EBL_False = _thostmduserapi.THOST_FTDC_EBL_False
r"""
    TFtdcEnumBoolType是一个枚举bool类型类型
    false
    """
THOST_FTDC_EBL_True = _thostmduserapi.THOST_FTDC_EBL_True
r"""true"""
THOST_FTDC_ETR_USUAL = _thostmduserapi.THOST_FTDC_ETR_USUAL
r"""
    TFtdcTimeRangeType是一个期货合约阶段标识类型
    一般月份
    """
THOST_FTDC_ETR_FNSP = _thostmduserapi.THOST_FTDC_ETR_FNSP
r"""交割月前一个月上半月"""
THOST_FTDC_ETR_BNSP = _thostmduserapi.THOST_FTDC_ETR_BNSP
r"""交割月前一个月下半月"""
THOST_FTDC_ETR_SPOT = _thostmduserapi.THOST_FTDC_ETR_SPOT
r"""交割月份"""
THOST_FTDC_EPF_None = _thostmduserapi.THOST_FTDC_EPF_None
r"""
    TFtdcPortfolioType是一个新型组保算法类型
    不使用新型组保算法
    """
THOST_FTDC_EPF_SPBM = _thostmduserapi.THOST_FTDC_EPF_SPBM
r"""SPBM算法"""
THOST_FTDC_EPF_RULE = _thostmduserapi.THOST_FTDC_EPF_RULE
r"""RULE算法"""
THOST_FTDC_EPF_SPMM = _thostmduserapi.THOST_FTDC_EPF_SPMM
r"""SPMM算法"""
THOST_FTDC_EPF_RCAMS = _thostmduserapi.THOST_FTDC_EPF_RCAMS
r"""RCAMS算法"""
THOST_FTDC_WDPID_CashIn = _thostmduserapi.THOST_FTDC_WDPID_CashIn
r"""
    TFtdcWithDrawParamIDType是一个可提参数代码类型
    权利金收支是否可提 1 代表可提 0 不可提
    """
THOST_FTDC_ITR_CloseOnly = _thostmduserapi.THOST_FTDC_ITR_CloseOnly
r"""
    TFtdcInvstTradingRightType是一个投资者交易权限类型
    只能平仓
    """
THOST_FTDC_ITR_Forbidden = _thostmduserapi.THOST_FTDC_ITR_Forbidden
r"""不能交易"""
THOST_FTDC_IMID_BothSide = _thostmduserapi.THOST_FTDC_IMID_BothSide
r"""
    TFtdcInstMarginCalIDType是一个SPMM合约保证金算法类型
    标准算法收取双边
    """
THOST_FTDC_IMID_MMSA = _thostmduserapi.THOST_FTDC_IMID_MMSA
r"""单向大边"""
THOST_FTDC_IMID_SPMM = _thostmduserapi.THOST_FTDC_IMID_SPMM
r"""新组保SPMM"""
THOST_FTDC_ERComb_BUC = _thostmduserapi.THOST_FTDC_ERComb_BUC
r"""
    TFtdcRCAMSCombinationTypeType是一个RCAMS组合类型类型
    牛市看涨价差组合
    """
THOST_FTDC_ERComb_BEC = _thostmduserapi.THOST_FTDC_ERComb_BEC
r"""熊市看涨价差组合"""
THOST_FTDC_ERComb_BEP = _thostmduserapi.THOST_FTDC_ERComb_BEP
r"""熊市看跌价差组合"""
THOST_FTDC_ERComb_BUP = _thostmduserapi.THOST_FTDC_ERComb_BUP
r"""牛市看跌价差组合"""
THOST_FTDC_ERComb_CAS = _thostmduserapi.THOST_FTDC_ERComb_CAS
r"""日历价差组合"""
THOST_FTDC_EET_None = _thostmduserapi.THOST_FTDC_EET_None
r"""
    TFtdcPortfTypeType是一个新组保算法启用类型类型
    使用初版交易所算法
    """
THOST_FTDC_EET_SPBM_AddOnHedge = _thostmduserapi.THOST_FTDC_EET_SPBM_AddOnHedge
r"""SPBM算法V1.1.0_附加保证金调整"""
THOST_FTDC_EIC_Usual = _thostmduserapi.THOST_FTDC_EIC_Usual
r"""
    TFtdcInstrumentClassType是一个合约类型类型
    一般月份合约
    """
THOST_FTDC_EIC_Delivery = _thostmduserapi.THOST_FTDC_EIC_Delivery
r"""临近交割合约"""
THOST_FTDC_EIC_NonComb = _thostmduserapi.THOST_FTDC_EIC_NonComb
r"""非组合合约"""
THOST_FTDC_PCF_None = _thostmduserapi.THOST_FTDC_PCF_None
r"""
    TFtdcProdChangeFlagType是一个品种记录改变状态类型
    持仓量和冻结量均无变化
    """
THOST_FTDC_PCF_OnlyFrozen = _thostmduserapi.THOST_FTDC_PCF_OnlyFrozen
r"""持仓量无变化，冻结量有变化"""
THOST_FTDC_PCF_PositionChange = _thostmduserapi.THOST_FTDC_PCF_PositionChange
r"""持仓量有变化"""
class CThostFtdcDisseminationField(object):
    r"""信息分发"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    SequenceSeries: "TThostFtdcSequenceSeriesType" = property(_thostmduserapi.CThostFtdcDisseminationField_SequenceSeries_get, _thostmduserapi.CThostFtdcDisseminationField_SequenceSeries_set, doc=r"""序列系列号""")
    SequenceNo: "TThostFtdcSequenceNoType" = property(_thostmduserapi.CThostFtdcDisseminationField_SequenceNo_get, _thostmduserapi.CThostFtdcDisseminationField_SequenceNo_set, doc=r"""序列号""")

    def __init__(self):
        _thostmduserapi.CThostFtdcDisseminationField_swiginit(self, _thostmduserapi.new_CThostFtdcDisseminationField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcDisseminationField

# Register CThostFtdcDisseminationField in _thostmduserapi:
_thostmduserapi.CThostFtdcDisseminationField_swigregister(CThostFtdcDisseminationField)
class CThostFtdcReqUserLoginField(object):
    r"""用户登录请求"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    TradingDay: "TThostFtdcDateType" = property(_thostmduserapi.CThostFtdcReqUserLoginField_TradingDay_get, _thostmduserapi.CThostFtdcReqUserLoginField_TradingDay_set, doc=r"""交易日""")
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcReqUserLoginField_BrokerID_get, _thostmduserapi.CThostFtdcReqUserLoginField_BrokerID_set, doc=r"""经纪公司代码""")
    UserID: "TThostFtdcUserIDType" = property(_thostmduserapi.CThostFtdcReqUserLoginField_UserID_get, _thostmduserapi.CThostFtdcReqUserLoginField_UserID_set, doc=r"""用户代码""")
    Password: "TThostFtdcPasswordType" = property(_thostmduserapi.CThostFtdcReqUserLoginField_Password_get, _thostmduserapi.CThostFtdcReqUserLoginField_Password_set, doc=r"""密码""")
    UserProductInfo: "TThostFtdcProductInfoType" = property(_thostmduserapi.CThostFtdcReqUserLoginField_UserProductInfo_get, _thostmduserapi.CThostFtdcReqUserLoginField_UserProductInfo_set, doc=r"""用户端产品信息""")
    InterfaceProductInfo: "TThostFtdcProductInfoType" = property(_thostmduserapi.CThostFtdcReqUserLoginField_InterfaceProductInfo_get, _thostmduserapi.CThostFtdcReqUserLoginField_InterfaceProductInfo_set, doc=r"""接口端产品信息""")
    ProtocolInfo: "TThostFtdcProtocolInfoType" = property(_thostmduserapi.CThostFtdcReqUserLoginField_ProtocolInfo_get, _thostmduserapi.CThostFtdcReqUserLoginField_ProtocolInfo_set, doc=r"""协议信息""")
    MacAddress: "TThostFtdcMacAddressType" = property(_thostmduserapi.CThostFtdcReqUserLoginField_MacAddress_get, _thostmduserapi.CThostFtdcReqUserLoginField_MacAddress_set, doc=r"""Mac地址""")
    OneTimePassword: "TThostFtdcPasswordType" = property(_thostmduserapi.CThostFtdcReqUserLoginField_OneTimePassword_get, _thostmduserapi.CThostFtdcReqUserLoginField_OneTimePassword_set, doc=r"""动态密码""")
    reserve1: "TThostFtdcOldIPAddressType" = property(_thostmduserapi.CThostFtdcReqUserLoginField_reserve1_get, _thostmduserapi.CThostFtdcReqUserLoginField_reserve1_set, doc=r"""保留的无效字段""")
    LoginRemark: "TThostFtdcLoginRemarkType" = property(_thostmduserapi.CThostFtdcReqUserLoginField_LoginRemark_get, _thostmduserapi.CThostFtdcReqUserLoginField_LoginRemark_set, doc=r"""登录备注""")
    ClientIPPort: "TThostFtdcIPPortType" = property(_thostmduserapi.CThostFtdcReqUserLoginField_ClientIPPort_get, _thostmduserapi.CThostFtdcReqUserLoginField_ClientIPPort_set, doc=r"""终端IP端口""")
    ClientIPAddress: "TThostFtdcIPAddressType" = property(_thostmduserapi.CThostFtdcReqUserLoginField_ClientIPAddress_get, _thostmduserapi.CThostFtdcReqUserLoginField_ClientIPAddress_set, doc=r"""终端IP地址""")

    def __init__(self):
        _thostmduserapi.CThostFtdcReqUserLoginField_swiginit(self, _thostmduserapi.new_CThostFtdcReqUserLoginField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcReqUserLoginField

# Register CThostFtdcReqUserLoginField in _thostmduserapi:
_thostmduserapi.CThostFtdcReqUserLoginField_swigregister(CThostFtdcReqUserLoginField)
class CThostFtdcRspUserLoginField(object):
    r"""用户登录应答"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    TradingDay: "TThostFtdcDateType" = property(_thostmduserapi.CThostFtdcRspUserLoginField_TradingDay_get, _thostmduserapi.CThostFtdcRspUserLoginField_TradingDay_set, doc=r"""交易日""")
    LoginTime: "TThostFtdcTimeType" = property(_thostmduserapi.CThostFtdcRspUserLoginField_LoginTime_get, _thostmduserapi.CThostFtdcRspUserLoginField_LoginTime_set, doc=r"""登录成功时间""")
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcRspUserLoginField_BrokerID_get, _thostmduserapi.CThostFtdcRspUserLoginField_BrokerID_set, doc=r"""经纪公司代码""")
    UserID: "TThostFtdcUserIDType" = property(_thostmduserapi.CThostFtdcRspUserLoginField_UserID_get, _thostmduserapi.CThostFtdcRspUserLoginField_UserID_set, doc=r"""用户代码""")
    SystemName: "TThostFtdcSystemNameType" = property(_thostmduserapi.CThostFtdcRspUserLoginField_SystemName_get, _thostmduserapi.CThostFtdcRspUserLoginField_SystemName_set, doc=r"""交易系统名称""")
    FrontID: "TThostFtdcFrontIDType" = property(_thostmduserapi.CThostFtdcRspUserLoginField_FrontID_get, _thostmduserapi.CThostFtdcRspUserLoginField_FrontID_set, doc=r"""前置编号""")
    SessionID: "TThostFtdcSessionIDType" = property(_thostmduserapi.CThostFtdcRspUserLoginField_SessionID_get, _thostmduserapi.CThostFtdcRspUserLoginField_SessionID_set, doc=r"""会话编号""")
    MaxOrderRef: "TThostFtdcOrderRefType" = property(_thostmduserapi.CThostFtdcRspUserLoginField_MaxOrderRef_get, _thostmduserapi.CThostFtdcRspUserLoginField_MaxOrderRef_set, doc=r"""最大报单引用""")
    SHFETime: "TThostFtdcTimeType" = property(_thostmduserapi.CThostFtdcRspUserLoginField_SHFETime_get, _thostmduserapi.CThostFtdcRspUserLoginField_SHFETime_set, doc=r"""上期所时间""")
    DCETime: "TThostFtdcTimeType" = property(_thostmduserapi.CThostFtdcRspUserLoginField_DCETime_get, _thostmduserapi.CThostFtdcRspUserLoginField_DCETime_set, doc=r"""大商所时间""")
    CZCETime: "TThostFtdcTimeType" = property(_thostmduserapi.CThostFtdcRspUserLoginField_CZCETime_get, _thostmduserapi.CThostFtdcRspUserLoginField_CZCETime_set, doc=r"""郑商所时间""")
    FFEXTime: "TThostFtdcTimeType" = property(_thostmduserapi.CThostFtdcRspUserLoginField_FFEXTime_get, _thostmduserapi.CThostFtdcRspUserLoginField_FFEXTime_set, doc=r"""中金所时间""")
    INETime: "TThostFtdcTimeType" = property(_thostmduserapi.CThostFtdcRspUserLoginField_INETime_get, _thostmduserapi.CThostFtdcRspUserLoginField_INETime_set, doc=r"""能源中心时间""")
    SysVersion: "TThostFtdcSysVersionType" = property(_thostmduserapi.CThostFtdcRspUserLoginField_SysVersion_get, _thostmduserapi.CThostFtdcRspUserLoginField_SysVersion_set, doc=r"""后台版本信息""")
    GFEXTime: "TThostFtdcTimeType" = property(_thostmduserapi.CThostFtdcRspUserLoginField_GFEXTime_get, _thostmduserapi.CThostFtdcRspUserLoginField_GFEXTime_set, doc=r"""广期所时间""")

    def __init__(self):
        _thostmduserapi.CThostFtdcRspUserLoginField_swiginit(self, _thostmduserapi.new_CThostFtdcRspUserLoginField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcRspUserLoginField

# Register CThostFtdcRspUserLoginField in _thostmduserapi:
_thostmduserapi.CThostFtdcRspUserLoginField_swigregister(CThostFtdcRspUserLoginField)
class CThostFtdcUserLogoutField(object):
    r"""用户登出请求"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcUserLogoutField_BrokerID_get, _thostmduserapi.CThostFtdcUserLogoutField_BrokerID_set, doc=r"""经纪公司代码""")
    UserID: "TThostFtdcUserIDType" = property(_thostmduserapi.CThostFtdcUserLogoutField_UserID_get, _thostmduserapi.CThostFtdcUserLogoutField_UserID_set, doc=r"""用户代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcUserLogoutField_swiginit(self, _thostmduserapi.new_CThostFtdcUserLogoutField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcUserLogoutField

# Register CThostFtdcUserLogoutField in _thostmduserapi:
_thostmduserapi.CThostFtdcUserLogoutField_swigregister(CThostFtdcUserLogoutField)
class CThostFtdcForceUserLogoutField(object):
    r"""强制交易员退出"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcForceUserLogoutField_BrokerID_get, _thostmduserapi.CThostFtdcForceUserLogoutField_BrokerID_set, doc=r"""经纪公司代码""")
    UserID: "TThostFtdcUserIDType" = property(_thostmduserapi.CThostFtdcForceUserLogoutField_UserID_get, _thostmduserapi.CThostFtdcForceUserLogoutField_UserID_set, doc=r"""用户代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcForceUserLogoutField_swiginit(self, _thostmduserapi.new_CThostFtdcForceUserLogoutField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcForceUserLogoutField

# Register CThostFtdcForceUserLogoutField in _thostmduserapi:
_thostmduserapi.CThostFtdcForceUserLogoutField_swigregister(CThostFtdcForceUserLogoutField)
class CThostFtdcReqAuthenticateField(object):
    r"""客户端认证请求"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcReqAuthenticateField_BrokerID_get, _thostmduserapi.CThostFtdcReqAuthenticateField_BrokerID_set, doc=r"""经纪公司代码""")
    UserID: "TThostFtdcUserIDType" = property(_thostmduserapi.CThostFtdcReqAuthenticateField_UserID_get, _thostmduserapi.CThostFtdcReqAuthenticateField_UserID_set, doc=r"""用户代码""")
    UserProductInfo: "TThostFtdcProductInfoType" = property(_thostmduserapi.CThostFtdcReqAuthenticateField_UserProductInfo_get, _thostmduserapi.CThostFtdcReqAuthenticateField_UserProductInfo_set, doc=r"""用户端产品信息""")
    AuthCode: "TThostFtdcAuthCodeType" = property(_thostmduserapi.CThostFtdcReqAuthenticateField_AuthCode_get, _thostmduserapi.CThostFtdcReqAuthenticateField_AuthCode_set, doc=r"""认证码""")
    AppID: "TThostFtdcAppIDType" = property(_thostmduserapi.CThostFtdcReqAuthenticateField_AppID_get, _thostmduserapi.CThostFtdcReqAuthenticateField_AppID_set, doc=r"""App代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcReqAuthenticateField_swiginit(self, _thostmduserapi.new_CThostFtdcReqAuthenticateField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcReqAuthenticateField

# Register CThostFtdcReqAuthenticateField in _thostmduserapi:
_thostmduserapi.CThostFtdcReqAuthenticateField_swigregister(CThostFtdcReqAuthenticateField)
class CThostFtdcRspAuthenticateField(object):
    r"""客户端认证响应"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcRspAuthenticateField_BrokerID_get, _thostmduserapi.CThostFtdcRspAuthenticateField_BrokerID_set, doc=r"""经纪公司代码""")
    UserID: "TThostFtdcUserIDType" = property(_thostmduserapi.CThostFtdcRspAuthenticateField_UserID_get, _thostmduserapi.CThostFtdcRspAuthenticateField_UserID_set, doc=r"""用户代码""")
    UserProductInfo: "TThostFtdcProductInfoType" = property(_thostmduserapi.CThostFtdcRspAuthenticateField_UserProductInfo_get, _thostmduserapi.CThostFtdcRspAuthenticateField_UserProductInfo_set, doc=r"""用户端产品信息""")
    AppID: "TThostFtdcAppIDType" = property(_thostmduserapi.CThostFtdcRspAuthenticateField_AppID_get, _thostmduserapi.CThostFtdcRspAuthenticateField_AppID_set, doc=r"""App代码""")
    AppType: "TThostFtdcAppTypeType" = property(_thostmduserapi.CThostFtdcRspAuthenticateField_AppType_get, _thostmduserapi.CThostFtdcRspAuthenticateField_AppType_set, doc=r"""App类型""")

    def __init__(self):
        _thostmduserapi.CThostFtdcRspAuthenticateField_swiginit(self, _thostmduserapi.new_CThostFtdcRspAuthenticateField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcRspAuthenticateField

# Register CThostFtdcRspAuthenticateField in _thostmduserapi:
_thostmduserapi.CThostFtdcRspAuthenticateField_swigregister(CThostFtdcRspAuthenticateField)
class CThostFtdcAuthenticationInfoField(object):
    r"""客户端认证信息"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcAuthenticationInfoField_BrokerID_get, _thostmduserapi.CThostFtdcAuthenticationInfoField_BrokerID_set, doc=r"""经纪公司代码""")
    UserID: "TThostFtdcUserIDType" = property(_thostmduserapi.CThostFtdcAuthenticationInfoField_UserID_get, _thostmduserapi.CThostFtdcAuthenticationInfoField_UserID_set, doc=r"""用户代码""")
    UserProductInfo: "TThostFtdcProductInfoType" = property(_thostmduserapi.CThostFtdcAuthenticationInfoField_UserProductInfo_get, _thostmduserapi.CThostFtdcAuthenticationInfoField_UserProductInfo_set, doc=r"""用户端产品信息""")
    AuthInfo: "TThostFtdcAuthInfoType" = property(_thostmduserapi.CThostFtdcAuthenticationInfoField_AuthInfo_get, _thostmduserapi.CThostFtdcAuthenticationInfoField_AuthInfo_set, doc=r"""认证信息""")
    IsResult: "TThostFtdcBoolType" = property(_thostmduserapi.CThostFtdcAuthenticationInfoField_IsResult_get, _thostmduserapi.CThostFtdcAuthenticationInfoField_IsResult_set, doc=r"""是否为认证结果""")
    AppID: "TThostFtdcAppIDType" = property(_thostmduserapi.CThostFtdcAuthenticationInfoField_AppID_get, _thostmduserapi.CThostFtdcAuthenticationInfoField_AppID_set, doc=r"""App代码""")
    AppType: "TThostFtdcAppTypeType" = property(_thostmduserapi.CThostFtdcAuthenticationInfoField_AppType_get, _thostmduserapi.CThostFtdcAuthenticationInfoField_AppType_set, doc=r"""App类型""")
    reserve1: "TThostFtdcOldIPAddressType" = property(_thostmduserapi.CThostFtdcAuthenticationInfoField_reserve1_get, _thostmduserapi.CThostFtdcAuthenticationInfoField_reserve1_set, doc=r"""保留的无效字段""")
    ClientIPAddress: "TThostFtdcIPAddressType" = property(_thostmduserapi.CThostFtdcAuthenticationInfoField_ClientIPAddress_get, _thostmduserapi.CThostFtdcAuthenticationInfoField_ClientIPAddress_set, doc=r"""终端IP地址""")

    def __init__(self):
        _thostmduserapi.CThostFtdcAuthenticationInfoField_swiginit(self, _thostmduserapi.new_CThostFtdcAuthenticationInfoField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcAuthenticationInfoField

# Register CThostFtdcAuthenticationInfoField in _thostmduserapi:
_thostmduserapi.CThostFtdcAuthenticationInfoField_swigregister(CThostFtdcAuthenticationInfoField)
class CThostFtdcRspUserLogin2Field(object):
    r"""用户登录应答2"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    TradingDay: "TThostFtdcDateType" = property(_thostmduserapi.CThostFtdcRspUserLogin2Field_TradingDay_get, _thostmduserapi.CThostFtdcRspUserLogin2Field_TradingDay_set, doc=r"""交易日""")
    LoginTime: "TThostFtdcTimeType" = property(_thostmduserapi.CThostFtdcRspUserLogin2Field_LoginTime_get, _thostmduserapi.CThostFtdcRspUserLogin2Field_LoginTime_set, doc=r"""登录成功时间""")
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcRspUserLogin2Field_BrokerID_get, _thostmduserapi.CThostFtdcRspUserLogin2Field_BrokerID_set, doc=r"""经纪公司代码""")
    UserID: "TThostFtdcUserIDType" = property(_thostmduserapi.CThostFtdcRspUserLogin2Field_UserID_get, _thostmduserapi.CThostFtdcRspUserLogin2Field_UserID_set, doc=r"""用户代码""")
    SystemName: "TThostFtdcSystemNameType" = property(_thostmduserapi.CThostFtdcRspUserLogin2Field_SystemName_get, _thostmduserapi.CThostFtdcRspUserLogin2Field_SystemName_set, doc=r"""交易系统名称""")
    FrontID: "TThostFtdcFrontIDType" = property(_thostmduserapi.CThostFtdcRspUserLogin2Field_FrontID_get, _thostmduserapi.CThostFtdcRspUserLogin2Field_FrontID_set, doc=r"""前置编号""")
    SessionID: "TThostFtdcSessionIDType" = property(_thostmduserapi.CThostFtdcRspUserLogin2Field_SessionID_get, _thostmduserapi.CThostFtdcRspUserLogin2Field_SessionID_set, doc=r"""会话编号""")
    MaxOrderRef: "TThostFtdcOrderRefType" = property(_thostmduserapi.CThostFtdcRspUserLogin2Field_MaxOrderRef_get, _thostmduserapi.CThostFtdcRspUserLogin2Field_MaxOrderRef_set, doc=r"""最大报单引用""")
    SHFETime: "TThostFtdcTimeType" = property(_thostmduserapi.CThostFtdcRspUserLogin2Field_SHFETime_get, _thostmduserapi.CThostFtdcRspUserLogin2Field_SHFETime_set, doc=r"""上期所时间""")
    DCETime: "TThostFtdcTimeType" = property(_thostmduserapi.CThostFtdcRspUserLogin2Field_DCETime_get, _thostmduserapi.CThostFtdcRspUserLogin2Field_DCETime_set, doc=r"""大商所时间""")
    CZCETime: "TThostFtdcTimeType" = property(_thostmduserapi.CThostFtdcRspUserLogin2Field_CZCETime_get, _thostmduserapi.CThostFtdcRspUserLogin2Field_CZCETime_set, doc=r"""郑商所时间""")
    FFEXTime: "TThostFtdcTimeType" = property(_thostmduserapi.CThostFtdcRspUserLogin2Field_FFEXTime_get, _thostmduserapi.CThostFtdcRspUserLogin2Field_FFEXTime_set, doc=r"""中金所时间""")
    INETime: "TThostFtdcTimeType" = property(_thostmduserapi.CThostFtdcRspUserLogin2Field_INETime_get, _thostmduserapi.CThostFtdcRspUserLogin2Field_INETime_set, doc=r"""能源中心时间""")
    RandomString: "TThostFtdcRandomStringType" = property(_thostmduserapi.CThostFtdcRspUserLogin2Field_RandomString_get, _thostmduserapi.CThostFtdcRspUserLogin2Field_RandomString_set, doc=r"""随机串""")

    def __init__(self):
        _thostmduserapi.CThostFtdcRspUserLogin2Field_swiginit(self, _thostmduserapi.new_CThostFtdcRspUserLogin2Field())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcRspUserLogin2Field

# Register CThostFtdcRspUserLogin2Field in _thostmduserapi:
_thostmduserapi.CThostFtdcRspUserLogin2Field_swigregister(CThostFtdcRspUserLogin2Field)
class CThostFtdcTransferHeaderField(object):
    r"""银期转帐报文头"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Version: "TThostFtdcVersionType" = property(_thostmduserapi.CThostFtdcTransferHeaderField_Version_get, _thostmduserapi.CThostFtdcTransferHeaderField_Version_set, doc=r"""版本号，常量，1.0""")
    TradeCode: "TThostFtdcTradeCodeType" = property(_thostmduserapi.CThostFtdcTransferHeaderField_TradeCode_get, _thostmduserapi.CThostFtdcTransferHeaderField_TradeCode_set, doc=r"""交易代码，必填""")
    TradeDate: "TThostFtdcTradeDateType" = property(_thostmduserapi.CThostFtdcTransferHeaderField_TradeDate_get, _thostmduserapi.CThostFtdcTransferHeaderField_TradeDate_set, doc=r"""交易日期，必填，格式：yyyymmdd""")
    TradeTime: "TThostFtdcTradeTimeType" = property(_thostmduserapi.CThostFtdcTransferHeaderField_TradeTime_get, _thostmduserapi.CThostFtdcTransferHeaderField_TradeTime_set, doc=r"""交易时间，必填，格式：hhmmss""")
    TradeSerial: "TThostFtdcTradeSerialType" = property(_thostmduserapi.CThostFtdcTransferHeaderField_TradeSerial_get, _thostmduserapi.CThostFtdcTransferHeaderField_TradeSerial_set, doc=r"""发起方流水号，N/A""")
    FutureID: "TThostFtdcFutureIDType" = property(_thostmduserapi.CThostFtdcTransferHeaderField_FutureID_get, _thostmduserapi.CThostFtdcTransferHeaderField_FutureID_set, doc=r"""期货公司代码，必填""")
    BankID: "TThostFtdcBankIDType" = property(_thostmduserapi.CThostFtdcTransferHeaderField_BankID_get, _thostmduserapi.CThostFtdcTransferHeaderField_BankID_set, doc=r"""银行代码，根据查询银行得到，必填""")
    BankBrchID: "TThostFtdcBankBrchIDType" = property(_thostmduserapi.CThostFtdcTransferHeaderField_BankBrchID_get, _thostmduserapi.CThostFtdcTransferHeaderField_BankBrchID_set, doc=r"""银行分中心代码，根据查询银行得到，必填""")
    OperNo: "TThostFtdcOperNoType" = property(_thostmduserapi.CThostFtdcTransferHeaderField_OperNo_get, _thostmduserapi.CThostFtdcTransferHeaderField_OperNo_set, doc=r"""操作员，N/A""")
    DeviceID: "TThostFtdcDeviceIDType" = property(_thostmduserapi.CThostFtdcTransferHeaderField_DeviceID_get, _thostmduserapi.CThostFtdcTransferHeaderField_DeviceID_set, doc=r"""交易设备类型，N/A""")
    RecordNum: "TThostFtdcRecordNumType" = property(_thostmduserapi.CThostFtdcTransferHeaderField_RecordNum_get, _thostmduserapi.CThostFtdcTransferHeaderField_RecordNum_set, doc=r"""记录数，N/A""")
    SessionID: "TThostFtdcSessionIDType" = property(_thostmduserapi.CThostFtdcTransferHeaderField_SessionID_get, _thostmduserapi.CThostFtdcTransferHeaderField_SessionID_set, doc=r"""会话编号，N/A""")
    RequestID: "TThostFtdcRequestIDType" = property(_thostmduserapi.CThostFtdcTransferHeaderField_RequestID_get, _thostmduserapi.CThostFtdcTransferHeaderField_RequestID_set, doc=r"""请求编号，N/A""")

    def __init__(self):
        _thostmduserapi.CThostFtdcTransferHeaderField_swiginit(self, _thostmduserapi.new_CThostFtdcTransferHeaderField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcTransferHeaderField

# Register CThostFtdcTransferHeaderField in _thostmduserapi:
_thostmduserapi.CThostFtdcTransferHeaderField_swigregister(CThostFtdcTransferHeaderField)
class CThostFtdcTransferBankToFutureReqField(object):
    r"""银行资金转期货请求，TradeCode=202001"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    FutureAccount: "TThostFtdcAccountIDType" = property(_thostmduserapi.CThostFtdcTransferBankToFutureReqField_FutureAccount_get, _thostmduserapi.CThostFtdcTransferBankToFutureReqField_FutureAccount_set, doc=r"""期货资金账户""")
    FuturePwdFlag: "TThostFtdcFuturePwdFlagType" = property(_thostmduserapi.CThostFtdcTransferBankToFutureReqField_FuturePwdFlag_get, _thostmduserapi.CThostFtdcTransferBankToFutureReqField_FuturePwdFlag_set, doc=r"""密码标志""")
    FutureAccPwd: "TThostFtdcFutureAccPwdType" = property(_thostmduserapi.CThostFtdcTransferBankToFutureReqField_FutureAccPwd_get, _thostmduserapi.CThostFtdcTransferBankToFutureReqField_FutureAccPwd_set, doc=r"""密码""")
    TradeAmt: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcTransferBankToFutureReqField_TradeAmt_get, _thostmduserapi.CThostFtdcTransferBankToFutureReqField_TradeAmt_set, doc=r"""转账金额""")
    CustFee: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcTransferBankToFutureReqField_CustFee_get, _thostmduserapi.CThostFtdcTransferBankToFutureReqField_CustFee_set, doc=r"""客户手续费""")
    CurrencyCode: "TThostFtdcCurrencyCodeType" = property(_thostmduserapi.CThostFtdcTransferBankToFutureReqField_CurrencyCode_get, _thostmduserapi.CThostFtdcTransferBankToFutureReqField_CurrencyCode_set, doc=r"""币种：RMB-人民币 USD-美圆 HKD-港元""")

    def __init__(self):
        _thostmduserapi.CThostFtdcTransferBankToFutureReqField_swiginit(self, _thostmduserapi.new_CThostFtdcTransferBankToFutureReqField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcTransferBankToFutureReqField

# Register CThostFtdcTransferBankToFutureReqField in _thostmduserapi:
_thostmduserapi.CThostFtdcTransferBankToFutureReqField_swigregister(CThostFtdcTransferBankToFutureReqField)
class CThostFtdcTransferBankToFutureRspField(object):
    r"""银行资金转期货请求响应"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    RetCode: "TThostFtdcRetCodeType" = property(_thostmduserapi.CThostFtdcTransferBankToFutureRspField_RetCode_get, _thostmduserapi.CThostFtdcTransferBankToFutureRspField_RetCode_set, doc=r"""响应代码""")
    RetInfo: "TThostFtdcRetInfoType" = property(_thostmduserapi.CThostFtdcTransferBankToFutureRspField_RetInfo_get, _thostmduserapi.CThostFtdcTransferBankToFutureRspField_RetInfo_set, doc=r"""响应信息""")
    FutureAccount: "TThostFtdcAccountIDType" = property(_thostmduserapi.CThostFtdcTransferBankToFutureRspField_FutureAccount_get, _thostmduserapi.CThostFtdcTransferBankToFutureRspField_FutureAccount_set, doc=r"""资金账户""")
    TradeAmt: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcTransferBankToFutureRspField_TradeAmt_get, _thostmduserapi.CThostFtdcTransferBankToFutureRspField_TradeAmt_set, doc=r"""转帐金额""")
    CustFee: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcTransferBankToFutureRspField_CustFee_get, _thostmduserapi.CThostFtdcTransferBankToFutureRspField_CustFee_set, doc=r"""应收客户手续费""")
    CurrencyCode: "TThostFtdcCurrencyCodeType" = property(_thostmduserapi.CThostFtdcTransferBankToFutureRspField_CurrencyCode_get, _thostmduserapi.CThostFtdcTransferBankToFutureRspField_CurrencyCode_set, doc=r"""币种""")

    def __init__(self):
        _thostmduserapi.CThostFtdcTransferBankToFutureRspField_swiginit(self, _thostmduserapi.new_CThostFtdcTransferBankToFutureRspField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcTransferBankToFutureRspField

# Register CThostFtdcTransferBankToFutureRspField in _thostmduserapi:
_thostmduserapi.CThostFtdcTransferBankToFutureRspField_swigregister(CThostFtdcTransferBankToFutureRspField)
class CThostFtdcTransferFutureToBankReqField(object):
    r"""期货资金转银行请求，TradeCode=202002"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    FutureAccount: "TThostFtdcAccountIDType" = property(_thostmduserapi.CThostFtdcTransferFutureToBankReqField_FutureAccount_get, _thostmduserapi.CThostFtdcTransferFutureToBankReqField_FutureAccount_set, doc=r"""期货资金账户""")
    FuturePwdFlag: "TThostFtdcFuturePwdFlagType" = property(_thostmduserapi.CThostFtdcTransferFutureToBankReqField_FuturePwdFlag_get, _thostmduserapi.CThostFtdcTransferFutureToBankReqField_FuturePwdFlag_set, doc=r"""密码标志""")
    FutureAccPwd: "TThostFtdcFutureAccPwdType" = property(_thostmduserapi.CThostFtdcTransferFutureToBankReqField_FutureAccPwd_get, _thostmduserapi.CThostFtdcTransferFutureToBankReqField_FutureAccPwd_set, doc=r"""密码""")
    TradeAmt: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcTransferFutureToBankReqField_TradeAmt_get, _thostmduserapi.CThostFtdcTransferFutureToBankReqField_TradeAmt_set, doc=r"""转账金额""")
    CustFee: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcTransferFutureToBankReqField_CustFee_get, _thostmduserapi.CThostFtdcTransferFutureToBankReqField_CustFee_set, doc=r"""客户手续费""")
    CurrencyCode: "TThostFtdcCurrencyCodeType" = property(_thostmduserapi.CThostFtdcTransferFutureToBankReqField_CurrencyCode_get, _thostmduserapi.CThostFtdcTransferFutureToBankReqField_CurrencyCode_set, doc=r"""币种：RMB-人民币 USD-美圆 HKD-港元""")

    def __init__(self):
        _thostmduserapi.CThostFtdcTransferFutureToBankReqField_swiginit(self, _thostmduserapi.new_CThostFtdcTransferFutureToBankReqField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcTransferFutureToBankReqField

# Register CThostFtdcTransferFutureToBankReqField in _thostmduserapi:
_thostmduserapi.CThostFtdcTransferFutureToBankReqField_swigregister(CThostFtdcTransferFutureToBankReqField)
class CThostFtdcTransferFutureToBankRspField(object):
    r"""期货资金转银行请求响应"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    RetCode: "TThostFtdcRetCodeType" = property(_thostmduserapi.CThostFtdcTransferFutureToBankRspField_RetCode_get, _thostmduserapi.CThostFtdcTransferFutureToBankRspField_RetCode_set, doc=r"""响应代码""")
    RetInfo: "TThostFtdcRetInfoType" = property(_thostmduserapi.CThostFtdcTransferFutureToBankRspField_RetInfo_get, _thostmduserapi.CThostFtdcTransferFutureToBankRspField_RetInfo_set, doc=r"""响应信息""")
    FutureAccount: "TThostFtdcAccountIDType" = property(_thostmduserapi.CThostFtdcTransferFutureToBankRspField_FutureAccount_get, _thostmduserapi.CThostFtdcTransferFutureToBankRspField_FutureAccount_set, doc=r"""资金账户""")
    TradeAmt: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcTransferFutureToBankRspField_TradeAmt_get, _thostmduserapi.CThostFtdcTransferFutureToBankRspField_TradeAmt_set, doc=r"""转帐金额""")
    CustFee: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcTransferFutureToBankRspField_CustFee_get, _thostmduserapi.CThostFtdcTransferFutureToBankRspField_CustFee_set, doc=r"""应收客户手续费""")
    CurrencyCode: "TThostFtdcCurrencyCodeType" = property(_thostmduserapi.CThostFtdcTransferFutureToBankRspField_CurrencyCode_get, _thostmduserapi.CThostFtdcTransferFutureToBankRspField_CurrencyCode_set, doc=r"""币种""")

    def __init__(self):
        _thostmduserapi.CThostFtdcTransferFutureToBankRspField_swiginit(self, _thostmduserapi.new_CThostFtdcTransferFutureToBankRspField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcTransferFutureToBankRspField

# Register CThostFtdcTransferFutureToBankRspField in _thostmduserapi:
_thostmduserapi.CThostFtdcTransferFutureToBankRspField_swigregister(CThostFtdcTransferFutureToBankRspField)
class CThostFtdcTransferQryBankReqField(object):
    r"""查询银行资金请求，TradeCode=204002"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    FutureAccount: "TThostFtdcAccountIDType" = property(_thostmduserapi.CThostFtdcTransferQryBankReqField_FutureAccount_get, _thostmduserapi.CThostFtdcTransferQryBankReqField_FutureAccount_set, doc=r"""期货资金账户""")
    FuturePwdFlag: "TThostFtdcFuturePwdFlagType" = property(_thostmduserapi.CThostFtdcTransferQryBankReqField_FuturePwdFlag_get, _thostmduserapi.CThostFtdcTransferQryBankReqField_FuturePwdFlag_set, doc=r"""密码标志""")
    FutureAccPwd: "TThostFtdcFutureAccPwdType" = property(_thostmduserapi.CThostFtdcTransferQryBankReqField_FutureAccPwd_get, _thostmduserapi.CThostFtdcTransferQryBankReqField_FutureAccPwd_set, doc=r"""密码""")
    CurrencyCode: "TThostFtdcCurrencyCodeType" = property(_thostmduserapi.CThostFtdcTransferQryBankReqField_CurrencyCode_get, _thostmduserapi.CThostFtdcTransferQryBankReqField_CurrencyCode_set, doc=r"""币种：RMB-人民币 USD-美圆 HKD-港元""")

    def __init__(self):
        _thostmduserapi.CThostFtdcTransferQryBankReqField_swiginit(self, _thostmduserapi.new_CThostFtdcTransferQryBankReqField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcTransferQryBankReqField

# Register CThostFtdcTransferQryBankReqField in _thostmduserapi:
_thostmduserapi.CThostFtdcTransferQryBankReqField_swigregister(CThostFtdcTransferQryBankReqField)
class CThostFtdcTransferQryBankRspField(object):
    r"""查询银行资金请求响应"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    RetCode: "TThostFtdcRetCodeType" = property(_thostmduserapi.CThostFtdcTransferQryBankRspField_RetCode_get, _thostmduserapi.CThostFtdcTransferQryBankRspField_RetCode_set, doc=r"""响应代码""")
    RetInfo: "TThostFtdcRetInfoType" = property(_thostmduserapi.CThostFtdcTransferQryBankRspField_RetInfo_get, _thostmduserapi.CThostFtdcTransferQryBankRspField_RetInfo_set, doc=r"""响应信息""")
    FutureAccount: "TThostFtdcAccountIDType" = property(_thostmduserapi.CThostFtdcTransferQryBankRspField_FutureAccount_get, _thostmduserapi.CThostFtdcTransferQryBankRspField_FutureAccount_set, doc=r"""资金账户""")
    TradeAmt: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcTransferQryBankRspField_TradeAmt_get, _thostmduserapi.CThostFtdcTransferQryBankRspField_TradeAmt_set, doc=r"""银行余额""")
    UseAmt: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcTransferQryBankRspField_UseAmt_get, _thostmduserapi.CThostFtdcTransferQryBankRspField_UseAmt_set, doc=r"""银行可用余额""")
    FetchAmt: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcTransferQryBankRspField_FetchAmt_get, _thostmduserapi.CThostFtdcTransferQryBankRspField_FetchAmt_set, doc=r"""银行可取余额""")
    CurrencyCode: "TThostFtdcCurrencyCodeType" = property(_thostmduserapi.CThostFtdcTransferQryBankRspField_CurrencyCode_get, _thostmduserapi.CThostFtdcTransferQryBankRspField_CurrencyCode_set, doc=r"""币种""")

    def __init__(self):
        _thostmduserapi.CThostFtdcTransferQryBankRspField_swiginit(self, _thostmduserapi.new_CThostFtdcTransferQryBankRspField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcTransferQryBankRspField

# Register CThostFtdcTransferQryBankRspField in _thostmduserapi:
_thostmduserapi.CThostFtdcTransferQryBankRspField_swigregister(CThostFtdcTransferQryBankRspField)
class CThostFtdcTransferQryDetailReqField(object):
    r"""查询银行交易明细请求，TradeCode=204999"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    FutureAccount: "TThostFtdcAccountIDType" = property(_thostmduserapi.CThostFtdcTransferQryDetailReqField_FutureAccount_get, _thostmduserapi.CThostFtdcTransferQryDetailReqField_FutureAccount_set, doc=r"""期货资金账户""")

    def __init__(self):
        _thostmduserapi.CThostFtdcTransferQryDetailReqField_swiginit(self, _thostmduserapi.new_CThostFtdcTransferQryDetailReqField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcTransferQryDetailReqField

# Register CThostFtdcTransferQryDetailReqField in _thostmduserapi:
_thostmduserapi.CThostFtdcTransferQryDetailReqField_swigregister(CThostFtdcTransferQryDetailReqField)
class CThostFtdcTransferQryDetailRspField(object):
    r"""查询银行交易明细请求响应"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    TradeDate: "TThostFtdcDateType" = property(_thostmduserapi.CThostFtdcTransferQryDetailRspField_TradeDate_get, _thostmduserapi.CThostFtdcTransferQryDetailRspField_TradeDate_set, doc=r"""交易日期""")
    TradeTime: "TThostFtdcTradeTimeType" = property(_thostmduserapi.CThostFtdcTransferQryDetailRspField_TradeTime_get, _thostmduserapi.CThostFtdcTransferQryDetailRspField_TradeTime_set, doc=r"""交易时间""")
    TradeCode: "TThostFtdcTradeCodeType" = property(_thostmduserapi.CThostFtdcTransferQryDetailRspField_TradeCode_get, _thostmduserapi.CThostFtdcTransferQryDetailRspField_TradeCode_set, doc=r"""交易代码""")
    FutureSerial: "TThostFtdcTradeSerialNoType" = property(_thostmduserapi.CThostFtdcTransferQryDetailRspField_FutureSerial_get, _thostmduserapi.CThostFtdcTransferQryDetailRspField_FutureSerial_set, doc=r"""期货流水号""")
    FutureID: "TThostFtdcFutureIDType" = property(_thostmduserapi.CThostFtdcTransferQryDetailRspField_FutureID_get, _thostmduserapi.CThostFtdcTransferQryDetailRspField_FutureID_set, doc=r"""期货公司代码""")
    FutureAccount: "TThostFtdcFutureAccountType" = property(_thostmduserapi.CThostFtdcTransferQryDetailRspField_FutureAccount_get, _thostmduserapi.CThostFtdcTransferQryDetailRspField_FutureAccount_set, doc=r"""资金帐号""")
    BankSerial: "TThostFtdcTradeSerialNoType" = property(_thostmduserapi.CThostFtdcTransferQryDetailRspField_BankSerial_get, _thostmduserapi.CThostFtdcTransferQryDetailRspField_BankSerial_set, doc=r"""银行流水号""")
    BankID: "TThostFtdcBankIDType" = property(_thostmduserapi.CThostFtdcTransferQryDetailRspField_BankID_get, _thostmduserapi.CThostFtdcTransferQryDetailRspField_BankID_set, doc=r"""银行代码""")
    BankBrchID: "TThostFtdcBankBrchIDType" = property(_thostmduserapi.CThostFtdcTransferQryDetailRspField_BankBrchID_get, _thostmduserapi.CThostFtdcTransferQryDetailRspField_BankBrchID_set, doc=r"""银行分中心代码""")
    BankAccount: "TThostFtdcBankAccountType" = property(_thostmduserapi.CThostFtdcTransferQryDetailRspField_BankAccount_get, _thostmduserapi.CThostFtdcTransferQryDetailRspField_BankAccount_set, doc=r"""银行账号""")
    CertCode: "TThostFtdcCertCodeType" = property(_thostmduserapi.CThostFtdcTransferQryDetailRspField_CertCode_get, _thostmduserapi.CThostFtdcTransferQryDetailRspField_CertCode_set, doc=r"""证件号码""")
    CurrencyCode: "TThostFtdcCurrencyCodeType" = property(_thostmduserapi.CThostFtdcTransferQryDetailRspField_CurrencyCode_get, _thostmduserapi.CThostFtdcTransferQryDetailRspField_CurrencyCode_set, doc=r"""货币代码""")
    TxAmount: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcTransferQryDetailRspField_TxAmount_get, _thostmduserapi.CThostFtdcTransferQryDetailRspField_TxAmount_set, doc=r"""发生金额""")
    Flag: "TThostFtdcTransferValidFlagType" = property(_thostmduserapi.CThostFtdcTransferQryDetailRspField_Flag_get, _thostmduserapi.CThostFtdcTransferQryDetailRspField_Flag_set, doc=r"""有效标志""")

    def __init__(self):
        _thostmduserapi.CThostFtdcTransferQryDetailRspField_swiginit(self, _thostmduserapi.new_CThostFtdcTransferQryDetailRspField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcTransferQryDetailRspField

# Register CThostFtdcTransferQryDetailRspField in _thostmduserapi:
_thostmduserapi.CThostFtdcTransferQryDetailRspField_swigregister(CThostFtdcTransferQryDetailRspField)
class CThostFtdcRspInfoField(object):
    r"""响应信息"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ErrorID: "TThostFtdcErrorIDType" = property(_thostmduserapi.CThostFtdcRspInfoField_ErrorID_get, _thostmduserapi.CThostFtdcRspInfoField_ErrorID_set, doc=r"""错误代码""")
    ErrorMsg: "TThostFtdcErrorMsgType" = property(_thostmduserapi.CThostFtdcRspInfoField_ErrorMsg_get, _thostmduserapi.CThostFtdcRspInfoField_ErrorMsg_set, doc=r"""错误信息""")

    def __init__(self):
        _thostmduserapi.CThostFtdcRspInfoField_swiginit(self, _thostmduserapi.new_CThostFtdcRspInfoField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcRspInfoField

# Register CThostFtdcRspInfoField in _thostmduserapi:
_thostmduserapi.CThostFtdcRspInfoField_swigregister(CThostFtdcRspInfoField)
class CThostFtdcExchangeField(object):
    r"""交易所"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcExchangeField_ExchangeID_get, _thostmduserapi.CThostFtdcExchangeField_ExchangeID_set, doc=r"""交易所代码""")
    ExchangeName: "TThostFtdcExchangeNameType" = property(_thostmduserapi.CThostFtdcExchangeField_ExchangeName_get, _thostmduserapi.CThostFtdcExchangeField_ExchangeName_set, doc=r"""交易所名称""")
    ExchangeProperty: "TThostFtdcExchangePropertyType" = property(_thostmduserapi.CThostFtdcExchangeField_ExchangeProperty_get, _thostmduserapi.CThostFtdcExchangeField_ExchangeProperty_set, doc=r"""交易所属性""")

    def __init__(self):
        _thostmduserapi.CThostFtdcExchangeField_swiginit(self, _thostmduserapi.new_CThostFtdcExchangeField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcExchangeField

# Register CThostFtdcExchangeField in _thostmduserapi:
_thostmduserapi.CThostFtdcExchangeField_swigregister(CThostFtdcExchangeField)
class CThostFtdcProductField(object):
    r"""产品"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    reserve1: "TThostFtdcOldInstrumentIDType" = property(_thostmduserapi.CThostFtdcProductField_reserve1_get, _thostmduserapi.CThostFtdcProductField_reserve1_set, doc=r"""保留的无效字段""")
    ProductName: "TThostFtdcProductNameType" = property(_thostmduserapi.CThostFtdcProductField_ProductName_get, _thostmduserapi.CThostFtdcProductField_ProductName_set, doc=r"""产品名称""")
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcProductField_ExchangeID_get, _thostmduserapi.CThostFtdcProductField_ExchangeID_set, doc=r"""交易所代码""")
    ProductClass: "TThostFtdcProductClassType" = property(_thostmduserapi.CThostFtdcProductField_ProductClass_get, _thostmduserapi.CThostFtdcProductField_ProductClass_set, doc=r"""产品类型""")
    VolumeMultiple: "TThostFtdcVolumeMultipleType" = property(_thostmduserapi.CThostFtdcProductField_VolumeMultiple_get, _thostmduserapi.CThostFtdcProductField_VolumeMultiple_set, doc=r"""合约数量乘数""")
    PriceTick: "TThostFtdcPriceType" = property(_thostmduserapi.CThostFtdcProductField_PriceTick_get, _thostmduserapi.CThostFtdcProductField_PriceTick_set, doc=r"""最小变动价位""")
    MaxMarketOrderVolume: "TThostFtdcVolumeType" = property(_thostmduserapi.CThostFtdcProductField_MaxMarketOrderVolume_get, _thostmduserapi.CThostFtdcProductField_MaxMarketOrderVolume_set, doc=r"""市价单最大下单量""")
    MinMarketOrderVolume: "TThostFtdcVolumeType" = property(_thostmduserapi.CThostFtdcProductField_MinMarketOrderVolume_get, _thostmduserapi.CThostFtdcProductField_MinMarketOrderVolume_set, doc=r"""市价单最小下单量""")
    MaxLimitOrderVolume: "TThostFtdcVolumeType" = property(_thostmduserapi.CThostFtdcProductField_MaxLimitOrderVolume_get, _thostmduserapi.CThostFtdcProductField_MaxLimitOrderVolume_set, doc=r"""限价单最大下单量""")
    MinLimitOrderVolume: "TThostFtdcVolumeType" = property(_thostmduserapi.CThostFtdcProductField_MinLimitOrderVolume_get, _thostmduserapi.CThostFtdcProductField_MinLimitOrderVolume_set, doc=r"""限价单最小下单量""")
    PositionType: "TThostFtdcPositionTypeType" = property(_thostmduserapi.CThostFtdcProductField_PositionType_get, _thostmduserapi.CThostFtdcProductField_PositionType_set, doc=r"""持仓类型""")
    PositionDateType: "TThostFtdcPositionDateTypeType" = property(_thostmduserapi.CThostFtdcProductField_PositionDateType_get, _thostmduserapi.CThostFtdcProductField_PositionDateType_set, doc=r"""持仓日期类型""")
    CloseDealType: "TThostFtdcCloseDealTypeType" = property(_thostmduserapi.CThostFtdcProductField_CloseDealType_get, _thostmduserapi.CThostFtdcProductField_CloseDealType_set, doc=r"""平仓处理类型""")
    TradeCurrencyID: "TThostFtdcCurrencyIDType" = property(_thostmduserapi.CThostFtdcProductField_TradeCurrencyID_get, _thostmduserapi.CThostFtdcProductField_TradeCurrencyID_set, doc=r"""交易币种类型""")
    MortgageFundUseRange: "TThostFtdcMortgageFundUseRangeType" = property(_thostmduserapi.CThostFtdcProductField_MortgageFundUseRange_get, _thostmduserapi.CThostFtdcProductField_MortgageFundUseRange_set, doc=r"""质押资金可用范围""")
    reserve2: "TThostFtdcOldInstrumentIDType" = property(_thostmduserapi.CThostFtdcProductField_reserve2_get, _thostmduserapi.CThostFtdcProductField_reserve2_set, doc=r"""保留的无效字段""")
    UnderlyingMultiple: "TThostFtdcUnderlyingMultipleType" = property(_thostmduserapi.CThostFtdcProductField_UnderlyingMultiple_get, _thostmduserapi.CThostFtdcProductField_UnderlyingMultiple_set, doc=r"""合约基础商品乘数""")
    ProductID: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcProductField_ProductID_get, _thostmduserapi.CThostFtdcProductField_ProductID_set, doc=r"""产品代码""")
    ExchangeProductID: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcProductField_ExchangeProductID_get, _thostmduserapi.CThostFtdcProductField_ExchangeProductID_set, doc=r"""交易所产品代码""")
    OpenLimitControlLevel: "TThostFtdcOpenLimitControlLevelType" = property(_thostmduserapi.CThostFtdcProductField_OpenLimitControlLevel_get, _thostmduserapi.CThostFtdcProductField_OpenLimitControlLevel_set, doc=r"""开仓量限制粒度""")
    OrderFreqControlLevel: "TThostFtdcOrderFreqControlLevelType" = property(_thostmduserapi.CThostFtdcProductField_OrderFreqControlLevel_get, _thostmduserapi.CThostFtdcProductField_OrderFreqControlLevel_set, doc=r"""报单频率控制粒度""")

    def __init__(self):
        _thostmduserapi.CThostFtdcProductField_swiginit(self, _thostmduserapi.new_CThostFtdcProductField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcProductField

# Register CThostFtdcProductField in _thostmduserapi:
_thostmduserapi.CThostFtdcProductField_swigregister(CThostFtdcProductField)
class CThostFtdcInstrumentField(object):
    r"""合约"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    reserve1: "TThostFtdcOldInstrumentIDType" = property(_thostmduserapi.CThostFtdcInstrumentField_reserve1_get, _thostmduserapi.CThostFtdcInstrumentField_reserve1_set, doc=r"""保留的无效字段""")
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcInstrumentField_ExchangeID_get, _thostmduserapi.CThostFtdcInstrumentField_ExchangeID_set, doc=r"""交易所代码""")
    InstrumentName: "TThostFtdcInstrumentNameType" = property(_thostmduserapi.CThostFtdcInstrumentField_InstrumentName_get, _thostmduserapi.CThostFtdcInstrumentField_InstrumentName_set, doc=r"""合约名称""")
    reserve2: "TThostFtdcOldExchangeInstIDType" = property(_thostmduserapi.CThostFtdcInstrumentField_reserve2_get, _thostmduserapi.CThostFtdcInstrumentField_reserve2_set, doc=r"""保留的无效字段""")
    reserve3: "TThostFtdcOldInstrumentIDType" = property(_thostmduserapi.CThostFtdcInstrumentField_reserve3_get, _thostmduserapi.CThostFtdcInstrumentField_reserve3_set, doc=r"""保留的无效字段""")
    ProductClass: "TThostFtdcProductClassType" = property(_thostmduserapi.CThostFtdcInstrumentField_ProductClass_get, _thostmduserapi.CThostFtdcInstrumentField_ProductClass_set, doc=r"""产品类型""")
    DeliveryYear: "TThostFtdcYearType" = property(_thostmduserapi.CThostFtdcInstrumentField_DeliveryYear_get, _thostmduserapi.CThostFtdcInstrumentField_DeliveryYear_set, doc=r"""交割年份""")
    DeliveryMonth: "TThostFtdcMonthType" = property(_thostmduserapi.CThostFtdcInstrumentField_DeliveryMonth_get, _thostmduserapi.CThostFtdcInstrumentField_DeliveryMonth_set, doc=r"""交割月""")
    MaxMarketOrderVolume: "TThostFtdcVolumeType" = property(_thostmduserapi.CThostFtdcInstrumentField_MaxMarketOrderVolume_get, _thostmduserapi.CThostFtdcInstrumentField_MaxMarketOrderVolume_set, doc=r"""市价单最大下单量""")
    MinMarketOrderVolume: "TThostFtdcVolumeType" = property(_thostmduserapi.CThostFtdcInstrumentField_MinMarketOrderVolume_get, _thostmduserapi.CThostFtdcInstrumentField_MinMarketOrderVolume_set, doc=r"""市价单最小下单量""")
    MaxLimitOrderVolume: "TThostFtdcVolumeType" = property(_thostmduserapi.CThostFtdcInstrumentField_MaxLimitOrderVolume_get, _thostmduserapi.CThostFtdcInstrumentField_MaxLimitOrderVolume_set, doc=r"""限价单最大下单量""")
    MinLimitOrderVolume: "TThostFtdcVolumeType" = property(_thostmduserapi.CThostFtdcInstrumentField_MinLimitOrderVolume_get, _thostmduserapi.CThostFtdcInstrumentField_MinLimitOrderVolume_set, doc=r"""限价单最小下单量""")
    VolumeMultiple: "TThostFtdcVolumeMultipleType" = property(_thostmduserapi.CThostFtdcInstrumentField_VolumeMultiple_get, _thostmduserapi.CThostFtdcInstrumentField_VolumeMultiple_set, doc=r"""合约数量乘数""")
    PriceTick: "TThostFtdcPriceType" = property(_thostmduserapi.CThostFtdcInstrumentField_PriceTick_get, _thostmduserapi.CThostFtdcInstrumentField_PriceTick_set, doc=r"""最小变动价位""")
    CreateDate: "TThostFtdcDateType" = property(_thostmduserapi.CThostFtdcInstrumentField_CreateDate_get, _thostmduserapi.CThostFtdcInstrumentField_CreateDate_set, doc=r"""创建日""")
    OpenDate: "TThostFtdcDateType" = property(_thostmduserapi.CThostFtdcInstrumentField_OpenDate_get, _thostmduserapi.CThostFtdcInstrumentField_OpenDate_set, doc=r"""上市日""")
    ExpireDate: "TThostFtdcDateType" = property(_thostmduserapi.CThostFtdcInstrumentField_ExpireDate_get, _thostmduserapi.CThostFtdcInstrumentField_ExpireDate_set, doc=r"""到期日""")
    StartDelivDate: "TThostFtdcDateType" = property(_thostmduserapi.CThostFtdcInstrumentField_StartDelivDate_get, _thostmduserapi.CThostFtdcInstrumentField_StartDelivDate_set, doc=r"""开始交割日""")
    EndDelivDate: "TThostFtdcDateType" = property(_thostmduserapi.CThostFtdcInstrumentField_EndDelivDate_get, _thostmduserapi.CThostFtdcInstrumentField_EndDelivDate_set, doc=r"""结束交割日""")
    InstLifePhase: "TThostFtdcInstLifePhaseType" = property(_thostmduserapi.CThostFtdcInstrumentField_InstLifePhase_get, _thostmduserapi.CThostFtdcInstrumentField_InstLifePhase_set, doc=r"""合约生命周期状态""")
    IsTrading: "TThostFtdcBoolType" = property(_thostmduserapi.CThostFtdcInstrumentField_IsTrading_get, _thostmduserapi.CThostFtdcInstrumentField_IsTrading_set, doc=r"""当前是否交易""")
    PositionType: "TThostFtdcPositionTypeType" = property(_thostmduserapi.CThostFtdcInstrumentField_PositionType_get, _thostmduserapi.CThostFtdcInstrumentField_PositionType_set, doc=r"""持仓类型""")
    PositionDateType: "TThostFtdcPositionDateTypeType" = property(_thostmduserapi.CThostFtdcInstrumentField_PositionDateType_get, _thostmduserapi.CThostFtdcInstrumentField_PositionDateType_set, doc=r"""持仓日期类型""")
    LongMarginRatio: "TThostFtdcRatioType" = property(_thostmduserapi.CThostFtdcInstrumentField_LongMarginRatio_get, _thostmduserapi.CThostFtdcInstrumentField_LongMarginRatio_set, doc=r"""多头保证金率""")
    ShortMarginRatio: "TThostFtdcRatioType" = property(_thostmduserapi.CThostFtdcInstrumentField_ShortMarginRatio_get, _thostmduserapi.CThostFtdcInstrumentField_ShortMarginRatio_set, doc=r"""空头保证金率""")
    MaxMarginSideAlgorithm: "TThostFtdcMaxMarginSideAlgorithmType" = property(_thostmduserapi.CThostFtdcInstrumentField_MaxMarginSideAlgorithm_get, _thostmduserapi.CThostFtdcInstrumentField_MaxMarginSideAlgorithm_set, doc=r"""是否使用大额单边保证金算法""")
    reserve4: "TThostFtdcOldInstrumentIDType" = property(_thostmduserapi.CThostFtdcInstrumentField_reserve4_get, _thostmduserapi.CThostFtdcInstrumentField_reserve4_set, doc=r"""保留的无效字段""")
    StrikePrice: "TThostFtdcPriceType" = property(_thostmduserapi.CThostFtdcInstrumentField_StrikePrice_get, _thostmduserapi.CThostFtdcInstrumentField_StrikePrice_set, doc=r"""执行价""")
    OptionsType: "TThostFtdcOptionsTypeType" = property(_thostmduserapi.CThostFtdcInstrumentField_OptionsType_get, _thostmduserapi.CThostFtdcInstrumentField_OptionsType_set, doc=r"""期权类型""")
    UnderlyingMultiple: "TThostFtdcUnderlyingMultipleType" = property(_thostmduserapi.CThostFtdcInstrumentField_UnderlyingMultiple_get, _thostmduserapi.CThostFtdcInstrumentField_UnderlyingMultiple_set, doc=r"""合约基础商品乘数""")
    CombinationType: "TThostFtdcCombinationTypeType" = property(_thostmduserapi.CThostFtdcInstrumentField_CombinationType_get, _thostmduserapi.CThostFtdcInstrumentField_CombinationType_set, doc=r"""组合类型""")
    InstrumentID: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcInstrumentField_InstrumentID_get, _thostmduserapi.CThostFtdcInstrumentField_InstrumentID_set, doc=r"""合约代码""")
    ExchangeInstID: "TThostFtdcExchangeInstIDType" = property(_thostmduserapi.CThostFtdcInstrumentField_ExchangeInstID_get, _thostmduserapi.CThostFtdcInstrumentField_ExchangeInstID_set, doc=r"""合约在交易所的代码""")
    ProductID: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcInstrumentField_ProductID_get, _thostmduserapi.CThostFtdcInstrumentField_ProductID_set, doc=r"""产品代码""")
    UnderlyingInstrID: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcInstrumentField_UnderlyingInstrID_get, _thostmduserapi.CThostFtdcInstrumentField_UnderlyingInstrID_set, doc=r"""基础商品代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcInstrumentField_swiginit(self, _thostmduserapi.new_CThostFtdcInstrumentField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcInstrumentField

# Register CThostFtdcInstrumentField in _thostmduserapi:
_thostmduserapi.CThostFtdcInstrumentField_swigregister(CThostFtdcInstrumentField)
class CThostFtdcBrokerField(object):
    r"""经纪公司"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcBrokerField_BrokerID_get, _thostmduserapi.CThostFtdcBrokerField_BrokerID_set, doc=r"""经纪公司代码""")
    BrokerAbbr: "TThostFtdcBrokerAbbrType" = property(_thostmduserapi.CThostFtdcBrokerField_BrokerAbbr_get, _thostmduserapi.CThostFtdcBrokerField_BrokerAbbr_set, doc=r"""经纪公司简称""")
    BrokerName: "TThostFtdcBrokerNameType" = property(_thostmduserapi.CThostFtdcBrokerField_BrokerName_get, _thostmduserapi.CThostFtdcBrokerField_BrokerName_set, doc=r"""经纪公司名称""")
    IsActive: "TThostFtdcBoolType" = property(_thostmduserapi.CThostFtdcBrokerField_IsActive_get, _thostmduserapi.CThostFtdcBrokerField_IsActive_set, doc=r"""是否活跃""")

    def __init__(self):
        _thostmduserapi.CThostFtdcBrokerField_swiginit(self, _thostmduserapi.new_CThostFtdcBrokerField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcBrokerField

# Register CThostFtdcBrokerField in _thostmduserapi:
_thostmduserapi.CThostFtdcBrokerField_swigregister(CThostFtdcBrokerField)
class CThostFtdcTraderField(object):
    r"""交易所交易员"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcTraderField_ExchangeID_get, _thostmduserapi.CThostFtdcTraderField_ExchangeID_set, doc=r"""交易所代码""")
    TraderID: "TThostFtdcTraderIDType" = property(_thostmduserapi.CThostFtdcTraderField_TraderID_get, _thostmduserapi.CThostFtdcTraderField_TraderID_set, doc=r"""交易所交易员代码""")
    ParticipantID: "TThostFtdcParticipantIDType" = property(_thostmduserapi.CThostFtdcTraderField_ParticipantID_get, _thostmduserapi.CThostFtdcTraderField_ParticipantID_set, doc=r"""会员代码""")
    Password: "TThostFtdcPasswordType" = property(_thostmduserapi.CThostFtdcTraderField_Password_get, _thostmduserapi.CThostFtdcTraderField_Password_set, doc=r"""密码""")
    InstallCount: "TThostFtdcInstallCountType" = property(_thostmduserapi.CThostFtdcTraderField_InstallCount_get, _thostmduserapi.CThostFtdcTraderField_InstallCount_set, doc=r"""安装数量""")
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcTraderField_BrokerID_get, _thostmduserapi.CThostFtdcTraderField_BrokerID_set, doc=r"""经纪公司代码""")
    OrderCancelAlg: "TThostFtdcOrderCancelAlgType" = property(_thostmduserapi.CThostFtdcTraderField_OrderCancelAlg_get, _thostmduserapi.CThostFtdcTraderField_OrderCancelAlg_set, doc=r"""撤单时选择席位算法""")
    TradeInstallCount: "TThostFtdcInstallCountType" = property(_thostmduserapi.CThostFtdcTraderField_TradeInstallCount_get, _thostmduserapi.CThostFtdcTraderField_TradeInstallCount_set, doc=r"""交易报盘安装数量""")
    MDInstallCount: "TThostFtdcInstallCountType" = property(_thostmduserapi.CThostFtdcTraderField_MDInstallCount_get, _thostmduserapi.CThostFtdcTraderField_MDInstallCount_set, doc=r"""行情报盘安装数量""")

    def __init__(self):
        _thostmduserapi.CThostFtdcTraderField_swiginit(self, _thostmduserapi.new_CThostFtdcTraderField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcTraderField

# Register CThostFtdcTraderField in _thostmduserapi:
_thostmduserapi.CThostFtdcTraderField_swigregister(CThostFtdcTraderField)
class CThostFtdcInvestorField(object):
    r"""投资者"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    InvestorID: "TThostFtdcInvestorIDType" = property(_thostmduserapi.CThostFtdcInvestorField_InvestorID_get, _thostmduserapi.CThostFtdcInvestorField_InvestorID_set, doc=r"""投资者代码""")
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcInvestorField_BrokerID_get, _thostmduserapi.CThostFtdcInvestorField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorGroupID: "TThostFtdcInvestorIDType" = property(_thostmduserapi.CThostFtdcInvestorField_InvestorGroupID_get, _thostmduserapi.CThostFtdcInvestorField_InvestorGroupID_set, doc=r"""投资者分组代码""")
    InvestorName: "TThostFtdcPartyNameType" = property(_thostmduserapi.CThostFtdcInvestorField_InvestorName_get, _thostmduserapi.CThostFtdcInvestorField_InvestorName_set, doc=r"""投资者名称""")
    IdentifiedCardType: "TThostFtdcIdCardTypeType" = property(_thostmduserapi.CThostFtdcInvestorField_IdentifiedCardType_get, _thostmduserapi.CThostFtdcInvestorField_IdentifiedCardType_set, doc=r"""证件类型""")
    IdentifiedCardNo: "TThostFtdcIdentifiedCardNoType" = property(_thostmduserapi.CThostFtdcInvestorField_IdentifiedCardNo_get, _thostmduserapi.CThostFtdcInvestorField_IdentifiedCardNo_set, doc=r"""证件号码""")
    IsActive: "TThostFtdcBoolType" = property(_thostmduserapi.CThostFtdcInvestorField_IsActive_get, _thostmduserapi.CThostFtdcInvestorField_IsActive_set, doc=r"""是否活跃""")
    Telephone: "TThostFtdcTelephoneType" = property(_thostmduserapi.CThostFtdcInvestorField_Telephone_get, _thostmduserapi.CThostFtdcInvestorField_Telephone_set, doc=r"""联系电话""")
    Address: "TThostFtdcAddressType" = property(_thostmduserapi.CThostFtdcInvestorField_Address_get, _thostmduserapi.CThostFtdcInvestorField_Address_set, doc=r"""通讯地址""")
    OpenDate: "TThostFtdcDateType" = property(_thostmduserapi.CThostFtdcInvestorField_OpenDate_get, _thostmduserapi.CThostFtdcInvestorField_OpenDate_set, doc=r"""开户日期""")
    Mobile: "TThostFtdcMobileType" = property(_thostmduserapi.CThostFtdcInvestorField_Mobile_get, _thostmduserapi.CThostFtdcInvestorField_Mobile_set, doc=r"""手机""")
    CommModelID: "TThostFtdcInvestorIDType" = property(_thostmduserapi.CThostFtdcInvestorField_CommModelID_get, _thostmduserapi.CThostFtdcInvestorField_CommModelID_set, doc=r"""手续费率模板代码""")
    MarginModelID: "TThostFtdcInvestorIDType" = property(_thostmduserapi.CThostFtdcInvestorField_MarginModelID_get, _thostmduserapi.CThostFtdcInvestorField_MarginModelID_set, doc=r"""保证金率模板代码""")
    IsOrderFreq: "TThostFtdcEnumBoolType" = property(_thostmduserapi.CThostFtdcInvestorField_IsOrderFreq_get, _thostmduserapi.CThostFtdcInvestorField_IsOrderFreq_set, doc=r"""是否频率控制""")
    IsOpenVolLimit: "TThostFtdcEnumBoolType" = property(_thostmduserapi.CThostFtdcInvestorField_IsOpenVolLimit_get, _thostmduserapi.CThostFtdcInvestorField_IsOpenVolLimit_set, doc=r"""是否开仓限制""")

    def __init__(self):
        _thostmduserapi.CThostFtdcInvestorField_swiginit(self, _thostmduserapi.new_CThostFtdcInvestorField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcInvestorField

# Register CThostFtdcInvestorField in _thostmduserapi:
_thostmduserapi.CThostFtdcInvestorField_swigregister(CThostFtdcInvestorField)
class CThostFtdcTradingCodeField(object):
    r"""交易编码"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    InvestorID: "TThostFtdcInvestorIDType" = property(_thostmduserapi.CThostFtdcTradingCodeField_InvestorID_get, _thostmduserapi.CThostFtdcTradingCodeField_InvestorID_set, doc=r"""投资者代码""")
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcTradingCodeField_BrokerID_get, _thostmduserapi.CThostFtdcTradingCodeField_BrokerID_set, doc=r"""经纪公司代码""")
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcTradingCodeField_ExchangeID_get, _thostmduserapi.CThostFtdcTradingCodeField_ExchangeID_set, doc=r"""交易所代码""")
    ClientID: "TThostFtdcClientIDType" = property(_thostmduserapi.CThostFtdcTradingCodeField_ClientID_get, _thostmduserapi.CThostFtdcTradingCodeField_ClientID_set, doc=r"""客户代码""")
    IsActive: "TThostFtdcBoolType" = property(_thostmduserapi.CThostFtdcTradingCodeField_IsActive_get, _thostmduserapi.CThostFtdcTradingCodeField_IsActive_set, doc=r"""是否活跃""")
    ClientIDType: "TThostFtdcClientIDTypeType" = property(_thostmduserapi.CThostFtdcTradingCodeField_ClientIDType_get, _thostmduserapi.CThostFtdcTradingCodeField_ClientIDType_set, doc=r"""交易编码类型""")
    BranchID: "TThostFtdcBranchIDType" = property(_thostmduserapi.CThostFtdcTradingCodeField_BranchID_get, _thostmduserapi.CThostFtdcTradingCodeField_BranchID_set, doc=r"""营业部编号""")
    BizType: "TThostFtdcBizTypeType" = property(_thostmduserapi.CThostFtdcTradingCodeField_BizType_get, _thostmduserapi.CThostFtdcTradingCodeField_BizType_set, doc=r"""业务类型""")
    InvestUnitID: "TThostFtdcInvestUnitIDType" = property(_thostmduserapi.CThostFtdcTradingCodeField_InvestUnitID_get, _thostmduserapi.CThostFtdcTradingCodeField_InvestUnitID_set, doc=r"""投资单元代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcTradingCodeField_swiginit(self, _thostmduserapi.new_CThostFtdcTradingCodeField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcTradingCodeField

# Register CThostFtdcTradingCodeField in _thostmduserapi:
_thostmduserapi.CThostFtdcTradingCodeField_swigregister(CThostFtdcTradingCodeField)
class CThostFtdcPartBrokerField(object):
    r"""会员编码和经纪公司编码对照表"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcPartBrokerField_BrokerID_get, _thostmduserapi.CThostFtdcPartBrokerField_BrokerID_set, doc=r"""经纪公司代码""")
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcPartBrokerField_ExchangeID_get, _thostmduserapi.CThostFtdcPartBrokerField_ExchangeID_set, doc=r"""交易所代码""")
    ParticipantID: "TThostFtdcParticipantIDType" = property(_thostmduserapi.CThostFtdcPartBrokerField_ParticipantID_get, _thostmduserapi.CThostFtdcPartBrokerField_ParticipantID_set, doc=r"""会员代码""")
    IsActive: "TThostFtdcBoolType" = property(_thostmduserapi.CThostFtdcPartBrokerField_IsActive_get, _thostmduserapi.CThostFtdcPartBrokerField_IsActive_set, doc=r"""是否活跃""")

    def __init__(self):
        _thostmduserapi.CThostFtdcPartBrokerField_swiginit(self, _thostmduserapi.new_CThostFtdcPartBrokerField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcPartBrokerField

# Register CThostFtdcPartBrokerField in _thostmduserapi:
_thostmduserapi.CThostFtdcPartBrokerField_swigregister(CThostFtdcPartBrokerField)
class CThostFtdcSuperUserField(object):
    r"""管理用户"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    UserID: "TThostFtdcUserIDType" = property(_thostmduserapi.CThostFtdcSuperUserField_UserID_get, _thostmduserapi.CThostFtdcSuperUserField_UserID_set, doc=r"""用户代码""")
    UserName: "TThostFtdcUserNameType" = property(_thostmduserapi.CThostFtdcSuperUserField_UserName_get, _thostmduserapi.CThostFtdcSuperUserField_UserName_set, doc=r"""用户名称""")
    Password: "TThostFtdcPasswordType" = property(_thostmduserapi.CThostFtdcSuperUserField_Password_get, _thostmduserapi.CThostFtdcSuperUserField_Password_set, doc=r"""密码""")
    IsActive: "TThostFtdcBoolType" = property(_thostmduserapi.CThostFtdcSuperUserField_IsActive_get, _thostmduserapi.CThostFtdcSuperUserField_IsActive_set, doc=r"""是否活跃""")

    def __init__(self):
        _thostmduserapi.CThostFtdcSuperUserField_swiginit(self, _thostmduserapi.new_CThostFtdcSuperUserField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcSuperUserField

# Register CThostFtdcSuperUserField in _thostmduserapi:
_thostmduserapi.CThostFtdcSuperUserField_swigregister(CThostFtdcSuperUserField)
class CThostFtdcSuperUserFunctionField(object):
    r"""管理用户功能权限"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    UserID: "TThostFtdcUserIDType" = property(_thostmduserapi.CThostFtdcSuperUserFunctionField_UserID_get, _thostmduserapi.CThostFtdcSuperUserFunctionField_UserID_set, doc=r"""用户代码""")
    FunctionCode: "TThostFtdcFunctionCodeType" = property(_thostmduserapi.CThostFtdcSuperUserFunctionField_FunctionCode_get, _thostmduserapi.CThostFtdcSuperUserFunctionField_FunctionCode_set, doc=r"""功能代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcSuperUserFunctionField_swiginit(self, _thostmduserapi.new_CThostFtdcSuperUserFunctionField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcSuperUserFunctionField

# Register CThostFtdcSuperUserFunctionField in _thostmduserapi:
_thostmduserapi.CThostFtdcSuperUserFunctionField_swigregister(CThostFtdcSuperUserFunctionField)
class CThostFtdcInvestorGroupField(object):
    r"""投资者组"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcInvestorGroupField_BrokerID_get, _thostmduserapi.CThostFtdcInvestorGroupField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorGroupID: "TThostFtdcInvestorIDType" = property(_thostmduserapi.CThostFtdcInvestorGroupField_InvestorGroupID_get, _thostmduserapi.CThostFtdcInvestorGroupField_InvestorGroupID_set, doc=r"""投资者分组代码""")
    InvestorGroupName: "TThostFtdcInvestorGroupNameType" = property(_thostmduserapi.CThostFtdcInvestorGroupField_InvestorGroupName_get, _thostmduserapi.CThostFtdcInvestorGroupField_InvestorGroupName_set, doc=r"""投资者分组名称""")

    def __init__(self):
        _thostmduserapi.CThostFtdcInvestorGroupField_swiginit(self, _thostmduserapi.new_CThostFtdcInvestorGroupField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcInvestorGroupField

# Register CThostFtdcInvestorGroupField in _thostmduserapi:
_thostmduserapi.CThostFtdcInvestorGroupField_swigregister(CThostFtdcInvestorGroupField)
class CThostFtdcTradingAccountField(object):
    r"""资金账户"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcTradingAccountField_BrokerID_get, _thostmduserapi.CThostFtdcTradingAccountField_BrokerID_set, doc=r"""经纪公司代码""")
    AccountID: "TThostFtdcAccountIDType" = property(_thostmduserapi.CThostFtdcTradingAccountField_AccountID_get, _thostmduserapi.CThostFtdcTradingAccountField_AccountID_set, doc=r"""投资者帐号""")
    PreMortgage: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcTradingAccountField_PreMortgage_get, _thostmduserapi.CThostFtdcTradingAccountField_PreMortgage_set, doc=r"""上次质押金额""")
    PreCredit: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcTradingAccountField_PreCredit_get, _thostmduserapi.CThostFtdcTradingAccountField_PreCredit_set, doc=r"""上次信用额度""")
    PreDeposit: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcTradingAccountField_PreDeposit_get, _thostmduserapi.CThostFtdcTradingAccountField_PreDeposit_set, doc=r"""上次存款额""")
    PreBalance: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcTradingAccountField_PreBalance_get, _thostmduserapi.CThostFtdcTradingAccountField_PreBalance_set, doc=r"""上次结算准备金""")
    PreMargin: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcTradingAccountField_PreMargin_get, _thostmduserapi.CThostFtdcTradingAccountField_PreMargin_set, doc=r"""上次占用的保证金""")
    InterestBase: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcTradingAccountField_InterestBase_get, _thostmduserapi.CThostFtdcTradingAccountField_InterestBase_set, doc=r"""利息基数""")
    Interest: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcTradingAccountField_Interest_get, _thostmduserapi.CThostFtdcTradingAccountField_Interest_set, doc=r"""利息收入""")
    Deposit: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcTradingAccountField_Deposit_get, _thostmduserapi.CThostFtdcTradingAccountField_Deposit_set, doc=r"""入金金额""")
    Withdraw: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcTradingAccountField_Withdraw_get, _thostmduserapi.CThostFtdcTradingAccountField_Withdraw_set, doc=r"""出金金额""")
    FrozenMargin: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcTradingAccountField_FrozenMargin_get, _thostmduserapi.CThostFtdcTradingAccountField_FrozenMargin_set, doc=r"""冻结的保证金""")
    FrozenCash: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcTradingAccountField_FrozenCash_get, _thostmduserapi.CThostFtdcTradingAccountField_FrozenCash_set, doc=r"""冻结的资金""")
    FrozenCommission: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcTradingAccountField_FrozenCommission_get, _thostmduserapi.CThostFtdcTradingAccountField_FrozenCommission_set, doc=r"""冻结的手续费""")
    CurrMargin: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcTradingAccountField_CurrMargin_get, _thostmduserapi.CThostFtdcTradingAccountField_CurrMargin_set, doc=r"""当前保证金总额""")
    CashIn: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcTradingAccountField_CashIn_get, _thostmduserapi.CThostFtdcTradingAccountField_CashIn_set, doc=r"""资金差额""")
    Commission: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcTradingAccountField_Commission_get, _thostmduserapi.CThostFtdcTradingAccountField_Commission_set, doc=r"""手续费""")
    CloseProfit: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcTradingAccountField_CloseProfit_get, _thostmduserapi.CThostFtdcTradingAccountField_CloseProfit_set, doc=r"""平仓盈亏""")
    PositionProfit: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcTradingAccountField_PositionProfit_get, _thostmduserapi.CThostFtdcTradingAccountField_PositionProfit_set, doc=r"""持仓盈亏""")
    Balance: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcTradingAccountField_Balance_get, _thostmduserapi.CThostFtdcTradingAccountField_Balance_set, doc=r"""期货结算准备金""")
    Available: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcTradingAccountField_Available_get, _thostmduserapi.CThostFtdcTradingAccountField_Available_set, doc=r"""可用资金""")
    WithdrawQuota: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcTradingAccountField_WithdrawQuota_get, _thostmduserapi.CThostFtdcTradingAccountField_WithdrawQuota_set, doc=r"""可取资金""")
    Reserve: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcTradingAccountField_Reserve_get, _thostmduserapi.CThostFtdcTradingAccountField_Reserve_set, doc=r"""基本准备金""")
    TradingDay: "TThostFtdcDateType" = property(_thostmduserapi.CThostFtdcTradingAccountField_TradingDay_get, _thostmduserapi.CThostFtdcTradingAccountField_TradingDay_set, doc=r"""交易日""")
    SettlementID: "TThostFtdcSettlementIDType" = property(_thostmduserapi.CThostFtdcTradingAccountField_SettlementID_get, _thostmduserapi.CThostFtdcTradingAccountField_SettlementID_set, doc=r"""结算编号""")
    Credit: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcTradingAccountField_Credit_get, _thostmduserapi.CThostFtdcTradingAccountField_Credit_set, doc=r"""信用额度""")
    Mortgage: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcTradingAccountField_Mortgage_get, _thostmduserapi.CThostFtdcTradingAccountField_Mortgage_set, doc=r"""质押金额""")
    ExchangeMargin: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcTradingAccountField_ExchangeMargin_get, _thostmduserapi.CThostFtdcTradingAccountField_ExchangeMargin_set, doc=r"""交易所保证金""")
    DeliveryMargin: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcTradingAccountField_DeliveryMargin_get, _thostmduserapi.CThostFtdcTradingAccountField_DeliveryMargin_set, doc=r"""投资者交割保证金""")
    ExchangeDeliveryMargin: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcTradingAccountField_ExchangeDeliveryMargin_get, _thostmduserapi.CThostFtdcTradingAccountField_ExchangeDeliveryMargin_set, doc=r"""交易所交割保证金""")
    ReserveBalance: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcTradingAccountField_ReserveBalance_get, _thostmduserapi.CThostFtdcTradingAccountField_ReserveBalance_set, doc=r"""保底期货结算准备金""")
    CurrencyID: "TThostFtdcCurrencyIDType" = property(_thostmduserapi.CThostFtdcTradingAccountField_CurrencyID_get, _thostmduserapi.CThostFtdcTradingAccountField_CurrencyID_set, doc=r"""币种代码""")
    PreFundMortgageIn: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcTradingAccountField_PreFundMortgageIn_get, _thostmduserapi.CThostFtdcTradingAccountField_PreFundMortgageIn_set, doc=r"""上次货币质入金额""")
    PreFundMortgageOut: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcTradingAccountField_PreFundMortgageOut_get, _thostmduserapi.CThostFtdcTradingAccountField_PreFundMortgageOut_set, doc=r"""上次货币质出金额""")
    FundMortgageIn: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcTradingAccountField_FundMortgageIn_get, _thostmduserapi.CThostFtdcTradingAccountField_FundMortgageIn_set, doc=r"""货币质入金额""")
    FundMortgageOut: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcTradingAccountField_FundMortgageOut_get, _thostmduserapi.CThostFtdcTradingAccountField_FundMortgageOut_set, doc=r"""货币质出金额""")
    FundMortgageAvailable: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcTradingAccountField_FundMortgageAvailable_get, _thostmduserapi.CThostFtdcTradingAccountField_FundMortgageAvailable_set, doc=r"""货币质押余额""")
    MortgageableFund: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcTradingAccountField_MortgageableFund_get, _thostmduserapi.CThostFtdcTradingAccountField_MortgageableFund_set, doc=r"""可质押货币金额""")
    SpecProductMargin: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcTradingAccountField_SpecProductMargin_get, _thostmduserapi.CThostFtdcTradingAccountField_SpecProductMargin_set, doc=r"""特殊产品占用保证金""")
    SpecProductFrozenMargin: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcTradingAccountField_SpecProductFrozenMargin_get, _thostmduserapi.CThostFtdcTradingAccountField_SpecProductFrozenMargin_set, doc=r"""特殊产品冻结保证金""")
    SpecProductCommission: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcTradingAccountField_SpecProductCommission_get, _thostmduserapi.CThostFtdcTradingAccountField_SpecProductCommission_set, doc=r"""特殊产品手续费""")
    SpecProductFrozenCommission: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcTradingAccountField_SpecProductFrozenCommission_get, _thostmduserapi.CThostFtdcTradingAccountField_SpecProductFrozenCommission_set, doc=r"""特殊产品冻结手续费""")
    SpecProductPositionProfit: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcTradingAccountField_SpecProductPositionProfit_get, _thostmduserapi.CThostFtdcTradingAccountField_SpecProductPositionProfit_set, doc=r"""特殊产品持仓盈亏""")
    SpecProductCloseProfit: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcTradingAccountField_SpecProductCloseProfit_get, _thostmduserapi.CThostFtdcTradingAccountField_SpecProductCloseProfit_set, doc=r"""特殊产品平仓盈亏""")
    SpecProductPositionProfitByAlg: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcTradingAccountField_SpecProductPositionProfitByAlg_get, _thostmduserapi.CThostFtdcTradingAccountField_SpecProductPositionProfitByAlg_set, doc=r"""根据持仓盈亏算法计算的特殊产品持仓盈亏""")
    SpecProductExchangeMargin: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcTradingAccountField_SpecProductExchangeMargin_get, _thostmduserapi.CThostFtdcTradingAccountField_SpecProductExchangeMargin_set, doc=r"""特殊产品交易所保证金""")
    BizType: "TThostFtdcBizTypeType" = property(_thostmduserapi.CThostFtdcTradingAccountField_BizType_get, _thostmduserapi.CThostFtdcTradingAccountField_BizType_set, doc=r"""业务类型""")
    FrozenSwap: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcTradingAccountField_FrozenSwap_get, _thostmduserapi.CThostFtdcTradingAccountField_FrozenSwap_set, doc=r"""延时换汇冻结金额""")
    RemainSwap: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcTradingAccountField_RemainSwap_get, _thostmduserapi.CThostFtdcTradingAccountField_RemainSwap_set, doc=r"""剩余换汇额度""")

    def __init__(self):
        _thostmduserapi.CThostFtdcTradingAccountField_swiginit(self, _thostmduserapi.new_CThostFtdcTradingAccountField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcTradingAccountField

# Register CThostFtdcTradingAccountField in _thostmduserapi:
_thostmduserapi.CThostFtdcTradingAccountField_swigregister(CThostFtdcTradingAccountField)
class CThostFtdcInvestorPositionField(object):
    r"""投资者持仓"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    reserve1: "TThostFtdcOldInstrumentIDType" = property(_thostmduserapi.CThostFtdcInvestorPositionField_reserve1_get, _thostmduserapi.CThostFtdcInvestorPositionField_reserve1_set, doc=r"""保留的无效字段""")
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcInvestorPositionField_BrokerID_get, _thostmduserapi.CThostFtdcInvestorPositionField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "TThostFtdcInvestorIDType" = property(_thostmduserapi.CThostFtdcInvestorPositionField_InvestorID_get, _thostmduserapi.CThostFtdcInvestorPositionField_InvestorID_set, doc=r"""投资者代码""")
    PosiDirection: "TThostFtdcPosiDirectionType" = property(_thostmduserapi.CThostFtdcInvestorPositionField_PosiDirection_get, _thostmduserapi.CThostFtdcInvestorPositionField_PosiDirection_set, doc=r"""持仓多空方向""")
    HedgeFlag: "TThostFtdcHedgeFlagType" = property(_thostmduserapi.CThostFtdcInvestorPositionField_HedgeFlag_get, _thostmduserapi.CThostFtdcInvestorPositionField_HedgeFlag_set, doc=r"""投机套保标志""")
    PositionDate: "TThostFtdcPositionDateType" = property(_thostmduserapi.CThostFtdcInvestorPositionField_PositionDate_get, _thostmduserapi.CThostFtdcInvestorPositionField_PositionDate_set, doc=r"""持仓日期""")
    YdPosition: "TThostFtdcVolumeType" = property(_thostmduserapi.CThostFtdcInvestorPositionField_YdPosition_get, _thostmduserapi.CThostFtdcInvestorPositionField_YdPosition_set, doc=r"""上日持仓""")
    Position: "TThostFtdcVolumeType" = property(_thostmduserapi.CThostFtdcInvestorPositionField_Position_get, _thostmduserapi.CThostFtdcInvestorPositionField_Position_set, doc=r"""今日持仓""")
    LongFrozen: "TThostFtdcVolumeType" = property(_thostmduserapi.CThostFtdcInvestorPositionField_LongFrozen_get, _thostmduserapi.CThostFtdcInvestorPositionField_LongFrozen_set, doc=r"""多头冻结""")
    ShortFrozen: "TThostFtdcVolumeType" = property(_thostmduserapi.CThostFtdcInvestorPositionField_ShortFrozen_get, _thostmduserapi.CThostFtdcInvestorPositionField_ShortFrozen_set, doc=r"""空头冻结""")
    LongFrozenAmount: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcInvestorPositionField_LongFrozenAmount_get, _thostmduserapi.CThostFtdcInvestorPositionField_LongFrozenAmount_set, doc=r"""开仓冻结金额""")
    ShortFrozenAmount: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcInvestorPositionField_ShortFrozenAmount_get, _thostmduserapi.CThostFtdcInvestorPositionField_ShortFrozenAmount_set, doc=r"""开仓冻结金额""")
    OpenVolume: "TThostFtdcVolumeType" = property(_thostmduserapi.CThostFtdcInvestorPositionField_OpenVolume_get, _thostmduserapi.CThostFtdcInvestorPositionField_OpenVolume_set, doc=r"""开仓量""")
    CloseVolume: "TThostFtdcVolumeType" = property(_thostmduserapi.CThostFtdcInvestorPositionField_CloseVolume_get, _thostmduserapi.CThostFtdcInvestorPositionField_CloseVolume_set, doc=r"""平仓量""")
    OpenAmount: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcInvestorPositionField_OpenAmount_get, _thostmduserapi.CThostFtdcInvestorPositionField_OpenAmount_set, doc=r"""开仓金额""")
    CloseAmount: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcInvestorPositionField_CloseAmount_get, _thostmduserapi.CThostFtdcInvestorPositionField_CloseAmount_set, doc=r"""平仓金额""")
    PositionCost: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcInvestorPositionField_PositionCost_get, _thostmduserapi.CThostFtdcInvestorPositionField_PositionCost_set, doc=r"""持仓成本""")
    PreMargin: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcInvestorPositionField_PreMargin_get, _thostmduserapi.CThostFtdcInvestorPositionField_PreMargin_set, doc=r"""上次占用的保证金""")
    UseMargin: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcInvestorPositionField_UseMargin_get, _thostmduserapi.CThostFtdcInvestorPositionField_UseMargin_set, doc=r"""占用的保证金""")
    FrozenMargin: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcInvestorPositionField_FrozenMargin_get, _thostmduserapi.CThostFtdcInvestorPositionField_FrozenMargin_set, doc=r"""冻结的保证金""")
    FrozenCash: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcInvestorPositionField_FrozenCash_get, _thostmduserapi.CThostFtdcInvestorPositionField_FrozenCash_set, doc=r"""冻结的资金""")
    FrozenCommission: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcInvestorPositionField_FrozenCommission_get, _thostmduserapi.CThostFtdcInvestorPositionField_FrozenCommission_set, doc=r"""冻结的手续费""")
    CashIn: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcInvestorPositionField_CashIn_get, _thostmduserapi.CThostFtdcInvestorPositionField_CashIn_set, doc=r"""资金差额""")
    Commission: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcInvestorPositionField_Commission_get, _thostmduserapi.CThostFtdcInvestorPositionField_Commission_set, doc=r"""手续费""")
    CloseProfit: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcInvestorPositionField_CloseProfit_get, _thostmduserapi.CThostFtdcInvestorPositionField_CloseProfit_set, doc=r"""平仓盈亏""")
    PositionProfit: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcInvestorPositionField_PositionProfit_get, _thostmduserapi.CThostFtdcInvestorPositionField_PositionProfit_set, doc=r"""持仓盈亏""")
    PreSettlementPrice: "TThostFtdcPriceType" = property(_thostmduserapi.CThostFtdcInvestorPositionField_PreSettlementPrice_get, _thostmduserapi.CThostFtdcInvestorPositionField_PreSettlementPrice_set, doc=r"""上次结算价""")
    SettlementPrice: "TThostFtdcPriceType" = property(_thostmduserapi.CThostFtdcInvestorPositionField_SettlementPrice_get, _thostmduserapi.CThostFtdcInvestorPositionField_SettlementPrice_set, doc=r"""本次结算价""")
    TradingDay: "TThostFtdcDateType" = property(_thostmduserapi.CThostFtdcInvestorPositionField_TradingDay_get, _thostmduserapi.CThostFtdcInvestorPositionField_TradingDay_set, doc=r"""交易日""")
    SettlementID: "TThostFtdcSettlementIDType" = property(_thostmduserapi.CThostFtdcInvestorPositionField_SettlementID_get, _thostmduserapi.CThostFtdcInvestorPositionField_SettlementID_set, doc=r"""结算编号""")
    OpenCost: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcInvestorPositionField_OpenCost_get, _thostmduserapi.CThostFtdcInvestorPositionField_OpenCost_set, doc=r"""开仓成本""")
    ExchangeMargin: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcInvestorPositionField_ExchangeMargin_get, _thostmduserapi.CThostFtdcInvestorPositionField_ExchangeMargin_set, doc=r"""交易所保证金""")
    CombPosition: "TThostFtdcVolumeType" = property(_thostmduserapi.CThostFtdcInvestorPositionField_CombPosition_get, _thostmduserapi.CThostFtdcInvestorPositionField_CombPosition_set, doc=r"""组合成交形成的持仓""")
    CombLongFrozen: "TThostFtdcVolumeType" = property(_thostmduserapi.CThostFtdcInvestorPositionField_CombLongFrozen_get, _thostmduserapi.CThostFtdcInvestorPositionField_CombLongFrozen_set, doc=r"""组合多头冻结""")
    CombShortFrozen: "TThostFtdcVolumeType" = property(_thostmduserapi.CThostFtdcInvestorPositionField_CombShortFrozen_get, _thostmduserapi.CThostFtdcInvestorPositionField_CombShortFrozen_set, doc=r"""组合空头冻结""")
    CloseProfitByDate: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcInvestorPositionField_CloseProfitByDate_get, _thostmduserapi.CThostFtdcInvestorPositionField_CloseProfitByDate_set, doc=r"""逐日盯市平仓盈亏""")
    CloseProfitByTrade: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcInvestorPositionField_CloseProfitByTrade_get, _thostmduserapi.CThostFtdcInvestorPositionField_CloseProfitByTrade_set, doc=r"""逐笔对冲平仓盈亏""")
    TodayPosition: "TThostFtdcVolumeType" = property(_thostmduserapi.CThostFtdcInvestorPositionField_TodayPosition_get, _thostmduserapi.CThostFtdcInvestorPositionField_TodayPosition_set, doc=r"""今日持仓""")
    MarginRateByMoney: "TThostFtdcRatioType" = property(_thostmduserapi.CThostFtdcInvestorPositionField_MarginRateByMoney_get, _thostmduserapi.CThostFtdcInvestorPositionField_MarginRateByMoney_set, doc=r"""保证金率""")
    MarginRateByVolume: "TThostFtdcRatioType" = property(_thostmduserapi.CThostFtdcInvestorPositionField_MarginRateByVolume_get, _thostmduserapi.CThostFtdcInvestorPositionField_MarginRateByVolume_set, doc=r"""保证金率(按手数)""")
    StrikeFrozen: "TThostFtdcVolumeType" = property(_thostmduserapi.CThostFtdcInvestorPositionField_StrikeFrozen_get, _thostmduserapi.CThostFtdcInvestorPositionField_StrikeFrozen_set, doc=r"""执行冻结""")
    StrikeFrozenAmount: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcInvestorPositionField_StrikeFrozenAmount_get, _thostmduserapi.CThostFtdcInvestorPositionField_StrikeFrozenAmount_set, doc=r"""执行冻结金额""")
    AbandonFrozen: "TThostFtdcVolumeType" = property(_thostmduserapi.CThostFtdcInvestorPositionField_AbandonFrozen_get, _thostmduserapi.CThostFtdcInvestorPositionField_AbandonFrozen_set, doc=r"""放弃执行冻结""")
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcInvestorPositionField_ExchangeID_get, _thostmduserapi.CThostFtdcInvestorPositionField_ExchangeID_set, doc=r"""交易所代码""")
    YdStrikeFrozen: "TThostFtdcVolumeType" = property(_thostmduserapi.CThostFtdcInvestorPositionField_YdStrikeFrozen_get, _thostmduserapi.CThostFtdcInvestorPositionField_YdStrikeFrozen_set, doc=r"""执行冻结的昨仓""")
    InvestUnitID: "TThostFtdcInvestUnitIDType" = property(_thostmduserapi.CThostFtdcInvestorPositionField_InvestUnitID_get, _thostmduserapi.CThostFtdcInvestorPositionField_InvestUnitID_set, doc=r"""投资单元代码""")
    PositionCostOffset: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcInvestorPositionField_PositionCostOffset_get, _thostmduserapi.CThostFtdcInvestorPositionField_PositionCostOffset_set, doc=r"""持仓成本差值""")
    TasPosition: "TThostFtdcVolumeType" = property(_thostmduserapi.CThostFtdcInvestorPositionField_TasPosition_get, _thostmduserapi.CThostFtdcInvestorPositionField_TasPosition_set, doc=r"""tas持仓手数""")
    TasPositionCost: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcInvestorPositionField_TasPositionCost_get, _thostmduserapi.CThostFtdcInvestorPositionField_TasPositionCost_set, doc=r"""tas持仓成本""")
    InstrumentID: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcInvestorPositionField_InstrumentID_get, _thostmduserapi.CThostFtdcInvestorPositionField_InstrumentID_set, doc=r"""合约代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcInvestorPositionField_swiginit(self, _thostmduserapi.new_CThostFtdcInvestorPositionField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcInvestorPositionField

# Register CThostFtdcInvestorPositionField in _thostmduserapi:
_thostmduserapi.CThostFtdcInvestorPositionField_swigregister(CThostFtdcInvestorPositionField)
class CThostFtdcInstrumentMarginRateField(object):
    r"""合约保证金率"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    reserve1: "TThostFtdcOldInstrumentIDType" = property(_thostmduserapi.CThostFtdcInstrumentMarginRateField_reserve1_get, _thostmduserapi.CThostFtdcInstrumentMarginRateField_reserve1_set, doc=r"""保留的无效字段""")
    InvestorRange: "TThostFtdcInvestorRangeType" = property(_thostmduserapi.CThostFtdcInstrumentMarginRateField_InvestorRange_get, _thostmduserapi.CThostFtdcInstrumentMarginRateField_InvestorRange_set, doc=r"""投资者范围""")
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcInstrumentMarginRateField_BrokerID_get, _thostmduserapi.CThostFtdcInstrumentMarginRateField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "TThostFtdcInvestorIDType" = property(_thostmduserapi.CThostFtdcInstrumentMarginRateField_InvestorID_get, _thostmduserapi.CThostFtdcInstrumentMarginRateField_InvestorID_set, doc=r"""投资者代码""")
    HedgeFlag: "TThostFtdcHedgeFlagType" = property(_thostmduserapi.CThostFtdcInstrumentMarginRateField_HedgeFlag_get, _thostmduserapi.CThostFtdcInstrumentMarginRateField_HedgeFlag_set, doc=r"""投机套保标志""")
    LongMarginRatioByMoney: "TThostFtdcRatioType" = property(_thostmduserapi.CThostFtdcInstrumentMarginRateField_LongMarginRatioByMoney_get, _thostmduserapi.CThostFtdcInstrumentMarginRateField_LongMarginRatioByMoney_set, doc=r"""多头保证金率""")
    LongMarginRatioByVolume: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcInstrumentMarginRateField_LongMarginRatioByVolume_get, _thostmduserapi.CThostFtdcInstrumentMarginRateField_LongMarginRatioByVolume_set, doc=r"""多头保证金费""")
    ShortMarginRatioByMoney: "TThostFtdcRatioType" = property(_thostmduserapi.CThostFtdcInstrumentMarginRateField_ShortMarginRatioByMoney_get, _thostmduserapi.CThostFtdcInstrumentMarginRateField_ShortMarginRatioByMoney_set, doc=r"""空头保证金率""")
    ShortMarginRatioByVolume: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcInstrumentMarginRateField_ShortMarginRatioByVolume_get, _thostmduserapi.CThostFtdcInstrumentMarginRateField_ShortMarginRatioByVolume_set, doc=r"""空头保证金费""")
    IsRelative: "TThostFtdcBoolType" = property(_thostmduserapi.CThostFtdcInstrumentMarginRateField_IsRelative_get, _thostmduserapi.CThostFtdcInstrumentMarginRateField_IsRelative_set, doc=r"""是否相对交易所收取""")
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcInstrumentMarginRateField_ExchangeID_get, _thostmduserapi.CThostFtdcInstrumentMarginRateField_ExchangeID_set, doc=r"""交易所代码""")
    InvestUnitID: "TThostFtdcInvestUnitIDType" = property(_thostmduserapi.CThostFtdcInstrumentMarginRateField_InvestUnitID_get, _thostmduserapi.CThostFtdcInstrumentMarginRateField_InvestUnitID_set, doc=r"""投资单元代码""")
    InstrumentID: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcInstrumentMarginRateField_InstrumentID_get, _thostmduserapi.CThostFtdcInstrumentMarginRateField_InstrumentID_set, doc=r"""合约代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcInstrumentMarginRateField_swiginit(self, _thostmduserapi.new_CThostFtdcInstrumentMarginRateField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcInstrumentMarginRateField

# Register CThostFtdcInstrumentMarginRateField in _thostmduserapi:
_thostmduserapi.CThostFtdcInstrumentMarginRateField_swigregister(CThostFtdcInstrumentMarginRateField)
class CThostFtdcInstrumentCommissionRateField(object):
    r"""合约手续费率"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    reserve1: "TThostFtdcOldInstrumentIDType" = property(_thostmduserapi.CThostFtdcInstrumentCommissionRateField_reserve1_get, _thostmduserapi.CThostFtdcInstrumentCommissionRateField_reserve1_set, doc=r"""保留的无效字段""")
    InvestorRange: "TThostFtdcInvestorRangeType" = property(_thostmduserapi.CThostFtdcInstrumentCommissionRateField_InvestorRange_get, _thostmduserapi.CThostFtdcInstrumentCommissionRateField_InvestorRange_set, doc=r"""投资者范围""")
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcInstrumentCommissionRateField_BrokerID_get, _thostmduserapi.CThostFtdcInstrumentCommissionRateField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "TThostFtdcInvestorIDType" = property(_thostmduserapi.CThostFtdcInstrumentCommissionRateField_InvestorID_get, _thostmduserapi.CThostFtdcInstrumentCommissionRateField_InvestorID_set, doc=r"""投资者代码""")
    OpenRatioByMoney: "TThostFtdcRatioType" = property(_thostmduserapi.CThostFtdcInstrumentCommissionRateField_OpenRatioByMoney_get, _thostmduserapi.CThostFtdcInstrumentCommissionRateField_OpenRatioByMoney_set, doc=r"""开仓手续费率""")
    OpenRatioByVolume: "TThostFtdcRatioType" = property(_thostmduserapi.CThostFtdcInstrumentCommissionRateField_OpenRatioByVolume_get, _thostmduserapi.CThostFtdcInstrumentCommissionRateField_OpenRatioByVolume_set, doc=r"""开仓手续费""")
    CloseRatioByMoney: "TThostFtdcRatioType" = property(_thostmduserapi.CThostFtdcInstrumentCommissionRateField_CloseRatioByMoney_get, _thostmduserapi.CThostFtdcInstrumentCommissionRateField_CloseRatioByMoney_set, doc=r"""平仓手续费率""")
    CloseRatioByVolume: "TThostFtdcRatioType" = property(_thostmduserapi.CThostFtdcInstrumentCommissionRateField_CloseRatioByVolume_get, _thostmduserapi.CThostFtdcInstrumentCommissionRateField_CloseRatioByVolume_set, doc=r"""平仓手续费""")
    CloseTodayRatioByMoney: "TThostFtdcRatioType" = property(_thostmduserapi.CThostFtdcInstrumentCommissionRateField_CloseTodayRatioByMoney_get, _thostmduserapi.CThostFtdcInstrumentCommissionRateField_CloseTodayRatioByMoney_set, doc=r"""平今手续费率""")
    CloseTodayRatioByVolume: "TThostFtdcRatioType" = property(_thostmduserapi.CThostFtdcInstrumentCommissionRateField_CloseTodayRatioByVolume_get, _thostmduserapi.CThostFtdcInstrumentCommissionRateField_CloseTodayRatioByVolume_set, doc=r"""平今手续费""")
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcInstrumentCommissionRateField_ExchangeID_get, _thostmduserapi.CThostFtdcInstrumentCommissionRateField_ExchangeID_set, doc=r"""交易所代码""")
    BizType: "TThostFtdcBizTypeType" = property(_thostmduserapi.CThostFtdcInstrumentCommissionRateField_BizType_get, _thostmduserapi.CThostFtdcInstrumentCommissionRateField_BizType_set, doc=r"""业务类型""")
    InvestUnitID: "TThostFtdcInvestUnitIDType" = property(_thostmduserapi.CThostFtdcInstrumentCommissionRateField_InvestUnitID_get, _thostmduserapi.CThostFtdcInstrumentCommissionRateField_InvestUnitID_set, doc=r"""投资单元代码""")
    InstrumentID: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcInstrumentCommissionRateField_InstrumentID_get, _thostmduserapi.CThostFtdcInstrumentCommissionRateField_InstrumentID_set, doc=r"""合约代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcInstrumentCommissionRateField_swiginit(self, _thostmduserapi.new_CThostFtdcInstrumentCommissionRateField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcInstrumentCommissionRateField

# Register CThostFtdcInstrumentCommissionRateField in _thostmduserapi:
_thostmduserapi.CThostFtdcInstrumentCommissionRateField_swigregister(CThostFtdcInstrumentCommissionRateField)
class CThostFtdcDepthMarketDataField(object):
    r"""深度行情"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    TradingDay: "TThostFtdcDateType" = property(_thostmduserapi.CThostFtdcDepthMarketDataField_TradingDay_get, _thostmduserapi.CThostFtdcDepthMarketDataField_TradingDay_set, doc=r"""交易日""")
    reserve1: "TThostFtdcOldInstrumentIDType" = property(_thostmduserapi.CThostFtdcDepthMarketDataField_reserve1_get, _thostmduserapi.CThostFtdcDepthMarketDataField_reserve1_set, doc=r"""保留的无效字段""")
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcDepthMarketDataField_ExchangeID_get, _thostmduserapi.CThostFtdcDepthMarketDataField_ExchangeID_set, doc=r"""交易所代码""")
    reserve2: "TThostFtdcOldExchangeInstIDType" = property(_thostmduserapi.CThostFtdcDepthMarketDataField_reserve2_get, _thostmduserapi.CThostFtdcDepthMarketDataField_reserve2_set, doc=r"""保留的无效字段""")
    LastPrice: "TThostFtdcPriceType" = property(_thostmduserapi.CThostFtdcDepthMarketDataField_LastPrice_get, _thostmduserapi.CThostFtdcDepthMarketDataField_LastPrice_set, doc=r"""最新价""")
    PreSettlementPrice: "TThostFtdcPriceType" = property(_thostmduserapi.CThostFtdcDepthMarketDataField_PreSettlementPrice_get, _thostmduserapi.CThostFtdcDepthMarketDataField_PreSettlementPrice_set, doc=r"""上次结算价""")
    PreClosePrice: "TThostFtdcPriceType" = property(_thostmduserapi.CThostFtdcDepthMarketDataField_PreClosePrice_get, _thostmduserapi.CThostFtdcDepthMarketDataField_PreClosePrice_set, doc=r"""昨收盘""")
    PreOpenInterest: "TThostFtdcLargeVolumeType" = property(_thostmduserapi.CThostFtdcDepthMarketDataField_PreOpenInterest_get, _thostmduserapi.CThostFtdcDepthMarketDataField_PreOpenInterest_set, doc=r"""昨持仓量""")
    OpenPrice: "TThostFtdcPriceType" = property(_thostmduserapi.CThostFtdcDepthMarketDataField_OpenPrice_get, _thostmduserapi.CThostFtdcDepthMarketDataField_OpenPrice_set, doc=r"""今开盘""")
    HighestPrice: "TThostFtdcPriceType" = property(_thostmduserapi.CThostFtdcDepthMarketDataField_HighestPrice_get, _thostmduserapi.CThostFtdcDepthMarketDataField_HighestPrice_set, doc=r"""最高价""")
    LowestPrice: "TThostFtdcPriceType" = property(_thostmduserapi.CThostFtdcDepthMarketDataField_LowestPrice_get, _thostmduserapi.CThostFtdcDepthMarketDataField_LowestPrice_set, doc=r"""最低价""")
    Volume: "TThostFtdcVolumeType" = property(_thostmduserapi.CThostFtdcDepthMarketDataField_Volume_get, _thostmduserapi.CThostFtdcDepthMarketDataField_Volume_set, doc=r"""数量""")
    Turnover: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcDepthMarketDataField_Turnover_get, _thostmduserapi.CThostFtdcDepthMarketDataField_Turnover_set, doc=r"""成交金额""")
    OpenInterest: "TThostFtdcLargeVolumeType" = property(_thostmduserapi.CThostFtdcDepthMarketDataField_OpenInterest_get, _thostmduserapi.CThostFtdcDepthMarketDataField_OpenInterest_set, doc=r"""持仓量""")
    ClosePrice: "TThostFtdcPriceType" = property(_thostmduserapi.CThostFtdcDepthMarketDataField_ClosePrice_get, _thostmduserapi.CThostFtdcDepthMarketDataField_ClosePrice_set, doc=r"""今收盘""")
    SettlementPrice: "TThostFtdcPriceType" = property(_thostmduserapi.CThostFtdcDepthMarketDataField_SettlementPrice_get, _thostmduserapi.CThostFtdcDepthMarketDataField_SettlementPrice_set, doc=r"""本次结算价""")
    UpperLimitPrice: "TThostFtdcPriceType" = property(_thostmduserapi.CThostFtdcDepthMarketDataField_UpperLimitPrice_get, _thostmduserapi.CThostFtdcDepthMarketDataField_UpperLimitPrice_set, doc=r"""涨停板价""")
    LowerLimitPrice: "TThostFtdcPriceType" = property(_thostmduserapi.CThostFtdcDepthMarketDataField_LowerLimitPrice_get, _thostmduserapi.CThostFtdcDepthMarketDataField_LowerLimitPrice_set, doc=r"""跌停板价""")
    PreDelta: "TThostFtdcRatioType" = property(_thostmduserapi.CThostFtdcDepthMarketDataField_PreDelta_get, _thostmduserapi.CThostFtdcDepthMarketDataField_PreDelta_set, doc=r"""昨虚实度""")
    CurrDelta: "TThostFtdcRatioType" = property(_thostmduserapi.CThostFtdcDepthMarketDataField_CurrDelta_get, _thostmduserapi.CThostFtdcDepthMarketDataField_CurrDelta_set, doc=r"""今虚实度""")
    UpdateTime: "TThostFtdcTimeType" = property(_thostmduserapi.CThostFtdcDepthMarketDataField_UpdateTime_get, _thostmduserapi.CThostFtdcDepthMarketDataField_UpdateTime_set, doc=r"""最后修改时间""")
    UpdateMillisec: "TThostFtdcMillisecType" = property(_thostmduserapi.CThostFtdcDepthMarketDataField_UpdateMillisec_get, _thostmduserapi.CThostFtdcDepthMarketDataField_UpdateMillisec_set, doc=r"""最后修改毫秒""")
    BidPrice1: "TThostFtdcPriceType" = property(_thostmduserapi.CThostFtdcDepthMarketDataField_BidPrice1_get, _thostmduserapi.CThostFtdcDepthMarketDataField_BidPrice1_set, doc=r"""申买价一""")
    BidVolume1: "TThostFtdcVolumeType" = property(_thostmduserapi.CThostFtdcDepthMarketDataField_BidVolume1_get, _thostmduserapi.CThostFtdcDepthMarketDataField_BidVolume1_set, doc=r"""申买量一""")
    AskPrice1: "TThostFtdcPriceType" = property(_thostmduserapi.CThostFtdcDepthMarketDataField_AskPrice1_get, _thostmduserapi.CThostFtdcDepthMarketDataField_AskPrice1_set, doc=r"""申卖价一""")
    AskVolume1: "TThostFtdcVolumeType" = property(_thostmduserapi.CThostFtdcDepthMarketDataField_AskVolume1_get, _thostmduserapi.CThostFtdcDepthMarketDataField_AskVolume1_set, doc=r"""申卖量一""")
    BidPrice2: "TThostFtdcPriceType" = property(_thostmduserapi.CThostFtdcDepthMarketDataField_BidPrice2_get, _thostmduserapi.CThostFtdcDepthMarketDataField_BidPrice2_set, doc=r"""申买价二""")
    BidVolume2: "TThostFtdcVolumeType" = property(_thostmduserapi.CThostFtdcDepthMarketDataField_BidVolume2_get, _thostmduserapi.CThostFtdcDepthMarketDataField_BidVolume2_set, doc=r"""申买量二""")
    AskPrice2: "TThostFtdcPriceType" = property(_thostmduserapi.CThostFtdcDepthMarketDataField_AskPrice2_get, _thostmduserapi.CThostFtdcDepthMarketDataField_AskPrice2_set, doc=r"""申卖价二""")
    AskVolume2: "TThostFtdcVolumeType" = property(_thostmduserapi.CThostFtdcDepthMarketDataField_AskVolume2_get, _thostmduserapi.CThostFtdcDepthMarketDataField_AskVolume2_set, doc=r"""申卖量二""")
    BidPrice3: "TThostFtdcPriceType" = property(_thostmduserapi.CThostFtdcDepthMarketDataField_BidPrice3_get, _thostmduserapi.CThostFtdcDepthMarketDataField_BidPrice3_set, doc=r"""申买价三""")
    BidVolume3: "TThostFtdcVolumeType" = property(_thostmduserapi.CThostFtdcDepthMarketDataField_BidVolume3_get, _thostmduserapi.CThostFtdcDepthMarketDataField_BidVolume3_set, doc=r"""申买量三""")
    AskPrice3: "TThostFtdcPriceType" = property(_thostmduserapi.CThostFtdcDepthMarketDataField_AskPrice3_get, _thostmduserapi.CThostFtdcDepthMarketDataField_AskPrice3_set, doc=r"""申卖价三""")
    AskVolume3: "TThostFtdcVolumeType" = property(_thostmduserapi.CThostFtdcDepthMarketDataField_AskVolume3_get, _thostmduserapi.CThostFtdcDepthMarketDataField_AskVolume3_set, doc=r"""申卖量三""")
    BidPrice4: "TThostFtdcPriceType" = property(_thostmduserapi.CThostFtdcDepthMarketDataField_BidPrice4_get, _thostmduserapi.CThostFtdcDepthMarketDataField_BidPrice4_set, doc=r"""申买价四""")
    BidVolume4: "TThostFtdcVolumeType" = property(_thostmduserapi.CThostFtdcDepthMarketDataField_BidVolume4_get, _thostmduserapi.CThostFtdcDepthMarketDataField_BidVolume4_set, doc=r"""申买量四""")
    AskPrice4: "TThostFtdcPriceType" = property(_thostmduserapi.CThostFtdcDepthMarketDataField_AskPrice4_get, _thostmduserapi.CThostFtdcDepthMarketDataField_AskPrice4_set, doc=r"""申卖价四""")
    AskVolume4: "TThostFtdcVolumeType" = property(_thostmduserapi.CThostFtdcDepthMarketDataField_AskVolume4_get, _thostmduserapi.CThostFtdcDepthMarketDataField_AskVolume4_set, doc=r"""申卖量四""")
    BidPrice5: "TThostFtdcPriceType" = property(_thostmduserapi.CThostFtdcDepthMarketDataField_BidPrice5_get, _thostmduserapi.CThostFtdcDepthMarketDataField_BidPrice5_set, doc=r"""申买价五""")
    BidVolume5: "TThostFtdcVolumeType" = property(_thostmduserapi.CThostFtdcDepthMarketDataField_BidVolume5_get, _thostmduserapi.CThostFtdcDepthMarketDataField_BidVolume5_set, doc=r"""申买量五""")
    AskPrice5: "TThostFtdcPriceType" = property(_thostmduserapi.CThostFtdcDepthMarketDataField_AskPrice5_get, _thostmduserapi.CThostFtdcDepthMarketDataField_AskPrice5_set, doc=r"""申卖价五""")
    AskVolume5: "TThostFtdcVolumeType" = property(_thostmduserapi.CThostFtdcDepthMarketDataField_AskVolume5_get, _thostmduserapi.CThostFtdcDepthMarketDataField_AskVolume5_set, doc=r"""申卖量五""")
    AveragePrice: "TThostFtdcPriceType" = property(_thostmduserapi.CThostFtdcDepthMarketDataField_AveragePrice_get, _thostmduserapi.CThostFtdcDepthMarketDataField_AveragePrice_set, doc=r"""当日均价""")
    ActionDay: "TThostFtdcDateType" = property(_thostmduserapi.CThostFtdcDepthMarketDataField_ActionDay_get, _thostmduserapi.CThostFtdcDepthMarketDataField_ActionDay_set, doc=r"""业务日期""")
    InstrumentID: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcDepthMarketDataField_InstrumentID_get, _thostmduserapi.CThostFtdcDepthMarketDataField_InstrumentID_set, doc=r"""合约代码""")
    ExchangeInstID: "TThostFtdcExchangeInstIDType" = property(_thostmduserapi.CThostFtdcDepthMarketDataField_ExchangeInstID_get, _thostmduserapi.CThostFtdcDepthMarketDataField_ExchangeInstID_set, doc=r"""合约在交易所的代码""")
    BandingUpperPrice: "TThostFtdcPriceType" = property(_thostmduserapi.CThostFtdcDepthMarketDataField_BandingUpperPrice_get, _thostmduserapi.CThostFtdcDepthMarketDataField_BandingUpperPrice_set, doc=r"""上带价""")
    BandingLowerPrice: "TThostFtdcPriceType" = property(_thostmduserapi.CThostFtdcDepthMarketDataField_BandingLowerPrice_get, _thostmduserapi.CThostFtdcDepthMarketDataField_BandingLowerPrice_set, doc=r"""下带价""")

    def __init__(self):
        _thostmduserapi.CThostFtdcDepthMarketDataField_swiginit(self, _thostmduserapi.new_CThostFtdcDepthMarketDataField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcDepthMarketDataField

# Register CThostFtdcDepthMarketDataField in _thostmduserapi:
_thostmduserapi.CThostFtdcDepthMarketDataField_swigregister(CThostFtdcDepthMarketDataField)
class CThostFtdcInstrumentTradingRightField(object):
    r"""投资者合约交易权限"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    reserve1: "TThostFtdcOldInstrumentIDType" = property(_thostmduserapi.CThostFtdcInstrumentTradingRightField_reserve1_get, _thostmduserapi.CThostFtdcInstrumentTradingRightField_reserve1_set, doc=r"""保留的无效字段""")
    InvestorRange: "TThostFtdcInvestorRangeType" = property(_thostmduserapi.CThostFtdcInstrumentTradingRightField_InvestorRange_get, _thostmduserapi.CThostFtdcInstrumentTradingRightField_InvestorRange_set, doc=r"""投资者范围""")
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcInstrumentTradingRightField_BrokerID_get, _thostmduserapi.CThostFtdcInstrumentTradingRightField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "TThostFtdcInvestorIDType" = property(_thostmduserapi.CThostFtdcInstrumentTradingRightField_InvestorID_get, _thostmduserapi.CThostFtdcInstrumentTradingRightField_InvestorID_set, doc=r"""投资者代码""")
    TradingRight: "TThostFtdcTradingRightType" = property(_thostmduserapi.CThostFtdcInstrumentTradingRightField_TradingRight_get, _thostmduserapi.CThostFtdcInstrumentTradingRightField_TradingRight_set, doc=r"""交易权限""")
    InstrumentID: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcInstrumentTradingRightField_InstrumentID_get, _thostmduserapi.CThostFtdcInstrumentTradingRightField_InstrumentID_set, doc=r"""合约代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcInstrumentTradingRightField_swiginit(self, _thostmduserapi.new_CThostFtdcInstrumentTradingRightField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcInstrumentTradingRightField

# Register CThostFtdcInstrumentTradingRightField in _thostmduserapi:
_thostmduserapi.CThostFtdcInstrumentTradingRightField_swigregister(CThostFtdcInstrumentTradingRightField)
class CThostFtdcBrokerUserField(object):
    r"""经纪公司用户"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcBrokerUserField_BrokerID_get, _thostmduserapi.CThostFtdcBrokerUserField_BrokerID_set, doc=r"""经纪公司代码""")
    UserID: "TThostFtdcUserIDType" = property(_thostmduserapi.CThostFtdcBrokerUserField_UserID_get, _thostmduserapi.CThostFtdcBrokerUserField_UserID_set, doc=r"""用户代码""")
    UserName: "TThostFtdcUserNameType" = property(_thostmduserapi.CThostFtdcBrokerUserField_UserName_get, _thostmduserapi.CThostFtdcBrokerUserField_UserName_set, doc=r"""用户名称""")
    UserType: "TThostFtdcUserTypeType" = property(_thostmduserapi.CThostFtdcBrokerUserField_UserType_get, _thostmduserapi.CThostFtdcBrokerUserField_UserType_set, doc=r"""用户类型""")
    IsActive: "TThostFtdcBoolType" = property(_thostmduserapi.CThostFtdcBrokerUserField_IsActive_get, _thostmduserapi.CThostFtdcBrokerUserField_IsActive_set, doc=r"""是否活跃""")
    IsUsingOTP: "TThostFtdcBoolType" = property(_thostmduserapi.CThostFtdcBrokerUserField_IsUsingOTP_get, _thostmduserapi.CThostFtdcBrokerUserField_IsUsingOTP_set, doc=r"""是否使用令牌""")
    IsAuthForce: "TThostFtdcBoolType" = property(_thostmduserapi.CThostFtdcBrokerUserField_IsAuthForce_get, _thostmduserapi.CThostFtdcBrokerUserField_IsAuthForce_set, doc=r"""是否强制终端认证""")

    def __init__(self):
        _thostmduserapi.CThostFtdcBrokerUserField_swiginit(self, _thostmduserapi.new_CThostFtdcBrokerUserField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcBrokerUserField

# Register CThostFtdcBrokerUserField in _thostmduserapi:
_thostmduserapi.CThostFtdcBrokerUserField_swigregister(CThostFtdcBrokerUserField)
class CThostFtdcBrokerUserPasswordField(object):
    r"""经纪公司用户口令"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcBrokerUserPasswordField_BrokerID_get, _thostmduserapi.CThostFtdcBrokerUserPasswordField_BrokerID_set, doc=r"""经纪公司代码""")
    UserID: "TThostFtdcUserIDType" = property(_thostmduserapi.CThostFtdcBrokerUserPasswordField_UserID_get, _thostmduserapi.CThostFtdcBrokerUserPasswordField_UserID_set, doc=r"""用户代码""")
    Password: "TThostFtdcPasswordType" = property(_thostmduserapi.CThostFtdcBrokerUserPasswordField_Password_get, _thostmduserapi.CThostFtdcBrokerUserPasswordField_Password_set, doc=r"""密码""")
    LastUpdateTime: "TThostFtdcDateTimeType" = property(_thostmduserapi.CThostFtdcBrokerUserPasswordField_LastUpdateTime_get, _thostmduserapi.CThostFtdcBrokerUserPasswordField_LastUpdateTime_set, doc=r"""上次修改时间""")
    LastLoginTime: "TThostFtdcDateTimeType" = property(_thostmduserapi.CThostFtdcBrokerUserPasswordField_LastLoginTime_get, _thostmduserapi.CThostFtdcBrokerUserPasswordField_LastLoginTime_set, doc=r"""上次登陆时间""")
    ExpireDate: "TThostFtdcDateType" = property(_thostmduserapi.CThostFtdcBrokerUserPasswordField_ExpireDate_get, _thostmduserapi.CThostFtdcBrokerUserPasswordField_ExpireDate_set, doc=r"""密码过期时间""")
    WeakExpireDate: "TThostFtdcDateType" = property(_thostmduserapi.CThostFtdcBrokerUserPasswordField_WeakExpireDate_get, _thostmduserapi.CThostFtdcBrokerUserPasswordField_WeakExpireDate_set, doc=r"""弱密码过期时间""")

    def __init__(self):
        _thostmduserapi.CThostFtdcBrokerUserPasswordField_swiginit(self, _thostmduserapi.new_CThostFtdcBrokerUserPasswordField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcBrokerUserPasswordField

# Register CThostFtdcBrokerUserPasswordField in _thostmduserapi:
_thostmduserapi.CThostFtdcBrokerUserPasswordField_swigregister(CThostFtdcBrokerUserPasswordField)
class CThostFtdcBrokerUserFunctionField(object):
    r"""经纪公司用户功能权限"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcBrokerUserFunctionField_BrokerID_get, _thostmduserapi.CThostFtdcBrokerUserFunctionField_BrokerID_set, doc=r"""经纪公司代码""")
    UserID: "TThostFtdcUserIDType" = property(_thostmduserapi.CThostFtdcBrokerUserFunctionField_UserID_get, _thostmduserapi.CThostFtdcBrokerUserFunctionField_UserID_set, doc=r"""用户代码""")
    BrokerFunctionCode: "TThostFtdcBrokerFunctionCodeType" = property(_thostmduserapi.CThostFtdcBrokerUserFunctionField_BrokerFunctionCode_get, _thostmduserapi.CThostFtdcBrokerUserFunctionField_BrokerFunctionCode_set, doc=r"""经纪公司功能代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcBrokerUserFunctionField_swiginit(self, _thostmduserapi.new_CThostFtdcBrokerUserFunctionField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcBrokerUserFunctionField

# Register CThostFtdcBrokerUserFunctionField in _thostmduserapi:
_thostmduserapi.CThostFtdcBrokerUserFunctionField_swigregister(CThostFtdcBrokerUserFunctionField)
class CThostFtdcTraderOfferField(object):
    r"""交易所交易员报盘机"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcTraderOfferField_ExchangeID_get, _thostmduserapi.CThostFtdcTraderOfferField_ExchangeID_set, doc=r"""交易所代码""")
    TraderID: "TThostFtdcTraderIDType" = property(_thostmduserapi.CThostFtdcTraderOfferField_TraderID_get, _thostmduserapi.CThostFtdcTraderOfferField_TraderID_set, doc=r"""交易所交易员代码""")
    ParticipantID: "TThostFtdcParticipantIDType" = property(_thostmduserapi.CThostFtdcTraderOfferField_ParticipantID_get, _thostmduserapi.CThostFtdcTraderOfferField_ParticipantID_set, doc=r"""会员代码""")
    Password: "TThostFtdcPasswordType" = property(_thostmduserapi.CThostFtdcTraderOfferField_Password_get, _thostmduserapi.CThostFtdcTraderOfferField_Password_set, doc=r"""密码""")
    InstallID: "TThostFtdcInstallIDType" = property(_thostmduserapi.CThostFtdcTraderOfferField_InstallID_get, _thostmduserapi.CThostFtdcTraderOfferField_InstallID_set, doc=r"""安装编号""")
    OrderLocalID: "TThostFtdcOrderLocalIDType" = property(_thostmduserapi.CThostFtdcTraderOfferField_OrderLocalID_get, _thostmduserapi.CThostFtdcTraderOfferField_OrderLocalID_set, doc=r"""本地报单编号""")
    TraderConnectStatus: "TThostFtdcTraderConnectStatusType" = property(_thostmduserapi.CThostFtdcTraderOfferField_TraderConnectStatus_get, _thostmduserapi.CThostFtdcTraderOfferField_TraderConnectStatus_set, doc=r"""交易所交易员连接状态""")
    ConnectRequestDate: "TThostFtdcDateType" = property(_thostmduserapi.CThostFtdcTraderOfferField_ConnectRequestDate_get, _thostmduserapi.CThostFtdcTraderOfferField_ConnectRequestDate_set, doc=r"""发出连接请求的日期""")
    ConnectRequestTime: "TThostFtdcTimeType" = property(_thostmduserapi.CThostFtdcTraderOfferField_ConnectRequestTime_get, _thostmduserapi.CThostFtdcTraderOfferField_ConnectRequestTime_set, doc=r"""发出连接请求的时间""")
    LastReportDate: "TThostFtdcDateType" = property(_thostmduserapi.CThostFtdcTraderOfferField_LastReportDate_get, _thostmduserapi.CThostFtdcTraderOfferField_LastReportDate_set, doc=r"""上次报告日期""")
    LastReportTime: "TThostFtdcTimeType" = property(_thostmduserapi.CThostFtdcTraderOfferField_LastReportTime_get, _thostmduserapi.CThostFtdcTraderOfferField_LastReportTime_set, doc=r"""上次报告时间""")
    ConnectDate: "TThostFtdcDateType" = property(_thostmduserapi.CThostFtdcTraderOfferField_ConnectDate_get, _thostmduserapi.CThostFtdcTraderOfferField_ConnectDate_set, doc=r"""完成连接日期""")
    ConnectTime: "TThostFtdcTimeType" = property(_thostmduserapi.CThostFtdcTraderOfferField_ConnectTime_get, _thostmduserapi.CThostFtdcTraderOfferField_ConnectTime_set, doc=r"""完成连接时间""")
    StartDate: "TThostFtdcDateType" = property(_thostmduserapi.CThostFtdcTraderOfferField_StartDate_get, _thostmduserapi.CThostFtdcTraderOfferField_StartDate_set, doc=r"""启动日期""")
    StartTime: "TThostFtdcTimeType" = property(_thostmduserapi.CThostFtdcTraderOfferField_StartTime_get, _thostmduserapi.CThostFtdcTraderOfferField_StartTime_set, doc=r"""启动时间""")
    TradingDay: "TThostFtdcDateType" = property(_thostmduserapi.CThostFtdcTraderOfferField_TradingDay_get, _thostmduserapi.CThostFtdcTraderOfferField_TradingDay_set, doc=r"""交易日""")
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcTraderOfferField_BrokerID_get, _thostmduserapi.CThostFtdcTraderOfferField_BrokerID_set, doc=r"""经纪公司代码""")
    MaxTradeID: "TThostFtdcTradeIDType" = property(_thostmduserapi.CThostFtdcTraderOfferField_MaxTradeID_get, _thostmduserapi.CThostFtdcTraderOfferField_MaxTradeID_set, doc=r"""本席位最大成交编号""")
    MaxOrderMessageReference: "TThostFtdcReturnCodeType" = property(_thostmduserapi.CThostFtdcTraderOfferField_MaxOrderMessageReference_get, _thostmduserapi.CThostFtdcTraderOfferField_MaxOrderMessageReference_set, doc=r"""本席位最大报单备拷""")
    OrderCancelAlg: "TThostFtdcOrderCancelAlgType" = property(_thostmduserapi.CThostFtdcTraderOfferField_OrderCancelAlg_get, _thostmduserapi.CThostFtdcTraderOfferField_OrderCancelAlg_set, doc=r"""撤单时选择席位算法""")

    def __init__(self):
        _thostmduserapi.CThostFtdcTraderOfferField_swiginit(self, _thostmduserapi.new_CThostFtdcTraderOfferField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcTraderOfferField

# Register CThostFtdcTraderOfferField in _thostmduserapi:
_thostmduserapi.CThostFtdcTraderOfferField_swigregister(CThostFtdcTraderOfferField)
class CThostFtdcSettlementInfoField(object):
    r"""投资者结算结果"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    TradingDay: "TThostFtdcDateType" = property(_thostmduserapi.CThostFtdcSettlementInfoField_TradingDay_get, _thostmduserapi.CThostFtdcSettlementInfoField_TradingDay_set, doc=r"""交易日""")
    SettlementID: "TThostFtdcSettlementIDType" = property(_thostmduserapi.CThostFtdcSettlementInfoField_SettlementID_get, _thostmduserapi.CThostFtdcSettlementInfoField_SettlementID_set, doc=r"""结算编号""")
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcSettlementInfoField_BrokerID_get, _thostmduserapi.CThostFtdcSettlementInfoField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "TThostFtdcInvestorIDType" = property(_thostmduserapi.CThostFtdcSettlementInfoField_InvestorID_get, _thostmduserapi.CThostFtdcSettlementInfoField_InvestorID_set, doc=r"""投资者代码""")
    SequenceNo: "TThostFtdcSequenceNoType" = property(_thostmduserapi.CThostFtdcSettlementInfoField_SequenceNo_get, _thostmduserapi.CThostFtdcSettlementInfoField_SequenceNo_set, doc=r"""序号""")
    Content: "TThostFtdcContentType" = property(_thostmduserapi.CThostFtdcSettlementInfoField_Content_get, _thostmduserapi.CThostFtdcSettlementInfoField_Content_set, doc=r"""消息正文""")
    AccountID: "TThostFtdcAccountIDType" = property(_thostmduserapi.CThostFtdcSettlementInfoField_AccountID_get, _thostmduserapi.CThostFtdcSettlementInfoField_AccountID_set, doc=r"""投资者帐号""")
    CurrencyID: "TThostFtdcCurrencyIDType" = property(_thostmduserapi.CThostFtdcSettlementInfoField_CurrencyID_get, _thostmduserapi.CThostFtdcSettlementInfoField_CurrencyID_set, doc=r"""币种代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcSettlementInfoField_swiginit(self, _thostmduserapi.new_CThostFtdcSettlementInfoField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcSettlementInfoField

# Register CThostFtdcSettlementInfoField in _thostmduserapi:
_thostmduserapi.CThostFtdcSettlementInfoField_swigregister(CThostFtdcSettlementInfoField)
class CThostFtdcInstrumentMarginRateAdjustField(object):
    r"""合约保证金率调整"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    reserve1: "TThostFtdcOldInstrumentIDType" = property(_thostmduserapi.CThostFtdcInstrumentMarginRateAdjustField_reserve1_get, _thostmduserapi.CThostFtdcInstrumentMarginRateAdjustField_reserve1_set, doc=r"""保留的无效字段""")
    InvestorRange: "TThostFtdcInvestorRangeType" = property(_thostmduserapi.CThostFtdcInstrumentMarginRateAdjustField_InvestorRange_get, _thostmduserapi.CThostFtdcInstrumentMarginRateAdjustField_InvestorRange_set, doc=r"""投资者范围""")
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcInstrumentMarginRateAdjustField_BrokerID_get, _thostmduserapi.CThostFtdcInstrumentMarginRateAdjustField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "TThostFtdcInvestorIDType" = property(_thostmduserapi.CThostFtdcInstrumentMarginRateAdjustField_InvestorID_get, _thostmduserapi.CThostFtdcInstrumentMarginRateAdjustField_InvestorID_set, doc=r"""投资者代码""")
    HedgeFlag: "TThostFtdcHedgeFlagType" = property(_thostmduserapi.CThostFtdcInstrumentMarginRateAdjustField_HedgeFlag_get, _thostmduserapi.CThostFtdcInstrumentMarginRateAdjustField_HedgeFlag_set, doc=r"""投机套保标志""")
    LongMarginRatioByMoney: "TThostFtdcRatioType" = property(_thostmduserapi.CThostFtdcInstrumentMarginRateAdjustField_LongMarginRatioByMoney_get, _thostmduserapi.CThostFtdcInstrumentMarginRateAdjustField_LongMarginRatioByMoney_set, doc=r"""多头保证金率""")
    LongMarginRatioByVolume: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcInstrumentMarginRateAdjustField_LongMarginRatioByVolume_get, _thostmduserapi.CThostFtdcInstrumentMarginRateAdjustField_LongMarginRatioByVolume_set, doc=r"""多头保证金费""")
    ShortMarginRatioByMoney: "TThostFtdcRatioType" = property(_thostmduserapi.CThostFtdcInstrumentMarginRateAdjustField_ShortMarginRatioByMoney_get, _thostmduserapi.CThostFtdcInstrumentMarginRateAdjustField_ShortMarginRatioByMoney_set, doc=r"""空头保证金率""")
    ShortMarginRatioByVolume: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcInstrumentMarginRateAdjustField_ShortMarginRatioByVolume_get, _thostmduserapi.CThostFtdcInstrumentMarginRateAdjustField_ShortMarginRatioByVolume_set, doc=r"""空头保证金费""")
    IsRelative: "TThostFtdcBoolType" = property(_thostmduserapi.CThostFtdcInstrumentMarginRateAdjustField_IsRelative_get, _thostmduserapi.CThostFtdcInstrumentMarginRateAdjustField_IsRelative_set, doc=r"""是否相对交易所收取""")
    InstrumentID: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcInstrumentMarginRateAdjustField_InstrumentID_get, _thostmduserapi.CThostFtdcInstrumentMarginRateAdjustField_InstrumentID_set, doc=r"""合约代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcInstrumentMarginRateAdjustField_swiginit(self, _thostmduserapi.new_CThostFtdcInstrumentMarginRateAdjustField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcInstrumentMarginRateAdjustField

# Register CThostFtdcInstrumentMarginRateAdjustField in _thostmduserapi:
_thostmduserapi.CThostFtdcInstrumentMarginRateAdjustField_swigregister(CThostFtdcInstrumentMarginRateAdjustField)
class CThostFtdcExchangeMarginRateField(object):
    r"""交易所保证金率"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcExchangeMarginRateField_BrokerID_get, _thostmduserapi.CThostFtdcExchangeMarginRateField_BrokerID_set, doc=r"""经纪公司代码""")
    reserve1: "TThostFtdcOldInstrumentIDType" = property(_thostmduserapi.CThostFtdcExchangeMarginRateField_reserve1_get, _thostmduserapi.CThostFtdcExchangeMarginRateField_reserve1_set, doc=r"""保留的无效字段""")
    HedgeFlag: "TThostFtdcHedgeFlagType" = property(_thostmduserapi.CThostFtdcExchangeMarginRateField_HedgeFlag_get, _thostmduserapi.CThostFtdcExchangeMarginRateField_HedgeFlag_set, doc=r"""投机套保标志""")
    LongMarginRatioByMoney: "TThostFtdcRatioType" = property(_thostmduserapi.CThostFtdcExchangeMarginRateField_LongMarginRatioByMoney_get, _thostmduserapi.CThostFtdcExchangeMarginRateField_LongMarginRatioByMoney_set, doc=r"""多头保证金率""")
    LongMarginRatioByVolume: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcExchangeMarginRateField_LongMarginRatioByVolume_get, _thostmduserapi.CThostFtdcExchangeMarginRateField_LongMarginRatioByVolume_set, doc=r"""多头保证金费""")
    ShortMarginRatioByMoney: "TThostFtdcRatioType" = property(_thostmduserapi.CThostFtdcExchangeMarginRateField_ShortMarginRatioByMoney_get, _thostmduserapi.CThostFtdcExchangeMarginRateField_ShortMarginRatioByMoney_set, doc=r"""空头保证金率""")
    ShortMarginRatioByVolume: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcExchangeMarginRateField_ShortMarginRatioByVolume_get, _thostmduserapi.CThostFtdcExchangeMarginRateField_ShortMarginRatioByVolume_set, doc=r"""空头保证金费""")
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcExchangeMarginRateField_ExchangeID_get, _thostmduserapi.CThostFtdcExchangeMarginRateField_ExchangeID_set, doc=r"""交易所代码""")
    InstrumentID: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcExchangeMarginRateField_InstrumentID_get, _thostmduserapi.CThostFtdcExchangeMarginRateField_InstrumentID_set, doc=r"""合约代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcExchangeMarginRateField_swiginit(self, _thostmduserapi.new_CThostFtdcExchangeMarginRateField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcExchangeMarginRateField

# Register CThostFtdcExchangeMarginRateField in _thostmduserapi:
_thostmduserapi.CThostFtdcExchangeMarginRateField_swigregister(CThostFtdcExchangeMarginRateField)
class CThostFtdcExchangeMarginRateAdjustField(object):
    r"""交易所保证金率调整"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcExchangeMarginRateAdjustField_BrokerID_get, _thostmduserapi.CThostFtdcExchangeMarginRateAdjustField_BrokerID_set, doc=r"""经纪公司代码""")
    reserve1: "TThostFtdcOldInstrumentIDType" = property(_thostmduserapi.CThostFtdcExchangeMarginRateAdjustField_reserve1_get, _thostmduserapi.CThostFtdcExchangeMarginRateAdjustField_reserve1_set, doc=r"""保留的无效字段""")
    HedgeFlag: "TThostFtdcHedgeFlagType" = property(_thostmduserapi.CThostFtdcExchangeMarginRateAdjustField_HedgeFlag_get, _thostmduserapi.CThostFtdcExchangeMarginRateAdjustField_HedgeFlag_set, doc=r"""投机套保标志""")
    LongMarginRatioByMoney: "TThostFtdcRatioType" = property(_thostmduserapi.CThostFtdcExchangeMarginRateAdjustField_LongMarginRatioByMoney_get, _thostmduserapi.CThostFtdcExchangeMarginRateAdjustField_LongMarginRatioByMoney_set, doc=r"""跟随交易所投资者多头保证金率""")
    LongMarginRatioByVolume: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcExchangeMarginRateAdjustField_LongMarginRatioByVolume_get, _thostmduserapi.CThostFtdcExchangeMarginRateAdjustField_LongMarginRatioByVolume_set, doc=r"""跟随交易所投资者多头保证金费""")
    ShortMarginRatioByMoney: "TThostFtdcRatioType" = property(_thostmduserapi.CThostFtdcExchangeMarginRateAdjustField_ShortMarginRatioByMoney_get, _thostmduserapi.CThostFtdcExchangeMarginRateAdjustField_ShortMarginRatioByMoney_set, doc=r"""跟随交易所投资者空头保证金率""")
    ShortMarginRatioByVolume: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcExchangeMarginRateAdjustField_ShortMarginRatioByVolume_get, _thostmduserapi.CThostFtdcExchangeMarginRateAdjustField_ShortMarginRatioByVolume_set, doc=r"""跟随交易所投资者空头保证金费""")
    ExchLongMarginRatioByMoney: "TThostFtdcRatioType" = property(_thostmduserapi.CThostFtdcExchangeMarginRateAdjustField_ExchLongMarginRatioByMoney_get, _thostmduserapi.CThostFtdcExchangeMarginRateAdjustField_ExchLongMarginRatioByMoney_set, doc=r"""交易所多头保证金率""")
    ExchLongMarginRatioByVolume: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcExchangeMarginRateAdjustField_ExchLongMarginRatioByVolume_get, _thostmduserapi.CThostFtdcExchangeMarginRateAdjustField_ExchLongMarginRatioByVolume_set, doc=r"""交易所多头保证金费""")
    ExchShortMarginRatioByMoney: "TThostFtdcRatioType" = property(_thostmduserapi.CThostFtdcExchangeMarginRateAdjustField_ExchShortMarginRatioByMoney_get, _thostmduserapi.CThostFtdcExchangeMarginRateAdjustField_ExchShortMarginRatioByMoney_set, doc=r"""交易所空头保证金率""")
    ExchShortMarginRatioByVolume: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcExchangeMarginRateAdjustField_ExchShortMarginRatioByVolume_get, _thostmduserapi.CThostFtdcExchangeMarginRateAdjustField_ExchShortMarginRatioByVolume_set, doc=r"""交易所空头保证金费""")
    NoLongMarginRatioByMoney: "TThostFtdcRatioType" = property(_thostmduserapi.CThostFtdcExchangeMarginRateAdjustField_NoLongMarginRatioByMoney_get, _thostmduserapi.CThostFtdcExchangeMarginRateAdjustField_NoLongMarginRatioByMoney_set, doc=r"""不跟随交易所投资者多头保证金率""")
    NoLongMarginRatioByVolume: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcExchangeMarginRateAdjustField_NoLongMarginRatioByVolume_get, _thostmduserapi.CThostFtdcExchangeMarginRateAdjustField_NoLongMarginRatioByVolume_set, doc=r"""不跟随交易所投资者多头保证金费""")
    NoShortMarginRatioByMoney: "TThostFtdcRatioType" = property(_thostmduserapi.CThostFtdcExchangeMarginRateAdjustField_NoShortMarginRatioByMoney_get, _thostmduserapi.CThostFtdcExchangeMarginRateAdjustField_NoShortMarginRatioByMoney_set, doc=r"""不跟随交易所投资者空头保证金率""")
    NoShortMarginRatioByVolume: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcExchangeMarginRateAdjustField_NoShortMarginRatioByVolume_get, _thostmduserapi.CThostFtdcExchangeMarginRateAdjustField_NoShortMarginRatioByVolume_set, doc=r"""不跟随交易所投资者空头保证金费""")
    InstrumentID: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcExchangeMarginRateAdjustField_InstrumentID_get, _thostmduserapi.CThostFtdcExchangeMarginRateAdjustField_InstrumentID_set, doc=r"""合约代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcExchangeMarginRateAdjustField_swiginit(self, _thostmduserapi.new_CThostFtdcExchangeMarginRateAdjustField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcExchangeMarginRateAdjustField

# Register CThostFtdcExchangeMarginRateAdjustField in _thostmduserapi:
_thostmduserapi.CThostFtdcExchangeMarginRateAdjustField_swigregister(CThostFtdcExchangeMarginRateAdjustField)
class CThostFtdcExchangeRateField(object):
    r"""汇率"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcExchangeRateField_BrokerID_get, _thostmduserapi.CThostFtdcExchangeRateField_BrokerID_set, doc=r"""经纪公司代码""")
    FromCurrencyID: "TThostFtdcCurrencyIDType" = property(_thostmduserapi.CThostFtdcExchangeRateField_FromCurrencyID_get, _thostmduserapi.CThostFtdcExchangeRateField_FromCurrencyID_set, doc=r"""源币种""")
    FromCurrencyUnit: "TThostFtdcCurrencyUnitType" = property(_thostmduserapi.CThostFtdcExchangeRateField_FromCurrencyUnit_get, _thostmduserapi.CThostFtdcExchangeRateField_FromCurrencyUnit_set, doc=r"""源币种单位数量""")
    ToCurrencyID: "TThostFtdcCurrencyIDType" = property(_thostmduserapi.CThostFtdcExchangeRateField_ToCurrencyID_get, _thostmduserapi.CThostFtdcExchangeRateField_ToCurrencyID_set, doc=r"""目标币种""")
    ExchangeRate: "TThostFtdcExchangeRateType" = property(_thostmduserapi.CThostFtdcExchangeRateField_ExchangeRate_get, _thostmduserapi.CThostFtdcExchangeRateField_ExchangeRate_set, doc=r"""汇率""")

    def __init__(self):
        _thostmduserapi.CThostFtdcExchangeRateField_swiginit(self, _thostmduserapi.new_CThostFtdcExchangeRateField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcExchangeRateField

# Register CThostFtdcExchangeRateField in _thostmduserapi:
_thostmduserapi.CThostFtdcExchangeRateField_swigregister(CThostFtdcExchangeRateField)
class CThostFtdcSettlementRefField(object):
    r"""结算引用"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    TradingDay: "TThostFtdcDateType" = property(_thostmduserapi.CThostFtdcSettlementRefField_TradingDay_get, _thostmduserapi.CThostFtdcSettlementRefField_TradingDay_set, doc=r"""交易日""")
    SettlementID: "TThostFtdcSettlementIDType" = property(_thostmduserapi.CThostFtdcSettlementRefField_SettlementID_get, _thostmduserapi.CThostFtdcSettlementRefField_SettlementID_set, doc=r"""结算编号""")

    def __init__(self):
        _thostmduserapi.CThostFtdcSettlementRefField_swiginit(self, _thostmduserapi.new_CThostFtdcSettlementRefField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcSettlementRefField

# Register CThostFtdcSettlementRefField in _thostmduserapi:
_thostmduserapi.CThostFtdcSettlementRefField_swigregister(CThostFtdcSettlementRefField)
class CThostFtdcCurrentTimeField(object):
    r"""当前时间"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    CurrDate: "TThostFtdcDateType" = property(_thostmduserapi.CThostFtdcCurrentTimeField_CurrDate_get, _thostmduserapi.CThostFtdcCurrentTimeField_CurrDate_set, doc=r"""当前交易日""")
    CurrTime: "TThostFtdcTimeType" = property(_thostmduserapi.CThostFtdcCurrentTimeField_CurrTime_get, _thostmduserapi.CThostFtdcCurrentTimeField_CurrTime_set, doc=r"""当前时间""")
    CurrMillisec: "TThostFtdcMillisecType" = property(_thostmduserapi.CThostFtdcCurrentTimeField_CurrMillisec_get, _thostmduserapi.CThostFtdcCurrentTimeField_CurrMillisec_set, doc=r"""当前时间（毫秒）""")
    ActionDay: "TThostFtdcDateType" = property(_thostmduserapi.CThostFtdcCurrentTimeField_ActionDay_get, _thostmduserapi.CThostFtdcCurrentTimeField_ActionDay_set, doc=r"""自然日期""")

    def __init__(self):
        _thostmduserapi.CThostFtdcCurrentTimeField_swiginit(self, _thostmduserapi.new_CThostFtdcCurrentTimeField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcCurrentTimeField

# Register CThostFtdcCurrentTimeField in _thostmduserapi:
_thostmduserapi.CThostFtdcCurrentTimeField_swigregister(CThostFtdcCurrentTimeField)
class CThostFtdcCommPhaseField(object):
    r"""通讯阶段"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    TradingDay: "TThostFtdcDateType" = property(_thostmduserapi.CThostFtdcCommPhaseField_TradingDay_get, _thostmduserapi.CThostFtdcCommPhaseField_TradingDay_set, doc=r"""交易日""")
    CommPhaseNo: "TThostFtdcCommPhaseNoType" = property(_thostmduserapi.CThostFtdcCommPhaseField_CommPhaseNo_get, _thostmduserapi.CThostFtdcCommPhaseField_CommPhaseNo_set, doc=r"""通讯时段编号""")
    SystemID: "TThostFtdcSystemIDType" = property(_thostmduserapi.CThostFtdcCommPhaseField_SystemID_get, _thostmduserapi.CThostFtdcCommPhaseField_SystemID_set, doc=r"""系统编号""")

    def __init__(self):
        _thostmduserapi.CThostFtdcCommPhaseField_swiginit(self, _thostmduserapi.new_CThostFtdcCommPhaseField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcCommPhaseField

# Register CThostFtdcCommPhaseField in _thostmduserapi:
_thostmduserapi.CThostFtdcCommPhaseField_swigregister(CThostFtdcCommPhaseField)
class CThostFtdcLoginInfoField(object):
    r"""登录信息"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    FrontID: "TThostFtdcFrontIDType" = property(_thostmduserapi.CThostFtdcLoginInfoField_FrontID_get, _thostmduserapi.CThostFtdcLoginInfoField_FrontID_set, doc=r"""前置编号""")
    SessionID: "TThostFtdcSessionIDType" = property(_thostmduserapi.CThostFtdcLoginInfoField_SessionID_get, _thostmduserapi.CThostFtdcLoginInfoField_SessionID_set, doc=r"""会话编号""")
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcLoginInfoField_BrokerID_get, _thostmduserapi.CThostFtdcLoginInfoField_BrokerID_set, doc=r"""经纪公司代码""")
    UserID: "TThostFtdcUserIDType" = property(_thostmduserapi.CThostFtdcLoginInfoField_UserID_get, _thostmduserapi.CThostFtdcLoginInfoField_UserID_set, doc=r"""用户代码""")
    LoginDate: "TThostFtdcDateType" = property(_thostmduserapi.CThostFtdcLoginInfoField_LoginDate_get, _thostmduserapi.CThostFtdcLoginInfoField_LoginDate_set, doc=r"""登录日期""")
    LoginTime: "TThostFtdcTimeType" = property(_thostmduserapi.CThostFtdcLoginInfoField_LoginTime_get, _thostmduserapi.CThostFtdcLoginInfoField_LoginTime_set, doc=r"""登录时间""")
    reserve1: "TThostFtdcOldIPAddressType" = property(_thostmduserapi.CThostFtdcLoginInfoField_reserve1_get, _thostmduserapi.CThostFtdcLoginInfoField_reserve1_set, doc=r"""保留的无效字段""")
    UserProductInfo: "TThostFtdcProductInfoType" = property(_thostmduserapi.CThostFtdcLoginInfoField_UserProductInfo_get, _thostmduserapi.CThostFtdcLoginInfoField_UserProductInfo_set, doc=r"""用户端产品信息""")
    InterfaceProductInfo: "TThostFtdcProductInfoType" = property(_thostmduserapi.CThostFtdcLoginInfoField_InterfaceProductInfo_get, _thostmduserapi.CThostFtdcLoginInfoField_InterfaceProductInfo_set, doc=r"""接口端产品信息""")
    ProtocolInfo: "TThostFtdcProtocolInfoType" = property(_thostmduserapi.CThostFtdcLoginInfoField_ProtocolInfo_get, _thostmduserapi.CThostFtdcLoginInfoField_ProtocolInfo_set, doc=r"""协议信息""")
    SystemName: "TThostFtdcSystemNameType" = property(_thostmduserapi.CThostFtdcLoginInfoField_SystemName_get, _thostmduserapi.CThostFtdcLoginInfoField_SystemName_set, doc=r"""系统名称""")
    PasswordDeprecated: "TThostFtdcPasswordType" = property(_thostmduserapi.CThostFtdcLoginInfoField_PasswordDeprecated_get, _thostmduserapi.CThostFtdcLoginInfoField_PasswordDeprecated_set, doc=r"""密码,已弃用""")
    MaxOrderRef: "TThostFtdcOrderRefType" = property(_thostmduserapi.CThostFtdcLoginInfoField_MaxOrderRef_get, _thostmduserapi.CThostFtdcLoginInfoField_MaxOrderRef_set, doc=r"""最大报单引用""")
    SHFETime: "TThostFtdcTimeType" = property(_thostmduserapi.CThostFtdcLoginInfoField_SHFETime_get, _thostmduserapi.CThostFtdcLoginInfoField_SHFETime_set, doc=r"""上期所时间""")
    DCETime: "TThostFtdcTimeType" = property(_thostmduserapi.CThostFtdcLoginInfoField_DCETime_get, _thostmduserapi.CThostFtdcLoginInfoField_DCETime_set, doc=r"""大商所时间""")
    CZCETime: "TThostFtdcTimeType" = property(_thostmduserapi.CThostFtdcLoginInfoField_CZCETime_get, _thostmduserapi.CThostFtdcLoginInfoField_CZCETime_set, doc=r"""郑商所时间""")
    FFEXTime: "TThostFtdcTimeType" = property(_thostmduserapi.CThostFtdcLoginInfoField_FFEXTime_get, _thostmduserapi.CThostFtdcLoginInfoField_FFEXTime_set, doc=r"""中金所时间""")
    MacAddress: "TThostFtdcMacAddressType" = property(_thostmduserapi.CThostFtdcLoginInfoField_MacAddress_get, _thostmduserapi.CThostFtdcLoginInfoField_MacAddress_set, doc=r"""Mac地址""")
    OneTimePassword: "TThostFtdcPasswordType" = property(_thostmduserapi.CThostFtdcLoginInfoField_OneTimePassword_get, _thostmduserapi.CThostFtdcLoginInfoField_OneTimePassword_set, doc=r"""动态密码""")
    INETime: "TThostFtdcTimeType" = property(_thostmduserapi.CThostFtdcLoginInfoField_INETime_get, _thostmduserapi.CThostFtdcLoginInfoField_INETime_set, doc=r"""能源中心时间""")
    IsQryControl: "TThostFtdcBoolType" = property(_thostmduserapi.CThostFtdcLoginInfoField_IsQryControl_get, _thostmduserapi.CThostFtdcLoginInfoField_IsQryControl_set, doc=r"""查询时是否需要流控""")
    LoginRemark: "TThostFtdcLoginRemarkType" = property(_thostmduserapi.CThostFtdcLoginInfoField_LoginRemark_get, _thostmduserapi.CThostFtdcLoginInfoField_LoginRemark_set, doc=r"""登录备注""")
    Password: "TThostFtdcPasswordType" = property(_thostmduserapi.CThostFtdcLoginInfoField_Password_get, _thostmduserapi.CThostFtdcLoginInfoField_Password_set, doc=r"""密码""")
    IPAddress: "TThostFtdcIPAddressType" = property(_thostmduserapi.CThostFtdcLoginInfoField_IPAddress_get, _thostmduserapi.CThostFtdcLoginInfoField_IPAddress_set, doc=r"""IP地址""")

    def __init__(self):
        _thostmduserapi.CThostFtdcLoginInfoField_swiginit(self, _thostmduserapi.new_CThostFtdcLoginInfoField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcLoginInfoField

# Register CThostFtdcLoginInfoField in _thostmduserapi:
_thostmduserapi.CThostFtdcLoginInfoField_swigregister(CThostFtdcLoginInfoField)
class CThostFtdcLogoutAllField(object):
    r"""登录信息"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    FrontID: "TThostFtdcFrontIDType" = property(_thostmduserapi.CThostFtdcLogoutAllField_FrontID_get, _thostmduserapi.CThostFtdcLogoutAllField_FrontID_set, doc=r"""前置编号""")
    SessionID: "TThostFtdcSessionIDType" = property(_thostmduserapi.CThostFtdcLogoutAllField_SessionID_get, _thostmduserapi.CThostFtdcLogoutAllField_SessionID_set, doc=r"""会话编号""")
    SystemName: "TThostFtdcSystemNameType" = property(_thostmduserapi.CThostFtdcLogoutAllField_SystemName_get, _thostmduserapi.CThostFtdcLogoutAllField_SystemName_set, doc=r"""系统名称""")

    def __init__(self):
        _thostmduserapi.CThostFtdcLogoutAllField_swiginit(self, _thostmduserapi.new_CThostFtdcLogoutAllField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcLogoutAllField

# Register CThostFtdcLogoutAllField in _thostmduserapi:
_thostmduserapi.CThostFtdcLogoutAllField_swigregister(CThostFtdcLogoutAllField)
class CThostFtdcFrontStatusField(object):
    r"""前置状态"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    FrontID: "TThostFtdcFrontIDType" = property(_thostmduserapi.CThostFtdcFrontStatusField_FrontID_get, _thostmduserapi.CThostFtdcFrontStatusField_FrontID_set, doc=r"""前置编号""")
    LastReportDate: "TThostFtdcDateType" = property(_thostmduserapi.CThostFtdcFrontStatusField_LastReportDate_get, _thostmduserapi.CThostFtdcFrontStatusField_LastReportDate_set, doc=r"""上次报告日期""")
    LastReportTime: "TThostFtdcTimeType" = property(_thostmduserapi.CThostFtdcFrontStatusField_LastReportTime_get, _thostmduserapi.CThostFtdcFrontStatusField_LastReportTime_set, doc=r"""上次报告时间""")
    IsActive: "TThostFtdcBoolType" = property(_thostmduserapi.CThostFtdcFrontStatusField_IsActive_get, _thostmduserapi.CThostFtdcFrontStatusField_IsActive_set, doc=r"""是否活跃""")

    def __init__(self):
        _thostmduserapi.CThostFtdcFrontStatusField_swiginit(self, _thostmduserapi.new_CThostFtdcFrontStatusField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcFrontStatusField

# Register CThostFtdcFrontStatusField in _thostmduserapi:
_thostmduserapi.CThostFtdcFrontStatusField_swigregister(CThostFtdcFrontStatusField)
class CThostFtdcUserPasswordUpdateField(object):
    r"""用户口令变更"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcUserPasswordUpdateField_BrokerID_get, _thostmduserapi.CThostFtdcUserPasswordUpdateField_BrokerID_set, doc=r"""经纪公司代码""")
    UserID: "TThostFtdcUserIDType" = property(_thostmduserapi.CThostFtdcUserPasswordUpdateField_UserID_get, _thostmduserapi.CThostFtdcUserPasswordUpdateField_UserID_set, doc=r"""用户代码""")
    OldPassword: "TThostFtdcPasswordType" = property(_thostmduserapi.CThostFtdcUserPasswordUpdateField_OldPassword_get, _thostmduserapi.CThostFtdcUserPasswordUpdateField_OldPassword_set, doc=r"""原来的口令""")
    NewPassword: "TThostFtdcPasswordType" = property(_thostmduserapi.CThostFtdcUserPasswordUpdateField_NewPassword_get, _thostmduserapi.CThostFtdcUserPasswordUpdateField_NewPassword_set, doc=r"""新的口令""")

    def __init__(self):
        _thostmduserapi.CThostFtdcUserPasswordUpdateField_swiginit(self, _thostmduserapi.new_CThostFtdcUserPasswordUpdateField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcUserPasswordUpdateField

# Register CThostFtdcUserPasswordUpdateField in _thostmduserapi:
_thostmduserapi.CThostFtdcUserPasswordUpdateField_swigregister(CThostFtdcUserPasswordUpdateField)
class CThostFtdcInputOrderField(object):
    r"""输入报单"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcInputOrderField_BrokerID_get, _thostmduserapi.CThostFtdcInputOrderField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "TThostFtdcInvestorIDType" = property(_thostmduserapi.CThostFtdcInputOrderField_InvestorID_get, _thostmduserapi.CThostFtdcInputOrderField_InvestorID_set, doc=r"""投资者代码""")
    reserve1: "TThostFtdcOldInstrumentIDType" = property(_thostmduserapi.CThostFtdcInputOrderField_reserve1_get, _thostmduserapi.CThostFtdcInputOrderField_reserve1_set, doc=r"""保留的无效字段""")
    OrderRef: "TThostFtdcOrderRefType" = property(_thostmduserapi.CThostFtdcInputOrderField_OrderRef_get, _thostmduserapi.CThostFtdcInputOrderField_OrderRef_set, doc=r"""报单引用""")
    UserID: "TThostFtdcUserIDType" = property(_thostmduserapi.CThostFtdcInputOrderField_UserID_get, _thostmduserapi.CThostFtdcInputOrderField_UserID_set, doc=r"""用户代码""")
    OrderPriceType: "TThostFtdcOrderPriceTypeType" = property(_thostmduserapi.CThostFtdcInputOrderField_OrderPriceType_get, _thostmduserapi.CThostFtdcInputOrderField_OrderPriceType_set, doc=r"""报单价格条件""")
    Direction: "TThostFtdcDirectionType" = property(_thostmduserapi.CThostFtdcInputOrderField_Direction_get, _thostmduserapi.CThostFtdcInputOrderField_Direction_set, doc=r"""买卖方向""")
    CombOffsetFlag: "TThostFtdcCombOffsetFlagType" = property(_thostmduserapi.CThostFtdcInputOrderField_CombOffsetFlag_get, _thostmduserapi.CThostFtdcInputOrderField_CombOffsetFlag_set, doc=r"""组合开平标志""")
    CombHedgeFlag: "TThostFtdcCombHedgeFlagType" = property(_thostmduserapi.CThostFtdcInputOrderField_CombHedgeFlag_get, _thostmduserapi.CThostFtdcInputOrderField_CombHedgeFlag_set, doc=r"""组合投机套保标志""")
    LimitPrice: "TThostFtdcPriceType" = property(_thostmduserapi.CThostFtdcInputOrderField_LimitPrice_get, _thostmduserapi.CThostFtdcInputOrderField_LimitPrice_set, doc=r"""价格""")
    VolumeTotalOriginal: "TThostFtdcVolumeType" = property(_thostmduserapi.CThostFtdcInputOrderField_VolumeTotalOriginal_get, _thostmduserapi.CThostFtdcInputOrderField_VolumeTotalOriginal_set, doc=r"""数量""")
    TimeCondition: "TThostFtdcTimeConditionType" = property(_thostmduserapi.CThostFtdcInputOrderField_TimeCondition_get, _thostmduserapi.CThostFtdcInputOrderField_TimeCondition_set, doc=r"""有效期类型""")
    GTDDate: "TThostFtdcDateType" = property(_thostmduserapi.CThostFtdcInputOrderField_GTDDate_get, _thostmduserapi.CThostFtdcInputOrderField_GTDDate_set, doc=r"""GTD日期""")
    VolumeCondition: "TThostFtdcVolumeConditionType" = property(_thostmduserapi.CThostFtdcInputOrderField_VolumeCondition_get, _thostmduserapi.CThostFtdcInputOrderField_VolumeCondition_set, doc=r"""成交量类型""")
    MinVolume: "TThostFtdcVolumeType" = property(_thostmduserapi.CThostFtdcInputOrderField_MinVolume_get, _thostmduserapi.CThostFtdcInputOrderField_MinVolume_set, doc=r"""最小成交量""")
    ContingentCondition: "TThostFtdcContingentConditionType" = property(_thostmduserapi.CThostFtdcInputOrderField_ContingentCondition_get, _thostmduserapi.CThostFtdcInputOrderField_ContingentCondition_set, doc=r"""触发条件""")
    StopPrice: "TThostFtdcPriceType" = property(_thostmduserapi.CThostFtdcInputOrderField_StopPrice_get, _thostmduserapi.CThostFtdcInputOrderField_StopPrice_set, doc=r"""止损价""")
    ForceCloseReason: "TThostFtdcForceCloseReasonType" = property(_thostmduserapi.CThostFtdcInputOrderField_ForceCloseReason_get, _thostmduserapi.CThostFtdcInputOrderField_ForceCloseReason_set, doc=r"""强平原因""")
    IsAutoSuspend: "TThostFtdcBoolType" = property(_thostmduserapi.CThostFtdcInputOrderField_IsAutoSuspend_get, _thostmduserapi.CThostFtdcInputOrderField_IsAutoSuspend_set, doc=r"""自动挂起标志""")
    BusinessUnit: "TThostFtdcBusinessUnitType" = property(_thostmduserapi.CThostFtdcInputOrderField_BusinessUnit_get, _thostmduserapi.CThostFtdcInputOrderField_BusinessUnit_set, doc=r"""业务单元""")
    RequestID: "TThostFtdcRequestIDType" = property(_thostmduserapi.CThostFtdcInputOrderField_RequestID_get, _thostmduserapi.CThostFtdcInputOrderField_RequestID_set, doc=r"""请求编号""")
    UserForceClose: "TThostFtdcBoolType" = property(_thostmduserapi.CThostFtdcInputOrderField_UserForceClose_get, _thostmduserapi.CThostFtdcInputOrderField_UserForceClose_set, doc=r"""用户强评标志""")
    IsSwapOrder: "TThostFtdcBoolType" = property(_thostmduserapi.CThostFtdcInputOrderField_IsSwapOrder_get, _thostmduserapi.CThostFtdcInputOrderField_IsSwapOrder_set, doc=r"""互换单标志""")
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcInputOrderField_ExchangeID_get, _thostmduserapi.CThostFtdcInputOrderField_ExchangeID_set, doc=r"""交易所代码""")
    InvestUnitID: "TThostFtdcInvestUnitIDType" = property(_thostmduserapi.CThostFtdcInputOrderField_InvestUnitID_get, _thostmduserapi.CThostFtdcInputOrderField_InvestUnitID_set, doc=r"""投资单元代码""")
    AccountID: "TThostFtdcAccountIDType" = property(_thostmduserapi.CThostFtdcInputOrderField_AccountID_get, _thostmduserapi.CThostFtdcInputOrderField_AccountID_set, doc=r"""资金账号""")
    CurrencyID: "TThostFtdcCurrencyIDType" = property(_thostmduserapi.CThostFtdcInputOrderField_CurrencyID_get, _thostmduserapi.CThostFtdcInputOrderField_CurrencyID_set, doc=r"""币种代码""")
    ClientID: "TThostFtdcClientIDType" = property(_thostmduserapi.CThostFtdcInputOrderField_ClientID_get, _thostmduserapi.CThostFtdcInputOrderField_ClientID_set, doc=r"""交易编码""")
    reserve2: "TThostFtdcOldIPAddressType" = property(_thostmduserapi.CThostFtdcInputOrderField_reserve2_get, _thostmduserapi.CThostFtdcInputOrderField_reserve2_set, doc=r"""保留的无效字段""")
    MacAddress: "TThostFtdcMacAddressType" = property(_thostmduserapi.CThostFtdcInputOrderField_MacAddress_get, _thostmduserapi.CThostFtdcInputOrderField_MacAddress_set, doc=r"""Mac地址""")
    InstrumentID: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcInputOrderField_InstrumentID_get, _thostmduserapi.CThostFtdcInputOrderField_InstrumentID_set, doc=r"""合约代码""")
    IPAddress: "TThostFtdcIPAddressType" = property(_thostmduserapi.CThostFtdcInputOrderField_IPAddress_get, _thostmduserapi.CThostFtdcInputOrderField_IPAddress_set, doc=r"""IP地址""")

    def __init__(self):
        _thostmduserapi.CThostFtdcInputOrderField_swiginit(self, _thostmduserapi.new_CThostFtdcInputOrderField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcInputOrderField

# Register CThostFtdcInputOrderField in _thostmduserapi:
_thostmduserapi.CThostFtdcInputOrderField_swigregister(CThostFtdcInputOrderField)
class CThostFtdcOrderField(object):
    r"""报单"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcOrderField_BrokerID_get, _thostmduserapi.CThostFtdcOrderField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "TThostFtdcInvestorIDType" = property(_thostmduserapi.CThostFtdcOrderField_InvestorID_get, _thostmduserapi.CThostFtdcOrderField_InvestorID_set, doc=r"""投资者代码""")
    reserve1: "TThostFtdcOldInstrumentIDType" = property(_thostmduserapi.CThostFtdcOrderField_reserve1_get, _thostmduserapi.CThostFtdcOrderField_reserve1_set, doc=r"""保留的无效字段""")
    OrderRef: "TThostFtdcOrderRefType" = property(_thostmduserapi.CThostFtdcOrderField_OrderRef_get, _thostmduserapi.CThostFtdcOrderField_OrderRef_set, doc=r"""报单引用""")
    UserID: "TThostFtdcUserIDType" = property(_thostmduserapi.CThostFtdcOrderField_UserID_get, _thostmduserapi.CThostFtdcOrderField_UserID_set, doc=r"""用户代码""")
    OrderPriceType: "TThostFtdcOrderPriceTypeType" = property(_thostmduserapi.CThostFtdcOrderField_OrderPriceType_get, _thostmduserapi.CThostFtdcOrderField_OrderPriceType_set, doc=r"""报单价格条件""")
    Direction: "TThostFtdcDirectionType" = property(_thostmduserapi.CThostFtdcOrderField_Direction_get, _thostmduserapi.CThostFtdcOrderField_Direction_set, doc=r"""买卖方向""")
    CombOffsetFlag: "TThostFtdcCombOffsetFlagType" = property(_thostmduserapi.CThostFtdcOrderField_CombOffsetFlag_get, _thostmduserapi.CThostFtdcOrderField_CombOffsetFlag_set, doc=r"""组合开平标志""")
    CombHedgeFlag: "TThostFtdcCombHedgeFlagType" = property(_thostmduserapi.CThostFtdcOrderField_CombHedgeFlag_get, _thostmduserapi.CThostFtdcOrderField_CombHedgeFlag_set, doc=r"""组合投机套保标志""")
    LimitPrice: "TThostFtdcPriceType" = property(_thostmduserapi.CThostFtdcOrderField_LimitPrice_get, _thostmduserapi.CThostFtdcOrderField_LimitPrice_set, doc=r"""价格""")
    VolumeTotalOriginal: "TThostFtdcVolumeType" = property(_thostmduserapi.CThostFtdcOrderField_VolumeTotalOriginal_get, _thostmduserapi.CThostFtdcOrderField_VolumeTotalOriginal_set, doc=r"""数量""")
    TimeCondition: "TThostFtdcTimeConditionType" = property(_thostmduserapi.CThostFtdcOrderField_TimeCondition_get, _thostmduserapi.CThostFtdcOrderField_TimeCondition_set, doc=r"""有效期类型""")
    GTDDate: "TThostFtdcDateType" = property(_thostmduserapi.CThostFtdcOrderField_GTDDate_get, _thostmduserapi.CThostFtdcOrderField_GTDDate_set, doc=r"""GTD日期""")
    VolumeCondition: "TThostFtdcVolumeConditionType" = property(_thostmduserapi.CThostFtdcOrderField_VolumeCondition_get, _thostmduserapi.CThostFtdcOrderField_VolumeCondition_set, doc=r"""成交量类型""")
    MinVolume: "TThostFtdcVolumeType" = property(_thostmduserapi.CThostFtdcOrderField_MinVolume_get, _thostmduserapi.CThostFtdcOrderField_MinVolume_set, doc=r"""最小成交量""")
    ContingentCondition: "TThostFtdcContingentConditionType" = property(_thostmduserapi.CThostFtdcOrderField_ContingentCondition_get, _thostmduserapi.CThostFtdcOrderField_ContingentCondition_set, doc=r"""触发条件""")
    StopPrice: "TThostFtdcPriceType" = property(_thostmduserapi.CThostFtdcOrderField_StopPrice_get, _thostmduserapi.CThostFtdcOrderField_StopPrice_set, doc=r"""止损价""")
    ForceCloseReason: "TThostFtdcForceCloseReasonType" = property(_thostmduserapi.CThostFtdcOrderField_ForceCloseReason_get, _thostmduserapi.CThostFtdcOrderField_ForceCloseReason_set, doc=r"""强平原因""")
    IsAutoSuspend: "TThostFtdcBoolType" = property(_thostmduserapi.CThostFtdcOrderField_IsAutoSuspend_get, _thostmduserapi.CThostFtdcOrderField_IsAutoSuspend_set, doc=r"""自动挂起标志""")
    BusinessUnit: "TThostFtdcBusinessUnitType" = property(_thostmduserapi.CThostFtdcOrderField_BusinessUnit_get, _thostmduserapi.CThostFtdcOrderField_BusinessUnit_set, doc=r"""业务单元""")
    RequestID: "TThostFtdcRequestIDType" = property(_thostmduserapi.CThostFtdcOrderField_RequestID_get, _thostmduserapi.CThostFtdcOrderField_RequestID_set, doc=r"""请求编号""")
    OrderLocalID: "TThostFtdcOrderLocalIDType" = property(_thostmduserapi.CThostFtdcOrderField_OrderLocalID_get, _thostmduserapi.CThostFtdcOrderField_OrderLocalID_set, doc=r"""本地报单编号""")
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcOrderField_ExchangeID_get, _thostmduserapi.CThostFtdcOrderField_ExchangeID_set, doc=r"""交易所代码""")
    ParticipantID: "TThostFtdcParticipantIDType" = property(_thostmduserapi.CThostFtdcOrderField_ParticipantID_get, _thostmduserapi.CThostFtdcOrderField_ParticipantID_set, doc=r"""会员代码""")
    ClientID: "TThostFtdcClientIDType" = property(_thostmduserapi.CThostFtdcOrderField_ClientID_get, _thostmduserapi.CThostFtdcOrderField_ClientID_set, doc=r"""客户代码""")
    reserve2: "TThostFtdcOldExchangeInstIDType" = property(_thostmduserapi.CThostFtdcOrderField_reserve2_get, _thostmduserapi.CThostFtdcOrderField_reserve2_set, doc=r"""保留的无效字段""")
    TraderID: "TThostFtdcTraderIDType" = property(_thostmduserapi.CThostFtdcOrderField_TraderID_get, _thostmduserapi.CThostFtdcOrderField_TraderID_set, doc=r"""交易所交易员代码""")
    InstallID: "TThostFtdcInstallIDType" = property(_thostmduserapi.CThostFtdcOrderField_InstallID_get, _thostmduserapi.CThostFtdcOrderField_InstallID_set, doc=r"""安装编号""")
    OrderSubmitStatus: "TThostFtdcOrderSubmitStatusType" = property(_thostmduserapi.CThostFtdcOrderField_OrderSubmitStatus_get, _thostmduserapi.CThostFtdcOrderField_OrderSubmitStatus_set, doc=r"""报单提交状态""")
    NotifySequence: "TThostFtdcSequenceNoType" = property(_thostmduserapi.CThostFtdcOrderField_NotifySequence_get, _thostmduserapi.CThostFtdcOrderField_NotifySequence_set, doc=r"""报单提示序号""")
    TradingDay: "TThostFtdcDateType" = property(_thostmduserapi.CThostFtdcOrderField_TradingDay_get, _thostmduserapi.CThostFtdcOrderField_TradingDay_set, doc=r"""交易日""")
    SettlementID: "TThostFtdcSettlementIDType" = property(_thostmduserapi.CThostFtdcOrderField_SettlementID_get, _thostmduserapi.CThostFtdcOrderField_SettlementID_set, doc=r"""结算编号""")
    OrderSysID: "TThostFtdcOrderSysIDType" = property(_thostmduserapi.CThostFtdcOrderField_OrderSysID_get, _thostmduserapi.CThostFtdcOrderField_OrderSysID_set, doc=r"""报单编号""")
    OrderSource: "TThostFtdcOrderSourceType" = property(_thostmduserapi.CThostFtdcOrderField_OrderSource_get, _thostmduserapi.CThostFtdcOrderField_OrderSource_set, doc=r"""报单来源""")
    OrderStatus: "TThostFtdcOrderStatusType" = property(_thostmduserapi.CThostFtdcOrderField_OrderStatus_get, _thostmduserapi.CThostFtdcOrderField_OrderStatus_set, doc=r"""报单状态""")
    OrderType: "TThostFtdcOrderTypeType" = property(_thostmduserapi.CThostFtdcOrderField_OrderType_get, _thostmduserapi.CThostFtdcOrderField_OrderType_set, doc=r"""报单类型""")
    VolumeTraded: "TThostFtdcVolumeType" = property(_thostmduserapi.CThostFtdcOrderField_VolumeTraded_get, _thostmduserapi.CThostFtdcOrderField_VolumeTraded_set, doc=r"""今成交数量""")
    VolumeTotal: "TThostFtdcVolumeType" = property(_thostmduserapi.CThostFtdcOrderField_VolumeTotal_get, _thostmduserapi.CThostFtdcOrderField_VolumeTotal_set, doc=r"""剩余数量""")
    InsertDate: "TThostFtdcDateType" = property(_thostmduserapi.CThostFtdcOrderField_InsertDate_get, _thostmduserapi.CThostFtdcOrderField_InsertDate_set, doc=r"""报单日期""")
    InsertTime: "TThostFtdcTimeType" = property(_thostmduserapi.CThostFtdcOrderField_InsertTime_get, _thostmduserapi.CThostFtdcOrderField_InsertTime_set, doc=r"""委托时间""")
    ActiveTime: "TThostFtdcTimeType" = property(_thostmduserapi.CThostFtdcOrderField_ActiveTime_get, _thostmduserapi.CThostFtdcOrderField_ActiveTime_set, doc=r"""激活时间""")
    SuspendTime: "TThostFtdcTimeType" = property(_thostmduserapi.CThostFtdcOrderField_SuspendTime_get, _thostmduserapi.CThostFtdcOrderField_SuspendTime_set, doc=r"""挂起时间""")
    UpdateTime: "TThostFtdcTimeType" = property(_thostmduserapi.CThostFtdcOrderField_UpdateTime_get, _thostmduserapi.CThostFtdcOrderField_UpdateTime_set, doc=r"""最后修改时间""")
    CancelTime: "TThostFtdcTimeType" = property(_thostmduserapi.CThostFtdcOrderField_CancelTime_get, _thostmduserapi.CThostFtdcOrderField_CancelTime_set, doc=r"""撤销时间""")
    ActiveTraderID: "TThostFtdcTraderIDType" = property(_thostmduserapi.CThostFtdcOrderField_ActiveTraderID_get, _thostmduserapi.CThostFtdcOrderField_ActiveTraderID_set, doc=r"""最后修改交易所交易员代码""")
    ClearingPartID: "TThostFtdcParticipantIDType" = property(_thostmduserapi.CThostFtdcOrderField_ClearingPartID_get, _thostmduserapi.CThostFtdcOrderField_ClearingPartID_set, doc=r"""结算会员编号""")
    SequenceNo: "TThostFtdcSequenceNoType" = property(_thostmduserapi.CThostFtdcOrderField_SequenceNo_get, _thostmduserapi.CThostFtdcOrderField_SequenceNo_set, doc=r"""序号""")
    FrontID: "TThostFtdcFrontIDType" = property(_thostmduserapi.CThostFtdcOrderField_FrontID_get, _thostmduserapi.CThostFtdcOrderField_FrontID_set, doc=r"""前置编号""")
    SessionID: "TThostFtdcSessionIDType" = property(_thostmduserapi.CThostFtdcOrderField_SessionID_get, _thostmduserapi.CThostFtdcOrderField_SessionID_set, doc=r"""会话编号""")
    UserProductInfo: "TThostFtdcProductInfoType" = property(_thostmduserapi.CThostFtdcOrderField_UserProductInfo_get, _thostmduserapi.CThostFtdcOrderField_UserProductInfo_set, doc=r"""用户端产品信息""")
    StatusMsg: "TThostFtdcErrorMsgType" = property(_thostmduserapi.CThostFtdcOrderField_StatusMsg_get, _thostmduserapi.CThostFtdcOrderField_StatusMsg_set, doc=r"""状态信息""")
    UserForceClose: "TThostFtdcBoolType" = property(_thostmduserapi.CThostFtdcOrderField_UserForceClose_get, _thostmduserapi.CThostFtdcOrderField_UserForceClose_set, doc=r"""用户强评标志""")
    ActiveUserID: "TThostFtdcUserIDType" = property(_thostmduserapi.CThostFtdcOrderField_ActiveUserID_get, _thostmduserapi.CThostFtdcOrderField_ActiveUserID_set, doc=r"""操作用户代码""")
    BrokerOrderSeq: "TThostFtdcSequenceNoType" = property(_thostmduserapi.CThostFtdcOrderField_BrokerOrderSeq_get, _thostmduserapi.CThostFtdcOrderField_BrokerOrderSeq_set, doc=r"""经纪公司报单编号""")
    RelativeOrderSysID: "TThostFtdcOrderSysIDType" = property(_thostmduserapi.CThostFtdcOrderField_RelativeOrderSysID_get, _thostmduserapi.CThostFtdcOrderField_RelativeOrderSysID_set, doc=r"""相关报单""")
    ZCETotalTradedVolume: "TThostFtdcVolumeType" = property(_thostmduserapi.CThostFtdcOrderField_ZCETotalTradedVolume_get, _thostmduserapi.CThostFtdcOrderField_ZCETotalTradedVolume_set, doc=r"""郑商所成交数量""")
    IsSwapOrder: "TThostFtdcBoolType" = property(_thostmduserapi.CThostFtdcOrderField_IsSwapOrder_get, _thostmduserapi.CThostFtdcOrderField_IsSwapOrder_set, doc=r"""互换单标志""")
    BranchID: "TThostFtdcBranchIDType" = property(_thostmduserapi.CThostFtdcOrderField_BranchID_get, _thostmduserapi.CThostFtdcOrderField_BranchID_set, doc=r"""营业部编号""")
    InvestUnitID: "TThostFtdcInvestUnitIDType" = property(_thostmduserapi.CThostFtdcOrderField_InvestUnitID_get, _thostmduserapi.CThostFtdcOrderField_InvestUnitID_set, doc=r"""投资单元代码""")
    AccountID: "TThostFtdcAccountIDType" = property(_thostmduserapi.CThostFtdcOrderField_AccountID_get, _thostmduserapi.CThostFtdcOrderField_AccountID_set, doc=r"""资金账号""")
    CurrencyID: "TThostFtdcCurrencyIDType" = property(_thostmduserapi.CThostFtdcOrderField_CurrencyID_get, _thostmduserapi.CThostFtdcOrderField_CurrencyID_set, doc=r"""币种代码""")
    reserve3: "TThostFtdcOldIPAddressType" = property(_thostmduserapi.CThostFtdcOrderField_reserve3_get, _thostmduserapi.CThostFtdcOrderField_reserve3_set, doc=r"""保留的无效字段""")
    MacAddress: "TThostFtdcMacAddressType" = property(_thostmduserapi.CThostFtdcOrderField_MacAddress_get, _thostmduserapi.CThostFtdcOrderField_MacAddress_set, doc=r"""Mac地址""")
    InstrumentID: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcOrderField_InstrumentID_get, _thostmduserapi.CThostFtdcOrderField_InstrumentID_set, doc=r"""合约代码""")
    ExchangeInstID: "TThostFtdcExchangeInstIDType" = property(_thostmduserapi.CThostFtdcOrderField_ExchangeInstID_get, _thostmduserapi.CThostFtdcOrderField_ExchangeInstID_set, doc=r"""合约在交易所的代码""")
    IPAddress: "TThostFtdcIPAddressType" = property(_thostmduserapi.CThostFtdcOrderField_IPAddress_get, _thostmduserapi.CThostFtdcOrderField_IPAddress_set, doc=r"""IP地址""")

    def __init__(self):
        _thostmduserapi.CThostFtdcOrderField_swiginit(self, _thostmduserapi.new_CThostFtdcOrderField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcOrderField

# Register CThostFtdcOrderField in _thostmduserapi:
_thostmduserapi.CThostFtdcOrderField_swigregister(CThostFtdcOrderField)
class CThostFtdcExchangeOrderField(object):
    r"""交易所报单"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    OrderPriceType: "TThostFtdcOrderPriceTypeType" = property(_thostmduserapi.CThostFtdcExchangeOrderField_OrderPriceType_get, _thostmduserapi.CThostFtdcExchangeOrderField_OrderPriceType_set, doc=r"""报单价格条件""")
    Direction: "TThostFtdcDirectionType" = property(_thostmduserapi.CThostFtdcExchangeOrderField_Direction_get, _thostmduserapi.CThostFtdcExchangeOrderField_Direction_set, doc=r"""买卖方向""")
    CombOffsetFlag: "TThostFtdcCombOffsetFlagType" = property(_thostmduserapi.CThostFtdcExchangeOrderField_CombOffsetFlag_get, _thostmduserapi.CThostFtdcExchangeOrderField_CombOffsetFlag_set, doc=r"""组合开平标志""")
    CombHedgeFlag: "TThostFtdcCombHedgeFlagType" = property(_thostmduserapi.CThostFtdcExchangeOrderField_CombHedgeFlag_get, _thostmduserapi.CThostFtdcExchangeOrderField_CombHedgeFlag_set, doc=r"""组合投机套保标志""")
    LimitPrice: "TThostFtdcPriceType" = property(_thostmduserapi.CThostFtdcExchangeOrderField_LimitPrice_get, _thostmduserapi.CThostFtdcExchangeOrderField_LimitPrice_set, doc=r"""价格""")
    VolumeTotalOriginal: "TThostFtdcVolumeType" = property(_thostmduserapi.CThostFtdcExchangeOrderField_VolumeTotalOriginal_get, _thostmduserapi.CThostFtdcExchangeOrderField_VolumeTotalOriginal_set, doc=r"""数量""")
    TimeCondition: "TThostFtdcTimeConditionType" = property(_thostmduserapi.CThostFtdcExchangeOrderField_TimeCondition_get, _thostmduserapi.CThostFtdcExchangeOrderField_TimeCondition_set, doc=r"""有效期类型""")
    GTDDate: "TThostFtdcDateType" = property(_thostmduserapi.CThostFtdcExchangeOrderField_GTDDate_get, _thostmduserapi.CThostFtdcExchangeOrderField_GTDDate_set, doc=r"""GTD日期""")
    VolumeCondition: "TThostFtdcVolumeConditionType" = property(_thostmduserapi.CThostFtdcExchangeOrderField_VolumeCondition_get, _thostmduserapi.CThostFtdcExchangeOrderField_VolumeCondition_set, doc=r"""成交量类型""")
    MinVolume: "TThostFtdcVolumeType" = property(_thostmduserapi.CThostFtdcExchangeOrderField_MinVolume_get, _thostmduserapi.CThostFtdcExchangeOrderField_MinVolume_set, doc=r"""最小成交量""")
    ContingentCondition: "TThostFtdcContingentConditionType" = property(_thostmduserapi.CThostFtdcExchangeOrderField_ContingentCondition_get, _thostmduserapi.CThostFtdcExchangeOrderField_ContingentCondition_set, doc=r"""触发条件""")
    StopPrice: "TThostFtdcPriceType" = property(_thostmduserapi.CThostFtdcExchangeOrderField_StopPrice_get, _thostmduserapi.CThostFtdcExchangeOrderField_StopPrice_set, doc=r"""止损价""")
    ForceCloseReason: "TThostFtdcForceCloseReasonType" = property(_thostmduserapi.CThostFtdcExchangeOrderField_ForceCloseReason_get, _thostmduserapi.CThostFtdcExchangeOrderField_ForceCloseReason_set, doc=r"""强平原因""")
    IsAutoSuspend: "TThostFtdcBoolType" = property(_thostmduserapi.CThostFtdcExchangeOrderField_IsAutoSuspend_get, _thostmduserapi.CThostFtdcExchangeOrderField_IsAutoSuspend_set, doc=r"""自动挂起标志""")
    BusinessUnit: "TThostFtdcBusinessUnitType" = property(_thostmduserapi.CThostFtdcExchangeOrderField_BusinessUnit_get, _thostmduserapi.CThostFtdcExchangeOrderField_BusinessUnit_set, doc=r"""业务单元""")
    RequestID: "TThostFtdcRequestIDType" = property(_thostmduserapi.CThostFtdcExchangeOrderField_RequestID_get, _thostmduserapi.CThostFtdcExchangeOrderField_RequestID_set, doc=r"""请求编号""")
    OrderLocalID: "TThostFtdcOrderLocalIDType" = property(_thostmduserapi.CThostFtdcExchangeOrderField_OrderLocalID_get, _thostmduserapi.CThostFtdcExchangeOrderField_OrderLocalID_set, doc=r"""本地报单编号""")
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcExchangeOrderField_ExchangeID_get, _thostmduserapi.CThostFtdcExchangeOrderField_ExchangeID_set, doc=r"""交易所代码""")
    ParticipantID: "TThostFtdcParticipantIDType" = property(_thostmduserapi.CThostFtdcExchangeOrderField_ParticipantID_get, _thostmduserapi.CThostFtdcExchangeOrderField_ParticipantID_set, doc=r"""会员代码""")
    ClientID: "TThostFtdcClientIDType" = property(_thostmduserapi.CThostFtdcExchangeOrderField_ClientID_get, _thostmduserapi.CThostFtdcExchangeOrderField_ClientID_set, doc=r"""客户代码""")
    reserve1: "TThostFtdcOldExchangeInstIDType" = property(_thostmduserapi.CThostFtdcExchangeOrderField_reserve1_get, _thostmduserapi.CThostFtdcExchangeOrderField_reserve1_set, doc=r"""保留的无效字段""")
    TraderID: "TThostFtdcTraderIDType" = property(_thostmduserapi.CThostFtdcExchangeOrderField_TraderID_get, _thostmduserapi.CThostFtdcExchangeOrderField_TraderID_set, doc=r"""交易所交易员代码""")
    InstallID: "TThostFtdcInstallIDType" = property(_thostmduserapi.CThostFtdcExchangeOrderField_InstallID_get, _thostmduserapi.CThostFtdcExchangeOrderField_InstallID_set, doc=r"""安装编号""")
    OrderSubmitStatus: "TThostFtdcOrderSubmitStatusType" = property(_thostmduserapi.CThostFtdcExchangeOrderField_OrderSubmitStatus_get, _thostmduserapi.CThostFtdcExchangeOrderField_OrderSubmitStatus_set, doc=r"""报单提交状态""")
    NotifySequence: "TThostFtdcSequenceNoType" = property(_thostmduserapi.CThostFtdcExchangeOrderField_NotifySequence_get, _thostmduserapi.CThostFtdcExchangeOrderField_NotifySequence_set, doc=r"""报单提示序号""")
    TradingDay: "TThostFtdcDateType" = property(_thostmduserapi.CThostFtdcExchangeOrderField_TradingDay_get, _thostmduserapi.CThostFtdcExchangeOrderField_TradingDay_set, doc=r"""交易日""")
    SettlementID: "TThostFtdcSettlementIDType" = property(_thostmduserapi.CThostFtdcExchangeOrderField_SettlementID_get, _thostmduserapi.CThostFtdcExchangeOrderField_SettlementID_set, doc=r"""结算编号""")
    OrderSysID: "TThostFtdcOrderSysIDType" = property(_thostmduserapi.CThostFtdcExchangeOrderField_OrderSysID_get, _thostmduserapi.CThostFtdcExchangeOrderField_OrderSysID_set, doc=r"""报单编号""")
    OrderSource: "TThostFtdcOrderSourceType" = property(_thostmduserapi.CThostFtdcExchangeOrderField_OrderSource_get, _thostmduserapi.CThostFtdcExchangeOrderField_OrderSource_set, doc=r"""报单来源""")
    OrderStatus: "TThostFtdcOrderStatusType" = property(_thostmduserapi.CThostFtdcExchangeOrderField_OrderStatus_get, _thostmduserapi.CThostFtdcExchangeOrderField_OrderStatus_set, doc=r"""报单状态""")
    OrderType: "TThostFtdcOrderTypeType" = property(_thostmduserapi.CThostFtdcExchangeOrderField_OrderType_get, _thostmduserapi.CThostFtdcExchangeOrderField_OrderType_set, doc=r"""报单类型""")
    VolumeTraded: "TThostFtdcVolumeType" = property(_thostmduserapi.CThostFtdcExchangeOrderField_VolumeTraded_get, _thostmduserapi.CThostFtdcExchangeOrderField_VolumeTraded_set, doc=r"""今成交数量""")
    VolumeTotal: "TThostFtdcVolumeType" = property(_thostmduserapi.CThostFtdcExchangeOrderField_VolumeTotal_get, _thostmduserapi.CThostFtdcExchangeOrderField_VolumeTotal_set, doc=r"""剩余数量""")
    InsertDate: "TThostFtdcDateType" = property(_thostmduserapi.CThostFtdcExchangeOrderField_InsertDate_get, _thostmduserapi.CThostFtdcExchangeOrderField_InsertDate_set, doc=r"""报单日期""")
    InsertTime: "TThostFtdcTimeType" = property(_thostmduserapi.CThostFtdcExchangeOrderField_InsertTime_get, _thostmduserapi.CThostFtdcExchangeOrderField_InsertTime_set, doc=r"""委托时间""")
    ActiveTime: "TThostFtdcTimeType" = property(_thostmduserapi.CThostFtdcExchangeOrderField_ActiveTime_get, _thostmduserapi.CThostFtdcExchangeOrderField_ActiveTime_set, doc=r"""激活时间""")
    SuspendTime: "TThostFtdcTimeType" = property(_thostmduserapi.CThostFtdcExchangeOrderField_SuspendTime_get, _thostmduserapi.CThostFtdcExchangeOrderField_SuspendTime_set, doc=r"""挂起时间""")
    UpdateTime: "TThostFtdcTimeType" = property(_thostmduserapi.CThostFtdcExchangeOrderField_UpdateTime_get, _thostmduserapi.CThostFtdcExchangeOrderField_UpdateTime_set, doc=r"""最后修改时间""")
    CancelTime: "TThostFtdcTimeType" = property(_thostmduserapi.CThostFtdcExchangeOrderField_CancelTime_get, _thostmduserapi.CThostFtdcExchangeOrderField_CancelTime_set, doc=r"""撤销时间""")
    ActiveTraderID: "TThostFtdcTraderIDType" = property(_thostmduserapi.CThostFtdcExchangeOrderField_ActiveTraderID_get, _thostmduserapi.CThostFtdcExchangeOrderField_ActiveTraderID_set, doc=r"""最后修改交易所交易员代码""")
    ClearingPartID: "TThostFtdcParticipantIDType" = property(_thostmduserapi.CThostFtdcExchangeOrderField_ClearingPartID_get, _thostmduserapi.CThostFtdcExchangeOrderField_ClearingPartID_set, doc=r"""结算会员编号""")
    SequenceNo: "TThostFtdcSequenceNoType" = property(_thostmduserapi.CThostFtdcExchangeOrderField_SequenceNo_get, _thostmduserapi.CThostFtdcExchangeOrderField_SequenceNo_set, doc=r"""序号""")
    BranchID: "TThostFtdcBranchIDType" = property(_thostmduserapi.CThostFtdcExchangeOrderField_BranchID_get, _thostmduserapi.CThostFtdcExchangeOrderField_BranchID_set, doc=r"""营业部编号""")
    reserve2: "TThostFtdcOldIPAddressType" = property(_thostmduserapi.CThostFtdcExchangeOrderField_reserve2_get, _thostmduserapi.CThostFtdcExchangeOrderField_reserve2_set, doc=r"""保留的无效字段""")
    MacAddress: "TThostFtdcMacAddressType" = property(_thostmduserapi.CThostFtdcExchangeOrderField_MacAddress_get, _thostmduserapi.CThostFtdcExchangeOrderField_MacAddress_set, doc=r"""Mac地址""")
    ExchangeInstID: "TThostFtdcExchangeInstIDType" = property(_thostmduserapi.CThostFtdcExchangeOrderField_ExchangeInstID_get, _thostmduserapi.CThostFtdcExchangeOrderField_ExchangeInstID_set, doc=r"""合约在交易所的代码""")
    IPAddress: "TThostFtdcIPAddressType" = property(_thostmduserapi.CThostFtdcExchangeOrderField_IPAddress_get, _thostmduserapi.CThostFtdcExchangeOrderField_IPAddress_set, doc=r"""IP地址""")

    def __init__(self):
        _thostmduserapi.CThostFtdcExchangeOrderField_swiginit(self, _thostmduserapi.new_CThostFtdcExchangeOrderField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcExchangeOrderField

# Register CThostFtdcExchangeOrderField in _thostmduserapi:
_thostmduserapi.CThostFtdcExchangeOrderField_swigregister(CThostFtdcExchangeOrderField)
class CThostFtdcExchangeOrderInsertErrorField(object):
    r"""交易所报单插入失败"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcExchangeOrderInsertErrorField_ExchangeID_get, _thostmduserapi.CThostFtdcExchangeOrderInsertErrorField_ExchangeID_set, doc=r"""交易所代码""")
    ParticipantID: "TThostFtdcParticipantIDType" = property(_thostmduserapi.CThostFtdcExchangeOrderInsertErrorField_ParticipantID_get, _thostmduserapi.CThostFtdcExchangeOrderInsertErrorField_ParticipantID_set, doc=r"""会员代码""")
    TraderID: "TThostFtdcTraderIDType" = property(_thostmduserapi.CThostFtdcExchangeOrderInsertErrorField_TraderID_get, _thostmduserapi.CThostFtdcExchangeOrderInsertErrorField_TraderID_set, doc=r"""交易所交易员代码""")
    InstallID: "TThostFtdcInstallIDType" = property(_thostmduserapi.CThostFtdcExchangeOrderInsertErrorField_InstallID_get, _thostmduserapi.CThostFtdcExchangeOrderInsertErrorField_InstallID_set, doc=r"""安装编号""")
    OrderLocalID: "TThostFtdcOrderLocalIDType" = property(_thostmduserapi.CThostFtdcExchangeOrderInsertErrorField_OrderLocalID_get, _thostmduserapi.CThostFtdcExchangeOrderInsertErrorField_OrderLocalID_set, doc=r"""本地报单编号""")
    ErrorID: "TThostFtdcErrorIDType" = property(_thostmduserapi.CThostFtdcExchangeOrderInsertErrorField_ErrorID_get, _thostmduserapi.CThostFtdcExchangeOrderInsertErrorField_ErrorID_set, doc=r"""错误代码""")
    ErrorMsg: "TThostFtdcErrorMsgType" = property(_thostmduserapi.CThostFtdcExchangeOrderInsertErrorField_ErrorMsg_get, _thostmduserapi.CThostFtdcExchangeOrderInsertErrorField_ErrorMsg_set, doc=r"""错误信息""")

    def __init__(self):
        _thostmduserapi.CThostFtdcExchangeOrderInsertErrorField_swiginit(self, _thostmduserapi.new_CThostFtdcExchangeOrderInsertErrorField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcExchangeOrderInsertErrorField

# Register CThostFtdcExchangeOrderInsertErrorField in _thostmduserapi:
_thostmduserapi.CThostFtdcExchangeOrderInsertErrorField_swigregister(CThostFtdcExchangeOrderInsertErrorField)
class CThostFtdcInputOrderActionField(object):
    r"""输入报单操作"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcInputOrderActionField_BrokerID_get, _thostmduserapi.CThostFtdcInputOrderActionField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "TThostFtdcInvestorIDType" = property(_thostmduserapi.CThostFtdcInputOrderActionField_InvestorID_get, _thostmduserapi.CThostFtdcInputOrderActionField_InvestorID_set, doc=r"""投资者代码""")
    OrderActionRef: "TThostFtdcOrderActionRefType" = property(_thostmduserapi.CThostFtdcInputOrderActionField_OrderActionRef_get, _thostmduserapi.CThostFtdcInputOrderActionField_OrderActionRef_set, doc=r"""报单操作引用""")
    OrderRef: "TThostFtdcOrderRefType" = property(_thostmduserapi.CThostFtdcInputOrderActionField_OrderRef_get, _thostmduserapi.CThostFtdcInputOrderActionField_OrderRef_set, doc=r"""报单引用""")
    RequestID: "TThostFtdcRequestIDType" = property(_thostmduserapi.CThostFtdcInputOrderActionField_RequestID_get, _thostmduserapi.CThostFtdcInputOrderActionField_RequestID_set, doc=r"""请求编号""")
    FrontID: "TThostFtdcFrontIDType" = property(_thostmduserapi.CThostFtdcInputOrderActionField_FrontID_get, _thostmduserapi.CThostFtdcInputOrderActionField_FrontID_set, doc=r"""前置编号""")
    SessionID: "TThostFtdcSessionIDType" = property(_thostmduserapi.CThostFtdcInputOrderActionField_SessionID_get, _thostmduserapi.CThostFtdcInputOrderActionField_SessionID_set, doc=r"""会话编号""")
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcInputOrderActionField_ExchangeID_get, _thostmduserapi.CThostFtdcInputOrderActionField_ExchangeID_set, doc=r"""交易所代码""")
    OrderSysID: "TThostFtdcOrderSysIDType" = property(_thostmduserapi.CThostFtdcInputOrderActionField_OrderSysID_get, _thostmduserapi.CThostFtdcInputOrderActionField_OrderSysID_set, doc=r"""报单编号""")
    ActionFlag: "TThostFtdcActionFlagType" = property(_thostmduserapi.CThostFtdcInputOrderActionField_ActionFlag_get, _thostmduserapi.CThostFtdcInputOrderActionField_ActionFlag_set, doc=r"""操作标志""")
    LimitPrice: "TThostFtdcPriceType" = property(_thostmduserapi.CThostFtdcInputOrderActionField_LimitPrice_get, _thostmduserapi.CThostFtdcInputOrderActionField_LimitPrice_set, doc=r"""价格""")
    VolumeChange: "TThostFtdcVolumeType" = property(_thostmduserapi.CThostFtdcInputOrderActionField_VolumeChange_get, _thostmduserapi.CThostFtdcInputOrderActionField_VolumeChange_set, doc=r"""数量变化""")
    UserID: "TThostFtdcUserIDType" = property(_thostmduserapi.CThostFtdcInputOrderActionField_UserID_get, _thostmduserapi.CThostFtdcInputOrderActionField_UserID_set, doc=r"""用户代码""")
    reserve1: "TThostFtdcOldInstrumentIDType" = property(_thostmduserapi.CThostFtdcInputOrderActionField_reserve1_get, _thostmduserapi.CThostFtdcInputOrderActionField_reserve1_set, doc=r"""保留的无效字段""")
    InvestUnitID: "TThostFtdcInvestUnitIDType" = property(_thostmduserapi.CThostFtdcInputOrderActionField_InvestUnitID_get, _thostmduserapi.CThostFtdcInputOrderActionField_InvestUnitID_set, doc=r"""投资单元代码""")
    reserve2: "TThostFtdcOldIPAddressType" = property(_thostmduserapi.CThostFtdcInputOrderActionField_reserve2_get, _thostmduserapi.CThostFtdcInputOrderActionField_reserve2_set, doc=r"""保留的无效字段""")
    MacAddress: "TThostFtdcMacAddressType" = property(_thostmduserapi.CThostFtdcInputOrderActionField_MacAddress_get, _thostmduserapi.CThostFtdcInputOrderActionField_MacAddress_set, doc=r"""Mac地址""")
    InstrumentID: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcInputOrderActionField_InstrumentID_get, _thostmduserapi.CThostFtdcInputOrderActionField_InstrumentID_set, doc=r"""合约代码""")
    IPAddress: "TThostFtdcIPAddressType" = property(_thostmduserapi.CThostFtdcInputOrderActionField_IPAddress_get, _thostmduserapi.CThostFtdcInputOrderActionField_IPAddress_set, doc=r"""IP地址""")

    def __init__(self):
        _thostmduserapi.CThostFtdcInputOrderActionField_swiginit(self, _thostmduserapi.new_CThostFtdcInputOrderActionField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcInputOrderActionField

# Register CThostFtdcInputOrderActionField in _thostmduserapi:
_thostmduserapi.CThostFtdcInputOrderActionField_swigregister(CThostFtdcInputOrderActionField)
class CThostFtdcOrderActionField(object):
    r"""报单操作"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcOrderActionField_BrokerID_get, _thostmduserapi.CThostFtdcOrderActionField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "TThostFtdcInvestorIDType" = property(_thostmduserapi.CThostFtdcOrderActionField_InvestorID_get, _thostmduserapi.CThostFtdcOrderActionField_InvestorID_set, doc=r"""投资者代码""")
    OrderActionRef: "TThostFtdcOrderActionRefType" = property(_thostmduserapi.CThostFtdcOrderActionField_OrderActionRef_get, _thostmduserapi.CThostFtdcOrderActionField_OrderActionRef_set, doc=r"""报单操作引用""")
    OrderRef: "TThostFtdcOrderRefType" = property(_thostmduserapi.CThostFtdcOrderActionField_OrderRef_get, _thostmduserapi.CThostFtdcOrderActionField_OrderRef_set, doc=r"""报单引用""")
    RequestID: "TThostFtdcRequestIDType" = property(_thostmduserapi.CThostFtdcOrderActionField_RequestID_get, _thostmduserapi.CThostFtdcOrderActionField_RequestID_set, doc=r"""请求编号""")
    FrontID: "TThostFtdcFrontIDType" = property(_thostmduserapi.CThostFtdcOrderActionField_FrontID_get, _thostmduserapi.CThostFtdcOrderActionField_FrontID_set, doc=r"""前置编号""")
    SessionID: "TThostFtdcSessionIDType" = property(_thostmduserapi.CThostFtdcOrderActionField_SessionID_get, _thostmduserapi.CThostFtdcOrderActionField_SessionID_set, doc=r"""会话编号""")
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcOrderActionField_ExchangeID_get, _thostmduserapi.CThostFtdcOrderActionField_ExchangeID_set, doc=r"""交易所代码""")
    OrderSysID: "TThostFtdcOrderSysIDType" = property(_thostmduserapi.CThostFtdcOrderActionField_OrderSysID_get, _thostmduserapi.CThostFtdcOrderActionField_OrderSysID_set, doc=r"""报单编号""")
    ActionFlag: "TThostFtdcActionFlagType" = property(_thostmduserapi.CThostFtdcOrderActionField_ActionFlag_get, _thostmduserapi.CThostFtdcOrderActionField_ActionFlag_set, doc=r"""操作标志""")
    LimitPrice: "TThostFtdcPriceType" = property(_thostmduserapi.CThostFtdcOrderActionField_LimitPrice_get, _thostmduserapi.CThostFtdcOrderActionField_LimitPrice_set, doc=r"""价格""")
    VolumeChange: "TThostFtdcVolumeType" = property(_thostmduserapi.CThostFtdcOrderActionField_VolumeChange_get, _thostmduserapi.CThostFtdcOrderActionField_VolumeChange_set, doc=r"""数量变化""")
    ActionDate: "TThostFtdcDateType" = property(_thostmduserapi.CThostFtdcOrderActionField_ActionDate_get, _thostmduserapi.CThostFtdcOrderActionField_ActionDate_set, doc=r"""操作日期""")
    ActionTime: "TThostFtdcTimeType" = property(_thostmduserapi.CThostFtdcOrderActionField_ActionTime_get, _thostmduserapi.CThostFtdcOrderActionField_ActionTime_set, doc=r"""操作时间""")
    TraderID: "TThostFtdcTraderIDType" = property(_thostmduserapi.CThostFtdcOrderActionField_TraderID_get, _thostmduserapi.CThostFtdcOrderActionField_TraderID_set, doc=r"""交易所交易员代码""")
    InstallID: "TThostFtdcInstallIDType" = property(_thostmduserapi.CThostFtdcOrderActionField_InstallID_get, _thostmduserapi.CThostFtdcOrderActionField_InstallID_set, doc=r"""安装编号""")
    OrderLocalID: "TThostFtdcOrderLocalIDType" = property(_thostmduserapi.CThostFtdcOrderActionField_OrderLocalID_get, _thostmduserapi.CThostFtdcOrderActionField_OrderLocalID_set, doc=r"""本地报单编号""")
    ActionLocalID: "TThostFtdcOrderLocalIDType" = property(_thostmduserapi.CThostFtdcOrderActionField_ActionLocalID_get, _thostmduserapi.CThostFtdcOrderActionField_ActionLocalID_set, doc=r"""操作本地编号""")
    ParticipantID: "TThostFtdcParticipantIDType" = property(_thostmduserapi.CThostFtdcOrderActionField_ParticipantID_get, _thostmduserapi.CThostFtdcOrderActionField_ParticipantID_set, doc=r"""会员代码""")
    ClientID: "TThostFtdcClientIDType" = property(_thostmduserapi.CThostFtdcOrderActionField_ClientID_get, _thostmduserapi.CThostFtdcOrderActionField_ClientID_set, doc=r"""客户代码""")
    BusinessUnit: "TThostFtdcBusinessUnitType" = property(_thostmduserapi.CThostFtdcOrderActionField_BusinessUnit_get, _thostmduserapi.CThostFtdcOrderActionField_BusinessUnit_set, doc=r"""业务单元""")
    OrderActionStatus: "TThostFtdcOrderActionStatusType" = property(_thostmduserapi.CThostFtdcOrderActionField_OrderActionStatus_get, _thostmduserapi.CThostFtdcOrderActionField_OrderActionStatus_set, doc=r"""报单操作状态""")
    UserID: "TThostFtdcUserIDType" = property(_thostmduserapi.CThostFtdcOrderActionField_UserID_get, _thostmduserapi.CThostFtdcOrderActionField_UserID_set, doc=r"""用户代码""")
    StatusMsg: "TThostFtdcErrorMsgType" = property(_thostmduserapi.CThostFtdcOrderActionField_StatusMsg_get, _thostmduserapi.CThostFtdcOrderActionField_StatusMsg_set, doc=r"""状态信息""")
    reserve1: "TThostFtdcOldInstrumentIDType" = property(_thostmduserapi.CThostFtdcOrderActionField_reserve1_get, _thostmduserapi.CThostFtdcOrderActionField_reserve1_set, doc=r"""保留的无效字段""")
    BranchID: "TThostFtdcBranchIDType" = property(_thostmduserapi.CThostFtdcOrderActionField_BranchID_get, _thostmduserapi.CThostFtdcOrderActionField_BranchID_set, doc=r"""营业部编号""")
    InvestUnitID: "TThostFtdcInvestUnitIDType" = property(_thostmduserapi.CThostFtdcOrderActionField_InvestUnitID_get, _thostmduserapi.CThostFtdcOrderActionField_InvestUnitID_set, doc=r"""投资单元代码""")
    reserve2: "TThostFtdcOldIPAddressType" = property(_thostmduserapi.CThostFtdcOrderActionField_reserve2_get, _thostmduserapi.CThostFtdcOrderActionField_reserve2_set, doc=r"""保留的无效字段""")
    MacAddress: "TThostFtdcMacAddressType" = property(_thostmduserapi.CThostFtdcOrderActionField_MacAddress_get, _thostmduserapi.CThostFtdcOrderActionField_MacAddress_set, doc=r"""Mac地址""")
    InstrumentID: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcOrderActionField_InstrumentID_get, _thostmduserapi.CThostFtdcOrderActionField_InstrumentID_set, doc=r"""合约代码""")
    IPAddress: "TThostFtdcIPAddressType" = property(_thostmduserapi.CThostFtdcOrderActionField_IPAddress_get, _thostmduserapi.CThostFtdcOrderActionField_IPAddress_set, doc=r"""IP地址""")

    def __init__(self):
        _thostmduserapi.CThostFtdcOrderActionField_swiginit(self, _thostmduserapi.new_CThostFtdcOrderActionField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcOrderActionField

# Register CThostFtdcOrderActionField in _thostmduserapi:
_thostmduserapi.CThostFtdcOrderActionField_swigregister(CThostFtdcOrderActionField)
class CThostFtdcExchangeOrderActionField(object):
    r"""交易所报单操作"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcExchangeOrderActionField_ExchangeID_get, _thostmduserapi.CThostFtdcExchangeOrderActionField_ExchangeID_set, doc=r"""交易所代码""")
    OrderSysID: "TThostFtdcOrderSysIDType" = property(_thostmduserapi.CThostFtdcExchangeOrderActionField_OrderSysID_get, _thostmduserapi.CThostFtdcExchangeOrderActionField_OrderSysID_set, doc=r"""报单编号""")
    ActionFlag: "TThostFtdcActionFlagType" = property(_thostmduserapi.CThostFtdcExchangeOrderActionField_ActionFlag_get, _thostmduserapi.CThostFtdcExchangeOrderActionField_ActionFlag_set, doc=r"""操作标志""")
    LimitPrice: "TThostFtdcPriceType" = property(_thostmduserapi.CThostFtdcExchangeOrderActionField_LimitPrice_get, _thostmduserapi.CThostFtdcExchangeOrderActionField_LimitPrice_set, doc=r"""价格""")
    VolumeChange: "TThostFtdcVolumeType" = property(_thostmduserapi.CThostFtdcExchangeOrderActionField_VolumeChange_get, _thostmduserapi.CThostFtdcExchangeOrderActionField_VolumeChange_set, doc=r"""数量变化""")
    ActionDate: "TThostFtdcDateType" = property(_thostmduserapi.CThostFtdcExchangeOrderActionField_ActionDate_get, _thostmduserapi.CThostFtdcExchangeOrderActionField_ActionDate_set, doc=r"""操作日期""")
    ActionTime: "TThostFtdcTimeType" = property(_thostmduserapi.CThostFtdcExchangeOrderActionField_ActionTime_get, _thostmduserapi.CThostFtdcExchangeOrderActionField_ActionTime_set, doc=r"""操作时间""")
    TraderID: "TThostFtdcTraderIDType" = property(_thostmduserapi.CThostFtdcExchangeOrderActionField_TraderID_get, _thostmduserapi.CThostFtdcExchangeOrderActionField_TraderID_set, doc=r"""交易所交易员代码""")
    InstallID: "TThostFtdcInstallIDType" = property(_thostmduserapi.CThostFtdcExchangeOrderActionField_InstallID_get, _thostmduserapi.CThostFtdcExchangeOrderActionField_InstallID_set, doc=r"""安装编号""")
    OrderLocalID: "TThostFtdcOrderLocalIDType" = property(_thostmduserapi.CThostFtdcExchangeOrderActionField_OrderLocalID_get, _thostmduserapi.CThostFtdcExchangeOrderActionField_OrderLocalID_set, doc=r"""本地报单编号""")
    ActionLocalID: "TThostFtdcOrderLocalIDType" = property(_thostmduserapi.CThostFtdcExchangeOrderActionField_ActionLocalID_get, _thostmduserapi.CThostFtdcExchangeOrderActionField_ActionLocalID_set, doc=r"""操作本地编号""")
    ParticipantID: "TThostFtdcParticipantIDType" = property(_thostmduserapi.CThostFtdcExchangeOrderActionField_ParticipantID_get, _thostmduserapi.CThostFtdcExchangeOrderActionField_ParticipantID_set, doc=r"""会员代码""")
    ClientID: "TThostFtdcClientIDType" = property(_thostmduserapi.CThostFtdcExchangeOrderActionField_ClientID_get, _thostmduserapi.CThostFtdcExchangeOrderActionField_ClientID_set, doc=r"""客户代码""")
    BusinessUnit: "TThostFtdcBusinessUnitType" = property(_thostmduserapi.CThostFtdcExchangeOrderActionField_BusinessUnit_get, _thostmduserapi.CThostFtdcExchangeOrderActionField_BusinessUnit_set, doc=r"""业务单元""")
    OrderActionStatus: "TThostFtdcOrderActionStatusType" = property(_thostmduserapi.CThostFtdcExchangeOrderActionField_OrderActionStatus_get, _thostmduserapi.CThostFtdcExchangeOrderActionField_OrderActionStatus_set, doc=r"""报单操作状态""")
    UserID: "TThostFtdcUserIDType" = property(_thostmduserapi.CThostFtdcExchangeOrderActionField_UserID_get, _thostmduserapi.CThostFtdcExchangeOrderActionField_UserID_set, doc=r"""用户代码""")
    BranchID: "TThostFtdcBranchIDType" = property(_thostmduserapi.CThostFtdcExchangeOrderActionField_BranchID_get, _thostmduserapi.CThostFtdcExchangeOrderActionField_BranchID_set, doc=r"""营业部编号""")
    reserve1: "TThostFtdcOldIPAddressType" = property(_thostmduserapi.CThostFtdcExchangeOrderActionField_reserve1_get, _thostmduserapi.CThostFtdcExchangeOrderActionField_reserve1_set, doc=r"""保留的无效字段""")
    MacAddress: "TThostFtdcMacAddressType" = property(_thostmduserapi.CThostFtdcExchangeOrderActionField_MacAddress_get, _thostmduserapi.CThostFtdcExchangeOrderActionField_MacAddress_set, doc=r"""Mac地址""")
    IPAddress: "TThostFtdcIPAddressType" = property(_thostmduserapi.CThostFtdcExchangeOrderActionField_IPAddress_get, _thostmduserapi.CThostFtdcExchangeOrderActionField_IPAddress_set, doc=r"""IP地址""")

    def __init__(self):
        _thostmduserapi.CThostFtdcExchangeOrderActionField_swiginit(self, _thostmduserapi.new_CThostFtdcExchangeOrderActionField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcExchangeOrderActionField

# Register CThostFtdcExchangeOrderActionField in _thostmduserapi:
_thostmduserapi.CThostFtdcExchangeOrderActionField_swigregister(CThostFtdcExchangeOrderActionField)
class CThostFtdcExchangeOrderActionErrorField(object):
    r"""交易所报单操作失败"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcExchangeOrderActionErrorField_ExchangeID_get, _thostmduserapi.CThostFtdcExchangeOrderActionErrorField_ExchangeID_set, doc=r"""交易所代码""")
    OrderSysID: "TThostFtdcOrderSysIDType" = property(_thostmduserapi.CThostFtdcExchangeOrderActionErrorField_OrderSysID_get, _thostmduserapi.CThostFtdcExchangeOrderActionErrorField_OrderSysID_set, doc=r"""报单编号""")
    TraderID: "TThostFtdcTraderIDType" = property(_thostmduserapi.CThostFtdcExchangeOrderActionErrorField_TraderID_get, _thostmduserapi.CThostFtdcExchangeOrderActionErrorField_TraderID_set, doc=r"""交易所交易员代码""")
    InstallID: "TThostFtdcInstallIDType" = property(_thostmduserapi.CThostFtdcExchangeOrderActionErrorField_InstallID_get, _thostmduserapi.CThostFtdcExchangeOrderActionErrorField_InstallID_set, doc=r"""安装编号""")
    OrderLocalID: "TThostFtdcOrderLocalIDType" = property(_thostmduserapi.CThostFtdcExchangeOrderActionErrorField_OrderLocalID_get, _thostmduserapi.CThostFtdcExchangeOrderActionErrorField_OrderLocalID_set, doc=r"""本地报单编号""")
    ActionLocalID: "TThostFtdcOrderLocalIDType" = property(_thostmduserapi.CThostFtdcExchangeOrderActionErrorField_ActionLocalID_get, _thostmduserapi.CThostFtdcExchangeOrderActionErrorField_ActionLocalID_set, doc=r"""操作本地编号""")
    ErrorID: "TThostFtdcErrorIDType" = property(_thostmduserapi.CThostFtdcExchangeOrderActionErrorField_ErrorID_get, _thostmduserapi.CThostFtdcExchangeOrderActionErrorField_ErrorID_set, doc=r"""错误代码""")
    ErrorMsg: "TThostFtdcErrorMsgType" = property(_thostmduserapi.CThostFtdcExchangeOrderActionErrorField_ErrorMsg_get, _thostmduserapi.CThostFtdcExchangeOrderActionErrorField_ErrorMsg_set, doc=r"""错误信息""")

    def __init__(self):
        _thostmduserapi.CThostFtdcExchangeOrderActionErrorField_swiginit(self, _thostmduserapi.new_CThostFtdcExchangeOrderActionErrorField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcExchangeOrderActionErrorField

# Register CThostFtdcExchangeOrderActionErrorField in _thostmduserapi:
_thostmduserapi.CThostFtdcExchangeOrderActionErrorField_swigregister(CThostFtdcExchangeOrderActionErrorField)
class CThostFtdcExchangeTradeField(object):
    r"""交易所成交"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcExchangeTradeField_ExchangeID_get, _thostmduserapi.CThostFtdcExchangeTradeField_ExchangeID_set, doc=r"""交易所代码""")
    TradeID: "TThostFtdcTradeIDType" = property(_thostmduserapi.CThostFtdcExchangeTradeField_TradeID_get, _thostmduserapi.CThostFtdcExchangeTradeField_TradeID_set, doc=r"""成交编号""")
    Direction: "TThostFtdcDirectionType" = property(_thostmduserapi.CThostFtdcExchangeTradeField_Direction_get, _thostmduserapi.CThostFtdcExchangeTradeField_Direction_set, doc=r"""买卖方向""")
    OrderSysID: "TThostFtdcOrderSysIDType" = property(_thostmduserapi.CThostFtdcExchangeTradeField_OrderSysID_get, _thostmduserapi.CThostFtdcExchangeTradeField_OrderSysID_set, doc=r"""报单编号""")
    ParticipantID: "TThostFtdcParticipantIDType" = property(_thostmduserapi.CThostFtdcExchangeTradeField_ParticipantID_get, _thostmduserapi.CThostFtdcExchangeTradeField_ParticipantID_set, doc=r"""会员代码""")
    ClientID: "TThostFtdcClientIDType" = property(_thostmduserapi.CThostFtdcExchangeTradeField_ClientID_get, _thostmduserapi.CThostFtdcExchangeTradeField_ClientID_set, doc=r"""客户代码""")
    TradingRole: "TThostFtdcTradingRoleType" = property(_thostmduserapi.CThostFtdcExchangeTradeField_TradingRole_get, _thostmduserapi.CThostFtdcExchangeTradeField_TradingRole_set, doc=r"""交易角色""")
    reserve1: "TThostFtdcOldExchangeInstIDType" = property(_thostmduserapi.CThostFtdcExchangeTradeField_reserve1_get, _thostmduserapi.CThostFtdcExchangeTradeField_reserve1_set, doc=r"""保留的无效字段""")
    OffsetFlag: "TThostFtdcOffsetFlagType" = property(_thostmduserapi.CThostFtdcExchangeTradeField_OffsetFlag_get, _thostmduserapi.CThostFtdcExchangeTradeField_OffsetFlag_set, doc=r"""开平标志""")
    HedgeFlag: "TThostFtdcHedgeFlagType" = property(_thostmduserapi.CThostFtdcExchangeTradeField_HedgeFlag_get, _thostmduserapi.CThostFtdcExchangeTradeField_HedgeFlag_set, doc=r"""投机套保标志""")
    Price: "TThostFtdcPriceType" = property(_thostmduserapi.CThostFtdcExchangeTradeField_Price_get, _thostmduserapi.CThostFtdcExchangeTradeField_Price_set, doc=r"""价格""")
    Volume: "TThostFtdcVolumeType" = property(_thostmduserapi.CThostFtdcExchangeTradeField_Volume_get, _thostmduserapi.CThostFtdcExchangeTradeField_Volume_set, doc=r"""数量""")
    TradeDate: "TThostFtdcDateType" = property(_thostmduserapi.CThostFtdcExchangeTradeField_TradeDate_get, _thostmduserapi.CThostFtdcExchangeTradeField_TradeDate_set, doc=r"""成交时期""")
    TradeTime: "TThostFtdcTimeType" = property(_thostmduserapi.CThostFtdcExchangeTradeField_TradeTime_get, _thostmduserapi.CThostFtdcExchangeTradeField_TradeTime_set, doc=r"""成交时间""")
    TradeType: "TThostFtdcTradeTypeType" = property(_thostmduserapi.CThostFtdcExchangeTradeField_TradeType_get, _thostmduserapi.CThostFtdcExchangeTradeField_TradeType_set, doc=r"""成交类型""")
    PriceSource: "TThostFtdcPriceSourceType" = property(_thostmduserapi.CThostFtdcExchangeTradeField_PriceSource_get, _thostmduserapi.CThostFtdcExchangeTradeField_PriceSource_set, doc=r"""成交价来源""")
    TraderID: "TThostFtdcTraderIDType" = property(_thostmduserapi.CThostFtdcExchangeTradeField_TraderID_get, _thostmduserapi.CThostFtdcExchangeTradeField_TraderID_set, doc=r"""交易所交易员代码""")
    OrderLocalID: "TThostFtdcOrderLocalIDType" = property(_thostmduserapi.CThostFtdcExchangeTradeField_OrderLocalID_get, _thostmduserapi.CThostFtdcExchangeTradeField_OrderLocalID_set, doc=r"""本地报单编号""")
    ClearingPartID: "TThostFtdcParticipantIDType" = property(_thostmduserapi.CThostFtdcExchangeTradeField_ClearingPartID_get, _thostmduserapi.CThostFtdcExchangeTradeField_ClearingPartID_set, doc=r"""结算会员编号""")
    BusinessUnit: "TThostFtdcBusinessUnitType" = property(_thostmduserapi.CThostFtdcExchangeTradeField_BusinessUnit_get, _thostmduserapi.CThostFtdcExchangeTradeField_BusinessUnit_set, doc=r"""业务单元""")
    SequenceNo: "TThostFtdcSequenceNoType" = property(_thostmduserapi.CThostFtdcExchangeTradeField_SequenceNo_get, _thostmduserapi.CThostFtdcExchangeTradeField_SequenceNo_set, doc=r"""序号""")
    TradeSource: "TThostFtdcTradeSourceType" = property(_thostmduserapi.CThostFtdcExchangeTradeField_TradeSource_get, _thostmduserapi.CThostFtdcExchangeTradeField_TradeSource_set, doc=r"""成交来源""")
    ExchangeInstID: "TThostFtdcExchangeInstIDType" = property(_thostmduserapi.CThostFtdcExchangeTradeField_ExchangeInstID_get, _thostmduserapi.CThostFtdcExchangeTradeField_ExchangeInstID_set, doc=r"""合约在交易所的代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcExchangeTradeField_swiginit(self, _thostmduserapi.new_CThostFtdcExchangeTradeField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcExchangeTradeField

# Register CThostFtdcExchangeTradeField in _thostmduserapi:
_thostmduserapi.CThostFtdcExchangeTradeField_swigregister(CThostFtdcExchangeTradeField)
class CThostFtdcTradeField(object):
    r"""成交"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcTradeField_BrokerID_get, _thostmduserapi.CThostFtdcTradeField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "TThostFtdcInvestorIDType" = property(_thostmduserapi.CThostFtdcTradeField_InvestorID_get, _thostmduserapi.CThostFtdcTradeField_InvestorID_set, doc=r"""投资者代码""")
    reserve1: "TThostFtdcOldInstrumentIDType" = property(_thostmduserapi.CThostFtdcTradeField_reserve1_get, _thostmduserapi.CThostFtdcTradeField_reserve1_set, doc=r"""保留的无效字段""")
    OrderRef: "TThostFtdcOrderRefType" = property(_thostmduserapi.CThostFtdcTradeField_OrderRef_get, _thostmduserapi.CThostFtdcTradeField_OrderRef_set, doc=r"""报单引用""")
    UserID: "TThostFtdcUserIDType" = property(_thostmduserapi.CThostFtdcTradeField_UserID_get, _thostmduserapi.CThostFtdcTradeField_UserID_set, doc=r"""用户代码""")
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcTradeField_ExchangeID_get, _thostmduserapi.CThostFtdcTradeField_ExchangeID_set, doc=r"""交易所代码""")
    TradeID: "TThostFtdcTradeIDType" = property(_thostmduserapi.CThostFtdcTradeField_TradeID_get, _thostmduserapi.CThostFtdcTradeField_TradeID_set, doc=r"""成交编号""")
    Direction: "TThostFtdcDirectionType" = property(_thostmduserapi.CThostFtdcTradeField_Direction_get, _thostmduserapi.CThostFtdcTradeField_Direction_set, doc=r"""买卖方向""")
    OrderSysID: "TThostFtdcOrderSysIDType" = property(_thostmduserapi.CThostFtdcTradeField_OrderSysID_get, _thostmduserapi.CThostFtdcTradeField_OrderSysID_set, doc=r"""报单编号""")
    ParticipantID: "TThostFtdcParticipantIDType" = property(_thostmduserapi.CThostFtdcTradeField_ParticipantID_get, _thostmduserapi.CThostFtdcTradeField_ParticipantID_set, doc=r"""会员代码""")
    ClientID: "TThostFtdcClientIDType" = property(_thostmduserapi.CThostFtdcTradeField_ClientID_get, _thostmduserapi.CThostFtdcTradeField_ClientID_set, doc=r"""客户代码""")
    TradingRole: "TThostFtdcTradingRoleType" = property(_thostmduserapi.CThostFtdcTradeField_TradingRole_get, _thostmduserapi.CThostFtdcTradeField_TradingRole_set, doc=r"""交易角色""")
    reserve2: "TThostFtdcOldExchangeInstIDType" = property(_thostmduserapi.CThostFtdcTradeField_reserve2_get, _thostmduserapi.CThostFtdcTradeField_reserve2_set, doc=r"""保留的无效字段""")
    OffsetFlag: "TThostFtdcOffsetFlagType" = property(_thostmduserapi.CThostFtdcTradeField_OffsetFlag_get, _thostmduserapi.CThostFtdcTradeField_OffsetFlag_set, doc=r"""开平标志""")
    HedgeFlag: "TThostFtdcHedgeFlagType" = property(_thostmduserapi.CThostFtdcTradeField_HedgeFlag_get, _thostmduserapi.CThostFtdcTradeField_HedgeFlag_set, doc=r"""投机套保标志""")
    Price: "TThostFtdcPriceType" = property(_thostmduserapi.CThostFtdcTradeField_Price_get, _thostmduserapi.CThostFtdcTradeField_Price_set, doc=r"""价格""")
    Volume: "TThostFtdcVolumeType" = property(_thostmduserapi.CThostFtdcTradeField_Volume_get, _thostmduserapi.CThostFtdcTradeField_Volume_set, doc=r"""数量""")
    TradeDate: "TThostFtdcDateType" = property(_thostmduserapi.CThostFtdcTradeField_TradeDate_get, _thostmduserapi.CThostFtdcTradeField_TradeDate_set, doc=r"""成交时期""")
    TradeTime: "TThostFtdcTimeType" = property(_thostmduserapi.CThostFtdcTradeField_TradeTime_get, _thostmduserapi.CThostFtdcTradeField_TradeTime_set, doc=r"""成交时间""")
    TradeType: "TThostFtdcTradeTypeType" = property(_thostmduserapi.CThostFtdcTradeField_TradeType_get, _thostmduserapi.CThostFtdcTradeField_TradeType_set, doc=r"""成交类型""")
    PriceSource: "TThostFtdcPriceSourceType" = property(_thostmduserapi.CThostFtdcTradeField_PriceSource_get, _thostmduserapi.CThostFtdcTradeField_PriceSource_set, doc=r"""成交价来源""")
    TraderID: "TThostFtdcTraderIDType" = property(_thostmduserapi.CThostFtdcTradeField_TraderID_get, _thostmduserapi.CThostFtdcTradeField_TraderID_set, doc=r"""交易所交易员代码""")
    OrderLocalID: "TThostFtdcOrderLocalIDType" = property(_thostmduserapi.CThostFtdcTradeField_OrderLocalID_get, _thostmduserapi.CThostFtdcTradeField_OrderLocalID_set, doc=r"""本地报单编号""")
    ClearingPartID: "TThostFtdcParticipantIDType" = property(_thostmduserapi.CThostFtdcTradeField_ClearingPartID_get, _thostmduserapi.CThostFtdcTradeField_ClearingPartID_set, doc=r"""结算会员编号""")
    BusinessUnit: "TThostFtdcBusinessUnitType" = property(_thostmduserapi.CThostFtdcTradeField_BusinessUnit_get, _thostmduserapi.CThostFtdcTradeField_BusinessUnit_set, doc=r"""业务单元""")
    SequenceNo: "TThostFtdcSequenceNoType" = property(_thostmduserapi.CThostFtdcTradeField_SequenceNo_get, _thostmduserapi.CThostFtdcTradeField_SequenceNo_set, doc=r"""序号""")
    TradingDay: "TThostFtdcDateType" = property(_thostmduserapi.CThostFtdcTradeField_TradingDay_get, _thostmduserapi.CThostFtdcTradeField_TradingDay_set, doc=r"""交易日""")
    SettlementID: "TThostFtdcSettlementIDType" = property(_thostmduserapi.CThostFtdcTradeField_SettlementID_get, _thostmduserapi.CThostFtdcTradeField_SettlementID_set, doc=r"""结算编号""")
    BrokerOrderSeq: "TThostFtdcSequenceNoType" = property(_thostmduserapi.CThostFtdcTradeField_BrokerOrderSeq_get, _thostmduserapi.CThostFtdcTradeField_BrokerOrderSeq_set, doc=r"""经纪公司报单编号""")
    TradeSource: "TThostFtdcTradeSourceType" = property(_thostmduserapi.CThostFtdcTradeField_TradeSource_get, _thostmduserapi.CThostFtdcTradeField_TradeSource_set, doc=r"""成交来源""")
    InvestUnitID: "TThostFtdcInvestUnitIDType" = property(_thostmduserapi.CThostFtdcTradeField_InvestUnitID_get, _thostmduserapi.CThostFtdcTradeField_InvestUnitID_set, doc=r"""投资单元代码""")
    InstrumentID: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcTradeField_InstrumentID_get, _thostmduserapi.CThostFtdcTradeField_InstrumentID_set, doc=r"""合约代码""")
    ExchangeInstID: "TThostFtdcExchangeInstIDType" = property(_thostmduserapi.CThostFtdcTradeField_ExchangeInstID_get, _thostmduserapi.CThostFtdcTradeField_ExchangeInstID_set, doc=r"""合约在交易所的代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcTradeField_swiginit(self, _thostmduserapi.new_CThostFtdcTradeField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcTradeField

# Register CThostFtdcTradeField in _thostmduserapi:
_thostmduserapi.CThostFtdcTradeField_swigregister(CThostFtdcTradeField)
class CThostFtdcUserSessionField(object):
    r"""用户会话"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    FrontID: "TThostFtdcFrontIDType" = property(_thostmduserapi.CThostFtdcUserSessionField_FrontID_get, _thostmduserapi.CThostFtdcUserSessionField_FrontID_set, doc=r"""前置编号""")
    SessionID: "TThostFtdcSessionIDType" = property(_thostmduserapi.CThostFtdcUserSessionField_SessionID_get, _thostmduserapi.CThostFtdcUserSessionField_SessionID_set, doc=r"""会话编号""")
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcUserSessionField_BrokerID_get, _thostmduserapi.CThostFtdcUserSessionField_BrokerID_set, doc=r"""经纪公司代码""")
    UserID: "TThostFtdcUserIDType" = property(_thostmduserapi.CThostFtdcUserSessionField_UserID_get, _thostmduserapi.CThostFtdcUserSessionField_UserID_set, doc=r"""用户代码""")
    LoginDate: "TThostFtdcDateType" = property(_thostmduserapi.CThostFtdcUserSessionField_LoginDate_get, _thostmduserapi.CThostFtdcUserSessionField_LoginDate_set, doc=r"""登录日期""")
    LoginTime: "TThostFtdcTimeType" = property(_thostmduserapi.CThostFtdcUserSessionField_LoginTime_get, _thostmduserapi.CThostFtdcUserSessionField_LoginTime_set, doc=r"""登录时间""")
    reserve1: "TThostFtdcOldIPAddressType" = property(_thostmduserapi.CThostFtdcUserSessionField_reserve1_get, _thostmduserapi.CThostFtdcUserSessionField_reserve1_set, doc=r"""保留的无效字段""")
    UserProductInfo: "TThostFtdcProductInfoType" = property(_thostmduserapi.CThostFtdcUserSessionField_UserProductInfo_get, _thostmduserapi.CThostFtdcUserSessionField_UserProductInfo_set, doc=r"""用户端产品信息""")
    InterfaceProductInfo: "TThostFtdcProductInfoType" = property(_thostmduserapi.CThostFtdcUserSessionField_InterfaceProductInfo_get, _thostmduserapi.CThostFtdcUserSessionField_InterfaceProductInfo_set, doc=r"""接口端产品信息""")
    ProtocolInfo: "TThostFtdcProtocolInfoType" = property(_thostmduserapi.CThostFtdcUserSessionField_ProtocolInfo_get, _thostmduserapi.CThostFtdcUserSessionField_ProtocolInfo_set, doc=r"""协议信息""")
    MacAddress: "TThostFtdcMacAddressType" = property(_thostmduserapi.CThostFtdcUserSessionField_MacAddress_get, _thostmduserapi.CThostFtdcUserSessionField_MacAddress_set, doc=r"""Mac地址""")
    LoginRemark: "TThostFtdcLoginRemarkType" = property(_thostmduserapi.CThostFtdcUserSessionField_LoginRemark_get, _thostmduserapi.CThostFtdcUserSessionField_LoginRemark_set, doc=r"""登录备注""")
    IPAddress: "TThostFtdcIPAddressType" = property(_thostmduserapi.CThostFtdcUserSessionField_IPAddress_get, _thostmduserapi.CThostFtdcUserSessionField_IPAddress_set, doc=r"""IP地址""")

    def __init__(self):
        _thostmduserapi.CThostFtdcUserSessionField_swiginit(self, _thostmduserapi.new_CThostFtdcUserSessionField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcUserSessionField

# Register CThostFtdcUserSessionField in _thostmduserapi:
_thostmduserapi.CThostFtdcUserSessionField_swigregister(CThostFtdcUserSessionField)
class CThostFtdcQryMaxOrderVolumeField(object):
    r"""查询最大报单数量"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcQryMaxOrderVolumeField_BrokerID_get, _thostmduserapi.CThostFtdcQryMaxOrderVolumeField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "TThostFtdcInvestorIDType" = property(_thostmduserapi.CThostFtdcQryMaxOrderVolumeField_InvestorID_get, _thostmduserapi.CThostFtdcQryMaxOrderVolumeField_InvestorID_set, doc=r"""投资者代码""")
    reserve1: "TThostFtdcOldInstrumentIDType" = property(_thostmduserapi.CThostFtdcQryMaxOrderVolumeField_reserve1_get, _thostmduserapi.CThostFtdcQryMaxOrderVolumeField_reserve1_set, doc=r"""保留的无效字段""")
    Direction: "TThostFtdcDirectionType" = property(_thostmduserapi.CThostFtdcQryMaxOrderVolumeField_Direction_get, _thostmduserapi.CThostFtdcQryMaxOrderVolumeField_Direction_set, doc=r"""买卖方向""")
    OffsetFlag: "TThostFtdcOffsetFlagType" = property(_thostmduserapi.CThostFtdcQryMaxOrderVolumeField_OffsetFlag_get, _thostmduserapi.CThostFtdcQryMaxOrderVolumeField_OffsetFlag_set, doc=r"""开平标志""")
    HedgeFlag: "TThostFtdcHedgeFlagType" = property(_thostmduserapi.CThostFtdcQryMaxOrderVolumeField_HedgeFlag_get, _thostmduserapi.CThostFtdcQryMaxOrderVolumeField_HedgeFlag_set, doc=r"""投机套保标志""")
    MaxVolume: "TThostFtdcVolumeType" = property(_thostmduserapi.CThostFtdcQryMaxOrderVolumeField_MaxVolume_get, _thostmduserapi.CThostFtdcQryMaxOrderVolumeField_MaxVolume_set, doc=r"""最大允许报单数量""")
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcQryMaxOrderVolumeField_ExchangeID_get, _thostmduserapi.CThostFtdcQryMaxOrderVolumeField_ExchangeID_set, doc=r"""交易所代码""")
    InvestUnitID: "TThostFtdcInvestUnitIDType" = property(_thostmduserapi.CThostFtdcQryMaxOrderVolumeField_InvestUnitID_get, _thostmduserapi.CThostFtdcQryMaxOrderVolumeField_InvestUnitID_set, doc=r"""投资单元代码""")
    InstrumentID: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcQryMaxOrderVolumeField_InstrumentID_get, _thostmduserapi.CThostFtdcQryMaxOrderVolumeField_InstrumentID_set, doc=r"""合约代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcQryMaxOrderVolumeField_swiginit(self, _thostmduserapi.new_CThostFtdcQryMaxOrderVolumeField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcQryMaxOrderVolumeField

# Register CThostFtdcQryMaxOrderVolumeField in _thostmduserapi:
_thostmduserapi.CThostFtdcQryMaxOrderVolumeField_swigregister(CThostFtdcQryMaxOrderVolumeField)
class CThostFtdcSettlementInfoConfirmField(object):
    r"""投资者结算结果确认信息"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcSettlementInfoConfirmField_BrokerID_get, _thostmduserapi.CThostFtdcSettlementInfoConfirmField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "TThostFtdcInvestorIDType" = property(_thostmduserapi.CThostFtdcSettlementInfoConfirmField_InvestorID_get, _thostmduserapi.CThostFtdcSettlementInfoConfirmField_InvestorID_set, doc=r"""投资者代码""")
    ConfirmDate: "TThostFtdcDateType" = property(_thostmduserapi.CThostFtdcSettlementInfoConfirmField_ConfirmDate_get, _thostmduserapi.CThostFtdcSettlementInfoConfirmField_ConfirmDate_set, doc=r"""确认日期""")
    ConfirmTime: "TThostFtdcTimeType" = property(_thostmduserapi.CThostFtdcSettlementInfoConfirmField_ConfirmTime_get, _thostmduserapi.CThostFtdcSettlementInfoConfirmField_ConfirmTime_set, doc=r"""确认时间""")
    SettlementID: "TThostFtdcSettlementIDType" = property(_thostmduserapi.CThostFtdcSettlementInfoConfirmField_SettlementID_get, _thostmduserapi.CThostFtdcSettlementInfoConfirmField_SettlementID_set, doc=r"""结算编号""")
    AccountID: "TThostFtdcAccountIDType" = property(_thostmduserapi.CThostFtdcSettlementInfoConfirmField_AccountID_get, _thostmduserapi.CThostFtdcSettlementInfoConfirmField_AccountID_set, doc=r"""投资者帐号""")
    CurrencyID: "TThostFtdcCurrencyIDType" = property(_thostmduserapi.CThostFtdcSettlementInfoConfirmField_CurrencyID_get, _thostmduserapi.CThostFtdcSettlementInfoConfirmField_CurrencyID_set, doc=r"""币种代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcSettlementInfoConfirmField_swiginit(self, _thostmduserapi.new_CThostFtdcSettlementInfoConfirmField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcSettlementInfoConfirmField

# Register CThostFtdcSettlementInfoConfirmField in _thostmduserapi:
_thostmduserapi.CThostFtdcSettlementInfoConfirmField_swigregister(CThostFtdcSettlementInfoConfirmField)
class CThostFtdcSyncDepositField(object):
    r"""出入金同步"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    DepositSeqNo: "TThostFtdcDepositSeqNoType" = property(_thostmduserapi.CThostFtdcSyncDepositField_DepositSeqNo_get, _thostmduserapi.CThostFtdcSyncDepositField_DepositSeqNo_set, doc=r"""出入金流水号""")
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcSyncDepositField_BrokerID_get, _thostmduserapi.CThostFtdcSyncDepositField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "TThostFtdcInvestorIDType" = property(_thostmduserapi.CThostFtdcSyncDepositField_InvestorID_get, _thostmduserapi.CThostFtdcSyncDepositField_InvestorID_set, doc=r"""投资者代码""")
    Deposit: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcSyncDepositField_Deposit_get, _thostmduserapi.CThostFtdcSyncDepositField_Deposit_set, doc=r"""入金金额""")
    IsForce: "TThostFtdcBoolType" = property(_thostmduserapi.CThostFtdcSyncDepositField_IsForce_get, _thostmduserapi.CThostFtdcSyncDepositField_IsForce_set, doc=r"""是否强制进行""")
    CurrencyID: "TThostFtdcCurrencyIDType" = property(_thostmduserapi.CThostFtdcSyncDepositField_CurrencyID_get, _thostmduserapi.CThostFtdcSyncDepositField_CurrencyID_set, doc=r"""币种代码""")
    IsFromSopt: "TThostFtdcBoolType" = property(_thostmduserapi.CThostFtdcSyncDepositField_IsFromSopt_get, _thostmduserapi.CThostFtdcSyncDepositField_IsFromSopt_set, doc=r"""是否是个股期权内转""")
    TradingPassword: "TThostFtdcPasswordType" = property(_thostmduserapi.CThostFtdcSyncDepositField_TradingPassword_get, _thostmduserapi.CThostFtdcSyncDepositField_TradingPassword_set, doc=r"""资金密码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcSyncDepositField_swiginit(self, _thostmduserapi.new_CThostFtdcSyncDepositField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcSyncDepositField

# Register CThostFtdcSyncDepositField in _thostmduserapi:
_thostmduserapi.CThostFtdcSyncDepositField_swigregister(CThostFtdcSyncDepositField)
class CThostFtdcSyncFundMortgageField(object):
    r"""货币质押同步"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    MortgageSeqNo: "TThostFtdcDepositSeqNoType" = property(_thostmduserapi.CThostFtdcSyncFundMortgageField_MortgageSeqNo_get, _thostmduserapi.CThostFtdcSyncFundMortgageField_MortgageSeqNo_set, doc=r"""货币质押流水号""")
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcSyncFundMortgageField_BrokerID_get, _thostmduserapi.CThostFtdcSyncFundMortgageField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "TThostFtdcInvestorIDType" = property(_thostmduserapi.CThostFtdcSyncFundMortgageField_InvestorID_get, _thostmduserapi.CThostFtdcSyncFundMortgageField_InvestorID_set, doc=r"""投资者代码""")
    FromCurrencyID: "TThostFtdcCurrencyIDType" = property(_thostmduserapi.CThostFtdcSyncFundMortgageField_FromCurrencyID_get, _thostmduserapi.CThostFtdcSyncFundMortgageField_FromCurrencyID_set, doc=r"""源币种""")
    MortgageAmount: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcSyncFundMortgageField_MortgageAmount_get, _thostmduserapi.CThostFtdcSyncFundMortgageField_MortgageAmount_set, doc=r"""质押金额""")
    ToCurrencyID: "TThostFtdcCurrencyIDType" = property(_thostmduserapi.CThostFtdcSyncFundMortgageField_ToCurrencyID_get, _thostmduserapi.CThostFtdcSyncFundMortgageField_ToCurrencyID_set, doc=r"""目标币种""")

    def __init__(self):
        _thostmduserapi.CThostFtdcSyncFundMortgageField_swiginit(self, _thostmduserapi.new_CThostFtdcSyncFundMortgageField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcSyncFundMortgageField

# Register CThostFtdcSyncFundMortgageField in _thostmduserapi:
_thostmduserapi.CThostFtdcSyncFundMortgageField_swigregister(CThostFtdcSyncFundMortgageField)
class CThostFtdcBrokerSyncField(object):
    r"""经纪公司同步"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcBrokerSyncField_BrokerID_get, _thostmduserapi.CThostFtdcBrokerSyncField_BrokerID_set, doc=r"""经纪公司代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcBrokerSyncField_swiginit(self, _thostmduserapi.new_CThostFtdcBrokerSyncField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcBrokerSyncField

# Register CThostFtdcBrokerSyncField in _thostmduserapi:
_thostmduserapi.CThostFtdcBrokerSyncField_swigregister(CThostFtdcBrokerSyncField)
class CThostFtdcSyncingInvestorField(object):
    r"""正在同步中的投资者"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    InvestorID: "TThostFtdcInvestorIDType" = property(_thostmduserapi.CThostFtdcSyncingInvestorField_InvestorID_get, _thostmduserapi.CThostFtdcSyncingInvestorField_InvestorID_set, doc=r"""投资者代码""")
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcSyncingInvestorField_BrokerID_get, _thostmduserapi.CThostFtdcSyncingInvestorField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorGroupID: "TThostFtdcInvestorIDType" = property(_thostmduserapi.CThostFtdcSyncingInvestorField_InvestorGroupID_get, _thostmduserapi.CThostFtdcSyncingInvestorField_InvestorGroupID_set, doc=r"""投资者分组代码""")
    InvestorName: "TThostFtdcPartyNameType" = property(_thostmduserapi.CThostFtdcSyncingInvestorField_InvestorName_get, _thostmduserapi.CThostFtdcSyncingInvestorField_InvestorName_set, doc=r"""投资者名称""")
    IdentifiedCardType: "TThostFtdcIdCardTypeType" = property(_thostmduserapi.CThostFtdcSyncingInvestorField_IdentifiedCardType_get, _thostmduserapi.CThostFtdcSyncingInvestorField_IdentifiedCardType_set, doc=r"""证件类型""")
    IdentifiedCardNo: "TThostFtdcIdentifiedCardNoType" = property(_thostmduserapi.CThostFtdcSyncingInvestorField_IdentifiedCardNo_get, _thostmduserapi.CThostFtdcSyncingInvestorField_IdentifiedCardNo_set, doc=r"""证件号码""")
    IsActive: "TThostFtdcBoolType" = property(_thostmduserapi.CThostFtdcSyncingInvestorField_IsActive_get, _thostmduserapi.CThostFtdcSyncingInvestorField_IsActive_set, doc=r"""是否活跃""")
    Telephone: "TThostFtdcTelephoneType" = property(_thostmduserapi.CThostFtdcSyncingInvestorField_Telephone_get, _thostmduserapi.CThostFtdcSyncingInvestorField_Telephone_set, doc=r"""联系电话""")
    Address: "TThostFtdcAddressType" = property(_thostmduserapi.CThostFtdcSyncingInvestorField_Address_get, _thostmduserapi.CThostFtdcSyncingInvestorField_Address_set, doc=r"""通讯地址""")
    OpenDate: "TThostFtdcDateType" = property(_thostmduserapi.CThostFtdcSyncingInvestorField_OpenDate_get, _thostmduserapi.CThostFtdcSyncingInvestorField_OpenDate_set, doc=r"""开户日期""")
    Mobile: "TThostFtdcMobileType" = property(_thostmduserapi.CThostFtdcSyncingInvestorField_Mobile_get, _thostmduserapi.CThostFtdcSyncingInvestorField_Mobile_set, doc=r"""手机""")
    CommModelID: "TThostFtdcInvestorIDType" = property(_thostmduserapi.CThostFtdcSyncingInvestorField_CommModelID_get, _thostmduserapi.CThostFtdcSyncingInvestorField_CommModelID_set, doc=r"""手续费率模板代码""")
    MarginModelID: "TThostFtdcInvestorIDType" = property(_thostmduserapi.CThostFtdcSyncingInvestorField_MarginModelID_get, _thostmduserapi.CThostFtdcSyncingInvestorField_MarginModelID_set, doc=r"""保证金率模板代码""")
    IsOrderFreq: "TThostFtdcEnumBoolType" = property(_thostmduserapi.CThostFtdcSyncingInvestorField_IsOrderFreq_get, _thostmduserapi.CThostFtdcSyncingInvestorField_IsOrderFreq_set, doc=r"""是否频率控制""")
    IsOpenVolLimit: "TThostFtdcEnumBoolType" = property(_thostmduserapi.CThostFtdcSyncingInvestorField_IsOpenVolLimit_get, _thostmduserapi.CThostFtdcSyncingInvestorField_IsOpenVolLimit_set, doc=r"""是否开仓限制""")

    def __init__(self):
        _thostmduserapi.CThostFtdcSyncingInvestorField_swiginit(self, _thostmduserapi.new_CThostFtdcSyncingInvestorField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcSyncingInvestorField

# Register CThostFtdcSyncingInvestorField in _thostmduserapi:
_thostmduserapi.CThostFtdcSyncingInvestorField_swigregister(CThostFtdcSyncingInvestorField)
class CThostFtdcSyncingTradingCodeField(object):
    r"""正在同步中的交易代码"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    InvestorID: "TThostFtdcInvestorIDType" = property(_thostmduserapi.CThostFtdcSyncingTradingCodeField_InvestorID_get, _thostmduserapi.CThostFtdcSyncingTradingCodeField_InvestorID_set, doc=r"""投资者代码""")
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcSyncingTradingCodeField_BrokerID_get, _thostmduserapi.CThostFtdcSyncingTradingCodeField_BrokerID_set, doc=r"""经纪公司代码""")
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcSyncingTradingCodeField_ExchangeID_get, _thostmduserapi.CThostFtdcSyncingTradingCodeField_ExchangeID_set, doc=r"""交易所代码""")
    ClientID: "TThostFtdcClientIDType" = property(_thostmduserapi.CThostFtdcSyncingTradingCodeField_ClientID_get, _thostmduserapi.CThostFtdcSyncingTradingCodeField_ClientID_set, doc=r"""客户代码""")
    IsActive: "TThostFtdcBoolType" = property(_thostmduserapi.CThostFtdcSyncingTradingCodeField_IsActive_get, _thostmduserapi.CThostFtdcSyncingTradingCodeField_IsActive_set, doc=r"""是否活跃""")
    ClientIDType: "TThostFtdcClientIDTypeType" = property(_thostmduserapi.CThostFtdcSyncingTradingCodeField_ClientIDType_get, _thostmduserapi.CThostFtdcSyncingTradingCodeField_ClientIDType_set, doc=r"""交易编码类型""")

    def __init__(self):
        _thostmduserapi.CThostFtdcSyncingTradingCodeField_swiginit(self, _thostmduserapi.new_CThostFtdcSyncingTradingCodeField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcSyncingTradingCodeField

# Register CThostFtdcSyncingTradingCodeField in _thostmduserapi:
_thostmduserapi.CThostFtdcSyncingTradingCodeField_swigregister(CThostFtdcSyncingTradingCodeField)
class CThostFtdcSyncingInvestorGroupField(object):
    r"""正在同步中的投资者分组"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcSyncingInvestorGroupField_BrokerID_get, _thostmduserapi.CThostFtdcSyncingInvestorGroupField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorGroupID: "TThostFtdcInvestorIDType" = property(_thostmduserapi.CThostFtdcSyncingInvestorGroupField_InvestorGroupID_get, _thostmduserapi.CThostFtdcSyncingInvestorGroupField_InvestorGroupID_set, doc=r"""投资者分组代码""")
    InvestorGroupName: "TThostFtdcInvestorGroupNameType" = property(_thostmduserapi.CThostFtdcSyncingInvestorGroupField_InvestorGroupName_get, _thostmduserapi.CThostFtdcSyncingInvestorGroupField_InvestorGroupName_set, doc=r"""投资者分组名称""")

    def __init__(self):
        _thostmduserapi.CThostFtdcSyncingInvestorGroupField_swiginit(self, _thostmduserapi.new_CThostFtdcSyncingInvestorGroupField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcSyncingInvestorGroupField

# Register CThostFtdcSyncingInvestorGroupField in _thostmduserapi:
_thostmduserapi.CThostFtdcSyncingInvestorGroupField_swigregister(CThostFtdcSyncingInvestorGroupField)
class CThostFtdcSyncingTradingAccountField(object):
    r"""正在同步中的交易账号"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcSyncingTradingAccountField_BrokerID_get, _thostmduserapi.CThostFtdcSyncingTradingAccountField_BrokerID_set, doc=r"""经纪公司代码""")
    AccountID: "TThostFtdcAccountIDType" = property(_thostmduserapi.CThostFtdcSyncingTradingAccountField_AccountID_get, _thostmduserapi.CThostFtdcSyncingTradingAccountField_AccountID_set, doc=r"""投资者帐号""")
    PreMortgage: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcSyncingTradingAccountField_PreMortgage_get, _thostmduserapi.CThostFtdcSyncingTradingAccountField_PreMortgage_set, doc=r"""上次质押金额""")
    PreCredit: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcSyncingTradingAccountField_PreCredit_get, _thostmduserapi.CThostFtdcSyncingTradingAccountField_PreCredit_set, doc=r"""上次信用额度""")
    PreDeposit: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcSyncingTradingAccountField_PreDeposit_get, _thostmduserapi.CThostFtdcSyncingTradingAccountField_PreDeposit_set, doc=r"""上次存款额""")
    PreBalance: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcSyncingTradingAccountField_PreBalance_get, _thostmduserapi.CThostFtdcSyncingTradingAccountField_PreBalance_set, doc=r"""上次结算准备金""")
    PreMargin: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcSyncingTradingAccountField_PreMargin_get, _thostmduserapi.CThostFtdcSyncingTradingAccountField_PreMargin_set, doc=r"""上次占用的保证金""")
    InterestBase: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcSyncingTradingAccountField_InterestBase_get, _thostmduserapi.CThostFtdcSyncingTradingAccountField_InterestBase_set, doc=r"""利息基数""")
    Interest: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcSyncingTradingAccountField_Interest_get, _thostmduserapi.CThostFtdcSyncingTradingAccountField_Interest_set, doc=r"""利息收入""")
    Deposit: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcSyncingTradingAccountField_Deposit_get, _thostmduserapi.CThostFtdcSyncingTradingAccountField_Deposit_set, doc=r"""入金金额""")
    Withdraw: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcSyncingTradingAccountField_Withdraw_get, _thostmduserapi.CThostFtdcSyncingTradingAccountField_Withdraw_set, doc=r"""出金金额""")
    FrozenMargin: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcSyncingTradingAccountField_FrozenMargin_get, _thostmduserapi.CThostFtdcSyncingTradingAccountField_FrozenMargin_set, doc=r"""冻结的保证金""")
    FrozenCash: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcSyncingTradingAccountField_FrozenCash_get, _thostmduserapi.CThostFtdcSyncingTradingAccountField_FrozenCash_set, doc=r"""冻结的资金""")
    FrozenCommission: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcSyncingTradingAccountField_FrozenCommission_get, _thostmduserapi.CThostFtdcSyncingTradingAccountField_FrozenCommission_set, doc=r"""冻结的手续费""")
    CurrMargin: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcSyncingTradingAccountField_CurrMargin_get, _thostmduserapi.CThostFtdcSyncingTradingAccountField_CurrMargin_set, doc=r"""当前保证金总额""")
    CashIn: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcSyncingTradingAccountField_CashIn_get, _thostmduserapi.CThostFtdcSyncingTradingAccountField_CashIn_set, doc=r"""资金差额""")
    Commission: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcSyncingTradingAccountField_Commission_get, _thostmduserapi.CThostFtdcSyncingTradingAccountField_Commission_set, doc=r"""手续费""")
    CloseProfit: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcSyncingTradingAccountField_CloseProfit_get, _thostmduserapi.CThostFtdcSyncingTradingAccountField_CloseProfit_set, doc=r"""平仓盈亏""")
    PositionProfit: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcSyncingTradingAccountField_PositionProfit_get, _thostmduserapi.CThostFtdcSyncingTradingAccountField_PositionProfit_set, doc=r"""持仓盈亏""")
    Balance: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcSyncingTradingAccountField_Balance_get, _thostmduserapi.CThostFtdcSyncingTradingAccountField_Balance_set, doc=r"""期货结算准备金""")
    Available: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcSyncingTradingAccountField_Available_get, _thostmduserapi.CThostFtdcSyncingTradingAccountField_Available_set, doc=r"""可用资金""")
    WithdrawQuota: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcSyncingTradingAccountField_WithdrawQuota_get, _thostmduserapi.CThostFtdcSyncingTradingAccountField_WithdrawQuota_set, doc=r"""可取资金""")
    Reserve: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcSyncingTradingAccountField_Reserve_get, _thostmduserapi.CThostFtdcSyncingTradingAccountField_Reserve_set, doc=r"""基本准备金""")
    TradingDay: "TThostFtdcDateType" = property(_thostmduserapi.CThostFtdcSyncingTradingAccountField_TradingDay_get, _thostmduserapi.CThostFtdcSyncingTradingAccountField_TradingDay_set, doc=r"""交易日""")
    SettlementID: "TThostFtdcSettlementIDType" = property(_thostmduserapi.CThostFtdcSyncingTradingAccountField_SettlementID_get, _thostmduserapi.CThostFtdcSyncingTradingAccountField_SettlementID_set, doc=r"""结算编号""")
    Credit: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcSyncingTradingAccountField_Credit_get, _thostmduserapi.CThostFtdcSyncingTradingAccountField_Credit_set, doc=r"""信用额度""")
    Mortgage: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcSyncingTradingAccountField_Mortgage_get, _thostmduserapi.CThostFtdcSyncingTradingAccountField_Mortgage_set, doc=r"""质押金额""")
    ExchangeMargin: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcSyncingTradingAccountField_ExchangeMargin_get, _thostmduserapi.CThostFtdcSyncingTradingAccountField_ExchangeMargin_set, doc=r"""交易所保证金""")
    DeliveryMargin: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcSyncingTradingAccountField_DeliveryMargin_get, _thostmduserapi.CThostFtdcSyncingTradingAccountField_DeliveryMargin_set, doc=r"""投资者交割保证金""")
    ExchangeDeliveryMargin: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcSyncingTradingAccountField_ExchangeDeliveryMargin_get, _thostmduserapi.CThostFtdcSyncingTradingAccountField_ExchangeDeliveryMargin_set, doc=r"""交易所交割保证金""")
    ReserveBalance: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcSyncingTradingAccountField_ReserveBalance_get, _thostmduserapi.CThostFtdcSyncingTradingAccountField_ReserveBalance_set, doc=r"""保底期货结算准备金""")
    CurrencyID: "TThostFtdcCurrencyIDType" = property(_thostmduserapi.CThostFtdcSyncingTradingAccountField_CurrencyID_get, _thostmduserapi.CThostFtdcSyncingTradingAccountField_CurrencyID_set, doc=r"""币种代码""")
    PreFundMortgageIn: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcSyncingTradingAccountField_PreFundMortgageIn_get, _thostmduserapi.CThostFtdcSyncingTradingAccountField_PreFundMortgageIn_set, doc=r"""上次货币质入金额""")
    PreFundMortgageOut: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcSyncingTradingAccountField_PreFundMortgageOut_get, _thostmduserapi.CThostFtdcSyncingTradingAccountField_PreFundMortgageOut_set, doc=r"""上次货币质出金额""")
    FundMortgageIn: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcSyncingTradingAccountField_FundMortgageIn_get, _thostmduserapi.CThostFtdcSyncingTradingAccountField_FundMortgageIn_set, doc=r"""货币质入金额""")
    FundMortgageOut: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcSyncingTradingAccountField_FundMortgageOut_get, _thostmduserapi.CThostFtdcSyncingTradingAccountField_FundMortgageOut_set, doc=r"""货币质出金额""")
    FundMortgageAvailable: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcSyncingTradingAccountField_FundMortgageAvailable_get, _thostmduserapi.CThostFtdcSyncingTradingAccountField_FundMortgageAvailable_set, doc=r"""货币质押余额""")
    MortgageableFund: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcSyncingTradingAccountField_MortgageableFund_get, _thostmduserapi.CThostFtdcSyncingTradingAccountField_MortgageableFund_set, doc=r"""可质押货币金额""")
    SpecProductMargin: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcSyncingTradingAccountField_SpecProductMargin_get, _thostmduserapi.CThostFtdcSyncingTradingAccountField_SpecProductMargin_set, doc=r"""特殊产品占用保证金""")
    SpecProductFrozenMargin: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcSyncingTradingAccountField_SpecProductFrozenMargin_get, _thostmduserapi.CThostFtdcSyncingTradingAccountField_SpecProductFrozenMargin_set, doc=r"""特殊产品冻结保证金""")
    SpecProductCommission: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcSyncingTradingAccountField_SpecProductCommission_get, _thostmduserapi.CThostFtdcSyncingTradingAccountField_SpecProductCommission_set, doc=r"""特殊产品手续费""")
    SpecProductFrozenCommission: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcSyncingTradingAccountField_SpecProductFrozenCommission_get, _thostmduserapi.CThostFtdcSyncingTradingAccountField_SpecProductFrozenCommission_set, doc=r"""特殊产品冻结手续费""")
    SpecProductPositionProfit: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcSyncingTradingAccountField_SpecProductPositionProfit_get, _thostmduserapi.CThostFtdcSyncingTradingAccountField_SpecProductPositionProfit_set, doc=r"""特殊产品持仓盈亏""")
    SpecProductCloseProfit: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcSyncingTradingAccountField_SpecProductCloseProfit_get, _thostmduserapi.CThostFtdcSyncingTradingAccountField_SpecProductCloseProfit_set, doc=r"""特殊产品平仓盈亏""")
    SpecProductPositionProfitByAlg: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcSyncingTradingAccountField_SpecProductPositionProfitByAlg_get, _thostmduserapi.CThostFtdcSyncingTradingAccountField_SpecProductPositionProfitByAlg_set, doc=r"""根据持仓盈亏算法计算的特殊产品持仓盈亏""")
    SpecProductExchangeMargin: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcSyncingTradingAccountField_SpecProductExchangeMargin_get, _thostmduserapi.CThostFtdcSyncingTradingAccountField_SpecProductExchangeMargin_set, doc=r"""特殊产品交易所保证金""")
    FrozenSwap: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcSyncingTradingAccountField_FrozenSwap_get, _thostmduserapi.CThostFtdcSyncingTradingAccountField_FrozenSwap_set, doc=r"""延时换汇冻结金额""")
    RemainSwap: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcSyncingTradingAccountField_RemainSwap_get, _thostmduserapi.CThostFtdcSyncingTradingAccountField_RemainSwap_set, doc=r"""剩余换汇额度""")

    def __init__(self):
        _thostmduserapi.CThostFtdcSyncingTradingAccountField_swiginit(self, _thostmduserapi.new_CThostFtdcSyncingTradingAccountField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcSyncingTradingAccountField

# Register CThostFtdcSyncingTradingAccountField in _thostmduserapi:
_thostmduserapi.CThostFtdcSyncingTradingAccountField_swigregister(CThostFtdcSyncingTradingAccountField)
class CThostFtdcSyncingInvestorPositionField(object):
    r"""正在同步中的投资者持仓"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    reserve1: "TThostFtdcOldInstrumentIDType" = property(_thostmduserapi.CThostFtdcSyncingInvestorPositionField_reserve1_get, _thostmduserapi.CThostFtdcSyncingInvestorPositionField_reserve1_set, doc=r"""保留的无效字段""")
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcSyncingInvestorPositionField_BrokerID_get, _thostmduserapi.CThostFtdcSyncingInvestorPositionField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "TThostFtdcInvestorIDType" = property(_thostmduserapi.CThostFtdcSyncingInvestorPositionField_InvestorID_get, _thostmduserapi.CThostFtdcSyncingInvestorPositionField_InvestorID_set, doc=r"""投资者代码""")
    PosiDirection: "TThostFtdcPosiDirectionType" = property(_thostmduserapi.CThostFtdcSyncingInvestorPositionField_PosiDirection_get, _thostmduserapi.CThostFtdcSyncingInvestorPositionField_PosiDirection_set, doc=r"""持仓多空方向""")
    HedgeFlag: "TThostFtdcHedgeFlagType" = property(_thostmduserapi.CThostFtdcSyncingInvestorPositionField_HedgeFlag_get, _thostmduserapi.CThostFtdcSyncingInvestorPositionField_HedgeFlag_set, doc=r"""投机套保标志""")
    PositionDate: "TThostFtdcPositionDateType" = property(_thostmduserapi.CThostFtdcSyncingInvestorPositionField_PositionDate_get, _thostmduserapi.CThostFtdcSyncingInvestorPositionField_PositionDate_set, doc=r"""持仓日期""")
    YdPosition: "TThostFtdcVolumeType" = property(_thostmduserapi.CThostFtdcSyncingInvestorPositionField_YdPosition_get, _thostmduserapi.CThostFtdcSyncingInvestorPositionField_YdPosition_set, doc=r"""上日持仓""")
    Position: "TThostFtdcVolumeType" = property(_thostmduserapi.CThostFtdcSyncingInvestorPositionField_Position_get, _thostmduserapi.CThostFtdcSyncingInvestorPositionField_Position_set, doc=r"""今日持仓""")
    LongFrozen: "TThostFtdcVolumeType" = property(_thostmduserapi.CThostFtdcSyncingInvestorPositionField_LongFrozen_get, _thostmduserapi.CThostFtdcSyncingInvestorPositionField_LongFrozen_set, doc=r"""多头冻结""")
    ShortFrozen: "TThostFtdcVolumeType" = property(_thostmduserapi.CThostFtdcSyncingInvestorPositionField_ShortFrozen_get, _thostmduserapi.CThostFtdcSyncingInvestorPositionField_ShortFrozen_set, doc=r"""空头冻结""")
    LongFrozenAmount: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcSyncingInvestorPositionField_LongFrozenAmount_get, _thostmduserapi.CThostFtdcSyncingInvestorPositionField_LongFrozenAmount_set, doc=r"""开仓冻结金额""")
    ShortFrozenAmount: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcSyncingInvestorPositionField_ShortFrozenAmount_get, _thostmduserapi.CThostFtdcSyncingInvestorPositionField_ShortFrozenAmount_set, doc=r"""开仓冻结金额""")
    OpenVolume: "TThostFtdcVolumeType" = property(_thostmduserapi.CThostFtdcSyncingInvestorPositionField_OpenVolume_get, _thostmduserapi.CThostFtdcSyncingInvestorPositionField_OpenVolume_set, doc=r"""开仓量""")
    CloseVolume: "TThostFtdcVolumeType" = property(_thostmduserapi.CThostFtdcSyncingInvestorPositionField_CloseVolume_get, _thostmduserapi.CThostFtdcSyncingInvestorPositionField_CloseVolume_set, doc=r"""平仓量""")
    OpenAmount: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcSyncingInvestorPositionField_OpenAmount_get, _thostmduserapi.CThostFtdcSyncingInvestorPositionField_OpenAmount_set, doc=r"""开仓金额""")
    CloseAmount: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcSyncingInvestorPositionField_CloseAmount_get, _thostmduserapi.CThostFtdcSyncingInvestorPositionField_CloseAmount_set, doc=r"""平仓金额""")
    PositionCost: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcSyncingInvestorPositionField_PositionCost_get, _thostmduserapi.CThostFtdcSyncingInvestorPositionField_PositionCost_set, doc=r"""持仓成本""")
    PreMargin: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcSyncingInvestorPositionField_PreMargin_get, _thostmduserapi.CThostFtdcSyncingInvestorPositionField_PreMargin_set, doc=r"""上次占用的保证金""")
    UseMargin: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcSyncingInvestorPositionField_UseMargin_get, _thostmduserapi.CThostFtdcSyncingInvestorPositionField_UseMargin_set, doc=r"""占用的保证金""")
    FrozenMargin: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcSyncingInvestorPositionField_FrozenMargin_get, _thostmduserapi.CThostFtdcSyncingInvestorPositionField_FrozenMargin_set, doc=r"""冻结的保证金""")
    FrozenCash: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcSyncingInvestorPositionField_FrozenCash_get, _thostmduserapi.CThostFtdcSyncingInvestorPositionField_FrozenCash_set, doc=r"""冻结的资金""")
    FrozenCommission: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcSyncingInvestorPositionField_FrozenCommission_get, _thostmduserapi.CThostFtdcSyncingInvestorPositionField_FrozenCommission_set, doc=r"""冻结的手续费""")
    CashIn: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcSyncingInvestorPositionField_CashIn_get, _thostmduserapi.CThostFtdcSyncingInvestorPositionField_CashIn_set, doc=r"""资金差额""")
    Commission: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcSyncingInvestorPositionField_Commission_get, _thostmduserapi.CThostFtdcSyncingInvestorPositionField_Commission_set, doc=r"""手续费""")
    CloseProfit: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcSyncingInvestorPositionField_CloseProfit_get, _thostmduserapi.CThostFtdcSyncingInvestorPositionField_CloseProfit_set, doc=r"""平仓盈亏""")
    PositionProfit: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcSyncingInvestorPositionField_PositionProfit_get, _thostmduserapi.CThostFtdcSyncingInvestorPositionField_PositionProfit_set, doc=r"""持仓盈亏""")
    PreSettlementPrice: "TThostFtdcPriceType" = property(_thostmduserapi.CThostFtdcSyncingInvestorPositionField_PreSettlementPrice_get, _thostmduserapi.CThostFtdcSyncingInvestorPositionField_PreSettlementPrice_set, doc=r"""上次结算价""")
    SettlementPrice: "TThostFtdcPriceType" = property(_thostmduserapi.CThostFtdcSyncingInvestorPositionField_SettlementPrice_get, _thostmduserapi.CThostFtdcSyncingInvestorPositionField_SettlementPrice_set, doc=r"""本次结算价""")
    TradingDay: "TThostFtdcDateType" = property(_thostmduserapi.CThostFtdcSyncingInvestorPositionField_TradingDay_get, _thostmduserapi.CThostFtdcSyncingInvestorPositionField_TradingDay_set, doc=r"""交易日""")
    SettlementID: "TThostFtdcSettlementIDType" = property(_thostmduserapi.CThostFtdcSyncingInvestorPositionField_SettlementID_get, _thostmduserapi.CThostFtdcSyncingInvestorPositionField_SettlementID_set, doc=r"""结算编号""")
    OpenCost: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcSyncingInvestorPositionField_OpenCost_get, _thostmduserapi.CThostFtdcSyncingInvestorPositionField_OpenCost_set, doc=r"""开仓成本""")
    ExchangeMargin: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcSyncingInvestorPositionField_ExchangeMargin_get, _thostmduserapi.CThostFtdcSyncingInvestorPositionField_ExchangeMargin_set, doc=r"""交易所保证金""")
    CombPosition: "TThostFtdcVolumeType" = property(_thostmduserapi.CThostFtdcSyncingInvestorPositionField_CombPosition_get, _thostmduserapi.CThostFtdcSyncingInvestorPositionField_CombPosition_set, doc=r"""组合成交形成的持仓""")
    CombLongFrozen: "TThostFtdcVolumeType" = property(_thostmduserapi.CThostFtdcSyncingInvestorPositionField_CombLongFrozen_get, _thostmduserapi.CThostFtdcSyncingInvestorPositionField_CombLongFrozen_set, doc=r"""组合多头冻结""")
    CombShortFrozen: "TThostFtdcVolumeType" = property(_thostmduserapi.CThostFtdcSyncingInvestorPositionField_CombShortFrozen_get, _thostmduserapi.CThostFtdcSyncingInvestorPositionField_CombShortFrozen_set, doc=r"""组合空头冻结""")
    CloseProfitByDate: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcSyncingInvestorPositionField_CloseProfitByDate_get, _thostmduserapi.CThostFtdcSyncingInvestorPositionField_CloseProfitByDate_set, doc=r"""逐日盯市平仓盈亏""")
    CloseProfitByTrade: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcSyncingInvestorPositionField_CloseProfitByTrade_get, _thostmduserapi.CThostFtdcSyncingInvestorPositionField_CloseProfitByTrade_set, doc=r"""逐笔对冲平仓盈亏""")
    TodayPosition: "TThostFtdcVolumeType" = property(_thostmduserapi.CThostFtdcSyncingInvestorPositionField_TodayPosition_get, _thostmduserapi.CThostFtdcSyncingInvestorPositionField_TodayPosition_set, doc=r"""今日持仓""")
    MarginRateByMoney: "TThostFtdcRatioType" = property(_thostmduserapi.CThostFtdcSyncingInvestorPositionField_MarginRateByMoney_get, _thostmduserapi.CThostFtdcSyncingInvestorPositionField_MarginRateByMoney_set, doc=r"""保证金率""")
    MarginRateByVolume: "TThostFtdcRatioType" = property(_thostmduserapi.CThostFtdcSyncingInvestorPositionField_MarginRateByVolume_get, _thostmduserapi.CThostFtdcSyncingInvestorPositionField_MarginRateByVolume_set, doc=r"""保证金率(按手数)""")
    StrikeFrozen: "TThostFtdcVolumeType" = property(_thostmduserapi.CThostFtdcSyncingInvestorPositionField_StrikeFrozen_get, _thostmduserapi.CThostFtdcSyncingInvestorPositionField_StrikeFrozen_set, doc=r"""执行冻结""")
    StrikeFrozenAmount: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcSyncingInvestorPositionField_StrikeFrozenAmount_get, _thostmduserapi.CThostFtdcSyncingInvestorPositionField_StrikeFrozenAmount_set, doc=r"""执行冻结金额""")
    AbandonFrozen: "TThostFtdcVolumeType" = property(_thostmduserapi.CThostFtdcSyncingInvestorPositionField_AbandonFrozen_get, _thostmduserapi.CThostFtdcSyncingInvestorPositionField_AbandonFrozen_set, doc=r"""放弃执行冻结""")
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcSyncingInvestorPositionField_ExchangeID_get, _thostmduserapi.CThostFtdcSyncingInvestorPositionField_ExchangeID_set, doc=r"""交易所代码""")
    YdStrikeFrozen: "TThostFtdcVolumeType" = property(_thostmduserapi.CThostFtdcSyncingInvestorPositionField_YdStrikeFrozen_get, _thostmduserapi.CThostFtdcSyncingInvestorPositionField_YdStrikeFrozen_set, doc=r"""执行冻结的昨仓""")
    InvestUnitID: "TThostFtdcInvestUnitIDType" = property(_thostmduserapi.CThostFtdcSyncingInvestorPositionField_InvestUnitID_get, _thostmduserapi.CThostFtdcSyncingInvestorPositionField_InvestUnitID_set, doc=r"""投资单元代码""")
    PositionCostOffset: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcSyncingInvestorPositionField_PositionCostOffset_get, _thostmduserapi.CThostFtdcSyncingInvestorPositionField_PositionCostOffset_set, doc=r"""持仓成本差值""")
    TasPosition: "TThostFtdcVolumeType" = property(_thostmduserapi.CThostFtdcSyncingInvestorPositionField_TasPosition_get, _thostmduserapi.CThostFtdcSyncingInvestorPositionField_TasPosition_set, doc=r"""tas持仓手数""")
    TasPositionCost: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcSyncingInvestorPositionField_TasPositionCost_get, _thostmduserapi.CThostFtdcSyncingInvestorPositionField_TasPositionCost_set, doc=r"""tas持仓成本""")
    InstrumentID: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcSyncingInvestorPositionField_InstrumentID_get, _thostmduserapi.CThostFtdcSyncingInvestorPositionField_InstrumentID_set, doc=r"""合约代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcSyncingInvestorPositionField_swiginit(self, _thostmduserapi.new_CThostFtdcSyncingInvestorPositionField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcSyncingInvestorPositionField

# Register CThostFtdcSyncingInvestorPositionField in _thostmduserapi:
_thostmduserapi.CThostFtdcSyncingInvestorPositionField_swigregister(CThostFtdcSyncingInvestorPositionField)
class CThostFtdcSyncingInstrumentMarginRateField(object):
    r"""正在同步中的合约保证金率"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    reserve1: "TThostFtdcOldInstrumentIDType" = property(_thostmduserapi.CThostFtdcSyncingInstrumentMarginRateField_reserve1_get, _thostmduserapi.CThostFtdcSyncingInstrumentMarginRateField_reserve1_set, doc=r"""保留的无效字段""")
    InvestorRange: "TThostFtdcInvestorRangeType" = property(_thostmduserapi.CThostFtdcSyncingInstrumentMarginRateField_InvestorRange_get, _thostmduserapi.CThostFtdcSyncingInstrumentMarginRateField_InvestorRange_set, doc=r"""投资者范围""")
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcSyncingInstrumentMarginRateField_BrokerID_get, _thostmduserapi.CThostFtdcSyncingInstrumentMarginRateField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "TThostFtdcInvestorIDType" = property(_thostmduserapi.CThostFtdcSyncingInstrumentMarginRateField_InvestorID_get, _thostmduserapi.CThostFtdcSyncingInstrumentMarginRateField_InvestorID_set, doc=r"""投资者代码""")
    HedgeFlag: "TThostFtdcHedgeFlagType" = property(_thostmduserapi.CThostFtdcSyncingInstrumentMarginRateField_HedgeFlag_get, _thostmduserapi.CThostFtdcSyncingInstrumentMarginRateField_HedgeFlag_set, doc=r"""投机套保标志""")
    LongMarginRatioByMoney: "TThostFtdcRatioType" = property(_thostmduserapi.CThostFtdcSyncingInstrumentMarginRateField_LongMarginRatioByMoney_get, _thostmduserapi.CThostFtdcSyncingInstrumentMarginRateField_LongMarginRatioByMoney_set, doc=r"""多头保证金率""")
    LongMarginRatioByVolume: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcSyncingInstrumentMarginRateField_LongMarginRatioByVolume_get, _thostmduserapi.CThostFtdcSyncingInstrumentMarginRateField_LongMarginRatioByVolume_set, doc=r"""多头保证金费""")
    ShortMarginRatioByMoney: "TThostFtdcRatioType" = property(_thostmduserapi.CThostFtdcSyncingInstrumentMarginRateField_ShortMarginRatioByMoney_get, _thostmduserapi.CThostFtdcSyncingInstrumentMarginRateField_ShortMarginRatioByMoney_set, doc=r"""空头保证金率""")
    ShortMarginRatioByVolume: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcSyncingInstrumentMarginRateField_ShortMarginRatioByVolume_get, _thostmduserapi.CThostFtdcSyncingInstrumentMarginRateField_ShortMarginRatioByVolume_set, doc=r"""空头保证金费""")
    IsRelative: "TThostFtdcBoolType" = property(_thostmduserapi.CThostFtdcSyncingInstrumentMarginRateField_IsRelative_get, _thostmduserapi.CThostFtdcSyncingInstrumentMarginRateField_IsRelative_set, doc=r"""是否相对交易所收取""")
    InstrumentID: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcSyncingInstrumentMarginRateField_InstrumentID_get, _thostmduserapi.CThostFtdcSyncingInstrumentMarginRateField_InstrumentID_set, doc=r"""合约代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcSyncingInstrumentMarginRateField_swiginit(self, _thostmduserapi.new_CThostFtdcSyncingInstrumentMarginRateField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcSyncingInstrumentMarginRateField

# Register CThostFtdcSyncingInstrumentMarginRateField in _thostmduserapi:
_thostmduserapi.CThostFtdcSyncingInstrumentMarginRateField_swigregister(CThostFtdcSyncingInstrumentMarginRateField)
class CThostFtdcSyncingInstrumentCommissionRateField(object):
    r"""正在同步中的合约手续费率"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    reserve1: "TThostFtdcOldInstrumentIDType" = property(_thostmduserapi.CThostFtdcSyncingInstrumentCommissionRateField_reserve1_get, _thostmduserapi.CThostFtdcSyncingInstrumentCommissionRateField_reserve1_set, doc=r"""保留的无效字段""")
    InvestorRange: "TThostFtdcInvestorRangeType" = property(_thostmduserapi.CThostFtdcSyncingInstrumentCommissionRateField_InvestorRange_get, _thostmduserapi.CThostFtdcSyncingInstrumentCommissionRateField_InvestorRange_set, doc=r"""投资者范围""")
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcSyncingInstrumentCommissionRateField_BrokerID_get, _thostmduserapi.CThostFtdcSyncingInstrumentCommissionRateField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "TThostFtdcInvestorIDType" = property(_thostmduserapi.CThostFtdcSyncingInstrumentCommissionRateField_InvestorID_get, _thostmduserapi.CThostFtdcSyncingInstrumentCommissionRateField_InvestorID_set, doc=r"""投资者代码""")
    OpenRatioByMoney: "TThostFtdcRatioType" = property(_thostmduserapi.CThostFtdcSyncingInstrumentCommissionRateField_OpenRatioByMoney_get, _thostmduserapi.CThostFtdcSyncingInstrumentCommissionRateField_OpenRatioByMoney_set, doc=r"""开仓手续费率""")
    OpenRatioByVolume: "TThostFtdcRatioType" = property(_thostmduserapi.CThostFtdcSyncingInstrumentCommissionRateField_OpenRatioByVolume_get, _thostmduserapi.CThostFtdcSyncingInstrumentCommissionRateField_OpenRatioByVolume_set, doc=r"""开仓手续费""")
    CloseRatioByMoney: "TThostFtdcRatioType" = property(_thostmduserapi.CThostFtdcSyncingInstrumentCommissionRateField_CloseRatioByMoney_get, _thostmduserapi.CThostFtdcSyncingInstrumentCommissionRateField_CloseRatioByMoney_set, doc=r"""平仓手续费率""")
    CloseRatioByVolume: "TThostFtdcRatioType" = property(_thostmduserapi.CThostFtdcSyncingInstrumentCommissionRateField_CloseRatioByVolume_get, _thostmduserapi.CThostFtdcSyncingInstrumentCommissionRateField_CloseRatioByVolume_set, doc=r"""平仓手续费""")
    CloseTodayRatioByMoney: "TThostFtdcRatioType" = property(_thostmduserapi.CThostFtdcSyncingInstrumentCommissionRateField_CloseTodayRatioByMoney_get, _thostmduserapi.CThostFtdcSyncingInstrumentCommissionRateField_CloseTodayRatioByMoney_set, doc=r"""平今手续费率""")
    CloseTodayRatioByVolume: "TThostFtdcRatioType" = property(_thostmduserapi.CThostFtdcSyncingInstrumentCommissionRateField_CloseTodayRatioByVolume_get, _thostmduserapi.CThostFtdcSyncingInstrumentCommissionRateField_CloseTodayRatioByVolume_set, doc=r"""平今手续费""")
    InstrumentID: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcSyncingInstrumentCommissionRateField_InstrumentID_get, _thostmduserapi.CThostFtdcSyncingInstrumentCommissionRateField_InstrumentID_set, doc=r"""合约代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcSyncingInstrumentCommissionRateField_swiginit(self, _thostmduserapi.new_CThostFtdcSyncingInstrumentCommissionRateField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcSyncingInstrumentCommissionRateField

# Register CThostFtdcSyncingInstrumentCommissionRateField in _thostmduserapi:
_thostmduserapi.CThostFtdcSyncingInstrumentCommissionRateField_swigregister(CThostFtdcSyncingInstrumentCommissionRateField)
class CThostFtdcSyncingInstrumentTradingRightField(object):
    r"""正在同步中的合约交易权限"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    reserve1: "TThostFtdcOldInstrumentIDType" = property(_thostmduserapi.CThostFtdcSyncingInstrumentTradingRightField_reserve1_get, _thostmduserapi.CThostFtdcSyncingInstrumentTradingRightField_reserve1_set, doc=r"""保留的无效字段""")
    InvestorRange: "TThostFtdcInvestorRangeType" = property(_thostmduserapi.CThostFtdcSyncingInstrumentTradingRightField_InvestorRange_get, _thostmduserapi.CThostFtdcSyncingInstrumentTradingRightField_InvestorRange_set, doc=r"""投资者范围""")
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcSyncingInstrumentTradingRightField_BrokerID_get, _thostmduserapi.CThostFtdcSyncingInstrumentTradingRightField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "TThostFtdcInvestorIDType" = property(_thostmduserapi.CThostFtdcSyncingInstrumentTradingRightField_InvestorID_get, _thostmduserapi.CThostFtdcSyncingInstrumentTradingRightField_InvestorID_set, doc=r"""投资者代码""")
    TradingRight: "TThostFtdcTradingRightType" = property(_thostmduserapi.CThostFtdcSyncingInstrumentTradingRightField_TradingRight_get, _thostmduserapi.CThostFtdcSyncingInstrumentTradingRightField_TradingRight_set, doc=r"""交易权限""")
    InstrumentID: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcSyncingInstrumentTradingRightField_InstrumentID_get, _thostmduserapi.CThostFtdcSyncingInstrumentTradingRightField_InstrumentID_set, doc=r"""合约代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcSyncingInstrumentTradingRightField_swiginit(self, _thostmduserapi.new_CThostFtdcSyncingInstrumentTradingRightField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcSyncingInstrumentTradingRightField

# Register CThostFtdcSyncingInstrumentTradingRightField in _thostmduserapi:
_thostmduserapi.CThostFtdcSyncingInstrumentTradingRightField_swigregister(CThostFtdcSyncingInstrumentTradingRightField)
class CThostFtdcQryOrderField(object):
    r"""查询报单"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcQryOrderField_BrokerID_get, _thostmduserapi.CThostFtdcQryOrderField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "TThostFtdcInvestorIDType" = property(_thostmduserapi.CThostFtdcQryOrderField_InvestorID_get, _thostmduserapi.CThostFtdcQryOrderField_InvestorID_set, doc=r"""投资者代码""")
    reserve1: "TThostFtdcOldInstrumentIDType" = property(_thostmduserapi.CThostFtdcQryOrderField_reserve1_get, _thostmduserapi.CThostFtdcQryOrderField_reserve1_set, doc=r"""保留的无效字段""")
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcQryOrderField_ExchangeID_get, _thostmduserapi.CThostFtdcQryOrderField_ExchangeID_set, doc=r"""交易所代码""")
    OrderSysID: "TThostFtdcOrderSysIDType" = property(_thostmduserapi.CThostFtdcQryOrderField_OrderSysID_get, _thostmduserapi.CThostFtdcQryOrderField_OrderSysID_set, doc=r"""报单编号""")
    InsertTimeStart: "TThostFtdcTimeType" = property(_thostmduserapi.CThostFtdcQryOrderField_InsertTimeStart_get, _thostmduserapi.CThostFtdcQryOrderField_InsertTimeStart_set, doc=r"""开始时间""")
    InsertTimeEnd: "TThostFtdcTimeType" = property(_thostmduserapi.CThostFtdcQryOrderField_InsertTimeEnd_get, _thostmduserapi.CThostFtdcQryOrderField_InsertTimeEnd_set, doc=r"""结束时间""")
    InvestUnitID: "TThostFtdcInvestUnitIDType" = property(_thostmduserapi.CThostFtdcQryOrderField_InvestUnitID_get, _thostmduserapi.CThostFtdcQryOrderField_InvestUnitID_set, doc=r"""投资单元代码""")
    InstrumentID: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcQryOrderField_InstrumentID_get, _thostmduserapi.CThostFtdcQryOrderField_InstrumentID_set, doc=r"""合约代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcQryOrderField_swiginit(self, _thostmduserapi.new_CThostFtdcQryOrderField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcQryOrderField

# Register CThostFtdcQryOrderField in _thostmduserapi:
_thostmduserapi.CThostFtdcQryOrderField_swigregister(CThostFtdcQryOrderField)
class CThostFtdcQryTradeField(object):
    r"""查询成交"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcQryTradeField_BrokerID_get, _thostmduserapi.CThostFtdcQryTradeField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "TThostFtdcInvestorIDType" = property(_thostmduserapi.CThostFtdcQryTradeField_InvestorID_get, _thostmduserapi.CThostFtdcQryTradeField_InvestorID_set, doc=r"""投资者代码""")
    reserve1: "TThostFtdcOldInstrumentIDType" = property(_thostmduserapi.CThostFtdcQryTradeField_reserve1_get, _thostmduserapi.CThostFtdcQryTradeField_reserve1_set, doc=r"""保留的无效字段""")
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcQryTradeField_ExchangeID_get, _thostmduserapi.CThostFtdcQryTradeField_ExchangeID_set, doc=r"""交易所代码""")
    TradeID: "TThostFtdcTradeIDType" = property(_thostmduserapi.CThostFtdcQryTradeField_TradeID_get, _thostmduserapi.CThostFtdcQryTradeField_TradeID_set, doc=r"""成交编号""")
    TradeTimeStart: "TThostFtdcTimeType" = property(_thostmduserapi.CThostFtdcQryTradeField_TradeTimeStart_get, _thostmduserapi.CThostFtdcQryTradeField_TradeTimeStart_set, doc=r"""开始时间""")
    TradeTimeEnd: "TThostFtdcTimeType" = property(_thostmduserapi.CThostFtdcQryTradeField_TradeTimeEnd_get, _thostmduserapi.CThostFtdcQryTradeField_TradeTimeEnd_set, doc=r"""结束时间""")
    InvestUnitID: "TThostFtdcInvestUnitIDType" = property(_thostmduserapi.CThostFtdcQryTradeField_InvestUnitID_get, _thostmduserapi.CThostFtdcQryTradeField_InvestUnitID_set, doc=r"""投资单元代码""")
    InstrumentID: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcQryTradeField_InstrumentID_get, _thostmduserapi.CThostFtdcQryTradeField_InstrumentID_set, doc=r"""合约代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcQryTradeField_swiginit(self, _thostmduserapi.new_CThostFtdcQryTradeField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcQryTradeField

# Register CThostFtdcQryTradeField in _thostmduserapi:
_thostmduserapi.CThostFtdcQryTradeField_swigregister(CThostFtdcQryTradeField)
class CThostFtdcQryInvestorPositionField(object):
    r"""查询投资者持仓"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcQryInvestorPositionField_BrokerID_get, _thostmduserapi.CThostFtdcQryInvestorPositionField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "TThostFtdcInvestorIDType" = property(_thostmduserapi.CThostFtdcQryInvestorPositionField_InvestorID_get, _thostmduserapi.CThostFtdcQryInvestorPositionField_InvestorID_set, doc=r"""投资者代码""")
    reserve1: "TThostFtdcOldInstrumentIDType" = property(_thostmduserapi.CThostFtdcQryInvestorPositionField_reserve1_get, _thostmduserapi.CThostFtdcQryInvestorPositionField_reserve1_set, doc=r"""保留的无效字段""")
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcQryInvestorPositionField_ExchangeID_get, _thostmduserapi.CThostFtdcQryInvestorPositionField_ExchangeID_set, doc=r"""交易所代码""")
    InvestUnitID: "TThostFtdcInvestUnitIDType" = property(_thostmduserapi.CThostFtdcQryInvestorPositionField_InvestUnitID_get, _thostmduserapi.CThostFtdcQryInvestorPositionField_InvestUnitID_set, doc=r"""投资单元代码""")
    InstrumentID: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcQryInvestorPositionField_InstrumentID_get, _thostmduserapi.CThostFtdcQryInvestorPositionField_InstrumentID_set, doc=r"""合约代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcQryInvestorPositionField_swiginit(self, _thostmduserapi.new_CThostFtdcQryInvestorPositionField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcQryInvestorPositionField

# Register CThostFtdcQryInvestorPositionField in _thostmduserapi:
_thostmduserapi.CThostFtdcQryInvestorPositionField_swigregister(CThostFtdcQryInvestorPositionField)
class CThostFtdcQryTradingAccountField(object):
    r"""查询资金账户"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcQryTradingAccountField_BrokerID_get, _thostmduserapi.CThostFtdcQryTradingAccountField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "TThostFtdcInvestorIDType" = property(_thostmduserapi.CThostFtdcQryTradingAccountField_InvestorID_get, _thostmduserapi.CThostFtdcQryTradingAccountField_InvestorID_set, doc=r"""投资者代码""")
    CurrencyID: "TThostFtdcCurrencyIDType" = property(_thostmduserapi.CThostFtdcQryTradingAccountField_CurrencyID_get, _thostmduserapi.CThostFtdcQryTradingAccountField_CurrencyID_set, doc=r"""币种代码""")
    BizType: "TThostFtdcBizTypeType" = property(_thostmduserapi.CThostFtdcQryTradingAccountField_BizType_get, _thostmduserapi.CThostFtdcQryTradingAccountField_BizType_set, doc=r"""业务类型""")
    AccountID: "TThostFtdcAccountIDType" = property(_thostmduserapi.CThostFtdcQryTradingAccountField_AccountID_get, _thostmduserapi.CThostFtdcQryTradingAccountField_AccountID_set, doc=r"""投资者帐号""")

    def __init__(self):
        _thostmduserapi.CThostFtdcQryTradingAccountField_swiginit(self, _thostmduserapi.new_CThostFtdcQryTradingAccountField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcQryTradingAccountField

# Register CThostFtdcQryTradingAccountField in _thostmduserapi:
_thostmduserapi.CThostFtdcQryTradingAccountField_swigregister(CThostFtdcQryTradingAccountField)
class CThostFtdcQryInvestorField(object):
    r"""查询投资者"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcQryInvestorField_BrokerID_get, _thostmduserapi.CThostFtdcQryInvestorField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "TThostFtdcInvestorIDType" = property(_thostmduserapi.CThostFtdcQryInvestorField_InvestorID_get, _thostmduserapi.CThostFtdcQryInvestorField_InvestorID_set, doc=r"""投资者代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcQryInvestorField_swiginit(self, _thostmduserapi.new_CThostFtdcQryInvestorField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcQryInvestorField

# Register CThostFtdcQryInvestorField in _thostmduserapi:
_thostmduserapi.CThostFtdcQryInvestorField_swigregister(CThostFtdcQryInvestorField)
class CThostFtdcQryTradingCodeField(object):
    r"""查询交易编码"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcQryTradingCodeField_BrokerID_get, _thostmduserapi.CThostFtdcQryTradingCodeField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "TThostFtdcInvestorIDType" = property(_thostmduserapi.CThostFtdcQryTradingCodeField_InvestorID_get, _thostmduserapi.CThostFtdcQryTradingCodeField_InvestorID_set, doc=r"""投资者代码""")
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcQryTradingCodeField_ExchangeID_get, _thostmduserapi.CThostFtdcQryTradingCodeField_ExchangeID_set, doc=r"""交易所代码""")
    ClientID: "TThostFtdcClientIDType" = property(_thostmduserapi.CThostFtdcQryTradingCodeField_ClientID_get, _thostmduserapi.CThostFtdcQryTradingCodeField_ClientID_set, doc=r"""客户代码""")
    ClientIDType: "TThostFtdcClientIDTypeType" = property(_thostmduserapi.CThostFtdcQryTradingCodeField_ClientIDType_get, _thostmduserapi.CThostFtdcQryTradingCodeField_ClientIDType_set, doc=r"""交易编码类型""")
    InvestUnitID: "TThostFtdcInvestUnitIDType" = property(_thostmduserapi.CThostFtdcQryTradingCodeField_InvestUnitID_get, _thostmduserapi.CThostFtdcQryTradingCodeField_InvestUnitID_set, doc=r"""投资单元代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcQryTradingCodeField_swiginit(self, _thostmduserapi.new_CThostFtdcQryTradingCodeField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcQryTradingCodeField

# Register CThostFtdcQryTradingCodeField in _thostmduserapi:
_thostmduserapi.CThostFtdcQryTradingCodeField_swigregister(CThostFtdcQryTradingCodeField)
class CThostFtdcQryInvestorGroupField(object):
    r"""查询投资者组"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcQryInvestorGroupField_BrokerID_get, _thostmduserapi.CThostFtdcQryInvestorGroupField_BrokerID_set, doc=r"""经纪公司代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcQryInvestorGroupField_swiginit(self, _thostmduserapi.new_CThostFtdcQryInvestorGroupField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcQryInvestorGroupField

# Register CThostFtdcQryInvestorGroupField in _thostmduserapi:
_thostmduserapi.CThostFtdcQryInvestorGroupField_swigregister(CThostFtdcQryInvestorGroupField)
class CThostFtdcQryInstrumentMarginRateField(object):
    r"""查询合约保证金率"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcQryInstrumentMarginRateField_BrokerID_get, _thostmduserapi.CThostFtdcQryInstrumentMarginRateField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "TThostFtdcInvestorIDType" = property(_thostmduserapi.CThostFtdcQryInstrumentMarginRateField_InvestorID_get, _thostmduserapi.CThostFtdcQryInstrumentMarginRateField_InvestorID_set, doc=r"""投资者代码""")
    reserve1: "TThostFtdcOldInstrumentIDType" = property(_thostmduserapi.CThostFtdcQryInstrumentMarginRateField_reserve1_get, _thostmduserapi.CThostFtdcQryInstrumentMarginRateField_reserve1_set, doc=r"""保留的无效字段""")
    HedgeFlag: "TThostFtdcHedgeFlagType" = property(_thostmduserapi.CThostFtdcQryInstrumentMarginRateField_HedgeFlag_get, _thostmduserapi.CThostFtdcQryInstrumentMarginRateField_HedgeFlag_set, doc=r"""投机套保标志""")
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcQryInstrumentMarginRateField_ExchangeID_get, _thostmduserapi.CThostFtdcQryInstrumentMarginRateField_ExchangeID_set, doc=r"""交易所代码""")
    InvestUnitID: "TThostFtdcInvestUnitIDType" = property(_thostmduserapi.CThostFtdcQryInstrumentMarginRateField_InvestUnitID_get, _thostmduserapi.CThostFtdcQryInstrumentMarginRateField_InvestUnitID_set, doc=r"""投资单元代码""")
    InstrumentID: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcQryInstrumentMarginRateField_InstrumentID_get, _thostmduserapi.CThostFtdcQryInstrumentMarginRateField_InstrumentID_set, doc=r"""合约代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcQryInstrumentMarginRateField_swiginit(self, _thostmduserapi.new_CThostFtdcQryInstrumentMarginRateField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcQryInstrumentMarginRateField

# Register CThostFtdcQryInstrumentMarginRateField in _thostmduserapi:
_thostmduserapi.CThostFtdcQryInstrumentMarginRateField_swigregister(CThostFtdcQryInstrumentMarginRateField)
class CThostFtdcQryInstrumentCommissionRateField(object):
    r"""查询手续费率"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcQryInstrumentCommissionRateField_BrokerID_get, _thostmduserapi.CThostFtdcQryInstrumentCommissionRateField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "TThostFtdcInvestorIDType" = property(_thostmduserapi.CThostFtdcQryInstrumentCommissionRateField_InvestorID_get, _thostmduserapi.CThostFtdcQryInstrumentCommissionRateField_InvestorID_set, doc=r"""投资者代码""")
    reserve1: "TThostFtdcOldInstrumentIDType" = property(_thostmduserapi.CThostFtdcQryInstrumentCommissionRateField_reserve1_get, _thostmduserapi.CThostFtdcQryInstrumentCommissionRateField_reserve1_set, doc=r"""保留的无效字段""")
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcQryInstrumentCommissionRateField_ExchangeID_get, _thostmduserapi.CThostFtdcQryInstrumentCommissionRateField_ExchangeID_set, doc=r"""交易所代码""")
    InvestUnitID: "TThostFtdcInvestUnitIDType" = property(_thostmduserapi.CThostFtdcQryInstrumentCommissionRateField_InvestUnitID_get, _thostmduserapi.CThostFtdcQryInstrumentCommissionRateField_InvestUnitID_set, doc=r"""投资单元代码""")
    InstrumentID: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcQryInstrumentCommissionRateField_InstrumentID_get, _thostmduserapi.CThostFtdcQryInstrumentCommissionRateField_InstrumentID_set, doc=r"""合约代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcQryInstrumentCommissionRateField_swiginit(self, _thostmduserapi.new_CThostFtdcQryInstrumentCommissionRateField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcQryInstrumentCommissionRateField

# Register CThostFtdcQryInstrumentCommissionRateField in _thostmduserapi:
_thostmduserapi.CThostFtdcQryInstrumentCommissionRateField_swigregister(CThostFtdcQryInstrumentCommissionRateField)
class CThostFtdcQryInstrumentTradingRightField(object):
    r"""查询合约交易权限"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcQryInstrumentTradingRightField_BrokerID_get, _thostmduserapi.CThostFtdcQryInstrumentTradingRightField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "TThostFtdcInvestorIDType" = property(_thostmduserapi.CThostFtdcQryInstrumentTradingRightField_InvestorID_get, _thostmduserapi.CThostFtdcQryInstrumentTradingRightField_InvestorID_set, doc=r"""投资者代码""")
    reserve1: "TThostFtdcOldInstrumentIDType" = property(_thostmduserapi.CThostFtdcQryInstrumentTradingRightField_reserve1_get, _thostmduserapi.CThostFtdcQryInstrumentTradingRightField_reserve1_set, doc=r"""保留的无效字段""")
    InstrumentID: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcQryInstrumentTradingRightField_InstrumentID_get, _thostmduserapi.CThostFtdcQryInstrumentTradingRightField_InstrumentID_set, doc=r"""合约代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcQryInstrumentTradingRightField_swiginit(self, _thostmduserapi.new_CThostFtdcQryInstrumentTradingRightField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcQryInstrumentTradingRightField

# Register CThostFtdcQryInstrumentTradingRightField in _thostmduserapi:
_thostmduserapi.CThostFtdcQryInstrumentTradingRightField_swigregister(CThostFtdcQryInstrumentTradingRightField)
class CThostFtdcQryBrokerField(object):
    r"""查询经纪公司"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcQryBrokerField_BrokerID_get, _thostmduserapi.CThostFtdcQryBrokerField_BrokerID_set, doc=r"""经纪公司代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcQryBrokerField_swiginit(self, _thostmduserapi.new_CThostFtdcQryBrokerField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcQryBrokerField

# Register CThostFtdcQryBrokerField in _thostmduserapi:
_thostmduserapi.CThostFtdcQryBrokerField_swigregister(CThostFtdcQryBrokerField)
class CThostFtdcQryTraderField(object):
    r"""查询交易员"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcQryTraderField_ExchangeID_get, _thostmduserapi.CThostFtdcQryTraderField_ExchangeID_set, doc=r"""交易所代码""")
    ParticipantID: "TThostFtdcParticipantIDType" = property(_thostmduserapi.CThostFtdcQryTraderField_ParticipantID_get, _thostmduserapi.CThostFtdcQryTraderField_ParticipantID_set, doc=r"""会员代码""")
    TraderID: "TThostFtdcTraderIDType" = property(_thostmduserapi.CThostFtdcQryTraderField_TraderID_get, _thostmduserapi.CThostFtdcQryTraderField_TraderID_set, doc=r"""交易所交易员代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcQryTraderField_swiginit(self, _thostmduserapi.new_CThostFtdcQryTraderField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcQryTraderField

# Register CThostFtdcQryTraderField in _thostmduserapi:
_thostmduserapi.CThostFtdcQryTraderField_swigregister(CThostFtdcQryTraderField)
class CThostFtdcQrySuperUserFunctionField(object):
    r"""查询管理用户功能权限"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    UserID: "TThostFtdcUserIDType" = property(_thostmduserapi.CThostFtdcQrySuperUserFunctionField_UserID_get, _thostmduserapi.CThostFtdcQrySuperUserFunctionField_UserID_set, doc=r"""用户代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcQrySuperUserFunctionField_swiginit(self, _thostmduserapi.new_CThostFtdcQrySuperUserFunctionField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcQrySuperUserFunctionField

# Register CThostFtdcQrySuperUserFunctionField in _thostmduserapi:
_thostmduserapi.CThostFtdcQrySuperUserFunctionField_swigregister(CThostFtdcQrySuperUserFunctionField)
class CThostFtdcQryUserSessionField(object):
    r"""查询用户会话"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    FrontID: "TThostFtdcFrontIDType" = property(_thostmduserapi.CThostFtdcQryUserSessionField_FrontID_get, _thostmduserapi.CThostFtdcQryUserSessionField_FrontID_set, doc=r"""前置编号""")
    SessionID: "TThostFtdcSessionIDType" = property(_thostmduserapi.CThostFtdcQryUserSessionField_SessionID_get, _thostmduserapi.CThostFtdcQryUserSessionField_SessionID_set, doc=r"""会话编号""")
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcQryUserSessionField_BrokerID_get, _thostmduserapi.CThostFtdcQryUserSessionField_BrokerID_set, doc=r"""经纪公司代码""")
    UserID: "TThostFtdcUserIDType" = property(_thostmduserapi.CThostFtdcQryUserSessionField_UserID_get, _thostmduserapi.CThostFtdcQryUserSessionField_UserID_set, doc=r"""用户代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcQryUserSessionField_swiginit(self, _thostmduserapi.new_CThostFtdcQryUserSessionField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcQryUserSessionField

# Register CThostFtdcQryUserSessionField in _thostmduserapi:
_thostmduserapi.CThostFtdcQryUserSessionField_swigregister(CThostFtdcQryUserSessionField)
class CThostFtdcQryPartBrokerField(object):
    r"""查询经纪公司会员代码"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcQryPartBrokerField_ExchangeID_get, _thostmduserapi.CThostFtdcQryPartBrokerField_ExchangeID_set, doc=r"""交易所代码""")
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcQryPartBrokerField_BrokerID_get, _thostmduserapi.CThostFtdcQryPartBrokerField_BrokerID_set, doc=r"""经纪公司代码""")
    ParticipantID: "TThostFtdcParticipantIDType" = property(_thostmduserapi.CThostFtdcQryPartBrokerField_ParticipantID_get, _thostmduserapi.CThostFtdcQryPartBrokerField_ParticipantID_set, doc=r"""会员代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcQryPartBrokerField_swiginit(self, _thostmduserapi.new_CThostFtdcQryPartBrokerField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcQryPartBrokerField

# Register CThostFtdcQryPartBrokerField in _thostmduserapi:
_thostmduserapi.CThostFtdcQryPartBrokerField_swigregister(CThostFtdcQryPartBrokerField)
class CThostFtdcQryFrontStatusField(object):
    r"""查询前置状态"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    FrontID: "TThostFtdcFrontIDType" = property(_thostmduserapi.CThostFtdcQryFrontStatusField_FrontID_get, _thostmduserapi.CThostFtdcQryFrontStatusField_FrontID_set, doc=r"""前置编号""")

    def __init__(self):
        _thostmduserapi.CThostFtdcQryFrontStatusField_swiginit(self, _thostmduserapi.new_CThostFtdcQryFrontStatusField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcQryFrontStatusField

# Register CThostFtdcQryFrontStatusField in _thostmduserapi:
_thostmduserapi.CThostFtdcQryFrontStatusField_swigregister(CThostFtdcQryFrontStatusField)
class CThostFtdcQryExchangeOrderField(object):
    r"""查询交易所报单"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ParticipantID: "TThostFtdcParticipantIDType" = property(_thostmduserapi.CThostFtdcQryExchangeOrderField_ParticipantID_get, _thostmduserapi.CThostFtdcQryExchangeOrderField_ParticipantID_set, doc=r"""会员代码""")
    ClientID: "TThostFtdcClientIDType" = property(_thostmduserapi.CThostFtdcQryExchangeOrderField_ClientID_get, _thostmduserapi.CThostFtdcQryExchangeOrderField_ClientID_set, doc=r"""客户代码""")
    reserve1: "TThostFtdcOldExchangeInstIDType" = property(_thostmduserapi.CThostFtdcQryExchangeOrderField_reserve1_get, _thostmduserapi.CThostFtdcQryExchangeOrderField_reserve1_set, doc=r"""保留的无效字段""")
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcQryExchangeOrderField_ExchangeID_get, _thostmduserapi.CThostFtdcQryExchangeOrderField_ExchangeID_set, doc=r"""交易所代码""")
    TraderID: "TThostFtdcTraderIDType" = property(_thostmduserapi.CThostFtdcQryExchangeOrderField_TraderID_get, _thostmduserapi.CThostFtdcQryExchangeOrderField_TraderID_set, doc=r"""交易所交易员代码""")
    ExchangeInstID: "TThostFtdcExchangeInstIDType" = property(_thostmduserapi.CThostFtdcQryExchangeOrderField_ExchangeInstID_get, _thostmduserapi.CThostFtdcQryExchangeOrderField_ExchangeInstID_set, doc=r"""合约在交易所的代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcQryExchangeOrderField_swiginit(self, _thostmduserapi.new_CThostFtdcQryExchangeOrderField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcQryExchangeOrderField

# Register CThostFtdcQryExchangeOrderField in _thostmduserapi:
_thostmduserapi.CThostFtdcQryExchangeOrderField_swigregister(CThostFtdcQryExchangeOrderField)
class CThostFtdcQryOrderActionField(object):
    r"""查询报单操作"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcQryOrderActionField_BrokerID_get, _thostmduserapi.CThostFtdcQryOrderActionField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "TThostFtdcInvestorIDType" = property(_thostmduserapi.CThostFtdcQryOrderActionField_InvestorID_get, _thostmduserapi.CThostFtdcQryOrderActionField_InvestorID_set, doc=r"""投资者代码""")
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcQryOrderActionField_ExchangeID_get, _thostmduserapi.CThostFtdcQryOrderActionField_ExchangeID_set, doc=r"""交易所代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcQryOrderActionField_swiginit(self, _thostmduserapi.new_CThostFtdcQryOrderActionField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcQryOrderActionField

# Register CThostFtdcQryOrderActionField in _thostmduserapi:
_thostmduserapi.CThostFtdcQryOrderActionField_swigregister(CThostFtdcQryOrderActionField)
class CThostFtdcQryExchangeOrderActionField(object):
    r"""查询交易所报单操作"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ParticipantID: "TThostFtdcParticipantIDType" = property(_thostmduserapi.CThostFtdcQryExchangeOrderActionField_ParticipantID_get, _thostmduserapi.CThostFtdcQryExchangeOrderActionField_ParticipantID_set, doc=r"""会员代码""")
    ClientID: "TThostFtdcClientIDType" = property(_thostmduserapi.CThostFtdcQryExchangeOrderActionField_ClientID_get, _thostmduserapi.CThostFtdcQryExchangeOrderActionField_ClientID_set, doc=r"""客户代码""")
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcQryExchangeOrderActionField_ExchangeID_get, _thostmduserapi.CThostFtdcQryExchangeOrderActionField_ExchangeID_set, doc=r"""交易所代码""")
    TraderID: "TThostFtdcTraderIDType" = property(_thostmduserapi.CThostFtdcQryExchangeOrderActionField_TraderID_get, _thostmduserapi.CThostFtdcQryExchangeOrderActionField_TraderID_set, doc=r"""交易所交易员代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcQryExchangeOrderActionField_swiginit(self, _thostmduserapi.new_CThostFtdcQryExchangeOrderActionField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcQryExchangeOrderActionField

# Register CThostFtdcQryExchangeOrderActionField in _thostmduserapi:
_thostmduserapi.CThostFtdcQryExchangeOrderActionField_swigregister(CThostFtdcQryExchangeOrderActionField)
class CThostFtdcQrySuperUserField(object):
    r"""查询管理用户"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    UserID: "TThostFtdcUserIDType" = property(_thostmduserapi.CThostFtdcQrySuperUserField_UserID_get, _thostmduserapi.CThostFtdcQrySuperUserField_UserID_set, doc=r"""用户代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcQrySuperUserField_swiginit(self, _thostmduserapi.new_CThostFtdcQrySuperUserField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcQrySuperUserField

# Register CThostFtdcQrySuperUserField in _thostmduserapi:
_thostmduserapi.CThostFtdcQrySuperUserField_swigregister(CThostFtdcQrySuperUserField)
class CThostFtdcQryExchangeField(object):
    r"""查询交易所"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcQryExchangeField_ExchangeID_get, _thostmduserapi.CThostFtdcQryExchangeField_ExchangeID_set, doc=r"""交易所代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcQryExchangeField_swiginit(self, _thostmduserapi.new_CThostFtdcQryExchangeField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcQryExchangeField

# Register CThostFtdcQryExchangeField in _thostmduserapi:
_thostmduserapi.CThostFtdcQryExchangeField_swigregister(CThostFtdcQryExchangeField)
class CThostFtdcQryProductField(object):
    r"""查询产品"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    reserve1: "TThostFtdcOldInstrumentIDType" = property(_thostmduserapi.CThostFtdcQryProductField_reserve1_get, _thostmduserapi.CThostFtdcQryProductField_reserve1_set, doc=r"""保留的无效字段""")
    ProductClass: "TThostFtdcProductClassType" = property(_thostmduserapi.CThostFtdcQryProductField_ProductClass_get, _thostmduserapi.CThostFtdcQryProductField_ProductClass_set, doc=r"""产品类型""")
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcQryProductField_ExchangeID_get, _thostmduserapi.CThostFtdcQryProductField_ExchangeID_set, doc=r"""交易所代码""")
    ProductID: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcQryProductField_ProductID_get, _thostmduserapi.CThostFtdcQryProductField_ProductID_set, doc=r"""产品代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcQryProductField_swiginit(self, _thostmduserapi.new_CThostFtdcQryProductField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcQryProductField

# Register CThostFtdcQryProductField in _thostmduserapi:
_thostmduserapi.CThostFtdcQryProductField_swigregister(CThostFtdcQryProductField)
class CThostFtdcQryInstrumentField(object):
    r"""查询合约"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    reserve1: "TThostFtdcOldInstrumentIDType" = property(_thostmduserapi.CThostFtdcQryInstrumentField_reserve1_get, _thostmduserapi.CThostFtdcQryInstrumentField_reserve1_set, doc=r"""保留的无效字段""")
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcQryInstrumentField_ExchangeID_get, _thostmduserapi.CThostFtdcQryInstrumentField_ExchangeID_set, doc=r"""交易所代码""")
    reserve2: "TThostFtdcOldExchangeInstIDType" = property(_thostmduserapi.CThostFtdcQryInstrumentField_reserve2_get, _thostmduserapi.CThostFtdcQryInstrumentField_reserve2_set, doc=r"""保留的无效字段""")
    reserve3: "TThostFtdcOldInstrumentIDType" = property(_thostmduserapi.CThostFtdcQryInstrumentField_reserve3_get, _thostmduserapi.CThostFtdcQryInstrumentField_reserve3_set, doc=r"""保留的无效字段""")
    InstrumentID: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcQryInstrumentField_InstrumentID_get, _thostmduserapi.CThostFtdcQryInstrumentField_InstrumentID_set, doc=r"""合约代码""")
    ExchangeInstID: "TThostFtdcExchangeInstIDType" = property(_thostmduserapi.CThostFtdcQryInstrumentField_ExchangeInstID_get, _thostmduserapi.CThostFtdcQryInstrumentField_ExchangeInstID_set, doc=r"""合约在交易所的代码""")
    ProductID: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcQryInstrumentField_ProductID_get, _thostmduserapi.CThostFtdcQryInstrumentField_ProductID_set, doc=r"""产品代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcQryInstrumentField_swiginit(self, _thostmduserapi.new_CThostFtdcQryInstrumentField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcQryInstrumentField

# Register CThostFtdcQryInstrumentField in _thostmduserapi:
_thostmduserapi.CThostFtdcQryInstrumentField_swigregister(CThostFtdcQryInstrumentField)
class CThostFtdcQryDepthMarketDataField(object):
    r"""查询行情"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    reserve1: "TThostFtdcOldInstrumentIDType" = property(_thostmduserapi.CThostFtdcQryDepthMarketDataField_reserve1_get, _thostmduserapi.CThostFtdcQryDepthMarketDataField_reserve1_set, doc=r"""保留的无效字段""")
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcQryDepthMarketDataField_ExchangeID_get, _thostmduserapi.CThostFtdcQryDepthMarketDataField_ExchangeID_set, doc=r"""交易所代码""")
    InstrumentID: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcQryDepthMarketDataField_InstrumentID_get, _thostmduserapi.CThostFtdcQryDepthMarketDataField_InstrumentID_set, doc=r"""合约代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcQryDepthMarketDataField_swiginit(self, _thostmduserapi.new_CThostFtdcQryDepthMarketDataField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcQryDepthMarketDataField

# Register CThostFtdcQryDepthMarketDataField in _thostmduserapi:
_thostmduserapi.CThostFtdcQryDepthMarketDataField_swigregister(CThostFtdcQryDepthMarketDataField)
class CThostFtdcQryBrokerUserField(object):
    r"""查询经纪公司用户"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcQryBrokerUserField_BrokerID_get, _thostmduserapi.CThostFtdcQryBrokerUserField_BrokerID_set, doc=r"""经纪公司代码""")
    UserID: "TThostFtdcUserIDType" = property(_thostmduserapi.CThostFtdcQryBrokerUserField_UserID_get, _thostmduserapi.CThostFtdcQryBrokerUserField_UserID_set, doc=r"""用户代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcQryBrokerUserField_swiginit(self, _thostmduserapi.new_CThostFtdcQryBrokerUserField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcQryBrokerUserField

# Register CThostFtdcQryBrokerUserField in _thostmduserapi:
_thostmduserapi.CThostFtdcQryBrokerUserField_swigregister(CThostFtdcQryBrokerUserField)
class CThostFtdcQryBrokerUserFunctionField(object):
    r"""查询经纪公司用户权限"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcQryBrokerUserFunctionField_BrokerID_get, _thostmduserapi.CThostFtdcQryBrokerUserFunctionField_BrokerID_set, doc=r"""经纪公司代码""")
    UserID: "TThostFtdcUserIDType" = property(_thostmduserapi.CThostFtdcQryBrokerUserFunctionField_UserID_get, _thostmduserapi.CThostFtdcQryBrokerUserFunctionField_UserID_set, doc=r"""用户代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcQryBrokerUserFunctionField_swiginit(self, _thostmduserapi.new_CThostFtdcQryBrokerUserFunctionField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcQryBrokerUserFunctionField

# Register CThostFtdcQryBrokerUserFunctionField in _thostmduserapi:
_thostmduserapi.CThostFtdcQryBrokerUserFunctionField_swigregister(CThostFtdcQryBrokerUserFunctionField)
class CThostFtdcQryTraderOfferField(object):
    r"""查询交易员报盘机"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcQryTraderOfferField_ExchangeID_get, _thostmduserapi.CThostFtdcQryTraderOfferField_ExchangeID_set, doc=r"""交易所代码""")
    ParticipantID: "TThostFtdcParticipantIDType" = property(_thostmduserapi.CThostFtdcQryTraderOfferField_ParticipantID_get, _thostmduserapi.CThostFtdcQryTraderOfferField_ParticipantID_set, doc=r"""会员代码""")
    TraderID: "TThostFtdcTraderIDType" = property(_thostmduserapi.CThostFtdcQryTraderOfferField_TraderID_get, _thostmduserapi.CThostFtdcQryTraderOfferField_TraderID_set, doc=r"""交易所交易员代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcQryTraderOfferField_swiginit(self, _thostmduserapi.new_CThostFtdcQryTraderOfferField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcQryTraderOfferField

# Register CThostFtdcQryTraderOfferField in _thostmduserapi:
_thostmduserapi.CThostFtdcQryTraderOfferField_swigregister(CThostFtdcQryTraderOfferField)
class CThostFtdcQrySyncDepositField(object):
    r"""查询出入金流水"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcQrySyncDepositField_BrokerID_get, _thostmduserapi.CThostFtdcQrySyncDepositField_BrokerID_set, doc=r"""经纪公司代码""")
    DepositSeqNo: "TThostFtdcDepositSeqNoType" = property(_thostmduserapi.CThostFtdcQrySyncDepositField_DepositSeqNo_get, _thostmduserapi.CThostFtdcQrySyncDepositField_DepositSeqNo_set, doc=r"""出入金流水号""")

    def __init__(self):
        _thostmduserapi.CThostFtdcQrySyncDepositField_swiginit(self, _thostmduserapi.new_CThostFtdcQrySyncDepositField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcQrySyncDepositField

# Register CThostFtdcQrySyncDepositField in _thostmduserapi:
_thostmduserapi.CThostFtdcQrySyncDepositField_swigregister(CThostFtdcQrySyncDepositField)
class CThostFtdcQrySettlementInfoField(object):
    r"""查询投资者结算结果"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcQrySettlementInfoField_BrokerID_get, _thostmduserapi.CThostFtdcQrySettlementInfoField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "TThostFtdcInvestorIDType" = property(_thostmduserapi.CThostFtdcQrySettlementInfoField_InvestorID_get, _thostmduserapi.CThostFtdcQrySettlementInfoField_InvestorID_set, doc=r"""投资者代码""")
    TradingDay: "TThostFtdcDateType" = property(_thostmduserapi.CThostFtdcQrySettlementInfoField_TradingDay_get, _thostmduserapi.CThostFtdcQrySettlementInfoField_TradingDay_set, doc=r"""交易日""")
    AccountID: "TThostFtdcAccountIDType" = property(_thostmduserapi.CThostFtdcQrySettlementInfoField_AccountID_get, _thostmduserapi.CThostFtdcQrySettlementInfoField_AccountID_set, doc=r"""投资者帐号""")
    CurrencyID: "TThostFtdcCurrencyIDType" = property(_thostmduserapi.CThostFtdcQrySettlementInfoField_CurrencyID_get, _thostmduserapi.CThostFtdcQrySettlementInfoField_CurrencyID_set, doc=r"""币种代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcQrySettlementInfoField_swiginit(self, _thostmduserapi.new_CThostFtdcQrySettlementInfoField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcQrySettlementInfoField

# Register CThostFtdcQrySettlementInfoField in _thostmduserapi:
_thostmduserapi.CThostFtdcQrySettlementInfoField_swigregister(CThostFtdcQrySettlementInfoField)
class CThostFtdcQryExchangeMarginRateField(object):
    r"""查询交易所保证金率"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcQryExchangeMarginRateField_BrokerID_get, _thostmduserapi.CThostFtdcQryExchangeMarginRateField_BrokerID_set, doc=r"""经纪公司代码""")
    reserve1: "TThostFtdcOldInstrumentIDType" = property(_thostmduserapi.CThostFtdcQryExchangeMarginRateField_reserve1_get, _thostmduserapi.CThostFtdcQryExchangeMarginRateField_reserve1_set, doc=r"""保留的无效字段""")
    HedgeFlag: "TThostFtdcHedgeFlagType" = property(_thostmduserapi.CThostFtdcQryExchangeMarginRateField_HedgeFlag_get, _thostmduserapi.CThostFtdcQryExchangeMarginRateField_HedgeFlag_set, doc=r"""投机套保标志""")
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcQryExchangeMarginRateField_ExchangeID_get, _thostmduserapi.CThostFtdcQryExchangeMarginRateField_ExchangeID_set, doc=r"""交易所代码""")
    InstrumentID: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcQryExchangeMarginRateField_InstrumentID_get, _thostmduserapi.CThostFtdcQryExchangeMarginRateField_InstrumentID_set, doc=r"""合约代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcQryExchangeMarginRateField_swiginit(self, _thostmduserapi.new_CThostFtdcQryExchangeMarginRateField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcQryExchangeMarginRateField

# Register CThostFtdcQryExchangeMarginRateField in _thostmduserapi:
_thostmduserapi.CThostFtdcQryExchangeMarginRateField_swigregister(CThostFtdcQryExchangeMarginRateField)
class CThostFtdcQryExchangeMarginRateAdjustField(object):
    r"""查询交易所调整保证金率"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcQryExchangeMarginRateAdjustField_BrokerID_get, _thostmduserapi.CThostFtdcQryExchangeMarginRateAdjustField_BrokerID_set, doc=r"""经纪公司代码""")
    reserve1: "TThostFtdcOldInstrumentIDType" = property(_thostmduserapi.CThostFtdcQryExchangeMarginRateAdjustField_reserve1_get, _thostmduserapi.CThostFtdcQryExchangeMarginRateAdjustField_reserve1_set, doc=r"""保留的无效字段""")
    HedgeFlag: "TThostFtdcHedgeFlagType" = property(_thostmduserapi.CThostFtdcQryExchangeMarginRateAdjustField_HedgeFlag_get, _thostmduserapi.CThostFtdcQryExchangeMarginRateAdjustField_HedgeFlag_set, doc=r"""投机套保标志""")
    InstrumentID: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcQryExchangeMarginRateAdjustField_InstrumentID_get, _thostmduserapi.CThostFtdcQryExchangeMarginRateAdjustField_InstrumentID_set, doc=r"""合约代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcQryExchangeMarginRateAdjustField_swiginit(self, _thostmduserapi.new_CThostFtdcQryExchangeMarginRateAdjustField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcQryExchangeMarginRateAdjustField

# Register CThostFtdcQryExchangeMarginRateAdjustField in _thostmduserapi:
_thostmduserapi.CThostFtdcQryExchangeMarginRateAdjustField_swigregister(CThostFtdcQryExchangeMarginRateAdjustField)
class CThostFtdcQryExchangeRateField(object):
    r"""查询汇率"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcQryExchangeRateField_BrokerID_get, _thostmduserapi.CThostFtdcQryExchangeRateField_BrokerID_set, doc=r"""经纪公司代码""")
    FromCurrencyID: "TThostFtdcCurrencyIDType" = property(_thostmduserapi.CThostFtdcQryExchangeRateField_FromCurrencyID_get, _thostmduserapi.CThostFtdcQryExchangeRateField_FromCurrencyID_set, doc=r"""源币种""")
    ToCurrencyID: "TThostFtdcCurrencyIDType" = property(_thostmduserapi.CThostFtdcQryExchangeRateField_ToCurrencyID_get, _thostmduserapi.CThostFtdcQryExchangeRateField_ToCurrencyID_set, doc=r"""目标币种""")

    def __init__(self):
        _thostmduserapi.CThostFtdcQryExchangeRateField_swiginit(self, _thostmduserapi.new_CThostFtdcQryExchangeRateField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcQryExchangeRateField

# Register CThostFtdcQryExchangeRateField in _thostmduserapi:
_thostmduserapi.CThostFtdcQryExchangeRateField_swigregister(CThostFtdcQryExchangeRateField)
class CThostFtdcQrySyncFundMortgageField(object):
    r"""查询货币质押流水"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcQrySyncFundMortgageField_BrokerID_get, _thostmduserapi.CThostFtdcQrySyncFundMortgageField_BrokerID_set, doc=r"""经纪公司代码""")
    MortgageSeqNo: "TThostFtdcDepositSeqNoType" = property(_thostmduserapi.CThostFtdcQrySyncFundMortgageField_MortgageSeqNo_get, _thostmduserapi.CThostFtdcQrySyncFundMortgageField_MortgageSeqNo_set, doc=r"""货币质押流水号""")

    def __init__(self):
        _thostmduserapi.CThostFtdcQrySyncFundMortgageField_swiginit(self, _thostmduserapi.new_CThostFtdcQrySyncFundMortgageField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcQrySyncFundMortgageField

# Register CThostFtdcQrySyncFundMortgageField in _thostmduserapi:
_thostmduserapi.CThostFtdcQrySyncFundMortgageField_swigregister(CThostFtdcQrySyncFundMortgageField)
class CThostFtdcQryHisOrderField(object):
    r"""查询报单"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcQryHisOrderField_BrokerID_get, _thostmduserapi.CThostFtdcQryHisOrderField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "TThostFtdcInvestorIDType" = property(_thostmduserapi.CThostFtdcQryHisOrderField_InvestorID_get, _thostmduserapi.CThostFtdcQryHisOrderField_InvestorID_set, doc=r"""投资者代码""")
    reserve1: "TThostFtdcOldInstrumentIDType" = property(_thostmduserapi.CThostFtdcQryHisOrderField_reserve1_get, _thostmduserapi.CThostFtdcQryHisOrderField_reserve1_set, doc=r"""保留的无效字段""")
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcQryHisOrderField_ExchangeID_get, _thostmduserapi.CThostFtdcQryHisOrderField_ExchangeID_set, doc=r"""交易所代码""")
    OrderSysID: "TThostFtdcOrderSysIDType" = property(_thostmduserapi.CThostFtdcQryHisOrderField_OrderSysID_get, _thostmduserapi.CThostFtdcQryHisOrderField_OrderSysID_set, doc=r"""报单编号""")
    InsertTimeStart: "TThostFtdcTimeType" = property(_thostmduserapi.CThostFtdcQryHisOrderField_InsertTimeStart_get, _thostmduserapi.CThostFtdcQryHisOrderField_InsertTimeStart_set, doc=r"""开始时间""")
    InsertTimeEnd: "TThostFtdcTimeType" = property(_thostmduserapi.CThostFtdcQryHisOrderField_InsertTimeEnd_get, _thostmduserapi.CThostFtdcQryHisOrderField_InsertTimeEnd_set, doc=r"""结束时间""")
    TradingDay: "TThostFtdcDateType" = property(_thostmduserapi.CThostFtdcQryHisOrderField_TradingDay_get, _thostmduserapi.CThostFtdcQryHisOrderField_TradingDay_set, doc=r"""交易日""")
    SettlementID: "TThostFtdcSettlementIDType" = property(_thostmduserapi.CThostFtdcQryHisOrderField_SettlementID_get, _thostmduserapi.CThostFtdcQryHisOrderField_SettlementID_set, doc=r"""结算编号""")
    InstrumentID: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcQryHisOrderField_InstrumentID_get, _thostmduserapi.CThostFtdcQryHisOrderField_InstrumentID_set, doc=r"""合约代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcQryHisOrderField_swiginit(self, _thostmduserapi.new_CThostFtdcQryHisOrderField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcQryHisOrderField

# Register CThostFtdcQryHisOrderField in _thostmduserapi:
_thostmduserapi.CThostFtdcQryHisOrderField_swigregister(CThostFtdcQryHisOrderField)
class CThostFtdcOptionInstrMiniMarginField(object):
    r"""当前期权合约最小保证金"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    reserve1: "TThostFtdcOldInstrumentIDType" = property(_thostmduserapi.CThostFtdcOptionInstrMiniMarginField_reserve1_get, _thostmduserapi.CThostFtdcOptionInstrMiniMarginField_reserve1_set, doc=r"""保留的无效字段""")
    InvestorRange: "TThostFtdcInvestorRangeType" = property(_thostmduserapi.CThostFtdcOptionInstrMiniMarginField_InvestorRange_get, _thostmduserapi.CThostFtdcOptionInstrMiniMarginField_InvestorRange_set, doc=r"""投资者范围""")
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcOptionInstrMiniMarginField_BrokerID_get, _thostmduserapi.CThostFtdcOptionInstrMiniMarginField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "TThostFtdcInvestorIDType" = property(_thostmduserapi.CThostFtdcOptionInstrMiniMarginField_InvestorID_get, _thostmduserapi.CThostFtdcOptionInstrMiniMarginField_InvestorID_set, doc=r"""投资者代码""")
    MinMargin: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcOptionInstrMiniMarginField_MinMargin_get, _thostmduserapi.CThostFtdcOptionInstrMiniMarginField_MinMargin_set, doc=r"""单位（手）期权合约最小保证金""")
    ValueMethod: "TThostFtdcValueMethodType" = property(_thostmduserapi.CThostFtdcOptionInstrMiniMarginField_ValueMethod_get, _thostmduserapi.CThostFtdcOptionInstrMiniMarginField_ValueMethod_set, doc=r"""取值方式""")
    IsRelative: "TThostFtdcBoolType" = property(_thostmduserapi.CThostFtdcOptionInstrMiniMarginField_IsRelative_get, _thostmduserapi.CThostFtdcOptionInstrMiniMarginField_IsRelative_set, doc=r"""是否跟随交易所收取""")
    InstrumentID: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcOptionInstrMiniMarginField_InstrumentID_get, _thostmduserapi.CThostFtdcOptionInstrMiniMarginField_InstrumentID_set, doc=r"""合约代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcOptionInstrMiniMarginField_swiginit(self, _thostmduserapi.new_CThostFtdcOptionInstrMiniMarginField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcOptionInstrMiniMarginField

# Register CThostFtdcOptionInstrMiniMarginField in _thostmduserapi:
_thostmduserapi.CThostFtdcOptionInstrMiniMarginField_swigregister(CThostFtdcOptionInstrMiniMarginField)
class CThostFtdcOptionInstrMarginAdjustField(object):
    r"""当前期权合约保证金调整系数"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    reserve1: "TThostFtdcOldInstrumentIDType" = property(_thostmduserapi.CThostFtdcOptionInstrMarginAdjustField_reserve1_get, _thostmduserapi.CThostFtdcOptionInstrMarginAdjustField_reserve1_set, doc=r"""保留的无效字段""")
    InvestorRange: "TThostFtdcInvestorRangeType" = property(_thostmduserapi.CThostFtdcOptionInstrMarginAdjustField_InvestorRange_get, _thostmduserapi.CThostFtdcOptionInstrMarginAdjustField_InvestorRange_set, doc=r"""投资者范围""")
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcOptionInstrMarginAdjustField_BrokerID_get, _thostmduserapi.CThostFtdcOptionInstrMarginAdjustField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "TThostFtdcInvestorIDType" = property(_thostmduserapi.CThostFtdcOptionInstrMarginAdjustField_InvestorID_get, _thostmduserapi.CThostFtdcOptionInstrMarginAdjustField_InvestorID_set, doc=r"""投资者代码""")
    SShortMarginRatioByMoney: "TThostFtdcRatioType" = property(_thostmduserapi.CThostFtdcOptionInstrMarginAdjustField_SShortMarginRatioByMoney_get, _thostmduserapi.CThostFtdcOptionInstrMarginAdjustField_SShortMarginRatioByMoney_set, doc=r"""投机空头保证金调整系数""")
    SShortMarginRatioByVolume: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcOptionInstrMarginAdjustField_SShortMarginRatioByVolume_get, _thostmduserapi.CThostFtdcOptionInstrMarginAdjustField_SShortMarginRatioByVolume_set, doc=r"""投机空头保证金调整系数""")
    HShortMarginRatioByMoney: "TThostFtdcRatioType" = property(_thostmduserapi.CThostFtdcOptionInstrMarginAdjustField_HShortMarginRatioByMoney_get, _thostmduserapi.CThostFtdcOptionInstrMarginAdjustField_HShortMarginRatioByMoney_set, doc=r"""保值空头保证金调整系数""")
    HShortMarginRatioByVolume: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcOptionInstrMarginAdjustField_HShortMarginRatioByVolume_get, _thostmduserapi.CThostFtdcOptionInstrMarginAdjustField_HShortMarginRatioByVolume_set, doc=r"""保值空头保证金调整系数""")
    AShortMarginRatioByMoney: "TThostFtdcRatioType" = property(_thostmduserapi.CThostFtdcOptionInstrMarginAdjustField_AShortMarginRatioByMoney_get, _thostmduserapi.CThostFtdcOptionInstrMarginAdjustField_AShortMarginRatioByMoney_set, doc=r"""套利空头保证金调整系数""")
    AShortMarginRatioByVolume: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcOptionInstrMarginAdjustField_AShortMarginRatioByVolume_get, _thostmduserapi.CThostFtdcOptionInstrMarginAdjustField_AShortMarginRatioByVolume_set, doc=r"""套利空头保证金调整系数""")
    IsRelative: "TThostFtdcBoolType" = property(_thostmduserapi.CThostFtdcOptionInstrMarginAdjustField_IsRelative_get, _thostmduserapi.CThostFtdcOptionInstrMarginAdjustField_IsRelative_set, doc=r"""是否跟随交易所收取""")
    MShortMarginRatioByMoney: "TThostFtdcRatioType" = property(_thostmduserapi.CThostFtdcOptionInstrMarginAdjustField_MShortMarginRatioByMoney_get, _thostmduserapi.CThostFtdcOptionInstrMarginAdjustField_MShortMarginRatioByMoney_set, doc=r"""做市商空头保证金调整系数""")
    MShortMarginRatioByVolume: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcOptionInstrMarginAdjustField_MShortMarginRatioByVolume_get, _thostmduserapi.CThostFtdcOptionInstrMarginAdjustField_MShortMarginRatioByVolume_set, doc=r"""做市商空头保证金调整系数""")
    InstrumentID: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcOptionInstrMarginAdjustField_InstrumentID_get, _thostmduserapi.CThostFtdcOptionInstrMarginAdjustField_InstrumentID_set, doc=r"""合约代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcOptionInstrMarginAdjustField_swiginit(self, _thostmduserapi.new_CThostFtdcOptionInstrMarginAdjustField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcOptionInstrMarginAdjustField

# Register CThostFtdcOptionInstrMarginAdjustField in _thostmduserapi:
_thostmduserapi.CThostFtdcOptionInstrMarginAdjustField_swigregister(CThostFtdcOptionInstrMarginAdjustField)
class CThostFtdcOptionInstrCommRateField(object):
    r"""当前期权合约手续费的详细内容"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    reserve1: "TThostFtdcOldInstrumentIDType" = property(_thostmduserapi.CThostFtdcOptionInstrCommRateField_reserve1_get, _thostmduserapi.CThostFtdcOptionInstrCommRateField_reserve1_set, doc=r"""保留的无效字段""")
    InvestorRange: "TThostFtdcInvestorRangeType" = property(_thostmduserapi.CThostFtdcOptionInstrCommRateField_InvestorRange_get, _thostmduserapi.CThostFtdcOptionInstrCommRateField_InvestorRange_set, doc=r"""投资者范围""")
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcOptionInstrCommRateField_BrokerID_get, _thostmduserapi.CThostFtdcOptionInstrCommRateField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "TThostFtdcInvestorIDType" = property(_thostmduserapi.CThostFtdcOptionInstrCommRateField_InvestorID_get, _thostmduserapi.CThostFtdcOptionInstrCommRateField_InvestorID_set, doc=r"""投资者代码""")
    OpenRatioByMoney: "TThostFtdcRatioType" = property(_thostmduserapi.CThostFtdcOptionInstrCommRateField_OpenRatioByMoney_get, _thostmduserapi.CThostFtdcOptionInstrCommRateField_OpenRatioByMoney_set, doc=r"""开仓手续费率""")
    OpenRatioByVolume: "TThostFtdcRatioType" = property(_thostmduserapi.CThostFtdcOptionInstrCommRateField_OpenRatioByVolume_get, _thostmduserapi.CThostFtdcOptionInstrCommRateField_OpenRatioByVolume_set, doc=r"""开仓手续费""")
    CloseRatioByMoney: "TThostFtdcRatioType" = property(_thostmduserapi.CThostFtdcOptionInstrCommRateField_CloseRatioByMoney_get, _thostmduserapi.CThostFtdcOptionInstrCommRateField_CloseRatioByMoney_set, doc=r"""平仓手续费率""")
    CloseRatioByVolume: "TThostFtdcRatioType" = property(_thostmduserapi.CThostFtdcOptionInstrCommRateField_CloseRatioByVolume_get, _thostmduserapi.CThostFtdcOptionInstrCommRateField_CloseRatioByVolume_set, doc=r"""平仓手续费""")
    CloseTodayRatioByMoney: "TThostFtdcRatioType" = property(_thostmduserapi.CThostFtdcOptionInstrCommRateField_CloseTodayRatioByMoney_get, _thostmduserapi.CThostFtdcOptionInstrCommRateField_CloseTodayRatioByMoney_set, doc=r"""平今手续费率""")
    CloseTodayRatioByVolume: "TThostFtdcRatioType" = property(_thostmduserapi.CThostFtdcOptionInstrCommRateField_CloseTodayRatioByVolume_get, _thostmduserapi.CThostFtdcOptionInstrCommRateField_CloseTodayRatioByVolume_set, doc=r"""平今手续费""")
    StrikeRatioByMoney: "TThostFtdcRatioType" = property(_thostmduserapi.CThostFtdcOptionInstrCommRateField_StrikeRatioByMoney_get, _thostmduserapi.CThostFtdcOptionInstrCommRateField_StrikeRatioByMoney_set, doc=r"""执行手续费率""")
    StrikeRatioByVolume: "TThostFtdcRatioType" = property(_thostmduserapi.CThostFtdcOptionInstrCommRateField_StrikeRatioByVolume_get, _thostmduserapi.CThostFtdcOptionInstrCommRateField_StrikeRatioByVolume_set, doc=r"""执行手续费""")
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcOptionInstrCommRateField_ExchangeID_get, _thostmduserapi.CThostFtdcOptionInstrCommRateField_ExchangeID_set, doc=r"""交易所代码""")
    InvestUnitID: "TThostFtdcInvestUnitIDType" = property(_thostmduserapi.CThostFtdcOptionInstrCommRateField_InvestUnitID_get, _thostmduserapi.CThostFtdcOptionInstrCommRateField_InvestUnitID_set, doc=r"""投资单元代码""")
    InstrumentID: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcOptionInstrCommRateField_InstrumentID_get, _thostmduserapi.CThostFtdcOptionInstrCommRateField_InstrumentID_set, doc=r"""合约代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcOptionInstrCommRateField_swiginit(self, _thostmduserapi.new_CThostFtdcOptionInstrCommRateField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcOptionInstrCommRateField

# Register CThostFtdcOptionInstrCommRateField in _thostmduserapi:
_thostmduserapi.CThostFtdcOptionInstrCommRateField_swigregister(CThostFtdcOptionInstrCommRateField)
class CThostFtdcOptionInstrTradeCostField(object):
    r"""期权交易成本"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcOptionInstrTradeCostField_BrokerID_get, _thostmduserapi.CThostFtdcOptionInstrTradeCostField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "TThostFtdcInvestorIDType" = property(_thostmduserapi.CThostFtdcOptionInstrTradeCostField_InvestorID_get, _thostmduserapi.CThostFtdcOptionInstrTradeCostField_InvestorID_set, doc=r"""投资者代码""")
    reserve1: "TThostFtdcOldInstrumentIDType" = property(_thostmduserapi.CThostFtdcOptionInstrTradeCostField_reserve1_get, _thostmduserapi.CThostFtdcOptionInstrTradeCostField_reserve1_set, doc=r"""保留的无效字段""")
    HedgeFlag: "TThostFtdcHedgeFlagType" = property(_thostmduserapi.CThostFtdcOptionInstrTradeCostField_HedgeFlag_get, _thostmduserapi.CThostFtdcOptionInstrTradeCostField_HedgeFlag_set, doc=r"""投机套保标志""")
    FixedMargin: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcOptionInstrTradeCostField_FixedMargin_get, _thostmduserapi.CThostFtdcOptionInstrTradeCostField_FixedMargin_set, doc=r"""期权合约保证金不变部分""")
    MiniMargin: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcOptionInstrTradeCostField_MiniMargin_get, _thostmduserapi.CThostFtdcOptionInstrTradeCostField_MiniMargin_set, doc=r"""期权合约最小保证金""")
    Royalty: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcOptionInstrTradeCostField_Royalty_get, _thostmduserapi.CThostFtdcOptionInstrTradeCostField_Royalty_set, doc=r"""期权合约权利金""")
    ExchFixedMargin: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcOptionInstrTradeCostField_ExchFixedMargin_get, _thostmduserapi.CThostFtdcOptionInstrTradeCostField_ExchFixedMargin_set, doc=r"""交易所期权合约保证金不变部分""")
    ExchMiniMargin: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcOptionInstrTradeCostField_ExchMiniMargin_get, _thostmduserapi.CThostFtdcOptionInstrTradeCostField_ExchMiniMargin_set, doc=r"""交易所期权合约最小保证金""")
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcOptionInstrTradeCostField_ExchangeID_get, _thostmduserapi.CThostFtdcOptionInstrTradeCostField_ExchangeID_set, doc=r"""交易所代码""")
    InvestUnitID: "TThostFtdcInvestUnitIDType" = property(_thostmduserapi.CThostFtdcOptionInstrTradeCostField_InvestUnitID_get, _thostmduserapi.CThostFtdcOptionInstrTradeCostField_InvestUnitID_set, doc=r"""投资单元代码""")
    InstrumentID: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcOptionInstrTradeCostField_InstrumentID_get, _thostmduserapi.CThostFtdcOptionInstrTradeCostField_InstrumentID_set, doc=r"""合约代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcOptionInstrTradeCostField_swiginit(self, _thostmduserapi.new_CThostFtdcOptionInstrTradeCostField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcOptionInstrTradeCostField

# Register CThostFtdcOptionInstrTradeCostField in _thostmduserapi:
_thostmduserapi.CThostFtdcOptionInstrTradeCostField_swigregister(CThostFtdcOptionInstrTradeCostField)
class CThostFtdcQryOptionInstrTradeCostField(object):
    r"""期权交易成本查询"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcQryOptionInstrTradeCostField_BrokerID_get, _thostmduserapi.CThostFtdcQryOptionInstrTradeCostField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "TThostFtdcInvestorIDType" = property(_thostmduserapi.CThostFtdcQryOptionInstrTradeCostField_InvestorID_get, _thostmduserapi.CThostFtdcQryOptionInstrTradeCostField_InvestorID_set, doc=r"""投资者代码""")
    reserve1: "TThostFtdcOldInstrumentIDType" = property(_thostmduserapi.CThostFtdcQryOptionInstrTradeCostField_reserve1_get, _thostmduserapi.CThostFtdcQryOptionInstrTradeCostField_reserve1_set, doc=r"""保留的无效字段""")
    HedgeFlag: "TThostFtdcHedgeFlagType" = property(_thostmduserapi.CThostFtdcQryOptionInstrTradeCostField_HedgeFlag_get, _thostmduserapi.CThostFtdcQryOptionInstrTradeCostField_HedgeFlag_set, doc=r"""投机套保标志""")
    InputPrice: "TThostFtdcPriceType" = property(_thostmduserapi.CThostFtdcQryOptionInstrTradeCostField_InputPrice_get, _thostmduserapi.CThostFtdcQryOptionInstrTradeCostField_InputPrice_set, doc=r"""期权合约报价""")
    UnderlyingPrice: "TThostFtdcPriceType" = property(_thostmduserapi.CThostFtdcQryOptionInstrTradeCostField_UnderlyingPrice_get, _thostmduserapi.CThostFtdcQryOptionInstrTradeCostField_UnderlyingPrice_set, doc=r"""标的价格,填0则用昨结算价""")
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcQryOptionInstrTradeCostField_ExchangeID_get, _thostmduserapi.CThostFtdcQryOptionInstrTradeCostField_ExchangeID_set, doc=r"""交易所代码""")
    InvestUnitID: "TThostFtdcInvestUnitIDType" = property(_thostmduserapi.CThostFtdcQryOptionInstrTradeCostField_InvestUnitID_get, _thostmduserapi.CThostFtdcQryOptionInstrTradeCostField_InvestUnitID_set, doc=r"""投资单元代码""")
    InstrumentID: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcQryOptionInstrTradeCostField_InstrumentID_get, _thostmduserapi.CThostFtdcQryOptionInstrTradeCostField_InstrumentID_set, doc=r"""合约代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcQryOptionInstrTradeCostField_swiginit(self, _thostmduserapi.new_CThostFtdcQryOptionInstrTradeCostField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcQryOptionInstrTradeCostField

# Register CThostFtdcQryOptionInstrTradeCostField in _thostmduserapi:
_thostmduserapi.CThostFtdcQryOptionInstrTradeCostField_swigregister(CThostFtdcQryOptionInstrTradeCostField)
class CThostFtdcQryOptionInstrCommRateField(object):
    r"""期权手续费率查询"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcQryOptionInstrCommRateField_BrokerID_get, _thostmduserapi.CThostFtdcQryOptionInstrCommRateField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "TThostFtdcInvestorIDType" = property(_thostmduserapi.CThostFtdcQryOptionInstrCommRateField_InvestorID_get, _thostmduserapi.CThostFtdcQryOptionInstrCommRateField_InvestorID_set, doc=r"""投资者代码""")
    reserve1: "TThostFtdcOldInstrumentIDType" = property(_thostmduserapi.CThostFtdcQryOptionInstrCommRateField_reserve1_get, _thostmduserapi.CThostFtdcQryOptionInstrCommRateField_reserve1_set, doc=r"""保留的无效字段""")
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcQryOptionInstrCommRateField_ExchangeID_get, _thostmduserapi.CThostFtdcQryOptionInstrCommRateField_ExchangeID_set, doc=r"""交易所代码""")
    InvestUnitID: "TThostFtdcInvestUnitIDType" = property(_thostmduserapi.CThostFtdcQryOptionInstrCommRateField_InvestUnitID_get, _thostmduserapi.CThostFtdcQryOptionInstrCommRateField_InvestUnitID_set, doc=r"""投资单元代码""")
    InstrumentID: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcQryOptionInstrCommRateField_InstrumentID_get, _thostmduserapi.CThostFtdcQryOptionInstrCommRateField_InstrumentID_set, doc=r"""合约代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcQryOptionInstrCommRateField_swiginit(self, _thostmduserapi.new_CThostFtdcQryOptionInstrCommRateField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcQryOptionInstrCommRateField

# Register CThostFtdcQryOptionInstrCommRateField in _thostmduserapi:
_thostmduserapi.CThostFtdcQryOptionInstrCommRateField_swigregister(CThostFtdcQryOptionInstrCommRateField)
class CThostFtdcIndexPriceField(object):
    r"""股指现货指数"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcIndexPriceField_BrokerID_get, _thostmduserapi.CThostFtdcIndexPriceField_BrokerID_set, doc=r"""经纪公司代码""")
    reserve1: "TThostFtdcOldInstrumentIDType" = property(_thostmduserapi.CThostFtdcIndexPriceField_reserve1_get, _thostmduserapi.CThostFtdcIndexPriceField_reserve1_set, doc=r"""保留的无效字段""")
    ClosePrice: "TThostFtdcPriceType" = property(_thostmduserapi.CThostFtdcIndexPriceField_ClosePrice_get, _thostmduserapi.CThostFtdcIndexPriceField_ClosePrice_set, doc=r"""指数现货收盘价""")
    InstrumentID: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcIndexPriceField_InstrumentID_get, _thostmduserapi.CThostFtdcIndexPriceField_InstrumentID_set, doc=r"""合约代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcIndexPriceField_swiginit(self, _thostmduserapi.new_CThostFtdcIndexPriceField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcIndexPriceField

# Register CThostFtdcIndexPriceField in _thostmduserapi:
_thostmduserapi.CThostFtdcIndexPriceField_swigregister(CThostFtdcIndexPriceField)
class CThostFtdcInputExecOrderField(object):
    r"""输入的执行宣告"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcInputExecOrderField_BrokerID_get, _thostmduserapi.CThostFtdcInputExecOrderField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "TThostFtdcInvestorIDType" = property(_thostmduserapi.CThostFtdcInputExecOrderField_InvestorID_get, _thostmduserapi.CThostFtdcInputExecOrderField_InvestorID_set, doc=r"""投资者代码""")
    reserve1: "TThostFtdcOldInstrumentIDType" = property(_thostmduserapi.CThostFtdcInputExecOrderField_reserve1_get, _thostmduserapi.CThostFtdcInputExecOrderField_reserve1_set, doc=r"""保留的无效字段""")
    ExecOrderRef: "TThostFtdcOrderRefType" = property(_thostmduserapi.CThostFtdcInputExecOrderField_ExecOrderRef_get, _thostmduserapi.CThostFtdcInputExecOrderField_ExecOrderRef_set, doc=r"""执行宣告引用""")
    UserID: "TThostFtdcUserIDType" = property(_thostmduserapi.CThostFtdcInputExecOrderField_UserID_get, _thostmduserapi.CThostFtdcInputExecOrderField_UserID_set, doc=r"""用户代码""")
    Volume: "TThostFtdcVolumeType" = property(_thostmduserapi.CThostFtdcInputExecOrderField_Volume_get, _thostmduserapi.CThostFtdcInputExecOrderField_Volume_set, doc=r"""数量""")
    RequestID: "TThostFtdcRequestIDType" = property(_thostmduserapi.CThostFtdcInputExecOrderField_RequestID_get, _thostmduserapi.CThostFtdcInputExecOrderField_RequestID_set, doc=r"""请求编号""")
    BusinessUnit: "TThostFtdcBusinessUnitType" = property(_thostmduserapi.CThostFtdcInputExecOrderField_BusinessUnit_get, _thostmduserapi.CThostFtdcInputExecOrderField_BusinessUnit_set, doc=r"""业务单元""")
    OffsetFlag: "TThostFtdcOffsetFlagType" = property(_thostmduserapi.CThostFtdcInputExecOrderField_OffsetFlag_get, _thostmduserapi.CThostFtdcInputExecOrderField_OffsetFlag_set, doc=r"""开平标志""")
    HedgeFlag: "TThostFtdcHedgeFlagType" = property(_thostmduserapi.CThostFtdcInputExecOrderField_HedgeFlag_get, _thostmduserapi.CThostFtdcInputExecOrderField_HedgeFlag_set, doc=r"""投机套保标志""")
    ActionType: "TThostFtdcActionTypeType" = property(_thostmduserapi.CThostFtdcInputExecOrderField_ActionType_get, _thostmduserapi.CThostFtdcInputExecOrderField_ActionType_set, doc=r"""执行类型""")
    PosiDirection: "TThostFtdcPosiDirectionType" = property(_thostmduserapi.CThostFtdcInputExecOrderField_PosiDirection_get, _thostmduserapi.CThostFtdcInputExecOrderField_PosiDirection_set, doc=r"""保留头寸申请的持仓方向""")
    ReservePositionFlag: "TThostFtdcExecOrderPositionFlagType" = property(_thostmduserapi.CThostFtdcInputExecOrderField_ReservePositionFlag_get, _thostmduserapi.CThostFtdcInputExecOrderField_ReservePositionFlag_set, doc=r"""期权行权后是否保留期货头寸的标记,该字段已废弃""")
    CloseFlag: "TThostFtdcExecOrderCloseFlagType" = property(_thostmduserapi.CThostFtdcInputExecOrderField_CloseFlag_get, _thostmduserapi.CThostFtdcInputExecOrderField_CloseFlag_set, doc=r"""期权行权后生成的头寸是否自动平仓""")
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcInputExecOrderField_ExchangeID_get, _thostmduserapi.CThostFtdcInputExecOrderField_ExchangeID_set, doc=r"""交易所代码""")
    InvestUnitID: "TThostFtdcInvestUnitIDType" = property(_thostmduserapi.CThostFtdcInputExecOrderField_InvestUnitID_get, _thostmduserapi.CThostFtdcInputExecOrderField_InvestUnitID_set, doc=r"""投资单元代码""")
    AccountID: "TThostFtdcAccountIDType" = property(_thostmduserapi.CThostFtdcInputExecOrderField_AccountID_get, _thostmduserapi.CThostFtdcInputExecOrderField_AccountID_set, doc=r"""资金账号""")
    CurrencyID: "TThostFtdcCurrencyIDType" = property(_thostmduserapi.CThostFtdcInputExecOrderField_CurrencyID_get, _thostmduserapi.CThostFtdcInputExecOrderField_CurrencyID_set, doc=r"""币种代码""")
    ClientID: "TThostFtdcClientIDType" = property(_thostmduserapi.CThostFtdcInputExecOrderField_ClientID_get, _thostmduserapi.CThostFtdcInputExecOrderField_ClientID_set, doc=r"""交易编码""")
    reserve2: "TThostFtdcOldIPAddressType" = property(_thostmduserapi.CThostFtdcInputExecOrderField_reserve2_get, _thostmduserapi.CThostFtdcInputExecOrderField_reserve2_set, doc=r"""保留的无效字段""")
    MacAddress: "TThostFtdcMacAddressType" = property(_thostmduserapi.CThostFtdcInputExecOrderField_MacAddress_get, _thostmduserapi.CThostFtdcInputExecOrderField_MacAddress_set, doc=r"""Mac地址""")
    InstrumentID: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcInputExecOrderField_InstrumentID_get, _thostmduserapi.CThostFtdcInputExecOrderField_InstrumentID_set, doc=r"""合约代码""")
    IPAddress: "TThostFtdcIPAddressType" = property(_thostmduserapi.CThostFtdcInputExecOrderField_IPAddress_get, _thostmduserapi.CThostFtdcInputExecOrderField_IPAddress_set, doc=r"""IP地址""")

    def __init__(self):
        _thostmduserapi.CThostFtdcInputExecOrderField_swiginit(self, _thostmduserapi.new_CThostFtdcInputExecOrderField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcInputExecOrderField

# Register CThostFtdcInputExecOrderField in _thostmduserapi:
_thostmduserapi.CThostFtdcInputExecOrderField_swigregister(CThostFtdcInputExecOrderField)
class CThostFtdcInputExecOrderActionField(object):
    r"""输入执行宣告操作"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcInputExecOrderActionField_BrokerID_get, _thostmduserapi.CThostFtdcInputExecOrderActionField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "TThostFtdcInvestorIDType" = property(_thostmduserapi.CThostFtdcInputExecOrderActionField_InvestorID_get, _thostmduserapi.CThostFtdcInputExecOrderActionField_InvestorID_set, doc=r"""投资者代码""")
    ExecOrderActionRef: "TThostFtdcOrderActionRefType" = property(_thostmduserapi.CThostFtdcInputExecOrderActionField_ExecOrderActionRef_get, _thostmduserapi.CThostFtdcInputExecOrderActionField_ExecOrderActionRef_set, doc=r"""执行宣告操作引用""")
    ExecOrderRef: "TThostFtdcOrderRefType" = property(_thostmduserapi.CThostFtdcInputExecOrderActionField_ExecOrderRef_get, _thostmduserapi.CThostFtdcInputExecOrderActionField_ExecOrderRef_set, doc=r"""执行宣告引用""")
    RequestID: "TThostFtdcRequestIDType" = property(_thostmduserapi.CThostFtdcInputExecOrderActionField_RequestID_get, _thostmduserapi.CThostFtdcInputExecOrderActionField_RequestID_set, doc=r"""请求编号""")
    FrontID: "TThostFtdcFrontIDType" = property(_thostmduserapi.CThostFtdcInputExecOrderActionField_FrontID_get, _thostmduserapi.CThostFtdcInputExecOrderActionField_FrontID_set, doc=r"""前置编号""")
    SessionID: "TThostFtdcSessionIDType" = property(_thostmduserapi.CThostFtdcInputExecOrderActionField_SessionID_get, _thostmduserapi.CThostFtdcInputExecOrderActionField_SessionID_set, doc=r"""会话编号""")
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcInputExecOrderActionField_ExchangeID_get, _thostmduserapi.CThostFtdcInputExecOrderActionField_ExchangeID_set, doc=r"""交易所代码""")
    ExecOrderSysID: "TThostFtdcExecOrderSysIDType" = property(_thostmduserapi.CThostFtdcInputExecOrderActionField_ExecOrderSysID_get, _thostmduserapi.CThostFtdcInputExecOrderActionField_ExecOrderSysID_set, doc=r"""执行宣告操作编号""")
    ActionFlag: "TThostFtdcActionFlagType" = property(_thostmduserapi.CThostFtdcInputExecOrderActionField_ActionFlag_get, _thostmduserapi.CThostFtdcInputExecOrderActionField_ActionFlag_set, doc=r"""操作标志""")
    UserID: "TThostFtdcUserIDType" = property(_thostmduserapi.CThostFtdcInputExecOrderActionField_UserID_get, _thostmduserapi.CThostFtdcInputExecOrderActionField_UserID_set, doc=r"""用户代码""")
    reserve1: "TThostFtdcOldInstrumentIDType" = property(_thostmduserapi.CThostFtdcInputExecOrderActionField_reserve1_get, _thostmduserapi.CThostFtdcInputExecOrderActionField_reserve1_set, doc=r"""保留的无效字段""")
    InvestUnitID: "TThostFtdcInvestUnitIDType" = property(_thostmduserapi.CThostFtdcInputExecOrderActionField_InvestUnitID_get, _thostmduserapi.CThostFtdcInputExecOrderActionField_InvestUnitID_set, doc=r"""投资单元代码""")
    reserve2: "TThostFtdcOldIPAddressType" = property(_thostmduserapi.CThostFtdcInputExecOrderActionField_reserve2_get, _thostmduserapi.CThostFtdcInputExecOrderActionField_reserve2_set, doc=r"""保留的无效字段""")
    MacAddress: "TThostFtdcMacAddressType" = property(_thostmduserapi.CThostFtdcInputExecOrderActionField_MacAddress_get, _thostmduserapi.CThostFtdcInputExecOrderActionField_MacAddress_set, doc=r"""Mac地址""")
    InstrumentID: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcInputExecOrderActionField_InstrumentID_get, _thostmduserapi.CThostFtdcInputExecOrderActionField_InstrumentID_set, doc=r"""合约代码""")
    IPAddress: "TThostFtdcIPAddressType" = property(_thostmduserapi.CThostFtdcInputExecOrderActionField_IPAddress_get, _thostmduserapi.CThostFtdcInputExecOrderActionField_IPAddress_set, doc=r"""IP地址""")

    def __init__(self):
        _thostmduserapi.CThostFtdcInputExecOrderActionField_swiginit(self, _thostmduserapi.new_CThostFtdcInputExecOrderActionField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcInputExecOrderActionField

# Register CThostFtdcInputExecOrderActionField in _thostmduserapi:
_thostmduserapi.CThostFtdcInputExecOrderActionField_swigregister(CThostFtdcInputExecOrderActionField)
class CThostFtdcExecOrderField(object):
    r"""执行宣告"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcExecOrderField_BrokerID_get, _thostmduserapi.CThostFtdcExecOrderField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "TThostFtdcInvestorIDType" = property(_thostmduserapi.CThostFtdcExecOrderField_InvestorID_get, _thostmduserapi.CThostFtdcExecOrderField_InvestorID_set, doc=r"""投资者代码""")
    reserve1: "TThostFtdcOldInstrumentIDType" = property(_thostmduserapi.CThostFtdcExecOrderField_reserve1_get, _thostmduserapi.CThostFtdcExecOrderField_reserve1_set, doc=r"""保留的无效字段""")
    ExecOrderRef: "TThostFtdcOrderRefType" = property(_thostmduserapi.CThostFtdcExecOrderField_ExecOrderRef_get, _thostmduserapi.CThostFtdcExecOrderField_ExecOrderRef_set, doc=r"""执行宣告引用""")
    UserID: "TThostFtdcUserIDType" = property(_thostmduserapi.CThostFtdcExecOrderField_UserID_get, _thostmduserapi.CThostFtdcExecOrderField_UserID_set, doc=r"""用户代码""")
    Volume: "TThostFtdcVolumeType" = property(_thostmduserapi.CThostFtdcExecOrderField_Volume_get, _thostmduserapi.CThostFtdcExecOrderField_Volume_set, doc=r"""数量""")
    RequestID: "TThostFtdcRequestIDType" = property(_thostmduserapi.CThostFtdcExecOrderField_RequestID_get, _thostmduserapi.CThostFtdcExecOrderField_RequestID_set, doc=r"""请求编号""")
    BusinessUnit: "TThostFtdcBusinessUnitType" = property(_thostmduserapi.CThostFtdcExecOrderField_BusinessUnit_get, _thostmduserapi.CThostFtdcExecOrderField_BusinessUnit_set, doc=r"""业务单元""")
    OffsetFlag: "TThostFtdcOffsetFlagType" = property(_thostmduserapi.CThostFtdcExecOrderField_OffsetFlag_get, _thostmduserapi.CThostFtdcExecOrderField_OffsetFlag_set, doc=r"""开平标志""")
    HedgeFlag: "TThostFtdcHedgeFlagType" = property(_thostmduserapi.CThostFtdcExecOrderField_HedgeFlag_get, _thostmduserapi.CThostFtdcExecOrderField_HedgeFlag_set, doc=r"""投机套保标志""")
    ActionType: "TThostFtdcActionTypeType" = property(_thostmduserapi.CThostFtdcExecOrderField_ActionType_get, _thostmduserapi.CThostFtdcExecOrderField_ActionType_set, doc=r"""执行类型""")
    PosiDirection: "TThostFtdcPosiDirectionType" = property(_thostmduserapi.CThostFtdcExecOrderField_PosiDirection_get, _thostmduserapi.CThostFtdcExecOrderField_PosiDirection_set, doc=r"""保留头寸申请的持仓方向""")
    ReservePositionFlag: "TThostFtdcExecOrderPositionFlagType" = property(_thostmduserapi.CThostFtdcExecOrderField_ReservePositionFlag_get, _thostmduserapi.CThostFtdcExecOrderField_ReservePositionFlag_set, doc=r"""期权行权后是否保留期货头寸的标记,该字段已废弃""")
    CloseFlag: "TThostFtdcExecOrderCloseFlagType" = property(_thostmduserapi.CThostFtdcExecOrderField_CloseFlag_get, _thostmduserapi.CThostFtdcExecOrderField_CloseFlag_set, doc=r"""期权行权后生成的头寸是否自动平仓""")
    ExecOrderLocalID: "TThostFtdcOrderLocalIDType" = property(_thostmduserapi.CThostFtdcExecOrderField_ExecOrderLocalID_get, _thostmduserapi.CThostFtdcExecOrderField_ExecOrderLocalID_set, doc=r"""本地执行宣告编号""")
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcExecOrderField_ExchangeID_get, _thostmduserapi.CThostFtdcExecOrderField_ExchangeID_set, doc=r"""交易所代码""")
    ParticipantID: "TThostFtdcParticipantIDType" = property(_thostmduserapi.CThostFtdcExecOrderField_ParticipantID_get, _thostmduserapi.CThostFtdcExecOrderField_ParticipantID_set, doc=r"""会员代码""")
    ClientID: "TThostFtdcClientIDType" = property(_thostmduserapi.CThostFtdcExecOrderField_ClientID_get, _thostmduserapi.CThostFtdcExecOrderField_ClientID_set, doc=r"""客户代码""")
    reserve2: "TThostFtdcOldExchangeInstIDType" = property(_thostmduserapi.CThostFtdcExecOrderField_reserve2_get, _thostmduserapi.CThostFtdcExecOrderField_reserve2_set, doc=r"""保留的无效字段""")
    TraderID: "TThostFtdcTraderIDType" = property(_thostmduserapi.CThostFtdcExecOrderField_TraderID_get, _thostmduserapi.CThostFtdcExecOrderField_TraderID_set, doc=r"""交易所交易员代码""")
    InstallID: "TThostFtdcInstallIDType" = property(_thostmduserapi.CThostFtdcExecOrderField_InstallID_get, _thostmduserapi.CThostFtdcExecOrderField_InstallID_set, doc=r"""安装编号""")
    OrderSubmitStatus: "TThostFtdcOrderSubmitStatusType" = property(_thostmduserapi.CThostFtdcExecOrderField_OrderSubmitStatus_get, _thostmduserapi.CThostFtdcExecOrderField_OrderSubmitStatus_set, doc=r"""执行宣告提交状态""")
    NotifySequence: "TThostFtdcSequenceNoType" = property(_thostmduserapi.CThostFtdcExecOrderField_NotifySequence_get, _thostmduserapi.CThostFtdcExecOrderField_NotifySequence_set, doc=r"""报单提示序号""")
    TradingDay: "TThostFtdcDateType" = property(_thostmduserapi.CThostFtdcExecOrderField_TradingDay_get, _thostmduserapi.CThostFtdcExecOrderField_TradingDay_set, doc=r"""交易日""")
    SettlementID: "TThostFtdcSettlementIDType" = property(_thostmduserapi.CThostFtdcExecOrderField_SettlementID_get, _thostmduserapi.CThostFtdcExecOrderField_SettlementID_set, doc=r"""结算编号""")
    ExecOrderSysID: "TThostFtdcExecOrderSysIDType" = property(_thostmduserapi.CThostFtdcExecOrderField_ExecOrderSysID_get, _thostmduserapi.CThostFtdcExecOrderField_ExecOrderSysID_set, doc=r"""执行宣告编号""")
    InsertDate: "TThostFtdcDateType" = property(_thostmduserapi.CThostFtdcExecOrderField_InsertDate_get, _thostmduserapi.CThostFtdcExecOrderField_InsertDate_set, doc=r"""报单日期""")
    InsertTime: "TThostFtdcTimeType" = property(_thostmduserapi.CThostFtdcExecOrderField_InsertTime_get, _thostmduserapi.CThostFtdcExecOrderField_InsertTime_set, doc=r"""插入时间""")
    CancelTime: "TThostFtdcTimeType" = property(_thostmduserapi.CThostFtdcExecOrderField_CancelTime_get, _thostmduserapi.CThostFtdcExecOrderField_CancelTime_set, doc=r"""撤销时间""")
    ExecResult: "TThostFtdcExecResultType" = property(_thostmduserapi.CThostFtdcExecOrderField_ExecResult_get, _thostmduserapi.CThostFtdcExecOrderField_ExecResult_set, doc=r"""执行结果""")
    ClearingPartID: "TThostFtdcParticipantIDType" = property(_thostmduserapi.CThostFtdcExecOrderField_ClearingPartID_get, _thostmduserapi.CThostFtdcExecOrderField_ClearingPartID_set, doc=r"""结算会员编号""")
    SequenceNo: "TThostFtdcSequenceNoType" = property(_thostmduserapi.CThostFtdcExecOrderField_SequenceNo_get, _thostmduserapi.CThostFtdcExecOrderField_SequenceNo_set, doc=r"""序号""")
    FrontID: "TThostFtdcFrontIDType" = property(_thostmduserapi.CThostFtdcExecOrderField_FrontID_get, _thostmduserapi.CThostFtdcExecOrderField_FrontID_set, doc=r"""前置编号""")
    SessionID: "TThostFtdcSessionIDType" = property(_thostmduserapi.CThostFtdcExecOrderField_SessionID_get, _thostmduserapi.CThostFtdcExecOrderField_SessionID_set, doc=r"""会话编号""")
    UserProductInfo: "TThostFtdcProductInfoType" = property(_thostmduserapi.CThostFtdcExecOrderField_UserProductInfo_get, _thostmduserapi.CThostFtdcExecOrderField_UserProductInfo_set, doc=r"""用户端产品信息""")
    StatusMsg: "TThostFtdcErrorMsgType" = property(_thostmduserapi.CThostFtdcExecOrderField_StatusMsg_get, _thostmduserapi.CThostFtdcExecOrderField_StatusMsg_set, doc=r"""状态信息""")
    ActiveUserID: "TThostFtdcUserIDType" = property(_thostmduserapi.CThostFtdcExecOrderField_ActiveUserID_get, _thostmduserapi.CThostFtdcExecOrderField_ActiveUserID_set, doc=r"""操作用户代码""")
    BrokerExecOrderSeq: "TThostFtdcSequenceNoType" = property(_thostmduserapi.CThostFtdcExecOrderField_BrokerExecOrderSeq_get, _thostmduserapi.CThostFtdcExecOrderField_BrokerExecOrderSeq_set, doc=r"""经纪公司报单编号""")
    BranchID: "TThostFtdcBranchIDType" = property(_thostmduserapi.CThostFtdcExecOrderField_BranchID_get, _thostmduserapi.CThostFtdcExecOrderField_BranchID_set, doc=r"""营业部编号""")
    InvestUnitID: "TThostFtdcInvestUnitIDType" = property(_thostmduserapi.CThostFtdcExecOrderField_InvestUnitID_get, _thostmduserapi.CThostFtdcExecOrderField_InvestUnitID_set, doc=r"""投资单元代码""")
    AccountID: "TThostFtdcAccountIDType" = property(_thostmduserapi.CThostFtdcExecOrderField_AccountID_get, _thostmduserapi.CThostFtdcExecOrderField_AccountID_set, doc=r"""资金账号""")
    CurrencyID: "TThostFtdcCurrencyIDType" = property(_thostmduserapi.CThostFtdcExecOrderField_CurrencyID_get, _thostmduserapi.CThostFtdcExecOrderField_CurrencyID_set, doc=r"""币种代码""")
    reserve3: "TThostFtdcOldIPAddressType" = property(_thostmduserapi.CThostFtdcExecOrderField_reserve3_get, _thostmduserapi.CThostFtdcExecOrderField_reserve3_set, doc=r"""保留的无效字段""")
    MacAddress: "TThostFtdcMacAddressType" = property(_thostmduserapi.CThostFtdcExecOrderField_MacAddress_get, _thostmduserapi.CThostFtdcExecOrderField_MacAddress_set, doc=r"""Mac地址""")
    InstrumentID: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcExecOrderField_InstrumentID_get, _thostmduserapi.CThostFtdcExecOrderField_InstrumentID_set, doc=r"""合约代码""")
    ExchangeInstID: "TThostFtdcExchangeInstIDType" = property(_thostmduserapi.CThostFtdcExecOrderField_ExchangeInstID_get, _thostmduserapi.CThostFtdcExecOrderField_ExchangeInstID_set, doc=r"""合约在交易所的代码""")
    IPAddress: "TThostFtdcIPAddressType" = property(_thostmduserapi.CThostFtdcExecOrderField_IPAddress_get, _thostmduserapi.CThostFtdcExecOrderField_IPAddress_set, doc=r"""IP地址""")

    def __init__(self):
        _thostmduserapi.CThostFtdcExecOrderField_swiginit(self, _thostmduserapi.new_CThostFtdcExecOrderField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcExecOrderField

# Register CThostFtdcExecOrderField in _thostmduserapi:
_thostmduserapi.CThostFtdcExecOrderField_swigregister(CThostFtdcExecOrderField)
class CThostFtdcExecOrderActionField(object):
    r"""执行宣告操作"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcExecOrderActionField_BrokerID_get, _thostmduserapi.CThostFtdcExecOrderActionField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "TThostFtdcInvestorIDType" = property(_thostmduserapi.CThostFtdcExecOrderActionField_InvestorID_get, _thostmduserapi.CThostFtdcExecOrderActionField_InvestorID_set, doc=r"""投资者代码""")
    ExecOrderActionRef: "TThostFtdcOrderActionRefType" = property(_thostmduserapi.CThostFtdcExecOrderActionField_ExecOrderActionRef_get, _thostmduserapi.CThostFtdcExecOrderActionField_ExecOrderActionRef_set, doc=r"""执行宣告操作引用""")
    ExecOrderRef: "TThostFtdcOrderRefType" = property(_thostmduserapi.CThostFtdcExecOrderActionField_ExecOrderRef_get, _thostmduserapi.CThostFtdcExecOrderActionField_ExecOrderRef_set, doc=r"""执行宣告引用""")
    RequestID: "TThostFtdcRequestIDType" = property(_thostmduserapi.CThostFtdcExecOrderActionField_RequestID_get, _thostmduserapi.CThostFtdcExecOrderActionField_RequestID_set, doc=r"""请求编号""")
    FrontID: "TThostFtdcFrontIDType" = property(_thostmduserapi.CThostFtdcExecOrderActionField_FrontID_get, _thostmduserapi.CThostFtdcExecOrderActionField_FrontID_set, doc=r"""前置编号""")
    SessionID: "TThostFtdcSessionIDType" = property(_thostmduserapi.CThostFtdcExecOrderActionField_SessionID_get, _thostmduserapi.CThostFtdcExecOrderActionField_SessionID_set, doc=r"""会话编号""")
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcExecOrderActionField_ExchangeID_get, _thostmduserapi.CThostFtdcExecOrderActionField_ExchangeID_set, doc=r"""交易所代码""")
    ExecOrderSysID: "TThostFtdcExecOrderSysIDType" = property(_thostmduserapi.CThostFtdcExecOrderActionField_ExecOrderSysID_get, _thostmduserapi.CThostFtdcExecOrderActionField_ExecOrderSysID_set, doc=r"""执行宣告操作编号""")
    ActionFlag: "TThostFtdcActionFlagType" = property(_thostmduserapi.CThostFtdcExecOrderActionField_ActionFlag_get, _thostmduserapi.CThostFtdcExecOrderActionField_ActionFlag_set, doc=r"""操作标志""")
    ActionDate: "TThostFtdcDateType" = property(_thostmduserapi.CThostFtdcExecOrderActionField_ActionDate_get, _thostmduserapi.CThostFtdcExecOrderActionField_ActionDate_set, doc=r"""操作日期""")
    ActionTime: "TThostFtdcTimeType" = property(_thostmduserapi.CThostFtdcExecOrderActionField_ActionTime_get, _thostmduserapi.CThostFtdcExecOrderActionField_ActionTime_set, doc=r"""操作时间""")
    TraderID: "TThostFtdcTraderIDType" = property(_thostmduserapi.CThostFtdcExecOrderActionField_TraderID_get, _thostmduserapi.CThostFtdcExecOrderActionField_TraderID_set, doc=r"""交易所交易员代码""")
    InstallID: "TThostFtdcInstallIDType" = property(_thostmduserapi.CThostFtdcExecOrderActionField_InstallID_get, _thostmduserapi.CThostFtdcExecOrderActionField_InstallID_set, doc=r"""安装编号""")
    ExecOrderLocalID: "TThostFtdcOrderLocalIDType" = property(_thostmduserapi.CThostFtdcExecOrderActionField_ExecOrderLocalID_get, _thostmduserapi.CThostFtdcExecOrderActionField_ExecOrderLocalID_set, doc=r"""本地执行宣告编号""")
    ActionLocalID: "TThostFtdcOrderLocalIDType" = property(_thostmduserapi.CThostFtdcExecOrderActionField_ActionLocalID_get, _thostmduserapi.CThostFtdcExecOrderActionField_ActionLocalID_set, doc=r"""操作本地编号""")
    ParticipantID: "TThostFtdcParticipantIDType" = property(_thostmduserapi.CThostFtdcExecOrderActionField_ParticipantID_get, _thostmduserapi.CThostFtdcExecOrderActionField_ParticipantID_set, doc=r"""会员代码""")
    ClientID: "TThostFtdcClientIDType" = property(_thostmduserapi.CThostFtdcExecOrderActionField_ClientID_get, _thostmduserapi.CThostFtdcExecOrderActionField_ClientID_set, doc=r"""客户代码""")
    BusinessUnit: "TThostFtdcBusinessUnitType" = property(_thostmduserapi.CThostFtdcExecOrderActionField_BusinessUnit_get, _thostmduserapi.CThostFtdcExecOrderActionField_BusinessUnit_set, doc=r"""业务单元""")
    OrderActionStatus: "TThostFtdcOrderActionStatusType" = property(_thostmduserapi.CThostFtdcExecOrderActionField_OrderActionStatus_get, _thostmduserapi.CThostFtdcExecOrderActionField_OrderActionStatus_set, doc=r"""报单操作状态""")
    UserID: "TThostFtdcUserIDType" = property(_thostmduserapi.CThostFtdcExecOrderActionField_UserID_get, _thostmduserapi.CThostFtdcExecOrderActionField_UserID_set, doc=r"""用户代码""")
    ActionType: "TThostFtdcActionTypeType" = property(_thostmduserapi.CThostFtdcExecOrderActionField_ActionType_get, _thostmduserapi.CThostFtdcExecOrderActionField_ActionType_set, doc=r"""执行类型""")
    StatusMsg: "TThostFtdcErrorMsgType" = property(_thostmduserapi.CThostFtdcExecOrderActionField_StatusMsg_get, _thostmduserapi.CThostFtdcExecOrderActionField_StatusMsg_set, doc=r"""状态信息""")
    reserve1: "TThostFtdcOldInstrumentIDType" = property(_thostmduserapi.CThostFtdcExecOrderActionField_reserve1_get, _thostmduserapi.CThostFtdcExecOrderActionField_reserve1_set, doc=r"""保留的无效字段""")
    BranchID: "TThostFtdcBranchIDType" = property(_thostmduserapi.CThostFtdcExecOrderActionField_BranchID_get, _thostmduserapi.CThostFtdcExecOrderActionField_BranchID_set, doc=r"""营业部编号""")
    InvestUnitID: "TThostFtdcInvestUnitIDType" = property(_thostmduserapi.CThostFtdcExecOrderActionField_InvestUnitID_get, _thostmduserapi.CThostFtdcExecOrderActionField_InvestUnitID_set, doc=r"""投资单元代码""")
    reserve2: "TThostFtdcOldIPAddressType" = property(_thostmduserapi.CThostFtdcExecOrderActionField_reserve2_get, _thostmduserapi.CThostFtdcExecOrderActionField_reserve2_set, doc=r"""保留的无效字段""")
    MacAddress: "TThostFtdcMacAddressType" = property(_thostmduserapi.CThostFtdcExecOrderActionField_MacAddress_get, _thostmduserapi.CThostFtdcExecOrderActionField_MacAddress_set, doc=r"""Mac地址""")
    InstrumentID: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcExecOrderActionField_InstrumentID_get, _thostmduserapi.CThostFtdcExecOrderActionField_InstrumentID_set, doc=r"""合约代码""")
    IPAddress: "TThostFtdcIPAddressType" = property(_thostmduserapi.CThostFtdcExecOrderActionField_IPAddress_get, _thostmduserapi.CThostFtdcExecOrderActionField_IPAddress_set, doc=r"""IP地址""")

    def __init__(self):
        _thostmduserapi.CThostFtdcExecOrderActionField_swiginit(self, _thostmduserapi.new_CThostFtdcExecOrderActionField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcExecOrderActionField

# Register CThostFtdcExecOrderActionField in _thostmduserapi:
_thostmduserapi.CThostFtdcExecOrderActionField_swigregister(CThostFtdcExecOrderActionField)
class CThostFtdcQryExecOrderField(object):
    r"""执行宣告查询"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcQryExecOrderField_BrokerID_get, _thostmduserapi.CThostFtdcQryExecOrderField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "TThostFtdcInvestorIDType" = property(_thostmduserapi.CThostFtdcQryExecOrderField_InvestorID_get, _thostmduserapi.CThostFtdcQryExecOrderField_InvestorID_set, doc=r"""投资者代码""")
    reserve1: "TThostFtdcOldInstrumentIDType" = property(_thostmduserapi.CThostFtdcQryExecOrderField_reserve1_get, _thostmduserapi.CThostFtdcQryExecOrderField_reserve1_set, doc=r"""保留的无效字段""")
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcQryExecOrderField_ExchangeID_get, _thostmduserapi.CThostFtdcQryExecOrderField_ExchangeID_set, doc=r"""交易所代码""")
    ExecOrderSysID: "TThostFtdcExecOrderSysIDType" = property(_thostmduserapi.CThostFtdcQryExecOrderField_ExecOrderSysID_get, _thostmduserapi.CThostFtdcQryExecOrderField_ExecOrderSysID_set, doc=r"""执行宣告编号""")
    InsertTimeStart: "TThostFtdcTimeType" = property(_thostmduserapi.CThostFtdcQryExecOrderField_InsertTimeStart_get, _thostmduserapi.CThostFtdcQryExecOrderField_InsertTimeStart_set, doc=r"""开始时间""")
    InsertTimeEnd: "TThostFtdcTimeType" = property(_thostmduserapi.CThostFtdcQryExecOrderField_InsertTimeEnd_get, _thostmduserapi.CThostFtdcQryExecOrderField_InsertTimeEnd_set, doc=r"""结束时间""")
    InstrumentID: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcQryExecOrderField_InstrumentID_get, _thostmduserapi.CThostFtdcQryExecOrderField_InstrumentID_set, doc=r"""合约代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcQryExecOrderField_swiginit(self, _thostmduserapi.new_CThostFtdcQryExecOrderField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcQryExecOrderField

# Register CThostFtdcQryExecOrderField in _thostmduserapi:
_thostmduserapi.CThostFtdcQryExecOrderField_swigregister(CThostFtdcQryExecOrderField)
class CThostFtdcExchangeExecOrderField(object):
    r"""交易所执行宣告信息"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Volume: "TThostFtdcVolumeType" = property(_thostmduserapi.CThostFtdcExchangeExecOrderField_Volume_get, _thostmduserapi.CThostFtdcExchangeExecOrderField_Volume_set, doc=r"""数量""")
    RequestID: "TThostFtdcRequestIDType" = property(_thostmduserapi.CThostFtdcExchangeExecOrderField_RequestID_get, _thostmduserapi.CThostFtdcExchangeExecOrderField_RequestID_set, doc=r"""请求编号""")
    BusinessUnit: "TThostFtdcBusinessUnitType" = property(_thostmduserapi.CThostFtdcExchangeExecOrderField_BusinessUnit_get, _thostmduserapi.CThostFtdcExchangeExecOrderField_BusinessUnit_set, doc=r"""业务单元""")
    OffsetFlag: "TThostFtdcOffsetFlagType" = property(_thostmduserapi.CThostFtdcExchangeExecOrderField_OffsetFlag_get, _thostmduserapi.CThostFtdcExchangeExecOrderField_OffsetFlag_set, doc=r"""开平标志""")
    HedgeFlag: "TThostFtdcHedgeFlagType" = property(_thostmduserapi.CThostFtdcExchangeExecOrderField_HedgeFlag_get, _thostmduserapi.CThostFtdcExchangeExecOrderField_HedgeFlag_set, doc=r"""投机套保标志""")
    ActionType: "TThostFtdcActionTypeType" = property(_thostmduserapi.CThostFtdcExchangeExecOrderField_ActionType_get, _thostmduserapi.CThostFtdcExchangeExecOrderField_ActionType_set, doc=r"""执行类型""")
    PosiDirection: "TThostFtdcPosiDirectionType" = property(_thostmduserapi.CThostFtdcExchangeExecOrderField_PosiDirection_get, _thostmduserapi.CThostFtdcExchangeExecOrderField_PosiDirection_set, doc=r"""保留头寸申请的持仓方向""")
    ReservePositionFlag: "TThostFtdcExecOrderPositionFlagType" = property(_thostmduserapi.CThostFtdcExchangeExecOrderField_ReservePositionFlag_get, _thostmduserapi.CThostFtdcExchangeExecOrderField_ReservePositionFlag_set, doc=r"""期权行权后是否保留期货头寸的标记,该字段已废弃""")
    CloseFlag: "TThostFtdcExecOrderCloseFlagType" = property(_thostmduserapi.CThostFtdcExchangeExecOrderField_CloseFlag_get, _thostmduserapi.CThostFtdcExchangeExecOrderField_CloseFlag_set, doc=r"""期权行权后生成的头寸是否自动平仓""")
    ExecOrderLocalID: "TThostFtdcOrderLocalIDType" = property(_thostmduserapi.CThostFtdcExchangeExecOrderField_ExecOrderLocalID_get, _thostmduserapi.CThostFtdcExchangeExecOrderField_ExecOrderLocalID_set, doc=r"""本地执行宣告编号""")
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcExchangeExecOrderField_ExchangeID_get, _thostmduserapi.CThostFtdcExchangeExecOrderField_ExchangeID_set, doc=r"""交易所代码""")
    ParticipantID: "TThostFtdcParticipantIDType" = property(_thostmduserapi.CThostFtdcExchangeExecOrderField_ParticipantID_get, _thostmduserapi.CThostFtdcExchangeExecOrderField_ParticipantID_set, doc=r"""会员代码""")
    ClientID: "TThostFtdcClientIDType" = property(_thostmduserapi.CThostFtdcExchangeExecOrderField_ClientID_get, _thostmduserapi.CThostFtdcExchangeExecOrderField_ClientID_set, doc=r"""客户代码""")
    reserve1: "TThostFtdcOldExchangeInstIDType" = property(_thostmduserapi.CThostFtdcExchangeExecOrderField_reserve1_get, _thostmduserapi.CThostFtdcExchangeExecOrderField_reserve1_set, doc=r"""保留的无效字段""")
    TraderID: "TThostFtdcTraderIDType" = property(_thostmduserapi.CThostFtdcExchangeExecOrderField_TraderID_get, _thostmduserapi.CThostFtdcExchangeExecOrderField_TraderID_set, doc=r"""交易所交易员代码""")
    InstallID: "TThostFtdcInstallIDType" = property(_thostmduserapi.CThostFtdcExchangeExecOrderField_InstallID_get, _thostmduserapi.CThostFtdcExchangeExecOrderField_InstallID_set, doc=r"""安装编号""")
    OrderSubmitStatus: "TThostFtdcOrderSubmitStatusType" = property(_thostmduserapi.CThostFtdcExchangeExecOrderField_OrderSubmitStatus_get, _thostmduserapi.CThostFtdcExchangeExecOrderField_OrderSubmitStatus_set, doc=r"""执行宣告提交状态""")
    NotifySequence: "TThostFtdcSequenceNoType" = property(_thostmduserapi.CThostFtdcExchangeExecOrderField_NotifySequence_get, _thostmduserapi.CThostFtdcExchangeExecOrderField_NotifySequence_set, doc=r"""报单提示序号""")
    TradingDay: "TThostFtdcDateType" = property(_thostmduserapi.CThostFtdcExchangeExecOrderField_TradingDay_get, _thostmduserapi.CThostFtdcExchangeExecOrderField_TradingDay_set, doc=r"""交易日""")
    SettlementID: "TThostFtdcSettlementIDType" = property(_thostmduserapi.CThostFtdcExchangeExecOrderField_SettlementID_get, _thostmduserapi.CThostFtdcExchangeExecOrderField_SettlementID_set, doc=r"""结算编号""")
    ExecOrderSysID: "TThostFtdcExecOrderSysIDType" = property(_thostmduserapi.CThostFtdcExchangeExecOrderField_ExecOrderSysID_get, _thostmduserapi.CThostFtdcExchangeExecOrderField_ExecOrderSysID_set, doc=r"""执行宣告编号""")
    InsertDate: "TThostFtdcDateType" = property(_thostmduserapi.CThostFtdcExchangeExecOrderField_InsertDate_get, _thostmduserapi.CThostFtdcExchangeExecOrderField_InsertDate_set, doc=r"""报单日期""")
    InsertTime: "TThostFtdcTimeType" = property(_thostmduserapi.CThostFtdcExchangeExecOrderField_InsertTime_get, _thostmduserapi.CThostFtdcExchangeExecOrderField_InsertTime_set, doc=r"""插入时间""")
    CancelTime: "TThostFtdcTimeType" = property(_thostmduserapi.CThostFtdcExchangeExecOrderField_CancelTime_get, _thostmduserapi.CThostFtdcExchangeExecOrderField_CancelTime_set, doc=r"""撤销时间""")
    ExecResult: "TThostFtdcExecResultType" = property(_thostmduserapi.CThostFtdcExchangeExecOrderField_ExecResult_get, _thostmduserapi.CThostFtdcExchangeExecOrderField_ExecResult_set, doc=r"""执行结果""")
    ClearingPartID: "TThostFtdcParticipantIDType" = property(_thostmduserapi.CThostFtdcExchangeExecOrderField_ClearingPartID_get, _thostmduserapi.CThostFtdcExchangeExecOrderField_ClearingPartID_set, doc=r"""结算会员编号""")
    SequenceNo: "TThostFtdcSequenceNoType" = property(_thostmduserapi.CThostFtdcExchangeExecOrderField_SequenceNo_get, _thostmduserapi.CThostFtdcExchangeExecOrderField_SequenceNo_set, doc=r"""序号""")
    BranchID: "TThostFtdcBranchIDType" = property(_thostmduserapi.CThostFtdcExchangeExecOrderField_BranchID_get, _thostmduserapi.CThostFtdcExchangeExecOrderField_BranchID_set, doc=r"""营业部编号""")
    reserve2: "TThostFtdcOldIPAddressType" = property(_thostmduserapi.CThostFtdcExchangeExecOrderField_reserve2_get, _thostmduserapi.CThostFtdcExchangeExecOrderField_reserve2_set, doc=r"""保留的无效字段""")
    MacAddress: "TThostFtdcMacAddressType" = property(_thostmduserapi.CThostFtdcExchangeExecOrderField_MacAddress_get, _thostmduserapi.CThostFtdcExchangeExecOrderField_MacAddress_set, doc=r"""Mac地址""")
    ExchangeInstID: "TThostFtdcExchangeInstIDType" = property(_thostmduserapi.CThostFtdcExchangeExecOrderField_ExchangeInstID_get, _thostmduserapi.CThostFtdcExchangeExecOrderField_ExchangeInstID_set, doc=r"""合约在交易所的代码""")
    IPAddress: "TThostFtdcIPAddressType" = property(_thostmduserapi.CThostFtdcExchangeExecOrderField_IPAddress_get, _thostmduserapi.CThostFtdcExchangeExecOrderField_IPAddress_set, doc=r"""IP地址""")

    def __init__(self):
        _thostmduserapi.CThostFtdcExchangeExecOrderField_swiginit(self, _thostmduserapi.new_CThostFtdcExchangeExecOrderField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcExchangeExecOrderField

# Register CThostFtdcExchangeExecOrderField in _thostmduserapi:
_thostmduserapi.CThostFtdcExchangeExecOrderField_swigregister(CThostFtdcExchangeExecOrderField)
class CThostFtdcQryExchangeExecOrderField(object):
    r"""交易所执行宣告查询"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ParticipantID: "TThostFtdcParticipantIDType" = property(_thostmduserapi.CThostFtdcQryExchangeExecOrderField_ParticipantID_get, _thostmduserapi.CThostFtdcQryExchangeExecOrderField_ParticipantID_set, doc=r"""会员代码""")
    ClientID: "TThostFtdcClientIDType" = property(_thostmduserapi.CThostFtdcQryExchangeExecOrderField_ClientID_get, _thostmduserapi.CThostFtdcQryExchangeExecOrderField_ClientID_set, doc=r"""客户代码""")
    reserve1: "TThostFtdcOldExchangeInstIDType" = property(_thostmduserapi.CThostFtdcQryExchangeExecOrderField_reserve1_get, _thostmduserapi.CThostFtdcQryExchangeExecOrderField_reserve1_set, doc=r"""保留的无效字段""")
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcQryExchangeExecOrderField_ExchangeID_get, _thostmduserapi.CThostFtdcQryExchangeExecOrderField_ExchangeID_set, doc=r"""交易所代码""")
    TraderID: "TThostFtdcTraderIDType" = property(_thostmduserapi.CThostFtdcQryExchangeExecOrderField_TraderID_get, _thostmduserapi.CThostFtdcQryExchangeExecOrderField_TraderID_set, doc=r"""交易所交易员代码""")
    ExchangeInstID: "TThostFtdcExchangeInstIDType" = property(_thostmduserapi.CThostFtdcQryExchangeExecOrderField_ExchangeInstID_get, _thostmduserapi.CThostFtdcQryExchangeExecOrderField_ExchangeInstID_set, doc=r"""合约在交易所的代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcQryExchangeExecOrderField_swiginit(self, _thostmduserapi.new_CThostFtdcQryExchangeExecOrderField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcQryExchangeExecOrderField

# Register CThostFtdcQryExchangeExecOrderField in _thostmduserapi:
_thostmduserapi.CThostFtdcQryExchangeExecOrderField_swigregister(CThostFtdcQryExchangeExecOrderField)
class CThostFtdcQryExecOrderActionField(object):
    r"""执行宣告操作查询"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcQryExecOrderActionField_BrokerID_get, _thostmduserapi.CThostFtdcQryExecOrderActionField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "TThostFtdcInvestorIDType" = property(_thostmduserapi.CThostFtdcQryExecOrderActionField_InvestorID_get, _thostmduserapi.CThostFtdcQryExecOrderActionField_InvestorID_set, doc=r"""投资者代码""")
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcQryExecOrderActionField_ExchangeID_get, _thostmduserapi.CThostFtdcQryExecOrderActionField_ExchangeID_set, doc=r"""交易所代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcQryExecOrderActionField_swiginit(self, _thostmduserapi.new_CThostFtdcQryExecOrderActionField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcQryExecOrderActionField

# Register CThostFtdcQryExecOrderActionField in _thostmduserapi:
_thostmduserapi.CThostFtdcQryExecOrderActionField_swigregister(CThostFtdcQryExecOrderActionField)
class CThostFtdcExchangeExecOrderActionField(object):
    r"""交易所执行宣告操作"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcExchangeExecOrderActionField_ExchangeID_get, _thostmduserapi.CThostFtdcExchangeExecOrderActionField_ExchangeID_set, doc=r"""交易所代码""")
    ExecOrderSysID: "TThostFtdcExecOrderSysIDType" = property(_thostmduserapi.CThostFtdcExchangeExecOrderActionField_ExecOrderSysID_get, _thostmduserapi.CThostFtdcExchangeExecOrderActionField_ExecOrderSysID_set, doc=r"""执行宣告操作编号""")
    ActionFlag: "TThostFtdcActionFlagType" = property(_thostmduserapi.CThostFtdcExchangeExecOrderActionField_ActionFlag_get, _thostmduserapi.CThostFtdcExchangeExecOrderActionField_ActionFlag_set, doc=r"""操作标志""")
    ActionDate: "TThostFtdcDateType" = property(_thostmduserapi.CThostFtdcExchangeExecOrderActionField_ActionDate_get, _thostmduserapi.CThostFtdcExchangeExecOrderActionField_ActionDate_set, doc=r"""操作日期""")
    ActionTime: "TThostFtdcTimeType" = property(_thostmduserapi.CThostFtdcExchangeExecOrderActionField_ActionTime_get, _thostmduserapi.CThostFtdcExchangeExecOrderActionField_ActionTime_set, doc=r"""操作时间""")
    TraderID: "TThostFtdcTraderIDType" = property(_thostmduserapi.CThostFtdcExchangeExecOrderActionField_TraderID_get, _thostmduserapi.CThostFtdcExchangeExecOrderActionField_TraderID_set, doc=r"""交易所交易员代码""")
    InstallID: "TThostFtdcInstallIDType" = property(_thostmduserapi.CThostFtdcExchangeExecOrderActionField_InstallID_get, _thostmduserapi.CThostFtdcExchangeExecOrderActionField_InstallID_set, doc=r"""安装编号""")
    ExecOrderLocalID: "TThostFtdcOrderLocalIDType" = property(_thostmduserapi.CThostFtdcExchangeExecOrderActionField_ExecOrderLocalID_get, _thostmduserapi.CThostFtdcExchangeExecOrderActionField_ExecOrderLocalID_set, doc=r"""本地执行宣告编号""")
    ActionLocalID: "TThostFtdcOrderLocalIDType" = property(_thostmduserapi.CThostFtdcExchangeExecOrderActionField_ActionLocalID_get, _thostmduserapi.CThostFtdcExchangeExecOrderActionField_ActionLocalID_set, doc=r"""操作本地编号""")
    ParticipantID: "TThostFtdcParticipantIDType" = property(_thostmduserapi.CThostFtdcExchangeExecOrderActionField_ParticipantID_get, _thostmduserapi.CThostFtdcExchangeExecOrderActionField_ParticipantID_set, doc=r"""会员代码""")
    ClientID: "TThostFtdcClientIDType" = property(_thostmduserapi.CThostFtdcExchangeExecOrderActionField_ClientID_get, _thostmduserapi.CThostFtdcExchangeExecOrderActionField_ClientID_set, doc=r"""客户代码""")
    BusinessUnit: "TThostFtdcBusinessUnitType" = property(_thostmduserapi.CThostFtdcExchangeExecOrderActionField_BusinessUnit_get, _thostmduserapi.CThostFtdcExchangeExecOrderActionField_BusinessUnit_set, doc=r"""业务单元""")
    OrderActionStatus: "TThostFtdcOrderActionStatusType" = property(_thostmduserapi.CThostFtdcExchangeExecOrderActionField_OrderActionStatus_get, _thostmduserapi.CThostFtdcExchangeExecOrderActionField_OrderActionStatus_set, doc=r"""报单操作状态""")
    UserID: "TThostFtdcUserIDType" = property(_thostmduserapi.CThostFtdcExchangeExecOrderActionField_UserID_get, _thostmduserapi.CThostFtdcExchangeExecOrderActionField_UserID_set, doc=r"""用户代码""")
    ActionType: "TThostFtdcActionTypeType" = property(_thostmduserapi.CThostFtdcExchangeExecOrderActionField_ActionType_get, _thostmduserapi.CThostFtdcExchangeExecOrderActionField_ActionType_set, doc=r"""执行类型""")
    BranchID: "TThostFtdcBranchIDType" = property(_thostmduserapi.CThostFtdcExchangeExecOrderActionField_BranchID_get, _thostmduserapi.CThostFtdcExchangeExecOrderActionField_BranchID_set, doc=r"""营业部编号""")
    reserve1: "TThostFtdcOldIPAddressType" = property(_thostmduserapi.CThostFtdcExchangeExecOrderActionField_reserve1_get, _thostmduserapi.CThostFtdcExchangeExecOrderActionField_reserve1_set, doc=r"""保留的无效字段""")
    MacAddress: "TThostFtdcMacAddressType" = property(_thostmduserapi.CThostFtdcExchangeExecOrderActionField_MacAddress_get, _thostmduserapi.CThostFtdcExchangeExecOrderActionField_MacAddress_set, doc=r"""Mac地址""")
    reserve2: "TThostFtdcOldExchangeInstIDType" = property(_thostmduserapi.CThostFtdcExchangeExecOrderActionField_reserve2_get, _thostmduserapi.CThostFtdcExchangeExecOrderActionField_reserve2_set, doc=r"""保留的无效字段""")
    Volume: "TThostFtdcVolumeType" = property(_thostmduserapi.CThostFtdcExchangeExecOrderActionField_Volume_get, _thostmduserapi.CThostFtdcExchangeExecOrderActionField_Volume_set, doc=r"""数量""")
    IPAddress: "TThostFtdcIPAddressType" = property(_thostmduserapi.CThostFtdcExchangeExecOrderActionField_IPAddress_get, _thostmduserapi.CThostFtdcExchangeExecOrderActionField_IPAddress_set, doc=r"""IP地址""")
    ExchangeInstID: "TThostFtdcExchangeInstIDType" = property(_thostmduserapi.CThostFtdcExchangeExecOrderActionField_ExchangeInstID_get, _thostmduserapi.CThostFtdcExchangeExecOrderActionField_ExchangeInstID_set, doc=r"""合约在交易所的代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcExchangeExecOrderActionField_swiginit(self, _thostmduserapi.new_CThostFtdcExchangeExecOrderActionField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcExchangeExecOrderActionField

# Register CThostFtdcExchangeExecOrderActionField in _thostmduserapi:
_thostmduserapi.CThostFtdcExchangeExecOrderActionField_swigregister(CThostFtdcExchangeExecOrderActionField)
class CThostFtdcQryExchangeExecOrderActionField(object):
    r"""交易所执行宣告操作查询"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ParticipantID: "TThostFtdcParticipantIDType" = property(_thostmduserapi.CThostFtdcQryExchangeExecOrderActionField_ParticipantID_get, _thostmduserapi.CThostFtdcQryExchangeExecOrderActionField_ParticipantID_set, doc=r"""会员代码""")
    ClientID: "TThostFtdcClientIDType" = property(_thostmduserapi.CThostFtdcQryExchangeExecOrderActionField_ClientID_get, _thostmduserapi.CThostFtdcQryExchangeExecOrderActionField_ClientID_set, doc=r"""客户代码""")
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcQryExchangeExecOrderActionField_ExchangeID_get, _thostmduserapi.CThostFtdcQryExchangeExecOrderActionField_ExchangeID_set, doc=r"""交易所代码""")
    TraderID: "TThostFtdcTraderIDType" = property(_thostmduserapi.CThostFtdcQryExchangeExecOrderActionField_TraderID_get, _thostmduserapi.CThostFtdcQryExchangeExecOrderActionField_TraderID_set, doc=r"""交易所交易员代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcQryExchangeExecOrderActionField_swiginit(self, _thostmduserapi.new_CThostFtdcQryExchangeExecOrderActionField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcQryExchangeExecOrderActionField

# Register CThostFtdcQryExchangeExecOrderActionField in _thostmduserapi:
_thostmduserapi.CThostFtdcQryExchangeExecOrderActionField_swigregister(CThostFtdcQryExchangeExecOrderActionField)
class CThostFtdcErrExecOrderField(object):
    r"""错误执行宣告"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcErrExecOrderField_BrokerID_get, _thostmduserapi.CThostFtdcErrExecOrderField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "TThostFtdcInvestorIDType" = property(_thostmduserapi.CThostFtdcErrExecOrderField_InvestorID_get, _thostmduserapi.CThostFtdcErrExecOrderField_InvestorID_set, doc=r"""投资者代码""")
    reserve1: "TThostFtdcOldInstrumentIDType" = property(_thostmduserapi.CThostFtdcErrExecOrderField_reserve1_get, _thostmduserapi.CThostFtdcErrExecOrderField_reserve1_set, doc=r"""保留的无效字段""")
    ExecOrderRef: "TThostFtdcOrderRefType" = property(_thostmduserapi.CThostFtdcErrExecOrderField_ExecOrderRef_get, _thostmduserapi.CThostFtdcErrExecOrderField_ExecOrderRef_set, doc=r"""执行宣告引用""")
    UserID: "TThostFtdcUserIDType" = property(_thostmduserapi.CThostFtdcErrExecOrderField_UserID_get, _thostmduserapi.CThostFtdcErrExecOrderField_UserID_set, doc=r"""用户代码""")
    Volume: "TThostFtdcVolumeType" = property(_thostmduserapi.CThostFtdcErrExecOrderField_Volume_get, _thostmduserapi.CThostFtdcErrExecOrderField_Volume_set, doc=r"""数量""")
    RequestID: "TThostFtdcRequestIDType" = property(_thostmduserapi.CThostFtdcErrExecOrderField_RequestID_get, _thostmduserapi.CThostFtdcErrExecOrderField_RequestID_set, doc=r"""请求编号""")
    BusinessUnit: "TThostFtdcBusinessUnitType" = property(_thostmduserapi.CThostFtdcErrExecOrderField_BusinessUnit_get, _thostmduserapi.CThostFtdcErrExecOrderField_BusinessUnit_set, doc=r"""业务单元""")
    OffsetFlag: "TThostFtdcOffsetFlagType" = property(_thostmduserapi.CThostFtdcErrExecOrderField_OffsetFlag_get, _thostmduserapi.CThostFtdcErrExecOrderField_OffsetFlag_set, doc=r"""开平标志""")
    HedgeFlag: "TThostFtdcHedgeFlagType" = property(_thostmduserapi.CThostFtdcErrExecOrderField_HedgeFlag_get, _thostmduserapi.CThostFtdcErrExecOrderField_HedgeFlag_set, doc=r"""投机套保标志""")
    ActionType: "TThostFtdcActionTypeType" = property(_thostmduserapi.CThostFtdcErrExecOrderField_ActionType_get, _thostmduserapi.CThostFtdcErrExecOrderField_ActionType_set, doc=r"""执行类型""")
    PosiDirection: "TThostFtdcPosiDirectionType" = property(_thostmduserapi.CThostFtdcErrExecOrderField_PosiDirection_get, _thostmduserapi.CThostFtdcErrExecOrderField_PosiDirection_set, doc=r"""保留头寸申请的持仓方向""")
    ReservePositionFlag: "TThostFtdcExecOrderPositionFlagType" = property(_thostmduserapi.CThostFtdcErrExecOrderField_ReservePositionFlag_get, _thostmduserapi.CThostFtdcErrExecOrderField_ReservePositionFlag_set, doc=r"""期权行权后是否保留期货头寸的标记,该字段已废弃""")
    CloseFlag: "TThostFtdcExecOrderCloseFlagType" = property(_thostmduserapi.CThostFtdcErrExecOrderField_CloseFlag_get, _thostmduserapi.CThostFtdcErrExecOrderField_CloseFlag_set, doc=r"""期权行权后生成的头寸是否自动平仓""")
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcErrExecOrderField_ExchangeID_get, _thostmduserapi.CThostFtdcErrExecOrderField_ExchangeID_set, doc=r"""交易所代码""")
    InvestUnitID: "TThostFtdcInvestUnitIDType" = property(_thostmduserapi.CThostFtdcErrExecOrderField_InvestUnitID_get, _thostmduserapi.CThostFtdcErrExecOrderField_InvestUnitID_set, doc=r"""投资单元代码""")
    AccountID: "TThostFtdcAccountIDType" = property(_thostmduserapi.CThostFtdcErrExecOrderField_AccountID_get, _thostmduserapi.CThostFtdcErrExecOrderField_AccountID_set, doc=r"""资金账号""")
    CurrencyID: "TThostFtdcCurrencyIDType" = property(_thostmduserapi.CThostFtdcErrExecOrderField_CurrencyID_get, _thostmduserapi.CThostFtdcErrExecOrderField_CurrencyID_set, doc=r"""币种代码""")
    ClientID: "TThostFtdcClientIDType" = property(_thostmduserapi.CThostFtdcErrExecOrderField_ClientID_get, _thostmduserapi.CThostFtdcErrExecOrderField_ClientID_set, doc=r"""交易编码""")
    reserve2: "TThostFtdcOldIPAddressType" = property(_thostmduserapi.CThostFtdcErrExecOrderField_reserve2_get, _thostmduserapi.CThostFtdcErrExecOrderField_reserve2_set, doc=r"""保留的无效字段""")
    MacAddress: "TThostFtdcMacAddressType" = property(_thostmduserapi.CThostFtdcErrExecOrderField_MacAddress_get, _thostmduserapi.CThostFtdcErrExecOrderField_MacAddress_set, doc=r"""Mac地址""")
    ErrorID: "TThostFtdcErrorIDType" = property(_thostmduserapi.CThostFtdcErrExecOrderField_ErrorID_get, _thostmduserapi.CThostFtdcErrExecOrderField_ErrorID_set, doc=r"""错误代码""")
    ErrorMsg: "TThostFtdcErrorMsgType" = property(_thostmduserapi.CThostFtdcErrExecOrderField_ErrorMsg_get, _thostmduserapi.CThostFtdcErrExecOrderField_ErrorMsg_set, doc=r"""错误信息""")
    InstrumentID: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcErrExecOrderField_InstrumentID_get, _thostmduserapi.CThostFtdcErrExecOrderField_InstrumentID_set, doc=r"""合约代码""")
    IPAddress: "TThostFtdcIPAddressType" = property(_thostmduserapi.CThostFtdcErrExecOrderField_IPAddress_get, _thostmduserapi.CThostFtdcErrExecOrderField_IPAddress_set, doc=r"""IP地址""")

    def __init__(self):
        _thostmduserapi.CThostFtdcErrExecOrderField_swiginit(self, _thostmduserapi.new_CThostFtdcErrExecOrderField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcErrExecOrderField

# Register CThostFtdcErrExecOrderField in _thostmduserapi:
_thostmduserapi.CThostFtdcErrExecOrderField_swigregister(CThostFtdcErrExecOrderField)
class CThostFtdcQryErrExecOrderField(object):
    r"""查询错误执行宣告"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcQryErrExecOrderField_BrokerID_get, _thostmduserapi.CThostFtdcQryErrExecOrderField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "TThostFtdcInvestorIDType" = property(_thostmduserapi.CThostFtdcQryErrExecOrderField_InvestorID_get, _thostmduserapi.CThostFtdcQryErrExecOrderField_InvestorID_set, doc=r"""投资者代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcQryErrExecOrderField_swiginit(self, _thostmduserapi.new_CThostFtdcQryErrExecOrderField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcQryErrExecOrderField

# Register CThostFtdcQryErrExecOrderField in _thostmduserapi:
_thostmduserapi.CThostFtdcQryErrExecOrderField_swigregister(CThostFtdcQryErrExecOrderField)
class CThostFtdcErrExecOrderActionField(object):
    r"""错误执行宣告操作"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcErrExecOrderActionField_BrokerID_get, _thostmduserapi.CThostFtdcErrExecOrderActionField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "TThostFtdcInvestorIDType" = property(_thostmduserapi.CThostFtdcErrExecOrderActionField_InvestorID_get, _thostmduserapi.CThostFtdcErrExecOrderActionField_InvestorID_set, doc=r"""投资者代码""")
    ExecOrderActionRef: "TThostFtdcOrderActionRefType" = property(_thostmduserapi.CThostFtdcErrExecOrderActionField_ExecOrderActionRef_get, _thostmduserapi.CThostFtdcErrExecOrderActionField_ExecOrderActionRef_set, doc=r"""执行宣告操作引用""")
    ExecOrderRef: "TThostFtdcOrderRefType" = property(_thostmduserapi.CThostFtdcErrExecOrderActionField_ExecOrderRef_get, _thostmduserapi.CThostFtdcErrExecOrderActionField_ExecOrderRef_set, doc=r"""执行宣告引用""")
    RequestID: "TThostFtdcRequestIDType" = property(_thostmduserapi.CThostFtdcErrExecOrderActionField_RequestID_get, _thostmduserapi.CThostFtdcErrExecOrderActionField_RequestID_set, doc=r"""请求编号""")
    FrontID: "TThostFtdcFrontIDType" = property(_thostmduserapi.CThostFtdcErrExecOrderActionField_FrontID_get, _thostmduserapi.CThostFtdcErrExecOrderActionField_FrontID_set, doc=r"""前置编号""")
    SessionID: "TThostFtdcSessionIDType" = property(_thostmduserapi.CThostFtdcErrExecOrderActionField_SessionID_get, _thostmduserapi.CThostFtdcErrExecOrderActionField_SessionID_set, doc=r"""会话编号""")
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcErrExecOrderActionField_ExchangeID_get, _thostmduserapi.CThostFtdcErrExecOrderActionField_ExchangeID_set, doc=r"""交易所代码""")
    ExecOrderSysID: "TThostFtdcExecOrderSysIDType" = property(_thostmduserapi.CThostFtdcErrExecOrderActionField_ExecOrderSysID_get, _thostmduserapi.CThostFtdcErrExecOrderActionField_ExecOrderSysID_set, doc=r"""执行宣告操作编号""")
    ActionFlag: "TThostFtdcActionFlagType" = property(_thostmduserapi.CThostFtdcErrExecOrderActionField_ActionFlag_get, _thostmduserapi.CThostFtdcErrExecOrderActionField_ActionFlag_set, doc=r"""操作标志""")
    UserID: "TThostFtdcUserIDType" = property(_thostmduserapi.CThostFtdcErrExecOrderActionField_UserID_get, _thostmduserapi.CThostFtdcErrExecOrderActionField_UserID_set, doc=r"""用户代码""")
    reserve1: "TThostFtdcOldInstrumentIDType" = property(_thostmduserapi.CThostFtdcErrExecOrderActionField_reserve1_get, _thostmduserapi.CThostFtdcErrExecOrderActionField_reserve1_set, doc=r"""保留的无效字段""")
    InvestUnitID: "TThostFtdcInvestUnitIDType" = property(_thostmduserapi.CThostFtdcErrExecOrderActionField_InvestUnitID_get, _thostmduserapi.CThostFtdcErrExecOrderActionField_InvestUnitID_set, doc=r"""投资单元代码""")
    reserve2: "TThostFtdcOldIPAddressType" = property(_thostmduserapi.CThostFtdcErrExecOrderActionField_reserve2_get, _thostmduserapi.CThostFtdcErrExecOrderActionField_reserve2_set, doc=r"""保留的无效字段""")
    MacAddress: "TThostFtdcMacAddressType" = property(_thostmduserapi.CThostFtdcErrExecOrderActionField_MacAddress_get, _thostmduserapi.CThostFtdcErrExecOrderActionField_MacAddress_set, doc=r"""Mac地址""")
    ErrorID: "TThostFtdcErrorIDType" = property(_thostmduserapi.CThostFtdcErrExecOrderActionField_ErrorID_get, _thostmduserapi.CThostFtdcErrExecOrderActionField_ErrorID_set, doc=r"""错误代码""")
    ErrorMsg: "TThostFtdcErrorMsgType" = property(_thostmduserapi.CThostFtdcErrExecOrderActionField_ErrorMsg_get, _thostmduserapi.CThostFtdcErrExecOrderActionField_ErrorMsg_set, doc=r"""错误信息""")
    InstrumentID: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcErrExecOrderActionField_InstrumentID_get, _thostmduserapi.CThostFtdcErrExecOrderActionField_InstrumentID_set, doc=r"""合约代码""")
    IPAddress: "TThostFtdcIPAddressType" = property(_thostmduserapi.CThostFtdcErrExecOrderActionField_IPAddress_get, _thostmduserapi.CThostFtdcErrExecOrderActionField_IPAddress_set, doc=r"""IP地址""")

    def __init__(self):
        _thostmduserapi.CThostFtdcErrExecOrderActionField_swiginit(self, _thostmduserapi.new_CThostFtdcErrExecOrderActionField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcErrExecOrderActionField

# Register CThostFtdcErrExecOrderActionField in _thostmduserapi:
_thostmduserapi.CThostFtdcErrExecOrderActionField_swigregister(CThostFtdcErrExecOrderActionField)
class CThostFtdcQryErrExecOrderActionField(object):
    r"""查询错误执行宣告操作"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcQryErrExecOrderActionField_BrokerID_get, _thostmduserapi.CThostFtdcQryErrExecOrderActionField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "TThostFtdcInvestorIDType" = property(_thostmduserapi.CThostFtdcQryErrExecOrderActionField_InvestorID_get, _thostmduserapi.CThostFtdcQryErrExecOrderActionField_InvestorID_set, doc=r"""投资者代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcQryErrExecOrderActionField_swiginit(self, _thostmduserapi.new_CThostFtdcQryErrExecOrderActionField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcQryErrExecOrderActionField

# Register CThostFtdcQryErrExecOrderActionField in _thostmduserapi:
_thostmduserapi.CThostFtdcQryErrExecOrderActionField_swigregister(CThostFtdcQryErrExecOrderActionField)
class CThostFtdcOptionInstrTradingRightField(object):
    r"""投资者期权合约交易权限"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    reserve1: "TThostFtdcOldInstrumentIDType" = property(_thostmduserapi.CThostFtdcOptionInstrTradingRightField_reserve1_get, _thostmduserapi.CThostFtdcOptionInstrTradingRightField_reserve1_set, doc=r"""保留的无效字段""")
    InvestorRange: "TThostFtdcInvestorRangeType" = property(_thostmduserapi.CThostFtdcOptionInstrTradingRightField_InvestorRange_get, _thostmduserapi.CThostFtdcOptionInstrTradingRightField_InvestorRange_set, doc=r"""投资者范围""")
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcOptionInstrTradingRightField_BrokerID_get, _thostmduserapi.CThostFtdcOptionInstrTradingRightField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "TThostFtdcInvestorIDType" = property(_thostmduserapi.CThostFtdcOptionInstrTradingRightField_InvestorID_get, _thostmduserapi.CThostFtdcOptionInstrTradingRightField_InvestorID_set, doc=r"""投资者代码""")
    Direction: "TThostFtdcDirectionType" = property(_thostmduserapi.CThostFtdcOptionInstrTradingRightField_Direction_get, _thostmduserapi.CThostFtdcOptionInstrTradingRightField_Direction_set, doc=r"""买卖方向""")
    TradingRight: "TThostFtdcTradingRightType" = property(_thostmduserapi.CThostFtdcOptionInstrTradingRightField_TradingRight_get, _thostmduserapi.CThostFtdcOptionInstrTradingRightField_TradingRight_set, doc=r"""交易权限""")
    InstrumentID: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcOptionInstrTradingRightField_InstrumentID_get, _thostmduserapi.CThostFtdcOptionInstrTradingRightField_InstrumentID_set, doc=r"""合约代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcOptionInstrTradingRightField_swiginit(self, _thostmduserapi.new_CThostFtdcOptionInstrTradingRightField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcOptionInstrTradingRightField

# Register CThostFtdcOptionInstrTradingRightField in _thostmduserapi:
_thostmduserapi.CThostFtdcOptionInstrTradingRightField_swigregister(CThostFtdcOptionInstrTradingRightField)
class CThostFtdcQryOptionInstrTradingRightField(object):
    r"""查询期权合约交易权限"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcQryOptionInstrTradingRightField_BrokerID_get, _thostmduserapi.CThostFtdcQryOptionInstrTradingRightField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "TThostFtdcInvestorIDType" = property(_thostmduserapi.CThostFtdcQryOptionInstrTradingRightField_InvestorID_get, _thostmduserapi.CThostFtdcQryOptionInstrTradingRightField_InvestorID_set, doc=r"""投资者代码""")
    reserve1: "TThostFtdcOldInstrumentIDType" = property(_thostmduserapi.CThostFtdcQryOptionInstrTradingRightField_reserve1_get, _thostmduserapi.CThostFtdcQryOptionInstrTradingRightField_reserve1_set, doc=r"""保留的无效字段""")
    Direction: "TThostFtdcDirectionType" = property(_thostmduserapi.CThostFtdcQryOptionInstrTradingRightField_Direction_get, _thostmduserapi.CThostFtdcQryOptionInstrTradingRightField_Direction_set, doc=r"""买卖方向""")
    InstrumentID: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcQryOptionInstrTradingRightField_InstrumentID_get, _thostmduserapi.CThostFtdcQryOptionInstrTradingRightField_InstrumentID_set, doc=r"""合约代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcQryOptionInstrTradingRightField_swiginit(self, _thostmduserapi.new_CThostFtdcQryOptionInstrTradingRightField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcQryOptionInstrTradingRightField

# Register CThostFtdcQryOptionInstrTradingRightField in _thostmduserapi:
_thostmduserapi.CThostFtdcQryOptionInstrTradingRightField_swigregister(CThostFtdcQryOptionInstrTradingRightField)
class CThostFtdcInputForQuoteField(object):
    r"""输入的询价"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcInputForQuoteField_BrokerID_get, _thostmduserapi.CThostFtdcInputForQuoteField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "TThostFtdcInvestorIDType" = property(_thostmduserapi.CThostFtdcInputForQuoteField_InvestorID_get, _thostmduserapi.CThostFtdcInputForQuoteField_InvestorID_set, doc=r"""投资者代码""")
    reserve1: "TThostFtdcOldInstrumentIDType" = property(_thostmduserapi.CThostFtdcInputForQuoteField_reserve1_get, _thostmduserapi.CThostFtdcInputForQuoteField_reserve1_set, doc=r"""保留的无效字段""")
    ForQuoteRef: "TThostFtdcOrderRefType" = property(_thostmduserapi.CThostFtdcInputForQuoteField_ForQuoteRef_get, _thostmduserapi.CThostFtdcInputForQuoteField_ForQuoteRef_set, doc=r"""询价引用""")
    UserID: "TThostFtdcUserIDType" = property(_thostmduserapi.CThostFtdcInputForQuoteField_UserID_get, _thostmduserapi.CThostFtdcInputForQuoteField_UserID_set, doc=r"""用户代码""")
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcInputForQuoteField_ExchangeID_get, _thostmduserapi.CThostFtdcInputForQuoteField_ExchangeID_set, doc=r"""交易所代码""")
    InvestUnitID: "TThostFtdcInvestUnitIDType" = property(_thostmduserapi.CThostFtdcInputForQuoteField_InvestUnitID_get, _thostmduserapi.CThostFtdcInputForQuoteField_InvestUnitID_set, doc=r"""投资单元代码""")
    reserve2: "TThostFtdcOldIPAddressType" = property(_thostmduserapi.CThostFtdcInputForQuoteField_reserve2_get, _thostmduserapi.CThostFtdcInputForQuoteField_reserve2_set, doc=r"""保留的无效字段""")
    MacAddress: "TThostFtdcMacAddressType" = property(_thostmduserapi.CThostFtdcInputForQuoteField_MacAddress_get, _thostmduserapi.CThostFtdcInputForQuoteField_MacAddress_set, doc=r"""Mac地址""")
    InstrumentID: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcInputForQuoteField_InstrumentID_get, _thostmduserapi.CThostFtdcInputForQuoteField_InstrumentID_set, doc=r"""合约代码""")
    IPAddress: "TThostFtdcIPAddressType" = property(_thostmduserapi.CThostFtdcInputForQuoteField_IPAddress_get, _thostmduserapi.CThostFtdcInputForQuoteField_IPAddress_set, doc=r"""IP地址""")

    def __init__(self):
        _thostmduserapi.CThostFtdcInputForQuoteField_swiginit(self, _thostmduserapi.new_CThostFtdcInputForQuoteField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcInputForQuoteField

# Register CThostFtdcInputForQuoteField in _thostmduserapi:
_thostmduserapi.CThostFtdcInputForQuoteField_swigregister(CThostFtdcInputForQuoteField)
class CThostFtdcForQuoteField(object):
    r"""询价"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcForQuoteField_BrokerID_get, _thostmduserapi.CThostFtdcForQuoteField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "TThostFtdcInvestorIDType" = property(_thostmduserapi.CThostFtdcForQuoteField_InvestorID_get, _thostmduserapi.CThostFtdcForQuoteField_InvestorID_set, doc=r"""投资者代码""")
    reserve1: "TThostFtdcOldInstrumentIDType" = property(_thostmduserapi.CThostFtdcForQuoteField_reserve1_get, _thostmduserapi.CThostFtdcForQuoteField_reserve1_set, doc=r"""保留的无效字段""")
    ForQuoteRef: "TThostFtdcOrderRefType" = property(_thostmduserapi.CThostFtdcForQuoteField_ForQuoteRef_get, _thostmduserapi.CThostFtdcForQuoteField_ForQuoteRef_set, doc=r"""询价引用""")
    UserID: "TThostFtdcUserIDType" = property(_thostmduserapi.CThostFtdcForQuoteField_UserID_get, _thostmduserapi.CThostFtdcForQuoteField_UserID_set, doc=r"""用户代码""")
    ForQuoteLocalID: "TThostFtdcOrderLocalIDType" = property(_thostmduserapi.CThostFtdcForQuoteField_ForQuoteLocalID_get, _thostmduserapi.CThostFtdcForQuoteField_ForQuoteLocalID_set, doc=r"""本地询价编号""")
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcForQuoteField_ExchangeID_get, _thostmduserapi.CThostFtdcForQuoteField_ExchangeID_set, doc=r"""交易所代码""")
    ParticipantID: "TThostFtdcParticipantIDType" = property(_thostmduserapi.CThostFtdcForQuoteField_ParticipantID_get, _thostmduserapi.CThostFtdcForQuoteField_ParticipantID_set, doc=r"""会员代码""")
    ClientID: "TThostFtdcClientIDType" = property(_thostmduserapi.CThostFtdcForQuoteField_ClientID_get, _thostmduserapi.CThostFtdcForQuoteField_ClientID_set, doc=r"""客户代码""")
    reserve2: "TThostFtdcOldExchangeInstIDType" = property(_thostmduserapi.CThostFtdcForQuoteField_reserve2_get, _thostmduserapi.CThostFtdcForQuoteField_reserve2_set, doc=r"""保留的无效字段""")
    TraderID: "TThostFtdcTraderIDType" = property(_thostmduserapi.CThostFtdcForQuoteField_TraderID_get, _thostmduserapi.CThostFtdcForQuoteField_TraderID_set, doc=r"""交易所交易员代码""")
    InstallID: "TThostFtdcInstallIDType" = property(_thostmduserapi.CThostFtdcForQuoteField_InstallID_get, _thostmduserapi.CThostFtdcForQuoteField_InstallID_set, doc=r"""安装编号""")
    InsertDate: "TThostFtdcDateType" = property(_thostmduserapi.CThostFtdcForQuoteField_InsertDate_get, _thostmduserapi.CThostFtdcForQuoteField_InsertDate_set, doc=r"""报单日期""")
    InsertTime: "TThostFtdcTimeType" = property(_thostmduserapi.CThostFtdcForQuoteField_InsertTime_get, _thostmduserapi.CThostFtdcForQuoteField_InsertTime_set, doc=r"""插入时间""")
    ForQuoteStatus: "TThostFtdcForQuoteStatusType" = property(_thostmduserapi.CThostFtdcForQuoteField_ForQuoteStatus_get, _thostmduserapi.CThostFtdcForQuoteField_ForQuoteStatus_set, doc=r"""询价状态""")
    FrontID: "TThostFtdcFrontIDType" = property(_thostmduserapi.CThostFtdcForQuoteField_FrontID_get, _thostmduserapi.CThostFtdcForQuoteField_FrontID_set, doc=r"""前置编号""")
    SessionID: "TThostFtdcSessionIDType" = property(_thostmduserapi.CThostFtdcForQuoteField_SessionID_get, _thostmduserapi.CThostFtdcForQuoteField_SessionID_set, doc=r"""会话编号""")
    StatusMsg: "TThostFtdcErrorMsgType" = property(_thostmduserapi.CThostFtdcForQuoteField_StatusMsg_get, _thostmduserapi.CThostFtdcForQuoteField_StatusMsg_set, doc=r"""状态信息""")
    ActiveUserID: "TThostFtdcUserIDType" = property(_thostmduserapi.CThostFtdcForQuoteField_ActiveUserID_get, _thostmduserapi.CThostFtdcForQuoteField_ActiveUserID_set, doc=r"""操作用户代码""")
    BrokerForQutoSeq: "TThostFtdcSequenceNoType" = property(_thostmduserapi.CThostFtdcForQuoteField_BrokerForQutoSeq_get, _thostmduserapi.CThostFtdcForQuoteField_BrokerForQutoSeq_set, doc=r"""经纪公司询价编号""")
    InvestUnitID: "TThostFtdcInvestUnitIDType" = property(_thostmduserapi.CThostFtdcForQuoteField_InvestUnitID_get, _thostmduserapi.CThostFtdcForQuoteField_InvestUnitID_set, doc=r"""投资单元代码""")
    reserve3: "TThostFtdcOldIPAddressType" = property(_thostmduserapi.CThostFtdcForQuoteField_reserve3_get, _thostmduserapi.CThostFtdcForQuoteField_reserve3_set, doc=r"""保留的无效字段""")
    MacAddress: "TThostFtdcMacAddressType" = property(_thostmduserapi.CThostFtdcForQuoteField_MacAddress_get, _thostmduserapi.CThostFtdcForQuoteField_MacAddress_set, doc=r"""Mac地址""")
    InstrumentID: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcForQuoteField_InstrumentID_get, _thostmduserapi.CThostFtdcForQuoteField_InstrumentID_set, doc=r"""合约代码""")
    ExchangeInstID: "TThostFtdcExchangeInstIDType" = property(_thostmduserapi.CThostFtdcForQuoteField_ExchangeInstID_get, _thostmduserapi.CThostFtdcForQuoteField_ExchangeInstID_set, doc=r"""合约在交易所的代码""")
    IPAddress: "TThostFtdcIPAddressType" = property(_thostmduserapi.CThostFtdcForQuoteField_IPAddress_get, _thostmduserapi.CThostFtdcForQuoteField_IPAddress_set, doc=r"""IP地址""")

    def __init__(self):
        _thostmduserapi.CThostFtdcForQuoteField_swiginit(self, _thostmduserapi.new_CThostFtdcForQuoteField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcForQuoteField

# Register CThostFtdcForQuoteField in _thostmduserapi:
_thostmduserapi.CThostFtdcForQuoteField_swigregister(CThostFtdcForQuoteField)
class CThostFtdcQryForQuoteField(object):
    r"""询价查询"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcQryForQuoteField_BrokerID_get, _thostmduserapi.CThostFtdcQryForQuoteField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "TThostFtdcInvestorIDType" = property(_thostmduserapi.CThostFtdcQryForQuoteField_InvestorID_get, _thostmduserapi.CThostFtdcQryForQuoteField_InvestorID_set, doc=r"""投资者代码""")
    reserve1: "TThostFtdcOldInstrumentIDType" = property(_thostmduserapi.CThostFtdcQryForQuoteField_reserve1_get, _thostmduserapi.CThostFtdcQryForQuoteField_reserve1_set, doc=r"""保留的无效字段""")
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcQryForQuoteField_ExchangeID_get, _thostmduserapi.CThostFtdcQryForQuoteField_ExchangeID_set, doc=r"""交易所代码""")
    InsertTimeStart: "TThostFtdcTimeType" = property(_thostmduserapi.CThostFtdcQryForQuoteField_InsertTimeStart_get, _thostmduserapi.CThostFtdcQryForQuoteField_InsertTimeStart_set, doc=r"""开始时间""")
    InsertTimeEnd: "TThostFtdcTimeType" = property(_thostmduserapi.CThostFtdcQryForQuoteField_InsertTimeEnd_get, _thostmduserapi.CThostFtdcQryForQuoteField_InsertTimeEnd_set, doc=r"""结束时间""")
    InvestUnitID: "TThostFtdcInvestUnitIDType" = property(_thostmduserapi.CThostFtdcQryForQuoteField_InvestUnitID_get, _thostmduserapi.CThostFtdcQryForQuoteField_InvestUnitID_set, doc=r"""投资单元代码""")
    InstrumentID: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcQryForQuoteField_InstrumentID_get, _thostmduserapi.CThostFtdcQryForQuoteField_InstrumentID_set, doc=r"""合约代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcQryForQuoteField_swiginit(self, _thostmduserapi.new_CThostFtdcQryForQuoteField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcQryForQuoteField

# Register CThostFtdcQryForQuoteField in _thostmduserapi:
_thostmduserapi.CThostFtdcQryForQuoteField_swigregister(CThostFtdcQryForQuoteField)
class CThostFtdcExchangeForQuoteField(object):
    r"""交易所询价信息"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ForQuoteLocalID: "TThostFtdcOrderLocalIDType" = property(_thostmduserapi.CThostFtdcExchangeForQuoteField_ForQuoteLocalID_get, _thostmduserapi.CThostFtdcExchangeForQuoteField_ForQuoteLocalID_set, doc=r"""本地询价编号""")
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcExchangeForQuoteField_ExchangeID_get, _thostmduserapi.CThostFtdcExchangeForQuoteField_ExchangeID_set, doc=r"""交易所代码""")
    ParticipantID: "TThostFtdcParticipantIDType" = property(_thostmduserapi.CThostFtdcExchangeForQuoteField_ParticipantID_get, _thostmduserapi.CThostFtdcExchangeForQuoteField_ParticipantID_set, doc=r"""会员代码""")
    ClientID: "TThostFtdcClientIDType" = property(_thostmduserapi.CThostFtdcExchangeForQuoteField_ClientID_get, _thostmduserapi.CThostFtdcExchangeForQuoteField_ClientID_set, doc=r"""客户代码""")
    reserve1: "TThostFtdcOldExchangeInstIDType" = property(_thostmduserapi.CThostFtdcExchangeForQuoteField_reserve1_get, _thostmduserapi.CThostFtdcExchangeForQuoteField_reserve1_set, doc=r"""保留的无效字段""")
    TraderID: "TThostFtdcTraderIDType" = property(_thostmduserapi.CThostFtdcExchangeForQuoteField_TraderID_get, _thostmduserapi.CThostFtdcExchangeForQuoteField_TraderID_set, doc=r"""交易所交易员代码""")
    InstallID: "TThostFtdcInstallIDType" = property(_thostmduserapi.CThostFtdcExchangeForQuoteField_InstallID_get, _thostmduserapi.CThostFtdcExchangeForQuoteField_InstallID_set, doc=r"""安装编号""")
    InsertDate: "TThostFtdcDateType" = property(_thostmduserapi.CThostFtdcExchangeForQuoteField_InsertDate_get, _thostmduserapi.CThostFtdcExchangeForQuoteField_InsertDate_set, doc=r"""报单日期""")
    InsertTime: "TThostFtdcTimeType" = property(_thostmduserapi.CThostFtdcExchangeForQuoteField_InsertTime_get, _thostmduserapi.CThostFtdcExchangeForQuoteField_InsertTime_set, doc=r"""插入时间""")
    ForQuoteStatus: "TThostFtdcForQuoteStatusType" = property(_thostmduserapi.CThostFtdcExchangeForQuoteField_ForQuoteStatus_get, _thostmduserapi.CThostFtdcExchangeForQuoteField_ForQuoteStatus_set, doc=r"""询价状态""")
    reserve2: "TThostFtdcOldIPAddressType" = property(_thostmduserapi.CThostFtdcExchangeForQuoteField_reserve2_get, _thostmduserapi.CThostFtdcExchangeForQuoteField_reserve2_set, doc=r"""保留的无效字段""")
    MacAddress: "TThostFtdcMacAddressType" = property(_thostmduserapi.CThostFtdcExchangeForQuoteField_MacAddress_get, _thostmduserapi.CThostFtdcExchangeForQuoteField_MacAddress_set, doc=r"""Mac地址""")
    ExchangeInstID: "TThostFtdcExchangeInstIDType" = property(_thostmduserapi.CThostFtdcExchangeForQuoteField_ExchangeInstID_get, _thostmduserapi.CThostFtdcExchangeForQuoteField_ExchangeInstID_set, doc=r"""合约在交易所的代码""")
    IPAddress: "TThostFtdcIPAddressType" = property(_thostmduserapi.CThostFtdcExchangeForQuoteField_IPAddress_get, _thostmduserapi.CThostFtdcExchangeForQuoteField_IPAddress_set, doc=r"""IP地址""")

    def __init__(self):
        _thostmduserapi.CThostFtdcExchangeForQuoteField_swiginit(self, _thostmduserapi.new_CThostFtdcExchangeForQuoteField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcExchangeForQuoteField

# Register CThostFtdcExchangeForQuoteField in _thostmduserapi:
_thostmduserapi.CThostFtdcExchangeForQuoteField_swigregister(CThostFtdcExchangeForQuoteField)
class CThostFtdcQryExchangeForQuoteField(object):
    r"""交易所询价查询"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ParticipantID: "TThostFtdcParticipantIDType" = property(_thostmduserapi.CThostFtdcQryExchangeForQuoteField_ParticipantID_get, _thostmduserapi.CThostFtdcQryExchangeForQuoteField_ParticipantID_set, doc=r"""会员代码""")
    ClientID: "TThostFtdcClientIDType" = property(_thostmduserapi.CThostFtdcQryExchangeForQuoteField_ClientID_get, _thostmduserapi.CThostFtdcQryExchangeForQuoteField_ClientID_set, doc=r"""客户代码""")
    reserve1: "TThostFtdcOldExchangeInstIDType" = property(_thostmduserapi.CThostFtdcQryExchangeForQuoteField_reserve1_get, _thostmduserapi.CThostFtdcQryExchangeForQuoteField_reserve1_set, doc=r"""保留的无效字段""")
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcQryExchangeForQuoteField_ExchangeID_get, _thostmduserapi.CThostFtdcQryExchangeForQuoteField_ExchangeID_set, doc=r"""交易所代码""")
    TraderID: "TThostFtdcTraderIDType" = property(_thostmduserapi.CThostFtdcQryExchangeForQuoteField_TraderID_get, _thostmduserapi.CThostFtdcQryExchangeForQuoteField_TraderID_set, doc=r"""交易所交易员代码""")
    ExchangeInstID: "TThostFtdcExchangeInstIDType" = property(_thostmduserapi.CThostFtdcQryExchangeForQuoteField_ExchangeInstID_get, _thostmduserapi.CThostFtdcQryExchangeForQuoteField_ExchangeInstID_set, doc=r"""合约在交易所的代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcQryExchangeForQuoteField_swiginit(self, _thostmduserapi.new_CThostFtdcQryExchangeForQuoteField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcQryExchangeForQuoteField

# Register CThostFtdcQryExchangeForQuoteField in _thostmduserapi:
_thostmduserapi.CThostFtdcQryExchangeForQuoteField_swigregister(CThostFtdcQryExchangeForQuoteField)
class CThostFtdcInputQuoteField(object):
    r"""输入的报价"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcInputQuoteField_BrokerID_get, _thostmduserapi.CThostFtdcInputQuoteField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "TThostFtdcInvestorIDType" = property(_thostmduserapi.CThostFtdcInputQuoteField_InvestorID_get, _thostmduserapi.CThostFtdcInputQuoteField_InvestorID_set, doc=r"""投资者代码""")
    reserve1: "TThostFtdcOldInstrumentIDType" = property(_thostmduserapi.CThostFtdcInputQuoteField_reserve1_get, _thostmduserapi.CThostFtdcInputQuoteField_reserve1_set, doc=r"""保留的无效字段""")
    QuoteRef: "TThostFtdcOrderRefType" = property(_thostmduserapi.CThostFtdcInputQuoteField_QuoteRef_get, _thostmduserapi.CThostFtdcInputQuoteField_QuoteRef_set, doc=r"""报价引用""")
    UserID: "TThostFtdcUserIDType" = property(_thostmduserapi.CThostFtdcInputQuoteField_UserID_get, _thostmduserapi.CThostFtdcInputQuoteField_UserID_set, doc=r"""用户代码""")
    AskPrice: "TThostFtdcPriceType" = property(_thostmduserapi.CThostFtdcInputQuoteField_AskPrice_get, _thostmduserapi.CThostFtdcInputQuoteField_AskPrice_set, doc=r"""卖价格""")
    BidPrice: "TThostFtdcPriceType" = property(_thostmduserapi.CThostFtdcInputQuoteField_BidPrice_get, _thostmduserapi.CThostFtdcInputQuoteField_BidPrice_set, doc=r"""买价格""")
    AskVolume: "TThostFtdcVolumeType" = property(_thostmduserapi.CThostFtdcInputQuoteField_AskVolume_get, _thostmduserapi.CThostFtdcInputQuoteField_AskVolume_set, doc=r"""卖数量""")
    BidVolume: "TThostFtdcVolumeType" = property(_thostmduserapi.CThostFtdcInputQuoteField_BidVolume_get, _thostmduserapi.CThostFtdcInputQuoteField_BidVolume_set, doc=r"""买数量""")
    RequestID: "TThostFtdcRequestIDType" = property(_thostmduserapi.CThostFtdcInputQuoteField_RequestID_get, _thostmduserapi.CThostFtdcInputQuoteField_RequestID_set, doc=r"""请求编号""")
    BusinessUnit: "TThostFtdcBusinessUnitType" = property(_thostmduserapi.CThostFtdcInputQuoteField_BusinessUnit_get, _thostmduserapi.CThostFtdcInputQuoteField_BusinessUnit_set, doc=r"""业务单元""")
    AskOffsetFlag: "TThostFtdcOffsetFlagType" = property(_thostmduserapi.CThostFtdcInputQuoteField_AskOffsetFlag_get, _thostmduserapi.CThostFtdcInputQuoteField_AskOffsetFlag_set, doc=r"""卖开平标志""")
    BidOffsetFlag: "TThostFtdcOffsetFlagType" = property(_thostmduserapi.CThostFtdcInputQuoteField_BidOffsetFlag_get, _thostmduserapi.CThostFtdcInputQuoteField_BidOffsetFlag_set, doc=r"""买开平标志""")
    AskHedgeFlag: "TThostFtdcHedgeFlagType" = property(_thostmduserapi.CThostFtdcInputQuoteField_AskHedgeFlag_get, _thostmduserapi.CThostFtdcInputQuoteField_AskHedgeFlag_set, doc=r"""卖投机套保标志""")
    BidHedgeFlag: "TThostFtdcHedgeFlagType" = property(_thostmduserapi.CThostFtdcInputQuoteField_BidHedgeFlag_get, _thostmduserapi.CThostFtdcInputQuoteField_BidHedgeFlag_set, doc=r"""买投机套保标志""")
    AskOrderRef: "TThostFtdcOrderRefType" = property(_thostmduserapi.CThostFtdcInputQuoteField_AskOrderRef_get, _thostmduserapi.CThostFtdcInputQuoteField_AskOrderRef_set, doc=r"""衍生卖报单引用""")
    BidOrderRef: "TThostFtdcOrderRefType" = property(_thostmduserapi.CThostFtdcInputQuoteField_BidOrderRef_get, _thostmduserapi.CThostFtdcInputQuoteField_BidOrderRef_set, doc=r"""衍生买报单引用""")
    ForQuoteSysID: "TThostFtdcOrderSysIDType" = property(_thostmduserapi.CThostFtdcInputQuoteField_ForQuoteSysID_get, _thostmduserapi.CThostFtdcInputQuoteField_ForQuoteSysID_set, doc=r"""应价编号""")
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcInputQuoteField_ExchangeID_get, _thostmduserapi.CThostFtdcInputQuoteField_ExchangeID_set, doc=r"""交易所代码""")
    InvestUnitID: "TThostFtdcInvestUnitIDType" = property(_thostmduserapi.CThostFtdcInputQuoteField_InvestUnitID_get, _thostmduserapi.CThostFtdcInputQuoteField_InvestUnitID_set, doc=r"""投资单元代码""")
    ClientID: "TThostFtdcClientIDType" = property(_thostmduserapi.CThostFtdcInputQuoteField_ClientID_get, _thostmduserapi.CThostFtdcInputQuoteField_ClientID_set, doc=r"""交易编码""")
    reserve2: "TThostFtdcOldIPAddressType" = property(_thostmduserapi.CThostFtdcInputQuoteField_reserve2_get, _thostmduserapi.CThostFtdcInputQuoteField_reserve2_set, doc=r"""保留的无效字段""")
    MacAddress: "TThostFtdcMacAddressType" = property(_thostmduserapi.CThostFtdcInputQuoteField_MacAddress_get, _thostmduserapi.CThostFtdcInputQuoteField_MacAddress_set, doc=r"""Mac地址""")
    InstrumentID: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcInputQuoteField_InstrumentID_get, _thostmduserapi.CThostFtdcInputQuoteField_InstrumentID_set, doc=r"""合约代码""")
    IPAddress: "TThostFtdcIPAddressType" = property(_thostmduserapi.CThostFtdcInputQuoteField_IPAddress_get, _thostmduserapi.CThostFtdcInputQuoteField_IPAddress_set, doc=r"""IP地址""")
    ReplaceSysID: "TThostFtdcOrderSysIDType" = property(_thostmduserapi.CThostFtdcInputQuoteField_ReplaceSysID_get, _thostmduserapi.CThostFtdcInputQuoteField_ReplaceSysID_set, doc=r"""被顶单编号""")
    TimeCondition: "TThostFtdcTimeConditionType" = property(_thostmduserapi.CThostFtdcInputQuoteField_TimeCondition_get, _thostmduserapi.CThostFtdcInputQuoteField_TimeCondition_set, doc=r"""有效期类型""")

    def __init__(self):
        _thostmduserapi.CThostFtdcInputQuoteField_swiginit(self, _thostmduserapi.new_CThostFtdcInputQuoteField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcInputQuoteField

# Register CThostFtdcInputQuoteField in _thostmduserapi:
_thostmduserapi.CThostFtdcInputQuoteField_swigregister(CThostFtdcInputQuoteField)
class CThostFtdcInputQuoteActionField(object):
    r"""输入报价操作"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcInputQuoteActionField_BrokerID_get, _thostmduserapi.CThostFtdcInputQuoteActionField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "TThostFtdcInvestorIDType" = property(_thostmduserapi.CThostFtdcInputQuoteActionField_InvestorID_get, _thostmduserapi.CThostFtdcInputQuoteActionField_InvestorID_set, doc=r"""投资者代码""")
    QuoteActionRef: "TThostFtdcOrderActionRefType" = property(_thostmduserapi.CThostFtdcInputQuoteActionField_QuoteActionRef_get, _thostmduserapi.CThostFtdcInputQuoteActionField_QuoteActionRef_set, doc=r"""报价操作引用""")
    QuoteRef: "TThostFtdcOrderRefType" = property(_thostmduserapi.CThostFtdcInputQuoteActionField_QuoteRef_get, _thostmduserapi.CThostFtdcInputQuoteActionField_QuoteRef_set, doc=r"""报价引用""")
    RequestID: "TThostFtdcRequestIDType" = property(_thostmduserapi.CThostFtdcInputQuoteActionField_RequestID_get, _thostmduserapi.CThostFtdcInputQuoteActionField_RequestID_set, doc=r"""请求编号""")
    FrontID: "TThostFtdcFrontIDType" = property(_thostmduserapi.CThostFtdcInputQuoteActionField_FrontID_get, _thostmduserapi.CThostFtdcInputQuoteActionField_FrontID_set, doc=r"""前置编号""")
    SessionID: "TThostFtdcSessionIDType" = property(_thostmduserapi.CThostFtdcInputQuoteActionField_SessionID_get, _thostmduserapi.CThostFtdcInputQuoteActionField_SessionID_set, doc=r"""会话编号""")
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcInputQuoteActionField_ExchangeID_get, _thostmduserapi.CThostFtdcInputQuoteActionField_ExchangeID_set, doc=r"""交易所代码""")
    QuoteSysID: "TThostFtdcOrderSysIDType" = property(_thostmduserapi.CThostFtdcInputQuoteActionField_QuoteSysID_get, _thostmduserapi.CThostFtdcInputQuoteActionField_QuoteSysID_set, doc=r"""报价操作编号""")
    ActionFlag: "TThostFtdcActionFlagType" = property(_thostmduserapi.CThostFtdcInputQuoteActionField_ActionFlag_get, _thostmduserapi.CThostFtdcInputQuoteActionField_ActionFlag_set, doc=r"""操作标志""")
    UserID: "TThostFtdcUserIDType" = property(_thostmduserapi.CThostFtdcInputQuoteActionField_UserID_get, _thostmduserapi.CThostFtdcInputQuoteActionField_UserID_set, doc=r"""用户代码""")
    reserve1: "TThostFtdcOldInstrumentIDType" = property(_thostmduserapi.CThostFtdcInputQuoteActionField_reserve1_get, _thostmduserapi.CThostFtdcInputQuoteActionField_reserve1_set, doc=r"""保留的无效字段""")
    InvestUnitID: "TThostFtdcInvestUnitIDType" = property(_thostmduserapi.CThostFtdcInputQuoteActionField_InvestUnitID_get, _thostmduserapi.CThostFtdcInputQuoteActionField_InvestUnitID_set, doc=r"""投资单元代码""")
    ClientID: "TThostFtdcClientIDType" = property(_thostmduserapi.CThostFtdcInputQuoteActionField_ClientID_get, _thostmduserapi.CThostFtdcInputQuoteActionField_ClientID_set, doc=r"""交易编码""")
    reserve2: "TThostFtdcOldIPAddressType" = property(_thostmduserapi.CThostFtdcInputQuoteActionField_reserve2_get, _thostmduserapi.CThostFtdcInputQuoteActionField_reserve2_set, doc=r"""保留的无效字段""")
    MacAddress: "TThostFtdcMacAddressType" = property(_thostmduserapi.CThostFtdcInputQuoteActionField_MacAddress_get, _thostmduserapi.CThostFtdcInputQuoteActionField_MacAddress_set, doc=r"""Mac地址""")
    InstrumentID: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcInputQuoteActionField_InstrumentID_get, _thostmduserapi.CThostFtdcInputQuoteActionField_InstrumentID_set, doc=r"""合约代码""")
    IPAddress: "TThostFtdcIPAddressType" = property(_thostmduserapi.CThostFtdcInputQuoteActionField_IPAddress_get, _thostmduserapi.CThostFtdcInputQuoteActionField_IPAddress_set, doc=r"""IP地址""")

    def __init__(self):
        _thostmduserapi.CThostFtdcInputQuoteActionField_swiginit(self, _thostmduserapi.new_CThostFtdcInputQuoteActionField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcInputQuoteActionField

# Register CThostFtdcInputQuoteActionField in _thostmduserapi:
_thostmduserapi.CThostFtdcInputQuoteActionField_swigregister(CThostFtdcInputQuoteActionField)
class CThostFtdcQuoteField(object):
    r"""报价"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcQuoteField_BrokerID_get, _thostmduserapi.CThostFtdcQuoteField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "TThostFtdcInvestorIDType" = property(_thostmduserapi.CThostFtdcQuoteField_InvestorID_get, _thostmduserapi.CThostFtdcQuoteField_InvestorID_set, doc=r"""投资者代码""")
    reserve1: "TThostFtdcOldInstrumentIDType" = property(_thostmduserapi.CThostFtdcQuoteField_reserve1_get, _thostmduserapi.CThostFtdcQuoteField_reserve1_set, doc=r"""保留的无效字段""")
    QuoteRef: "TThostFtdcOrderRefType" = property(_thostmduserapi.CThostFtdcQuoteField_QuoteRef_get, _thostmduserapi.CThostFtdcQuoteField_QuoteRef_set, doc=r"""报价引用""")
    UserID: "TThostFtdcUserIDType" = property(_thostmduserapi.CThostFtdcQuoteField_UserID_get, _thostmduserapi.CThostFtdcQuoteField_UserID_set, doc=r"""用户代码""")
    AskPrice: "TThostFtdcPriceType" = property(_thostmduserapi.CThostFtdcQuoteField_AskPrice_get, _thostmduserapi.CThostFtdcQuoteField_AskPrice_set, doc=r"""卖价格""")
    BidPrice: "TThostFtdcPriceType" = property(_thostmduserapi.CThostFtdcQuoteField_BidPrice_get, _thostmduserapi.CThostFtdcQuoteField_BidPrice_set, doc=r"""买价格""")
    AskVolume: "TThostFtdcVolumeType" = property(_thostmduserapi.CThostFtdcQuoteField_AskVolume_get, _thostmduserapi.CThostFtdcQuoteField_AskVolume_set, doc=r"""卖数量""")
    BidVolume: "TThostFtdcVolumeType" = property(_thostmduserapi.CThostFtdcQuoteField_BidVolume_get, _thostmduserapi.CThostFtdcQuoteField_BidVolume_set, doc=r"""买数量""")
    RequestID: "TThostFtdcRequestIDType" = property(_thostmduserapi.CThostFtdcQuoteField_RequestID_get, _thostmduserapi.CThostFtdcQuoteField_RequestID_set, doc=r"""请求编号""")
    BusinessUnit: "TThostFtdcBusinessUnitType" = property(_thostmduserapi.CThostFtdcQuoteField_BusinessUnit_get, _thostmduserapi.CThostFtdcQuoteField_BusinessUnit_set, doc=r"""业务单元""")
    AskOffsetFlag: "TThostFtdcOffsetFlagType" = property(_thostmduserapi.CThostFtdcQuoteField_AskOffsetFlag_get, _thostmduserapi.CThostFtdcQuoteField_AskOffsetFlag_set, doc=r"""卖开平标志""")
    BidOffsetFlag: "TThostFtdcOffsetFlagType" = property(_thostmduserapi.CThostFtdcQuoteField_BidOffsetFlag_get, _thostmduserapi.CThostFtdcQuoteField_BidOffsetFlag_set, doc=r"""买开平标志""")
    AskHedgeFlag: "TThostFtdcHedgeFlagType" = property(_thostmduserapi.CThostFtdcQuoteField_AskHedgeFlag_get, _thostmduserapi.CThostFtdcQuoteField_AskHedgeFlag_set, doc=r"""卖投机套保标志""")
    BidHedgeFlag: "TThostFtdcHedgeFlagType" = property(_thostmduserapi.CThostFtdcQuoteField_BidHedgeFlag_get, _thostmduserapi.CThostFtdcQuoteField_BidHedgeFlag_set, doc=r"""买投机套保标志""")
    QuoteLocalID: "TThostFtdcOrderLocalIDType" = property(_thostmduserapi.CThostFtdcQuoteField_QuoteLocalID_get, _thostmduserapi.CThostFtdcQuoteField_QuoteLocalID_set, doc=r"""本地报价编号""")
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcQuoteField_ExchangeID_get, _thostmduserapi.CThostFtdcQuoteField_ExchangeID_set, doc=r"""交易所代码""")
    ParticipantID: "TThostFtdcParticipantIDType" = property(_thostmduserapi.CThostFtdcQuoteField_ParticipantID_get, _thostmduserapi.CThostFtdcQuoteField_ParticipantID_set, doc=r"""会员代码""")
    ClientID: "TThostFtdcClientIDType" = property(_thostmduserapi.CThostFtdcQuoteField_ClientID_get, _thostmduserapi.CThostFtdcQuoteField_ClientID_set, doc=r"""客户代码""")
    reserve2: "TThostFtdcOldExchangeInstIDType" = property(_thostmduserapi.CThostFtdcQuoteField_reserve2_get, _thostmduserapi.CThostFtdcQuoteField_reserve2_set, doc=r"""保留的无效字段""")
    TraderID: "TThostFtdcTraderIDType" = property(_thostmduserapi.CThostFtdcQuoteField_TraderID_get, _thostmduserapi.CThostFtdcQuoteField_TraderID_set, doc=r"""交易所交易员代码""")
    InstallID: "TThostFtdcInstallIDType" = property(_thostmduserapi.CThostFtdcQuoteField_InstallID_get, _thostmduserapi.CThostFtdcQuoteField_InstallID_set, doc=r"""安装编号""")
    NotifySequence: "TThostFtdcSequenceNoType" = property(_thostmduserapi.CThostFtdcQuoteField_NotifySequence_get, _thostmduserapi.CThostFtdcQuoteField_NotifySequence_set, doc=r"""报价提示序号""")
    OrderSubmitStatus: "TThostFtdcOrderSubmitStatusType" = property(_thostmduserapi.CThostFtdcQuoteField_OrderSubmitStatus_get, _thostmduserapi.CThostFtdcQuoteField_OrderSubmitStatus_set, doc=r"""报价提交状态""")
    TradingDay: "TThostFtdcDateType" = property(_thostmduserapi.CThostFtdcQuoteField_TradingDay_get, _thostmduserapi.CThostFtdcQuoteField_TradingDay_set, doc=r"""交易日""")
    SettlementID: "TThostFtdcSettlementIDType" = property(_thostmduserapi.CThostFtdcQuoteField_SettlementID_get, _thostmduserapi.CThostFtdcQuoteField_SettlementID_set, doc=r"""结算编号""")
    QuoteSysID: "TThostFtdcOrderSysIDType" = property(_thostmduserapi.CThostFtdcQuoteField_QuoteSysID_get, _thostmduserapi.CThostFtdcQuoteField_QuoteSysID_set, doc=r"""报价编号""")
    InsertDate: "TThostFtdcDateType" = property(_thostmduserapi.CThostFtdcQuoteField_InsertDate_get, _thostmduserapi.CThostFtdcQuoteField_InsertDate_set, doc=r"""报单日期""")
    InsertTime: "TThostFtdcTimeType" = property(_thostmduserapi.CThostFtdcQuoteField_InsertTime_get, _thostmduserapi.CThostFtdcQuoteField_InsertTime_set, doc=r"""插入时间""")
    CancelTime: "TThostFtdcTimeType" = property(_thostmduserapi.CThostFtdcQuoteField_CancelTime_get, _thostmduserapi.CThostFtdcQuoteField_CancelTime_set, doc=r"""撤销时间""")
    QuoteStatus: "TThostFtdcOrderStatusType" = property(_thostmduserapi.CThostFtdcQuoteField_QuoteStatus_get, _thostmduserapi.CThostFtdcQuoteField_QuoteStatus_set, doc=r"""报价状态""")
    ClearingPartID: "TThostFtdcParticipantIDType" = property(_thostmduserapi.CThostFtdcQuoteField_ClearingPartID_get, _thostmduserapi.CThostFtdcQuoteField_ClearingPartID_set, doc=r"""结算会员编号""")
    SequenceNo: "TThostFtdcSequenceNoType" = property(_thostmduserapi.CThostFtdcQuoteField_SequenceNo_get, _thostmduserapi.CThostFtdcQuoteField_SequenceNo_set, doc=r"""序号""")
    AskOrderSysID: "TThostFtdcOrderSysIDType" = property(_thostmduserapi.CThostFtdcQuoteField_AskOrderSysID_get, _thostmduserapi.CThostFtdcQuoteField_AskOrderSysID_set, doc=r"""卖方报单编号""")
    BidOrderSysID: "TThostFtdcOrderSysIDType" = property(_thostmduserapi.CThostFtdcQuoteField_BidOrderSysID_get, _thostmduserapi.CThostFtdcQuoteField_BidOrderSysID_set, doc=r"""买方报单编号""")
    FrontID: "TThostFtdcFrontIDType" = property(_thostmduserapi.CThostFtdcQuoteField_FrontID_get, _thostmduserapi.CThostFtdcQuoteField_FrontID_set, doc=r"""前置编号""")
    SessionID: "TThostFtdcSessionIDType" = property(_thostmduserapi.CThostFtdcQuoteField_SessionID_get, _thostmduserapi.CThostFtdcQuoteField_SessionID_set, doc=r"""会话编号""")
    UserProductInfo: "TThostFtdcProductInfoType" = property(_thostmduserapi.CThostFtdcQuoteField_UserProductInfo_get, _thostmduserapi.CThostFtdcQuoteField_UserProductInfo_set, doc=r"""用户端产品信息""")
    StatusMsg: "TThostFtdcErrorMsgType" = property(_thostmduserapi.CThostFtdcQuoteField_StatusMsg_get, _thostmduserapi.CThostFtdcQuoteField_StatusMsg_set, doc=r"""状态信息""")
    ActiveUserID: "TThostFtdcUserIDType" = property(_thostmduserapi.CThostFtdcQuoteField_ActiveUserID_get, _thostmduserapi.CThostFtdcQuoteField_ActiveUserID_set, doc=r"""操作用户代码""")
    BrokerQuoteSeq: "TThostFtdcSequenceNoType" = property(_thostmduserapi.CThostFtdcQuoteField_BrokerQuoteSeq_get, _thostmduserapi.CThostFtdcQuoteField_BrokerQuoteSeq_set, doc=r"""经纪公司报价编号""")
    AskOrderRef: "TThostFtdcOrderRefType" = property(_thostmduserapi.CThostFtdcQuoteField_AskOrderRef_get, _thostmduserapi.CThostFtdcQuoteField_AskOrderRef_set, doc=r"""衍生卖报单引用""")
    BidOrderRef: "TThostFtdcOrderRefType" = property(_thostmduserapi.CThostFtdcQuoteField_BidOrderRef_get, _thostmduserapi.CThostFtdcQuoteField_BidOrderRef_set, doc=r"""衍生买报单引用""")
    ForQuoteSysID: "TThostFtdcOrderSysIDType" = property(_thostmduserapi.CThostFtdcQuoteField_ForQuoteSysID_get, _thostmduserapi.CThostFtdcQuoteField_ForQuoteSysID_set, doc=r"""应价编号""")
    BranchID: "TThostFtdcBranchIDType" = property(_thostmduserapi.CThostFtdcQuoteField_BranchID_get, _thostmduserapi.CThostFtdcQuoteField_BranchID_set, doc=r"""营业部编号""")
    InvestUnitID: "TThostFtdcInvestUnitIDType" = property(_thostmduserapi.CThostFtdcQuoteField_InvestUnitID_get, _thostmduserapi.CThostFtdcQuoteField_InvestUnitID_set, doc=r"""投资单元代码""")
    AccountID: "TThostFtdcAccountIDType" = property(_thostmduserapi.CThostFtdcQuoteField_AccountID_get, _thostmduserapi.CThostFtdcQuoteField_AccountID_set, doc=r"""资金账号""")
    CurrencyID: "TThostFtdcCurrencyIDType" = property(_thostmduserapi.CThostFtdcQuoteField_CurrencyID_get, _thostmduserapi.CThostFtdcQuoteField_CurrencyID_set, doc=r"""币种代码""")
    reserve3: "TThostFtdcOldIPAddressType" = property(_thostmduserapi.CThostFtdcQuoteField_reserve3_get, _thostmduserapi.CThostFtdcQuoteField_reserve3_set, doc=r"""保留的无效字段""")
    MacAddress: "TThostFtdcMacAddressType" = property(_thostmduserapi.CThostFtdcQuoteField_MacAddress_get, _thostmduserapi.CThostFtdcQuoteField_MacAddress_set, doc=r"""Mac地址""")
    InstrumentID: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcQuoteField_InstrumentID_get, _thostmduserapi.CThostFtdcQuoteField_InstrumentID_set, doc=r"""合约代码""")
    ExchangeInstID: "TThostFtdcExchangeInstIDType" = property(_thostmduserapi.CThostFtdcQuoteField_ExchangeInstID_get, _thostmduserapi.CThostFtdcQuoteField_ExchangeInstID_set, doc=r"""合约在交易所的代码""")
    IPAddress: "TThostFtdcIPAddressType" = property(_thostmduserapi.CThostFtdcQuoteField_IPAddress_get, _thostmduserapi.CThostFtdcQuoteField_IPAddress_set, doc=r"""IP地址""")
    ReplaceSysID: "TThostFtdcOrderSysIDType" = property(_thostmduserapi.CThostFtdcQuoteField_ReplaceSysID_get, _thostmduserapi.CThostFtdcQuoteField_ReplaceSysID_set, doc=r"""被顶单编号""")
    TimeCondition: "TThostFtdcTimeConditionType" = property(_thostmduserapi.CThostFtdcQuoteField_TimeCondition_get, _thostmduserapi.CThostFtdcQuoteField_TimeCondition_set, doc=r"""有效期类型""")

    def __init__(self):
        _thostmduserapi.CThostFtdcQuoteField_swiginit(self, _thostmduserapi.new_CThostFtdcQuoteField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcQuoteField

# Register CThostFtdcQuoteField in _thostmduserapi:
_thostmduserapi.CThostFtdcQuoteField_swigregister(CThostFtdcQuoteField)
class CThostFtdcQuoteActionField(object):
    r"""报价操作"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcQuoteActionField_BrokerID_get, _thostmduserapi.CThostFtdcQuoteActionField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "TThostFtdcInvestorIDType" = property(_thostmduserapi.CThostFtdcQuoteActionField_InvestorID_get, _thostmduserapi.CThostFtdcQuoteActionField_InvestorID_set, doc=r"""投资者代码""")
    QuoteActionRef: "TThostFtdcOrderActionRefType" = property(_thostmduserapi.CThostFtdcQuoteActionField_QuoteActionRef_get, _thostmduserapi.CThostFtdcQuoteActionField_QuoteActionRef_set, doc=r"""报价操作引用""")
    QuoteRef: "TThostFtdcOrderRefType" = property(_thostmduserapi.CThostFtdcQuoteActionField_QuoteRef_get, _thostmduserapi.CThostFtdcQuoteActionField_QuoteRef_set, doc=r"""报价引用""")
    RequestID: "TThostFtdcRequestIDType" = property(_thostmduserapi.CThostFtdcQuoteActionField_RequestID_get, _thostmduserapi.CThostFtdcQuoteActionField_RequestID_set, doc=r"""请求编号""")
    FrontID: "TThostFtdcFrontIDType" = property(_thostmduserapi.CThostFtdcQuoteActionField_FrontID_get, _thostmduserapi.CThostFtdcQuoteActionField_FrontID_set, doc=r"""前置编号""")
    SessionID: "TThostFtdcSessionIDType" = property(_thostmduserapi.CThostFtdcQuoteActionField_SessionID_get, _thostmduserapi.CThostFtdcQuoteActionField_SessionID_set, doc=r"""会话编号""")
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcQuoteActionField_ExchangeID_get, _thostmduserapi.CThostFtdcQuoteActionField_ExchangeID_set, doc=r"""交易所代码""")
    QuoteSysID: "TThostFtdcOrderSysIDType" = property(_thostmduserapi.CThostFtdcQuoteActionField_QuoteSysID_get, _thostmduserapi.CThostFtdcQuoteActionField_QuoteSysID_set, doc=r"""报价操作编号""")
    ActionFlag: "TThostFtdcActionFlagType" = property(_thostmduserapi.CThostFtdcQuoteActionField_ActionFlag_get, _thostmduserapi.CThostFtdcQuoteActionField_ActionFlag_set, doc=r"""操作标志""")
    ActionDate: "TThostFtdcDateType" = property(_thostmduserapi.CThostFtdcQuoteActionField_ActionDate_get, _thostmduserapi.CThostFtdcQuoteActionField_ActionDate_set, doc=r"""操作日期""")
    ActionTime: "TThostFtdcTimeType" = property(_thostmduserapi.CThostFtdcQuoteActionField_ActionTime_get, _thostmduserapi.CThostFtdcQuoteActionField_ActionTime_set, doc=r"""操作时间""")
    TraderID: "TThostFtdcTraderIDType" = property(_thostmduserapi.CThostFtdcQuoteActionField_TraderID_get, _thostmduserapi.CThostFtdcQuoteActionField_TraderID_set, doc=r"""交易所交易员代码""")
    InstallID: "TThostFtdcInstallIDType" = property(_thostmduserapi.CThostFtdcQuoteActionField_InstallID_get, _thostmduserapi.CThostFtdcQuoteActionField_InstallID_set, doc=r"""安装编号""")
    QuoteLocalID: "TThostFtdcOrderLocalIDType" = property(_thostmduserapi.CThostFtdcQuoteActionField_QuoteLocalID_get, _thostmduserapi.CThostFtdcQuoteActionField_QuoteLocalID_set, doc=r"""本地报价编号""")
    ActionLocalID: "TThostFtdcOrderLocalIDType" = property(_thostmduserapi.CThostFtdcQuoteActionField_ActionLocalID_get, _thostmduserapi.CThostFtdcQuoteActionField_ActionLocalID_set, doc=r"""操作本地编号""")
    ParticipantID: "TThostFtdcParticipantIDType" = property(_thostmduserapi.CThostFtdcQuoteActionField_ParticipantID_get, _thostmduserapi.CThostFtdcQuoteActionField_ParticipantID_set, doc=r"""会员代码""")
    ClientID: "TThostFtdcClientIDType" = property(_thostmduserapi.CThostFtdcQuoteActionField_ClientID_get, _thostmduserapi.CThostFtdcQuoteActionField_ClientID_set, doc=r"""客户代码""")
    BusinessUnit: "TThostFtdcBusinessUnitType" = property(_thostmduserapi.CThostFtdcQuoteActionField_BusinessUnit_get, _thostmduserapi.CThostFtdcQuoteActionField_BusinessUnit_set, doc=r"""业务单元""")
    OrderActionStatus: "TThostFtdcOrderActionStatusType" = property(_thostmduserapi.CThostFtdcQuoteActionField_OrderActionStatus_get, _thostmduserapi.CThostFtdcQuoteActionField_OrderActionStatus_set, doc=r"""报单操作状态""")
    UserID: "TThostFtdcUserIDType" = property(_thostmduserapi.CThostFtdcQuoteActionField_UserID_get, _thostmduserapi.CThostFtdcQuoteActionField_UserID_set, doc=r"""用户代码""")
    StatusMsg: "TThostFtdcErrorMsgType" = property(_thostmduserapi.CThostFtdcQuoteActionField_StatusMsg_get, _thostmduserapi.CThostFtdcQuoteActionField_StatusMsg_set, doc=r"""状态信息""")
    reserve1: "TThostFtdcOldInstrumentIDType" = property(_thostmduserapi.CThostFtdcQuoteActionField_reserve1_get, _thostmduserapi.CThostFtdcQuoteActionField_reserve1_set, doc=r"""保留的无效字段""")
    BranchID: "TThostFtdcBranchIDType" = property(_thostmduserapi.CThostFtdcQuoteActionField_BranchID_get, _thostmduserapi.CThostFtdcQuoteActionField_BranchID_set, doc=r"""营业部编号""")
    InvestUnitID: "TThostFtdcInvestUnitIDType" = property(_thostmduserapi.CThostFtdcQuoteActionField_InvestUnitID_get, _thostmduserapi.CThostFtdcQuoteActionField_InvestUnitID_set, doc=r"""投资单元代码""")
    reserve2: "TThostFtdcOldIPAddressType" = property(_thostmduserapi.CThostFtdcQuoteActionField_reserve2_get, _thostmduserapi.CThostFtdcQuoteActionField_reserve2_set, doc=r"""保留的无效字段""")
    MacAddress: "TThostFtdcMacAddressType" = property(_thostmduserapi.CThostFtdcQuoteActionField_MacAddress_get, _thostmduserapi.CThostFtdcQuoteActionField_MacAddress_set, doc=r"""Mac地址""")
    InstrumentID: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcQuoteActionField_InstrumentID_get, _thostmduserapi.CThostFtdcQuoteActionField_InstrumentID_set, doc=r"""合约代码""")
    IPAddress: "TThostFtdcIPAddressType" = property(_thostmduserapi.CThostFtdcQuoteActionField_IPAddress_get, _thostmduserapi.CThostFtdcQuoteActionField_IPAddress_set, doc=r"""IP地址""")

    def __init__(self):
        _thostmduserapi.CThostFtdcQuoteActionField_swiginit(self, _thostmduserapi.new_CThostFtdcQuoteActionField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcQuoteActionField

# Register CThostFtdcQuoteActionField in _thostmduserapi:
_thostmduserapi.CThostFtdcQuoteActionField_swigregister(CThostFtdcQuoteActionField)
class CThostFtdcQryQuoteField(object):
    r"""报价查询"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcQryQuoteField_BrokerID_get, _thostmduserapi.CThostFtdcQryQuoteField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "TThostFtdcInvestorIDType" = property(_thostmduserapi.CThostFtdcQryQuoteField_InvestorID_get, _thostmduserapi.CThostFtdcQryQuoteField_InvestorID_set, doc=r"""投资者代码""")
    reserve1: "TThostFtdcOldInstrumentIDType" = property(_thostmduserapi.CThostFtdcQryQuoteField_reserve1_get, _thostmduserapi.CThostFtdcQryQuoteField_reserve1_set, doc=r"""保留的无效字段""")
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcQryQuoteField_ExchangeID_get, _thostmduserapi.CThostFtdcQryQuoteField_ExchangeID_set, doc=r"""交易所代码""")
    QuoteSysID: "TThostFtdcOrderSysIDType" = property(_thostmduserapi.CThostFtdcQryQuoteField_QuoteSysID_get, _thostmduserapi.CThostFtdcQryQuoteField_QuoteSysID_set, doc=r"""报价编号""")
    InsertTimeStart: "TThostFtdcTimeType" = property(_thostmduserapi.CThostFtdcQryQuoteField_InsertTimeStart_get, _thostmduserapi.CThostFtdcQryQuoteField_InsertTimeStart_set, doc=r"""开始时间""")
    InsertTimeEnd: "TThostFtdcTimeType" = property(_thostmduserapi.CThostFtdcQryQuoteField_InsertTimeEnd_get, _thostmduserapi.CThostFtdcQryQuoteField_InsertTimeEnd_set, doc=r"""结束时间""")
    InvestUnitID: "TThostFtdcInvestUnitIDType" = property(_thostmduserapi.CThostFtdcQryQuoteField_InvestUnitID_get, _thostmduserapi.CThostFtdcQryQuoteField_InvestUnitID_set, doc=r"""投资单元代码""")
    InstrumentID: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcQryQuoteField_InstrumentID_get, _thostmduserapi.CThostFtdcQryQuoteField_InstrumentID_set, doc=r"""合约代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcQryQuoteField_swiginit(self, _thostmduserapi.new_CThostFtdcQryQuoteField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcQryQuoteField

# Register CThostFtdcQryQuoteField in _thostmduserapi:
_thostmduserapi.CThostFtdcQryQuoteField_swigregister(CThostFtdcQryQuoteField)
class CThostFtdcExchangeQuoteField(object):
    r"""交易所报价信息"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    AskPrice: "TThostFtdcPriceType" = property(_thostmduserapi.CThostFtdcExchangeQuoteField_AskPrice_get, _thostmduserapi.CThostFtdcExchangeQuoteField_AskPrice_set, doc=r"""卖价格""")
    BidPrice: "TThostFtdcPriceType" = property(_thostmduserapi.CThostFtdcExchangeQuoteField_BidPrice_get, _thostmduserapi.CThostFtdcExchangeQuoteField_BidPrice_set, doc=r"""买价格""")
    AskVolume: "TThostFtdcVolumeType" = property(_thostmduserapi.CThostFtdcExchangeQuoteField_AskVolume_get, _thostmduserapi.CThostFtdcExchangeQuoteField_AskVolume_set, doc=r"""卖数量""")
    BidVolume: "TThostFtdcVolumeType" = property(_thostmduserapi.CThostFtdcExchangeQuoteField_BidVolume_get, _thostmduserapi.CThostFtdcExchangeQuoteField_BidVolume_set, doc=r"""买数量""")
    RequestID: "TThostFtdcRequestIDType" = property(_thostmduserapi.CThostFtdcExchangeQuoteField_RequestID_get, _thostmduserapi.CThostFtdcExchangeQuoteField_RequestID_set, doc=r"""请求编号""")
    BusinessUnit: "TThostFtdcBusinessUnitType" = property(_thostmduserapi.CThostFtdcExchangeQuoteField_BusinessUnit_get, _thostmduserapi.CThostFtdcExchangeQuoteField_BusinessUnit_set, doc=r"""业务单元""")
    AskOffsetFlag: "TThostFtdcOffsetFlagType" = property(_thostmduserapi.CThostFtdcExchangeQuoteField_AskOffsetFlag_get, _thostmduserapi.CThostFtdcExchangeQuoteField_AskOffsetFlag_set, doc=r"""卖开平标志""")
    BidOffsetFlag: "TThostFtdcOffsetFlagType" = property(_thostmduserapi.CThostFtdcExchangeQuoteField_BidOffsetFlag_get, _thostmduserapi.CThostFtdcExchangeQuoteField_BidOffsetFlag_set, doc=r"""买开平标志""")
    AskHedgeFlag: "TThostFtdcHedgeFlagType" = property(_thostmduserapi.CThostFtdcExchangeQuoteField_AskHedgeFlag_get, _thostmduserapi.CThostFtdcExchangeQuoteField_AskHedgeFlag_set, doc=r"""卖投机套保标志""")
    BidHedgeFlag: "TThostFtdcHedgeFlagType" = property(_thostmduserapi.CThostFtdcExchangeQuoteField_BidHedgeFlag_get, _thostmduserapi.CThostFtdcExchangeQuoteField_BidHedgeFlag_set, doc=r"""买投机套保标志""")
    QuoteLocalID: "TThostFtdcOrderLocalIDType" = property(_thostmduserapi.CThostFtdcExchangeQuoteField_QuoteLocalID_get, _thostmduserapi.CThostFtdcExchangeQuoteField_QuoteLocalID_set, doc=r"""本地报价编号""")
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcExchangeQuoteField_ExchangeID_get, _thostmduserapi.CThostFtdcExchangeQuoteField_ExchangeID_set, doc=r"""交易所代码""")
    ParticipantID: "TThostFtdcParticipantIDType" = property(_thostmduserapi.CThostFtdcExchangeQuoteField_ParticipantID_get, _thostmduserapi.CThostFtdcExchangeQuoteField_ParticipantID_set, doc=r"""会员代码""")
    ClientID: "TThostFtdcClientIDType" = property(_thostmduserapi.CThostFtdcExchangeQuoteField_ClientID_get, _thostmduserapi.CThostFtdcExchangeQuoteField_ClientID_set, doc=r"""客户代码""")
    reserve1: "TThostFtdcOldExchangeInstIDType" = property(_thostmduserapi.CThostFtdcExchangeQuoteField_reserve1_get, _thostmduserapi.CThostFtdcExchangeQuoteField_reserve1_set, doc=r"""保留的无效字段""")
    TraderID: "TThostFtdcTraderIDType" = property(_thostmduserapi.CThostFtdcExchangeQuoteField_TraderID_get, _thostmduserapi.CThostFtdcExchangeQuoteField_TraderID_set, doc=r"""交易所交易员代码""")
    InstallID: "TThostFtdcInstallIDType" = property(_thostmduserapi.CThostFtdcExchangeQuoteField_InstallID_get, _thostmduserapi.CThostFtdcExchangeQuoteField_InstallID_set, doc=r"""安装编号""")
    NotifySequence: "TThostFtdcSequenceNoType" = property(_thostmduserapi.CThostFtdcExchangeQuoteField_NotifySequence_get, _thostmduserapi.CThostFtdcExchangeQuoteField_NotifySequence_set, doc=r"""报价提示序号""")
    OrderSubmitStatus: "TThostFtdcOrderSubmitStatusType" = property(_thostmduserapi.CThostFtdcExchangeQuoteField_OrderSubmitStatus_get, _thostmduserapi.CThostFtdcExchangeQuoteField_OrderSubmitStatus_set, doc=r"""报价提交状态""")
    TradingDay: "TThostFtdcDateType" = property(_thostmduserapi.CThostFtdcExchangeQuoteField_TradingDay_get, _thostmduserapi.CThostFtdcExchangeQuoteField_TradingDay_set, doc=r"""交易日""")
    SettlementID: "TThostFtdcSettlementIDType" = property(_thostmduserapi.CThostFtdcExchangeQuoteField_SettlementID_get, _thostmduserapi.CThostFtdcExchangeQuoteField_SettlementID_set, doc=r"""结算编号""")
    QuoteSysID: "TThostFtdcOrderSysIDType" = property(_thostmduserapi.CThostFtdcExchangeQuoteField_QuoteSysID_get, _thostmduserapi.CThostFtdcExchangeQuoteField_QuoteSysID_set, doc=r"""报价编号""")
    InsertDate: "TThostFtdcDateType" = property(_thostmduserapi.CThostFtdcExchangeQuoteField_InsertDate_get, _thostmduserapi.CThostFtdcExchangeQuoteField_InsertDate_set, doc=r"""报单日期""")
    InsertTime: "TThostFtdcTimeType" = property(_thostmduserapi.CThostFtdcExchangeQuoteField_InsertTime_get, _thostmduserapi.CThostFtdcExchangeQuoteField_InsertTime_set, doc=r"""插入时间""")
    CancelTime: "TThostFtdcTimeType" = property(_thostmduserapi.CThostFtdcExchangeQuoteField_CancelTime_get, _thostmduserapi.CThostFtdcExchangeQuoteField_CancelTime_set, doc=r"""撤销时间""")
    QuoteStatus: "TThostFtdcOrderStatusType" = property(_thostmduserapi.CThostFtdcExchangeQuoteField_QuoteStatus_get, _thostmduserapi.CThostFtdcExchangeQuoteField_QuoteStatus_set, doc=r"""报价状态""")
    ClearingPartID: "TThostFtdcParticipantIDType" = property(_thostmduserapi.CThostFtdcExchangeQuoteField_ClearingPartID_get, _thostmduserapi.CThostFtdcExchangeQuoteField_ClearingPartID_set, doc=r"""结算会员编号""")
    SequenceNo: "TThostFtdcSequenceNoType" = property(_thostmduserapi.CThostFtdcExchangeQuoteField_SequenceNo_get, _thostmduserapi.CThostFtdcExchangeQuoteField_SequenceNo_set, doc=r"""序号""")
    AskOrderSysID: "TThostFtdcOrderSysIDType" = property(_thostmduserapi.CThostFtdcExchangeQuoteField_AskOrderSysID_get, _thostmduserapi.CThostFtdcExchangeQuoteField_AskOrderSysID_set, doc=r"""卖方报单编号""")
    BidOrderSysID: "TThostFtdcOrderSysIDType" = property(_thostmduserapi.CThostFtdcExchangeQuoteField_BidOrderSysID_get, _thostmduserapi.CThostFtdcExchangeQuoteField_BidOrderSysID_set, doc=r"""买方报单编号""")
    ForQuoteSysID: "TThostFtdcOrderSysIDType" = property(_thostmduserapi.CThostFtdcExchangeQuoteField_ForQuoteSysID_get, _thostmduserapi.CThostFtdcExchangeQuoteField_ForQuoteSysID_set, doc=r"""应价编号""")
    BranchID: "TThostFtdcBranchIDType" = property(_thostmduserapi.CThostFtdcExchangeQuoteField_BranchID_get, _thostmduserapi.CThostFtdcExchangeQuoteField_BranchID_set, doc=r"""营业部编号""")
    reserve2: "TThostFtdcOldIPAddressType" = property(_thostmduserapi.CThostFtdcExchangeQuoteField_reserve2_get, _thostmduserapi.CThostFtdcExchangeQuoteField_reserve2_set, doc=r"""保留的无效字段""")
    MacAddress: "TThostFtdcMacAddressType" = property(_thostmduserapi.CThostFtdcExchangeQuoteField_MacAddress_get, _thostmduserapi.CThostFtdcExchangeQuoteField_MacAddress_set, doc=r"""Mac地址""")
    ExchangeInstID: "TThostFtdcExchangeInstIDType" = property(_thostmduserapi.CThostFtdcExchangeQuoteField_ExchangeInstID_get, _thostmduserapi.CThostFtdcExchangeQuoteField_ExchangeInstID_set, doc=r"""合约在交易所的代码""")
    IPAddress: "TThostFtdcIPAddressType" = property(_thostmduserapi.CThostFtdcExchangeQuoteField_IPAddress_get, _thostmduserapi.CThostFtdcExchangeQuoteField_IPAddress_set, doc=r"""IP地址""")
    TimeCondition: "TThostFtdcTimeConditionType" = property(_thostmduserapi.CThostFtdcExchangeQuoteField_TimeCondition_get, _thostmduserapi.CThostFtdcExchangeQuoteField_TimeCondition_set, doc=r"""有效期类型""")

    def __init__(self):
        _thostmduserapi.CThostFtdcExchangeQuoteField_swiginit(self, _thostmduserapi.new_CThostFtdcExchangeQuoteField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcExchangeQuoteField

# Register CThostFtdcExchangeQuoteField in _thostmduserapi:
_thostmduserapi.CThostFtdcExchangeQuoteField_swigregister(CThostFtdcExchangeQuoteField)
class CThostFtdcQryExchangeQuoteField(object):
    r"""交易所报价查询"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ParticipantID: "TThostFtdcParticipantIDType" = property(_thostmduserapi.CThostFtdcQryExchangeQuoteField_ParticipantID_get, _thostmduserapi.CThostFtdcQryExchangeQuoteField_ParticipantID_set, doc=r"""会员代码""")
    ClientID: "TThostFtdcClientIDType" = property(_thostmduserapi.CThostFtdcQryExchangeQuoteField_ClientID_get, _thostmduserapi.CThostFtdcQryExchangeQuoteField_ClientID_set, doc=r"""客户代码""")
    reserve1: "TThostFtdcOldExchangeInstIDType" = property(_thostmduserapi.CThostFtdcQryExchangeQuoteField_reserve1_get, _thostmduserapi.CThostFtdcQryExchangeQuoteField_reserve1_set, doc=r"""保留的无效字段""")
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcQryExchangeQuoteField_ExchangeID_get, _thostmduserapi.CThostFtdcQryExchangeQuoteField_ExchangeID_set, doc=r"""交易所代码""")
    TraderID: "TThostFtdcTraderIDType" = property(_thostmduserapi.CThostFtdcQryExchangeQuoteField_TraderID_get, _thostmduserapi.CThostFtdcQryExchangeQuoteField_TraderID_set, doc=r"""交易所交易员代码""")
    ExchangeInstID: "TThostFtdcExchangeInstIDType" = property(_thostmduserapi.CThostFtdcQryExchangeQuoteField_ExchangeInstID_get, _thostmduserapi.CThostFtdcQryExchangeQuoteField_ExchangeInstID_set, doc=r"""合约在交易所的代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcQryExchangeQuoteField_swiginit(self, _thostmduserapi.new_CThostFtdcQryExchangeQuoteField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcQryExchangeQuoteField

# Register CThostFtdcQryExchangeQuoteField in _thostmduserapi:
_thostmduserapi.CThostFtdcQryExchangeQuoteField_swigregister(CThostFtdcQryExchangeQuoteField)
class CThostFtdcQryQuoteActionField(object):
    r"""报价操作查询"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcQryQuoteActionField_BrokerID_get, _thostmduserapi.CThostFtdcQryQuoteActionField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "TThostFtdcInvestorIDType" = property(_thostmduserapi.CThostFtdcQryQuoteActionField_InvestorID_get, _thostmduserapi.CThostFtdcQryQuoteActionField_InvestorID_set, doc=r"""投资者代码""")
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcQryQuoteActionField_ExchangeID_get, _thostmduserapi.CThostFtdcQryQuoteActionField_ExchangeID_set, doc=r"""交易所代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcQryQuoteActionField_swiginit(self, _thostmduserapi.new_CThostFtdcQryQuoteActionField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcQryQuoteActionField

# Register CThostFtdcQryQuoteActionField in _thostmduserapi:
_thostmduserapi.CThostFtdcQryQuoteActionField_swigregister(CThostFtdcQryQuoteActionField)
class CThostFtdcExchangeQuoteActionField(object):
    r"""交易所报价操作"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcExchangeQuoteActionField_ExchangeID_get, _thostmduserapi.CThostFtdcExchangeQuoteActionField_ExchangeID_set, doc=r"""交易所代码""")
    QuoteSysID: "TThostFtdcOrderSysIDType" = property(_thostmduserapi.CThostFtdcExchangeQuoteActionField_QuoteSysID_get, _thostmduserapi.CThostFtdcExchangeQuoteActionField_QuoteSysID_set, doc=r"""报价操作编号""")
    ActionFlag: "TThostFtdcActionFlagType" = property(_thostmduserapi.CThostFtdcExchangeQuoteActionField_ActionFlag_get, _thostmduserapi.CThostFtdcExchangeQuoteActionField_ActionFlag_set, doc=r"""操作标志""")
    ActionDate: "TThostFtdcDateType" = property(_thostmduserapi.CThostFtdcExchangeQuoteActionField_ActionDate_get, _thostmduserapi.CThostFtdcExchangeQuoteActionField_ActionDate_set, doc=r"""操作日期""")
    ActionTime: "TThostFtdcTimeType" = property(_thostmduserapi.CThostFtdcExchangeQuoteActionField_ActionTime_get, _thostmduserapi.CThostFtdcExchangeQuoteActionField_ActionTime_set, doc=r"""操作时间""")
    TraderID: "TThostFtdcTraderIDType" = property(_thostmduserapi.CThostFtdcExchangeQuoteActionField_TraderID_get, _thostmduserapi.CThostFtdcExchangeQuoteActionField_TraderID_set, doc=r"""交易所交易员代码""")
    InstallID: "TThostFtdcInstallIDType" = property(_thostmduserapi.CThostFtdcExchangeQuoteActionField_InstallID_get, _thostmduserapi.CThostFtdcExchangeQuoteActionField_InstallID_set, doc=r"""安装编号""")
    QuoteLocalID: "TThostFtdcOrderLocalIDType" = property(_thostmduserapi.CThostFtdcExchangeQuoteActionField_QuoteLocalID_get, _thostmduserapi.CThostFtdcExchangeQuoteActionField_QuoteLocalID_set, doc=r"""本地报价编号""")
    ActionLocalID: "TThostFtdcOrderLocalIDType" = property(_thostmduserapi.CThostFtdcExchangeQuoteActionField_ActionLocalID_get, _thostmduserapi.CThostFtdcExchangeQuoteActionField_ActionLocalID_set, doc=r"""操作本地编号""")
    ParticipantID: "TThostFtdcParticipantIDType" = property(_thostmduserapi.CThostFtdcExchangeQuoteActionField_ParticipantID_get, _thostmduserapi.CThostFtdcExchangeQuoteActionField_ParticipantID_set, doc=r"""会员代码""")
    ClientID: "TThostFtdcClientIDType" = property(_thostmduserapi.CThostFtdcExchangeQuoteActionField_ClientID_get, _thostmduserapi.CThostFtdcExchangeQuoteActionField_ClientID_set, doc=r"""客户代码""")
    BusinessUnit: "TThostFtdcBusinessUnitType" = property(_thostmduserapi.CThostFtdcExchangeQuoteActionField_BusinessUnit_get, _thostmduserapi.CThostFtdcExchangeQuoteActionField_BusinessUnit_set, doc=r"""业务单元""")
    OrderActionStatus: "TThostFtdcOrderActionStatusType" = property(_thostmduserapi.CThostFtdcExchangeQuoteActionField_OrderActionStatus_get, _thostmduserapi.CThostFtdcExchangeQuoteActionField_OrderActionStatus_set, doc=r"""报单操作状态""")
    UserID: "TThostFtdcUserIDType" = property(_thostmduserapi.CThostFtdcExchangeQuoteActionField_UserID_get, _thostmduserapi.CThostFtdcExchangeQuoteActionField_UserID_set, doc=r"""用户代码""")
    reserve1: "TThostFtdcOldIPAddressType" = property(_thostmduserapi.CThostFtdcExchangeQuoteActionField_reserve1_get, _thostmduserapi.CThostFtdcExchangeQuoteActionField_reserve1_set, doc=r"""保留的无效字段""")
    MacAddress: "TThostFtdcMacAddressType" = property(_thostmduserapi.CThostFtdcExchangeQuoteActionField_MacAddress_get, _thostmduserapi.CThostFtdcExchangeQuoteActionField_MacAddress_set, doc=r"""Mac地址""")
    IPAddress: "TThostFtdcIPAddressType" = property(_thostmduserapi.CThostFtdcExchangeQuoteActionField_IPAddress_get, _thostmduserapi.CThostFtdcExchangeQuoteActionField_IPAddress_set, doc=r"""IP地址""")

    def __init__(self):
        _thostmduserapi.CThostFtdcExchangeQuoteActionField_swiginit(self, _thostmduserapi.new_CThostFtdcExchangeQuoteActionField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcExchangeQuoteActionField

# Register CThostFtdcExchangeQuoteActionField in _thostmduserapi:
_thostmduserapi.CThostFtdcExchangeQuoteActionField_swigregister(CThostFtdcExchangeQuoteActionField)
class CThostFtdcQryExchangeQuoteActionField(object):
    r"""交易所报价操作查询"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ParticipantID: "TThostFtdcParticipantIDType" = property(_thostmduserapi.CThostFtdcQryExchangeQuoteActionField_ParticipantID_get, _thostmduserapi.CThostFtdcQryExchangeQuoteActionField_ParticipantID_set, doc=r"""会员代码""")
    ClientID: "TThostFtdcClientIDType" = property(_thostmduserapi.CThostFtdcQryExchangeQuoteActionField_ClientID_get, _thostmduserapi.CThostFtdcQryExchangeQuoteActionField_ClientID_set, doc=r"""客户代码""")
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcQryExchangeQuoteActionField_ExchangeID_get, _thostmduserapi.CThostFtdcQryExchangeQuoteActionField_ExchangeID_set, doc=r"""交易所代码""")
    TraderID: "TThostFtdcTraderIDType" = property(_thostmduserapi.CThostFtdcQryExchangeQuoteActionField_TraderID_get, _thostmduserapi.CThostFtdcQryExchangeQuoteActionField_TraderID_set, doc=r"""交易所交易员代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcQryExchangeQuoteActionField_swiginit(self, _thostmduserapi.new_CThostFtdcQryExchangeQuoteActionField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcQryExchangeQuoteActionField

# Register CThostFtdcQryExchangeQuoteActionField in _thostmduserapi:
_thostmduserapi.CThostFtdcQryExchangeQuoteActionField_swigregister(CThostFtdcQryExchangeQuoteActionField)
class CThostFtdcOptionInstrDeltaField(object):
    r"""期权合约delta值"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    reserve1: "TThostFtdcOldInstrumentIDType" = property(_thostmduserapi.CThostFtdcOptionInstrDeltaField_reserve1_get, _thostmduserapi.CThostFtdcOptionInstrDeltaField_reserve1_set, doc=r"""保留的无效字段""")
    InvestorRange: "TThostFtdcInvestorRangeType" = property(_thostmduserapi.CThostFtdcOptionInstrDeltaField_InvestorRange_get, _thostmduserapi.CThostFtdcOptionInstrDeltaField_InvestorRange_set, doc=r"""投资者范围""")
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcOptionInstrDeltaField_BrokerID_get, _thostmduserapi.CThostFtdcOptionInstrDeltaField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "TThostFtdcInvestorIDType" = property(_thostmduserapi.CThostFtdcOptionInstrDeltaField_InvestorID_get, _thostmduserapi.CThostFtdcOptionInstrDeltaField_InvestorID_set, doc=r"""投资者代码""")
    Delta: "TThostFtdcRatioType" = property(_thostmduserapi.CThostFtdcOptionInstrDeltaField_Delta_get, _thostmduserapi.CThostFtdcOptionInstrDeltaField_Delta_set, doc=r"""Delta值""")
    InstrumentID: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcOptionInstrDeltaField_InstrumentID_get, _thostmduserapi.CThostFtdcOptionInstrDeltaField_InstrumentID_set, doc=r"""合约代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcOptionInstrDeltaField_swiginit(self, _thostmduserapi.new_CThostFtdcOptionInstrDeltaField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcOptionInstrDeltaField

# Register CThostFtdcOptionInstrDeltaField in _thostmduserapi:
_thostmduserapi.CThostFtdcOptionInstrDeltaField_swigregister(CThostFtdcOptionInstrDeltaField)
class CThostFtdcForQuoteRspField(object):
    r"""发给做市商的询价请求"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    TradingDay: "TThostFtdcDateType" = property(_thostmduserapi.CThostFtdcForQuoteRspField_TradingDay_get, _thostmduserapi.CThostFtdcForQuoteRspField_TradingDay_set, doc=r"""交易日""")
    reserve1: "TThostFtdcOldInstrumentIDType" = property(_thostmduserapi.CThostFtdcForQuoteRspField_reserve1_get, _thostmduserapi.CThostFtdcForQuoteRspField_reserve1_set, doc=r"""保留的无效字段""")
    ForQuoteSysID: "TThostFtdcOrderSysIDType" = property(_thostmduserapi.CThostFtdcForQuoteRspField_ForQuoteSysID_get, _thostmduserapi.CThostFtdcForQuoteRspField_ForQuoteSysID_set, doc=r"""询价编号""")
    ForQuoteTime: "TThostFtdcTimeType" = property(_thostmduserapi.CThostFtdcForQuoteRspField_ForQuoteTime_get, _thostmduserapi.CThostFtdcForQuoteRspField_ForQuoteTime_set, doc=r"""询价时间""")
    ActionDay: "TThostFtdcDateType" = property(_thostmduserapi.CThostFtdcForQuoteRspField_ActionDay_get, _thostmduserapi.CThostFtdcForQuoteRspField_ActionDay_set, doc=r"""业务日期""")
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcForQuoteRspField_ExchangeID_get, _thostmduserapi.CThostFtdcForQuoteRspField_ExchangeID_set, doc=r"""交易所代码""")
    InstrumentID: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcForQuoteRspField_InstrumentID_get, _thostmduserapi.CThostFtdcForQuoteRspField_InstrumentID_set, doc=r"""合约代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcForQuoteRspField_swiginit(self, _thostmduserapi.new_CThostFtdcForQuoteRspField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcForQuoteRspField

# Register CThostFtdcForQuoteRspField in _thostmduserapi:
_thostmduserapi.CThostFtdcForQuoteRspField_swigregister(CThostFtdcForQuoteRspField)
class CThostFtdcStrikeOffsetField(object):
    r"""当前期权合约执行偏移值的详细内容"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    reserve1: "TThostFtdcOldInstrumentIDType" = property(_thostmduserapi.CThostFtdcStrikeOffsetField_reserve1_get, _thostmduserapi.CThostFtdcStrikeOffsetField_reserve1_set, doc=r"""保留的无效字段""")
    InvestorRange: "TThostFtdcInvestorRangeType" = property(_thostmduserapi.CThostFtdcStrikeOffsetField_InvestorRange_get, _thostmduserapi.CThostFtdcStrikeOffsetField_InvestorRange_set, doc=r"""投资者范围""")
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcStrikeOffsetField_BrokerID_get, _thostmduserapi.CThostFtdcStrikeOffsetField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "TThostFtdcInvestorIDType" = property(_thostmduserapi.CThostFtdcStrikeOffsetField_InvestorID_get, _thostmduserapi.CThostFtdcStrikeOffsetField_InvestorID_set, doc=r"""投资者代码""")
    Offset: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcStrikeOffsetField_Offset_get, _thostmduserapi.CThostFtdcStrikeOffsetField_Offset_set, doc=r"""执行偏移值""")
    OffsetType: "TThostFtdcStrikeOffsetTypeType" = property(_thostmduserapi.CThostFtdcStrikeOffsetField_OffsetType_get, _thostmduserapi.CThostFtdcStrikeOffsetField_OffsetType_set, doc=r"""执行偏移类型""")
    InstrumentID: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcStrikeOffsetField_InstrumentID_get, _thostmduserapi.CThostFtdcStrikeOffsetField_InstrumentID_set, doc=r"""合约代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcStrikeOffsetField_swiginit(self, _thostmduserapi.new_CThostFtdcStrikeOffsetField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcStrikeOffsetField

# Register CThostFtdcStrikeOffsetField in _thostmduserapi:
_thostmduserapi.CThostFtdcStrikeOffsetField_swigregister(CThostFtdcStrikeOffsetField)
class CThostFtdcQryStrikeOffsetField(object):
    r"""期权执行偏移值查询"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcQryStrikeOffsetField_BrokerID_get, _thostmduserapi.CThostFtdcQryStrikeOffsetField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "TThostFtdcInvestorIDType" = property(_thostmduserapi.CThostFtdcQryStrikeOffsetField_InvestorID_get, _thostmduserapi.CThostFtdcQryStrikeOffsetField_InvestorID_set, doc=r"""投资者代码""")
    reserve1: "TThostFtdcOldInstrumentIDType" = property(_thostmduserapi.CThostFtdcQryStrikeOffsetField_reserve1_get, _thostmduserapi.CThostFtdcQryStrikeOffsetField_reserve1_set, doc=r"""保留的无效字段""")
    InstrumentID: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcQryStrikeOffsetField_InstrumentID_get, _thostmduserapi.CThostFtdcQryStrikeOffsetField_InstrumentID_set, doc=r"""合约代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcQryStrikeOffsetField_swiginit(self, _thostmduserapi.new_CThostFtdcQryStrikeOffsetField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcQryStrikeOffsetField

# Register CThostFtdcQryStrikeOffsetField in _thostmduserapi:
_thostmduserapi.CThostFtdcQryStrikeOffsetField_swigregister(CThostFtdcQryStrikeOffsetField)
class CThostFtdcInputBatchOrderActionField(object):
    r"""输入批量报单操作"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcInputBatchOrderActionField_BrokerID_get, _thostmduserapi.CThostFtdcInputBatchOrderActionField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "TThostFtdcInvestorIDType" = property(_thostmduserapi.CThostFtdcInputBatchOrderActionField_InvestorID_get, _thostmduserapi.CThostFtdcInputBatchOrderActionField_InvestorID_set, doc=r"""投资者代码""")
    OrderActionRef: "TThostFtdcOrderActionRefType" = property(_thostmduserapi.CThostFtdcInputBatchOrderActionField_OrderActionRef_get, _thostmduserapi.CThostFtdcInputBatchOrderActionField_OrderActionRef_set, doc=r"""报单操作引用""")
    RequestID: "TThostFtdcRequestIDType" = property(_thostmduserapi.CThostFtdcInputBatchOrderActionField_RequestID_get, _thostmduserapi.CThostFtdcInputBatchOrderActionField_RequestID_set, doc=r"""请求编号""")
    FrontID: "TThostFtdcFrontIDType" = property(_thostmduserapi.CThostFtdcInputBatchOrderActionField_FrontID_get, _thostmduserapi.CThostFtdcInputBatchOrderActionField_FrontID_set, doc=r"""前置编号""")
    SessionID: "TThostFtdcSessionIDType" = property(_thostmduserapi.CThostFtdcInputBatchOrderActionField_SessionID_get, _thostmduserapi.CThostFtdcInputBatchOrderActionField_SessionID_set, doc=r"""会话编号""")
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcInputBatchOrderActionField_ExchangeID_get, _thostmduserapi.CThostFtdcInputBatchOrderActionField_ExchangeID_set, doc=r"""交易所代码""")
    UserID: "TThostFtdcUserIDType" = property(_thostmduserapi.CThostFtdcInputBatchOrderActionField_UserID_get, _thostmduserapi.CThostFtdcInputBatchOrderActionField_UserID_set, doc=r"""用户代码""")
    InvestUnitID: "TThostFtdcInvestUnitIDType" = property(_thostmduserapi.CThostFtdcInputBatchOrderActionField_InvestUnitID_get, _thostmduserapi.CThostFtdcInputBatchOrderActionField_InvestUnitID_set, doc=r"""投资单元代码""")
    reserve1: "TThostFtdcOldIPAddressType" = property(_thostmduserapi.CThostFtdcInputBatchOrderActionField_reserve1_get, _thostmduserapi.CThostFtdcInputBatchOrderActionField_reserve1_set, doc=r"""保留的无效字段""")
    MacAddress: "TThostFtdcMacAddressType" = property(_thostmduserapi.CThostFtdcInputBatchOrderActionField_MacAddress_get, _thostmduserapi.CThostFtdcInputBatchOrderActionField_MacAddress_set, doc=r"""Mac地址""")
    IPAddress: "TThostFtdcIPAddressType" = property(_thostmduserapi.CThostFtdcInputBatchOrderActionField_IPAddress_get, _thostmduserapi.CThostFtdcInputBatchOrderActionField_IPAddress_set, doc=r"""IP地址""")

    def __init__(self):
        _thostmduserapi.CThostFtdcInputBatchOrderActionField_swiginit(self, _thostmduserapi.new_CThostFtdcInputBatchOrderActionField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcInputBatchOrderActionField

# Register CThostFtdcInputBatchOrderActionField in _thostmduserapi:
_thostmduserapi.CThostFtdcInputBatchOrderActionField_swigregister(CThostFtdcInputBatchOrderActionField)
class CThostFtdcBatchOrderActionField(object):
    r"""批量报单操作"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcBatchOrderActionField_BrokerID_get, _thostmduserapi.CThostFtdcBatchOrderActionField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "TThostFtdcInvestorIDType" = property(_thostmduserapi.CThostFtdcBatchOrderActionField_InvestorID_get, _thostmduserapi.CThostFtdcBatchOrderActionField_InvestorID_set, doc=r"""投资者代码""")
    OrderActionRef: "TThostFtdcOrderActionRefType" = property(_thostmduserapi.CThostFtdcBatchOrderActionField_OrderActionRef_get, _thostmduserapi.CThostFtdcBatchOrderActionField_OrderActionRef_set, doc=r"""报单操作引用""")
    RequestID: "TThostFtdcRequestIDType" = property(_thostmduserapi.CThostFtdcBatchOrderActionField_RequestID_get, _thostmduserapi.CThostFtdcBatchOrderActionField_RequestID_set, doc=r"""请求编号""")
    FrontID: "TThostFtdcFrontIDType" = property(_thostmduserapi.CThostFtdcBatchOrderActionField_FrontID_get, _thostmduserapi.CThostFtdcBatchOrderActionField_FrontID_set, doc=r"""前置编号""")
    SessionID: "TThostFtdcSessionIDType" = property(_thostmduserapi.CThostFtdcBatchOrderActionField_SessionID_get, _thostmduserapi.CThostFtdcBatchOrderActionField_SessionID_set, doc=r"""会话编号""")
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcBatchOrderActionField_ExchangeID_get, _thostmduserapi.CThostFtdcBatchOrderActionField_ExchangeID_set, doc=r"""交易所代码""")
    ActionDate: "TThostFtdcDateType" = property(_thostmduserapi.CThostFtdcBatchOrderActionField_ActionDate_get, _thostmduserapi.CThostFtdcBatchOrderActionField_ActionDate_set, doc=r"""操作日期""")
    ActionTime: "TThostFtdcTimeType" = property(_thostmduserapi.CThostFtdcBatchOrderActionField_ActionTime_get, _thostmduserapi.CThostFtdcBatchOrderActionField_ActionTime_set, doc=r"""操作时间""")
    TraderID: "TThostFtdcTraderIDType" = property(_thostmduserapi.CThostFtdcBatchOrderActionField_TraderID_get, _thostmduserapi.CThostFtdcBatchOrderActionField_TraderID_set, doc=r"""交易所交易员代码""")
    InstallID: "TThostFtdcInstallIDType" = property(_thostmduserapi.CThostFtdcBatchOrderActionField_InstallID_get, _thostmduserapi.CThostFtdcBatchOrderActionField_InstallID_set, doc=r"""安装编号""")
    ActionLocalID: "TThostFtdcOrderLocalIDType" = property(_thostmduserapi.CThostFtdcBatchOrderActionField_ActionLocalID_get, _thostmduserapi.CThostFtdcBatchOrderActionField_ActionLocalID_set, doc=r"""操作本地编号""")
    ParticipantID: "TThostFtdcParticipantIDType" = property(_thostmduserapi.CThostFtdcBatchOrderActionField_ParticipantID_get, _thostmduserapi.CThostFtdcBatchOrderActionField_ParticipantID_set, doc=r"""会员代码""")
    ClientID: "TThostFtdcClientIDType" = property(_thostmduserapi.CThostFtdcBatchOrderActionField_ClientID_get, _thostmduserapi.CThostFtdcBatchOrderActionField_ClientID_set, doc=r"""客户代码""")
    BusinessUnit: "TThostFtdcBusinessUnitType" = property(_thostmduserapi.CThostFtdcBatchOrderActionField_BusinessUnit_get, _thostmduserapi.CThostFtdcBatchOrderActionField_BusinessUnit_set, doc=r"""业务单元""")
    OrderActionStatus: "TThostFtdcOrderActionStatusType" = property(_thostmduserapi.CThostFtdcBatchOrderActionField_OrderActionStatus_get, _thostmduserapi.CThostFtdcBatchOrderActionField_OrderActionStatus_set, doc=r"""报单操作状态""")
    UserID: "TThostFtdcUserIDType" = property(_thostmduserapi.CThostFtdcBatchOrderActionField_UserID_get, _thostmduserapi.CThostFtdcBatchOrderActionField_UserID_set, doc=r"""用户代码""")
    StatusMsg: "TThostFtdcErrorMsgType" = property(_thostmduserapi.CThostFtdcBatchOrderActionField_StatusMsg_get, _thostmduserapi.CThostFtdcBatchOrderActionField_StatusMsg_set, doc=r"""状态信息""")
    InvestUnitID: "TThostFtdcInvestUnitIDType" = property(_thostmduserapi.CThostFtdcBatchOrderActionField_InvestUnitID_get, _thostmduserapi.CThostFtdcBatchOrderActionField_InvestUnitID_set, doc=r"""投资单元代码""")
    reserve1: "TThostFtdcOldIPAddressType" = property(_thostmduserapi.CThostFtdcBatchOrderActionField_reserve1_get, _thostmduserapi.CThostFtdcBatchOrderActionField_reserve1_set, doc=r"""保留的无效字段""")
    MacAddress: "TThostFtdcMacAddressType" = property(_thostmduserapi.CThostFtdcBatchOrderActionField_MacAddress_get, _thostmduserapi.CThostFtdcBatchOrderActionField_MacAddress_set, doc=r"""Mac地址""")
    IPAddress: "TThostFtdcIPAddressType" = property(_thostmduserapi.CThostFtdcBatchOrderActionField_IPAddress_get, _thostmduserapi.CThostFtdcBatchOrderActionField_IPAddress_set, doc=r"""IP地址""")

    def __init__(self):
        _thostmduserapi.CThostFtdcBatchOrderActionField_swiginit(self, _thostmduserapi.new_CThostFtdcBatchOrderActionField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcBatchOrderActionField

# Register CThostFtdcBatchOrderActionField in _thostmduserapi:
_thostmduserapi.CThostFtdcBatchOrderActionField_swigregister(CThostFtdcBatchOrderActionField)
class CThostFtdcExchangeBatchOrderActionField(object):
    r"""交易所批量报单操作"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcExchangeBatchOrderActionField_ExchangeID_get, _thostmduserapi.CThostFtdcExchangeBatchOrderActionField_ExchangeID_set, doc=r"""交易所代码""")
    ActionDate: "TThostFtdcDateType" = property(_thostmduserapi.CThostFtdcExchangeBatchOrderActionField_ActionDate_get, _thostmduserapi.CThostFtdcExchangeBatchOrderActionField_ActionDate_set, doc=r"""操作日期""")
    ActionTime: "TThostFtdcTimeType" = property(_thostmduserapi.CThostFtdcExchangeBatchOrderActionField_ActionTime_get, _thostmduserapi.CThostFtdcExchangeBatchOrderActionField_ActionTime_set, doc=r"""操作时间""")
    TraderID: "TThostFtdcTraderIDType" = property(_thostmduserapi.CThostFtdcExchangeBatchOrderActionField_TraderID_get, _thostmduserapi.CThostFtdcExchangeBatchOrderActionField_TraderID_set, doc=r"""交易所交易员代码""")
    InstallID: "TThostFtdcInstallIDType" = property(_thostmduserapi.CThostFtdcExchangeBatchOrderActionField_InstallID_get, _thostmduserapi.CThostFtdcExchangeBatchOrderActionField_InstallID_set, doc=r"""安装编号""")
    ActionLocalID: "TThostFtdcOrderLocalIDType" = property(_thostmduserapi.CThostFtdcExchangeBatchOrderActionField_ActionLocalID_get, _thostmduserapi.CThostFtdcExchangeBatchOrderActionField_ActionLocalID_set, doc=r"""操作本地编号""")
    ParticipantID: "TThostFtdcParticipantIDType" = property(_thostmduserapi.CThostFtdcExchangeBatchOrderActionField_ParticipantID_get, _thostmduserapi.CThostFtdcExchangeBatchOrderActionField_ParticipantID_set, doc=r"""会员代码""")
    ClientID: "TThostFtdcClientIDType" = property(_thostmduserapi.CThostFtdcExchangeBatchOrderActionField_ClientID_get, _thostmduserapi.CThostFtdcExchangeBatchOrderActionField_ClientID_set, doc=r"""客户代码""")
    BusinessUnit: "TThostFtdcBusinessUnitType" = property(_thostmduserapi.CThostFtdcExchangeBatchOrderActionField_BusinessUnit_get, _thostmduserapi.CThostFtdcExchangeBatchOrderActionField_BusinessUnit_set, doc=r"""业务单元""")
    OrderActionStatus: "TThostFtdcOrderActionStatusType" = property(_thostmduserapi.CThostFtdcExchangeBatchOrderActionField_OrderActionStatus_get, _thostmduserapi.CThostFtdcExchangeBatchOrderActionField_OrderActionStatus_set, doc=r"""报单操作状态""")
    UserID: "TThostFtdcUserIDType" = property(_thostmduserapi.CThostFtdcExchangeBatchOrderActionField_UserID_get, _thostmduserapi.CThostFtdcExchangeBatchOrderActionField_UserID_set, doc=r"""用户代码""")
    reserve1: "TThostFtdcOldIPAddressType" = property(_thostmduserapi.CThostFtdcExchangeBatchOrderActionField_reserve1_get, _thostmduserapi.CThostFtdcExchangeBatchOrderActionField_reserve1_set, doc=r"""保留的无效字段""")
    MacAddress: "TThostFtdcMacAddressType" = property(_thostmduserapi.CThostFtdcExchangeBatchOrderActionField_MacAddress_get, _thostmduserapi.CThostFtdcExchangeBatchOrderActionField_MacAddress_set, doc=r"""Mac地址""")
    IPAddress: "TThostFtdcIPAddressType" = property(_thostmduserapi.CThostFtdcExchangeBatchOrderActionField_IPAddress_get, _thostmduserapi.CThostFtdcExchangeBatchOrderActionField_IPAddress_set, doc=r"""IP地址""")

    def __init__(self):
        _thostmduserapi.CThostFtdcExchangeBatchOrderActionField_swiginit(self, _thostmduserapi.new_CThostFtdcExchangeBatchOrderActionField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcExchangeBatchOrderActionField

# Register CThostFtdcExchangeBatchOrderActionField in _thostmduserapi:
_thostmduserapi.CThostFtdcExchangeBatchOrderActionField_swigregister(CThostFtdcExchangeBatchOrderActionField)
class CThostFtdcQryBatchOrderActionField(object):
    r"""查询批量报单操作"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcQryBatchOrderActionField_BrokerID_get, _thostmduserapi.CThostFtdcQryBatchOrderActionField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "TThostFtdcInvestorIDType" = property(_thostmduserapi.CThostFtdcQryBatchOrderActionField_InvestorID_get, _thostmduserapi.CThostFtdcQryBatchOrderActionField_InvestorID_set, doc=r"""投资者代码""")
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcQryBatchOrderActionField_ExchangeID_get, _thostmduserapi.CThostFtdcQryBatchOrderActionField_ExchangeID_set, doc=r"""交易所代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcQryBatchOrderActionField_swiginit(self, _thostmduserapi.new_CThostFtdcQryBatchOrderActionField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcQryBatchOrderActionField

# Register CThostFtdcQryBatchOrderActionField in _thostmduserapi:
_thostmduserapi.CThostFtdcQryBatchOrderActionField_swigregister(CThostFtdcQryBatchOrderActionField)
class CThostFtdcCombInstrumentGuardField(object):
    r"""组合合约安全系数"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcCombInstrumentGuardField_BrokerID_get, _thostmduserapi.CThostFtdcCombInstrumentGuardField_BrokerID_set, doc=r"""经纪公司代码""")
    reserve1: "TThostFtdcOldInstrumentIDType" = property(_thostmduserapi.CThostFtdcCombInstrumentGuardField_reserve1_get, _thostmduserapi.CThostFtdcCombInstrumentGuardField_reserve1_set, doc=r"""保留的无效字段""")
    GuarantRatio: "TThostFtdcRatioType" = property(_thostmduserapi.CThostFtdcCombInstrumentGuardField_GuarantRatio_get, _thostmduserapi.CThostFtdcCombInstrumentGuardField_GuarantRatio_set)
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcCombInstrumentGuardField_ExchangeID_get, _thostmduserapi.CThostFtdcCombInstrumentGuardField_ExchangeID_set, doc=r"""交易所代码""")
    InstrumentID: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcCombInstrumentGuardField_InstrumentID_get, _thostmduserapi.CThostFtdcCombInstrumentGuardField_InstrumentID_set, doc=r"""合约代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcCombInstrumentGuardField_swiginit(self, _thostmduserapi.new_CThostFtdcCombInstrumentGuardField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcCombInstrumentGuardField

# Register CThostFtdcCombInstrumentGuardField in _thostmduserapi:
_thostmduserapi.CThostFtdcCombInstrumentGuardField_swigregister(CThostFtdcCombInstrumentGuardField)
class CThostFtdcQryCombInstrumentGuardField(object):
    r"""组合合约安全系数查询"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcQryCombInstrumentGuardField_BrokerID_get, _thostmduserapi.CThostFtdcQryCombInstrumentGuardField_BrokerID_set, doc=r"""经纪公司代码""")
    reserve1: "TThostFtdcOldInstrumentIDType" = property(_thostmduserapi.CThostFtdcQryCombInstrumentGuardField_reserve1_get, _thostmduserapi.CThostFtdcQryCombInstrumentGuardField_reserve1_set, doc=r"""保留的无效字段""")
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcQryCombInstrumentGuardField_ExchangeID_get, _thostmduserapi.CThostFtdcQryCombInstrumentGuardField_ExchangeID_set, doc=r"""交易所代码""")
    InstrumentID: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcQryCombInstrumentGuardField_InstrumentID_get, _thostmduserapi.CThostFtdcQryCombInstrumentGuardField_InstrumentID_set, doc=r"""合约代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcQryCombInstrumentGuardField_swiginit(self, _thostmduserapi.new_CThostFtdcQryCombInstrumentGuardField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcQryCombInstrumentGuardField

# Register CThostFtdcQryCombInstrumentGuardField in _thostmduserapi:
_thostmduserapi.CThostFtdcQryCombInstrumentGuardField_swigregister(CThostFtdcQryCombInstrumentGuardField)
class CThostFtdcInputCombActionField(object):
    r"""输入的申请组合"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcInputCombActionField_BrokerID_get, _thostmduserapi.CThostFtdcInputCombActionField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "TThostFtdcInvestorIDType" = property(_thostmduserapi.CThostFtdcInputCombActionField_InvestorID_get, _thostmduserapi.CThostFtdcInputCombActionField_InvestorID_set, doc=r"""投资者代码""")
    reserve1: "TThostFtdcOldInstrumentIDType" = property(_thostmduserapi.CThostFtdcInputCombActionField_reserve1_get, _thostmduserapi.CThostFtdcInputCombActionField_reserve1_set, doc=r"""保留的无效字段""")
    CombActionRef: "TThostFtdcOrderRefType" = property(_thostmduserapi.CThostFtdcInputCombActionField_CombActionRef_get, _thostmduserapi.CThostFtdcInputCombActionField_CombActionRef_set, doc=r"""组合引用""")
    UserID: "TThostFtdcUserIDType" = property(_thostmduserapi.CThostFtdcInputCombActionField_UserID_get, _thostmduserapi.CThostFtdcInputCombActionField_UserID_set, doc=r"""用户代码""")
    Direction: "TThostFtdcDirectionType" = property(_thostmduserapi.CThostFtdcInputCombActionField_Direction_get, _thostmduserapi.CThostFtdcInputCombActionField_Direction_set, doc=r"""买卖方向""")
    Volume: "TThostFtdcVolumeType" = property(_thostmduserapi.CThostFtdcInputCombActionField_Volume_get, _thostmduserapi.CThostFtdcInputCombActionField_Volume_set, doc=r"""数量""")
    CombDirection: "TThostFtdcCombDirectionType" = property(_thostmduserapi.CThostFtdcInputCombActionField_CombDirection_get, _thostmduserapi.CThostFtdcInputCombActionField_CombDirection_set, doc=r"""组合指令方向""")
    HedgeFlag: "TThostFtdcHedgeFlagType" = property(_thostmduserapi.CThostFtdcInputCombActionField_HedgeFlag_get, _thostmduserapi.CThostFtdcInputCombActionField_HedgeFlag_set, doc=r"""投机套保标志""")
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcInputCombActionField_ExchangeID_get, _thostmduserapi.CThostFtdcInputCombActionField_ExchangeID_set, doc=r"""交易所代码""")
    reserve2: "TThostFtdcOldIPAddressType" = property(_thostmduserapi.CThostFtdcInputCombActionField_reserve2_get, _thostmduserapi.CThostFtdcInputCombActionField_reserve2_set, doc=r"""保留的无效字段""")
    MacAddress: "TThostFtdcMacAddressType" = property(_thostmduserapi.CThostFtdcInputCombActionField_MacAddress_get, _thostmduserapi.CThostFtdcInputCombActionField_MacAddress_set, doc=r"""Mac地址""")
    InvestUnitID: "TThostFtdcInvestUnitIDType" = property(_thostmduserapi.CThostFtdcInputCombActionField_InvestUnitID_get, _thostmduserapi.CThostFtdcInputCombActionField_InvestUnitID_set, doc=r"""投资单元代码""")
    FrontID: "TThostFtdcFrontIDType" = property(_thostmduserapi.CThostFtdcInputCombActionField_FrontID_get, _thostmduserapi.CThostFtdcInputCombActionField_FrontID_set, doc=r"""前置编号""")
    SessionID: "TThostFtdcSessionIDType" = property(_thostmduserapi.CThostFtdcInputCombActionField_SessionID_get, _thostmduserapi.CThostFtdcInputCombActionField_SessionID_set, doc=r"""会话编号""")
    InstrumentID: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcInputCombActionField_InstrumentID_get, _thostmduserapi.CThostFtdcInputCombActionField_InstrumentID_set, doc=r"""合约代码""")
    IPAddress: "TThostFtdcIPAddressType" = property(_thostmduserapi.CThostFtdcInputCombActionField_IPAddress_get, _thostmduserapi.CThostFtdcInputCombActionField_IPAddress_set, doc=r"""IP地址""")

    def __init__(self):
        _thostmduserapi.CThostFtdcInputCombActionField_swiginit(self, _thostmduserapi.new_CThostFtdcInputCombActionField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcInputCombActionField

# Register CThostFtdcInputCombActionField in _thostmduserapi:
_thostmduserapi.CThostFtdcInputCombActionField_swigregister(CThostFtdcInputCombActionField)
class CThostFtdcCombActionField(object):
    r"""申请组合"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcCombActionField_BrokerID_get, _thostmduserapi.CThostFtdcCombActionField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "TThostFtdcInvestorIDType" = property(_thostmduserapi.CThostFtdcCombActionField_InvestorID_get, _thostmduserapi.CThostFtdcCombActionField_InvestorID_set, doc=r"""投资者代码""")
    reserve1: "TThostFtdcOldInstrumentIDType" = property(_thostmduserapi.CThostFtdcCombActionField_reserve1_get, _thostmduserapi.CThostFtdcCombActionField_reserve1_set, doc=r"""保留的无效字段""")
    CombActionRef: "TThostFtdcOrderRefType" = property(_thostmduserapi.CThostFtdcCombActionField_CombActionRef_get, _thostmduserapi.CThostFtdcCombActionField_CombActionRef_set, doc=r"""组合引用""")
    UserID: "TThostFtdcUserIDType" = property(_thostmduserapi.CThostFtdcCombActionField_UserID_get, _thostmduserapi.CThostFtdcCombActionField_UserID_set, doc=r"""用户代码""")
    Direction: "TThostFtdcDirectionType" = property(_thostmduserapi.CThostFtdcCombActionField_Direction_get, _thostmduserapi.CThostFtdcCombActionField_Direction_set, doc=r"""买卖方向""")
    Volume: "TThostFtdcVolumeType" = property(_thostmduserapi.CThostFtdcCombActionField_Volume_get, _thostmduserapi.CThostFtdcCombActionField_Volume_set, doc=r"""数量""")
    CombDirection: "TThostFtdcCombDirectionType" = property(_thostmduserapi.CThostFtdcCombActionField_CombDirection_get, _thostmduserapi.CThostFtdcCombActionField_CombDirection_set, doc=r"""组合指令方向""")
    HedgeFlag: "TThostFtdcHedgeFlagType" = property(_thostmduserapi.CThostFtdcCombActionField_HedgeFlag_get, _thostmduserapi.CThostFtdcCombActionField_HedgeFlag_set, doc=r"""投机套保标志""")
    ActionLocalID: "TThostFtdcOrderLocalIDType" = property(_thostmduserapi.CThostFtdcCombActionField_ActionLocalID_get, _thostmduserapi.CThostFtdcCombActionField_ActionLocalID_set, doc=r"""本地申请组合编号""")
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcCombActionField_ExchangeID_get, _thostmduserapi.CThostFtdcCombActionField_ExchangeID_set, doc=r"""交易所代码""")
    ParticipantID: "TThostFtdcParticipantIDType" = property(_thostmduserapi.CThostFtdcCombActionField_ParticipantID_get, _thostmduserapi.CThostFtdcCombActionField_ParticipantID_set, doc=r"""会员代码""")
    ClientID: "TThostFtdcClientIDType" = property(_thostmduserapi.CThostFtdcCombActionField_ClientID_get, _thostmduserapi.CThostFtdcCombActionField_ClientID_set, doc=r"""客户代码""")
    reserve2: "TThostFtdcOldExchangeInstIDType" = property(_thostmduserapi.CThostFtdcCombActionField_reserve2_get, _thostmduserapi.CThostFtdcCombActionField_reserve2_set, doc=r"""保留的无效字段""")
    TraderID: "TThostFtdcTraderIDType" = property(_thostmduserapi.CThostFtdcCombActionField_TraderID_get, _thostmduserapi.CThostFtdcCombActionField_TraderID_set, doc=r"""交易所交易员代码""")
    InstallID: "TThostFtdcInstallIDType" = property(_thostmduserapi.CThostFtdcCombActionField_InstallID_get, _thostmduserapi.CThostFtdcCombActionField_InstallID_set, doc=r"""安装编号""")
    ActionStatus: "TThostFtdcOrderActionStatusType" = property(_thostmduserapi.CThostFtdcCombActionField_ActionStatus_get, _thostmduserapi.CThostFtdcCombActionField_ActionStatus_set, doc=r"""组合状态""")
    NotifySequence: "TThostFtdcSequenceNoType" = property(_thostmduserapi.CThostFtdcCombActionField_NotifySequence_get, _thostmduserapi.CThostFtdcCombActionField_NotifySequence_set, doc=r"""报单提示序号""")
    TradingDay: "TThostFtdcDateType" = property(_thostmduserapi.CThostFtdcCombActionField_TradingDay_get, _thostmduserapi.CThostFtdcCombActionField_TradingDay_set, doc=r"""交易日""")
    SettlementID: "TThostFtdcSettlementIDType" = property(_thostmduserapi.CThostFtdcCombActionField_SettlementID_get, _thostmduserapi.CThostFtdcCombActionField_SettlementID_set, doc=r"""结算编号""")
    SequenceNo: "TThostFtdcSequenceNoType" = property(_thostmduserapi.CThostFtdcCombActionField_SequenceNo_get, _thostmduserapi.CThostFtdcCombActionField_SequenceNo_set, doc=r"""序号""")
    FrontID: "TThostFtdcFrontIDType" = property(_thostmduserapi.CThostFtdcCombActionField_FrontID_get, _thostmduserapi.CThostFtdcCombActionField_FrontID_set, doc=r"""前置编号""")
    SessionID: "TThostFtdcSessionIDType" = property(_thostmduserapi.CThostFtdcCombActionField_SessionID_get, _thostmduserapi.CThostFtdcCombActionField_SessionID_set, doc=r"""会话编号""")
    UserProductInfo: "TThostFtdcProductInfoType" = property(_thostmduserapi.CThostFtdcCombActionField_UserProductInfo_get, _thostmduserapi.CThostFtdcCombActionField_UserProductInfo_set, doc=r"""用户端产品信息""")
    StatusMsg: "TThostFtdcErrorMsgType" = property(_thostmduserapi.CThostFtdcCombActionField_StatusMsg_get, _thostmduserapi.CThostFtdcCombActionField_StatusMsg_set, doc=r"""状态信息""")
    reserve3: "TThostFtdcOldIPAddressType" = property(_thostmduserapi.CThostFtdcCombActionField_reserve3_get, _thostmduserapi.CThostFtdcCombActionField_reserve3_set, doc=r"""保留的无效字段""")
    MacAddress: "TThostFtdcMacAddressType" = property(_thostmduserapi.CThostFtdcCombActionField_MacAddress_get, _thostmduserapi.CThostFtdcCombActionField_MacAddress_set, doc=r"""Mac地址""")
    ComTradeID: "TThostFtdcTradeIDType" = property(_thostmduserapi.CThostFtdcCombActionField_ComTradeID_get, _thostmduserapi.CThostFtdcCombActionField_ComTradeID_set, doc=r"""组合编号""")
    BranchID: "TThostFtdcBranchIDType" = property(_thostmduserapi.CThostFtdcCombActionField_BranchID_get, _thostmduserapi.CThostFtdcCombActionField_BranchID_set, doc=r"""营业部编号""")
    InvestUnitID: "TThostFtdcInvestUnitIDType" = property(_thostmduserapi.CThostFtdcCombActionField_InvestUnitID_get, _thostmduserapi.CThostFtdcCombActionField_InvestUnitID_set, doc=r"""投资单元代码""")
    InstrumentID: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcCombActionField_InstrumentID_get, _thostmduserapi.CThostFtdcCombActionField_InstrumentID_set, doc=r"""合约代码""")
    ExchangeInstID: "TThostFtdcExchangeInstIDType" = property(_thostmduserapi.CThostFtdcCombActionField_ExchangeInstID_get, _thostmduserapi.CThostFtdcCombActionField_ExchangeInstID_set, doc=r"""合约在交易所的代码""")
    IPAddress: "TThostFtdcIPAddressType" = property(_thostmduserapi.CThostFtdcCombActionField_IPAddress_get, _thostmduserapi.CThostFtdcCombActionField_IPAddress_set, doc=r"""IP地址""")

    def __init__(self):
        _thostmduserapi.CThostFtdcCombActionField_swiginit(self, _thostmduserapi.new_CThostFtdcCombActionField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcCombActionField

# Register CThostFtdcCombActionField in _thostmduserapi:
_thostmduserapi.CThostFtdcCombActionField_swigregister(CThostFtdcCombActionField)
class CThostFtdcQryCombActionField(object):
    r"""申请组合查询"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcQryCombActionField_BrokerID_get, _thostmduserapi.CThostFtdcQryCombActionField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "TThostFtdcInvestorIDType" = property(_thostmduserapi.CThostFtdcQryCombActionField_InvestorID_get, _thostmduserapi.CThostFtdcQryCombActionField_InvestorID_set, doc=r"""投资者代码""")
    reserve1: "TThostFtdcOldInstrumentIDType" = property(_thostmduserapi.CThostFtdcQryCombActionField_reserve1_get, _thostmduserapi.CThostFtdcQryCombActionField_reserve1_set, doc=r"""保留的无效字段""")
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcQryCombActionField_ExchangeID_get, _thostmduserapi.CThostFtdcQryCombActionField_ExchangeID_set, doc=r"""交易所代码""")
    InvestUnitID: "TThostFtdcInvestUnitIDType" = property(_thostmduserapi.CThostFtdcQryCombActionField_InvestUnitID_get, _thostmduserapi.CThostFtdcQryCombActionField_InvestUnitID_set, doc=r"""投资单元代码""")
    InstrumentID: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcQryCombActionField_InstrumentID_get, _thostmduserapi.CThostFtdcQryCombActionField_InstrumentID_set, doc=r"""合约代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcQryCombActionField_swiginit(self, _thostmduserapi.new_CThostFtdcQryCombActionField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcQryCombActionField

# Register CThostFtdcQryCombActionField in _thostmduserapi:
_thostmduserapi.CThostFtdcQryCombActionField_swigregister(CThostFtdcQryCombActionField)
class CThostFtdcExchangeCombActionField(object):
    r"""交易所申请组合信息"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Direction: "TThostFtdcDirectionType" = property(_thostmduserapi.CThostFtdcExchangeCombActionField_Direction_get, _thostmduserapi.CThostFtdcExchangeCombActionField_Direction_set, doc=r"""买卖方向""")
    Volume: "TThostFtdcVolumeType" = property(_thostmduserapi.CThostFtdcExchangeCombActionField_Volume_get, _thostmduserapi.CThostFtdcExchangeCombActionField_Volume_set, doc=r"""数量""")
    CombDirection: "TThostFtdcCombDirectionType" = property(_thostmduserapi.CThostFtdcExchangeCombActionField_CombDirection_get, _thostmduserapi.CThostFtdcExchangeCombActionField_CombDirection_set, doc=r"""组合指令方向""")
    HedgeFlag: "TThostFtdcHedgeFlagType" = property(_thostmduserapi.CThostFtdcExchangeCombActionField_HedgeFlag_get, _thostmduserapi.CThostFtdcExchangeCombActionField_HedgeFlag_set, doc=r"""投机套保标志""")
    ActionLocalID: "TThostFtdcOrderLocalIDType" = property(_thostmduserapi.CThostFtdcExchangeCombActionField_ActionLocalID_get, _thostmduserapi.CThostFtdcExchangeCombActionField_ActionLocalID_set, doc=r"""本地申请组合编号""")
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcExchangeCombActionField_ExchangeID_get, _thostmduserapi.CThostFtdcExchangeCombActionField_ExchangeID_set, doc=r"""交易所代码""")
    ParticipantID: "TThostFtdcParticipantIDType" = property(_thostmduserapi.CThostFtdcExchangeCombActionField_ParticipantID_get, _thostmduserapi.CThostFtdcExchangeCombActionField_ParticipantID_set, doc=r"""会员代码""")
    ClientID: "TThostFtdcClientIDType" = property(_thostmduserapi.CThostFtdcExchangeCombActionField_ClientID_get, _thostmduserapi.CThostFtdcExchangeCombActionField_ClientID_set, doc=r"""客户代码""")
    reserve1: "TThostFtdcOldExchangeInstIDType" = property(_thostmduserapi.CThostFtdcExchangeCombActionField_reserve1_get, _thostmduserapi.CThostFtdcExchangeCombActionField_reserve1_set, doc=r"""保留的无效字段""")
    TraderID: "TThostFtdcTraderIDType" = property(_thostmduserapi.CThostFtdcExchangeCombActionField_TraderID_get, _thostmduserapi.CThostFtdcExchangeCombActionField_TraderID_set, doc=r"""交易所交易员代码""")
    InstallID: "TThostFtdcInstallIDType" = property(_thostmduserapi.CThostFtdcExchangeCombActionField_InstallID_get, _thostmduserapi.CThostFtdcExchangeCombActionField_InstallID_set, doc=r"""安装编号""")
    ActionStatus: "TThostFtdcOrderActionStatusType" = property(_thostmduserapi.CThostFtdcExchangeCombActionField_ActionStatus_get, _thostmduserapi.CThostFtdcExchangeCombActionField_ActionStatus_set, doc=r"""组合状态""")
    NotifySequence: "TThostFtdcSequenceNoType" = property(_thostmduserapi.CThostFtdcExchangeCombActionField_NotifySequence_get, _thostmduserapi.CThostFtdcExchangeCombActionField_NotifySequence_set, doc=r"""报单提示序号""")
    TradingDay: "TThostFtdcDateType" = property(_thostmduserapi.CThostFtdcExchangeCombActionField_TradingDay_get, _thostmduserapi.CThostFtdcExchangeCombActionField_TradingDay_set, doc=r"""交易日""")
    SettlementID: "TThostFtdcSettlementIDType" = property(_thostmduserapi.CThostFtdcExchangeCombActionField_SettlementID_get, _thostmduserapi.CThostFtdcExchangeCombActionField_SettlementID_set, doc=r"""结算编号""")
    SequenceNo: "TThostFtdcSequenceNoType" = property(_thostmduserapi.CThostFtdcExchangeCombActionField_SequenceNo_get, _thostmduserapi.CThostFtdcExchangeCombActionField_SequenceNo_set, doc=r"""序号""")
    reserve2: "TThostFtdcOldIPAddressType" = property(_thostmduserapi.CThostFtdcExchangeCombActionField_reserve2_get, _thostmduserapi.CThostFtdcExchangeCombActionField_reserve2_set, doc=r"""保留的无效字段""")
    MacAddress: "TThostFtdcMacAddressType" = property(_thostmduserapi.CThostFtdcExchangeCombActionField_MacAddress_get, _thostmduserapi.CThostFtdcExchangeCombActionField_MacAddress_set, doc=r"""Mac地址""")
    ComTradeID: "TThostFtdcTradeIDType" = property(_thostmduserapi.CThostFtdcExchangeCombActionField_ComTradeID_get, _thostmduserapi.CThostFtdcExchangeCombActionField_ComTradeID_set, doc=r"""组合编号""")
    BranchID: "TThostFtdcBranchIDType" = property(_thostmduserapi.CThostFtdcExchangeCombActionField_BranchID_get, _thostmduserapi.CThostFtdcExchangeCombActionField_BranchID_set, doc=r"""营业部编号""")
    ExchangeInstID: "TThostFtdcExchangeInstIDType" = property(_thostmduserapi.CThostFtdcExchangeCombActionField_ExchangeInstID_get, _thostmduserapi.CThostFtdcExchangeCombActionField_ExchangeInstID_set, doc=r"""合约在交易所的代码""")
    IPAddress: "TThostFtdcIPAddressType" = property(_thostmduserapi.CThostFtdcExchangeCombActionField_IPAddress_get, _thostmduserapi.CThostFtdcExchangeCombActionField_IPAddress_set, doc=r"""IP地址""")

    def __init__(self):
        _thostmduserapi.CThostFtdcExchangeCombActionField_swiginit(self, _thostmduserapi.new_CThostFtdcExchangeCombActionField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcExchangeCombActionField

# Register CThostFtdcExchangeCombActionField in _thostmduserapi:
_thostmduserapi.CThostFtdcExchangeCombActionField_swigregister(CThostFtdcExchangeCombActionField)
class CThostFtdcQryExchangeCombActionField(object):
    r"""交易所申请组合查询"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ParticipantID: "TThostFtdcParticipantIDType" = property(_thostmduserapi.CThostFtdcQryExchangeCombActionField_ParticipantID_get, _thostmduserapi.CThostFtdcQryExchangeCombActionField_ParticipantID_set, doc=r"""会员代码""")
    ClientID: "TThostFtdcClientIDType" = property(_thostmduserapi.CThostFtdcQryExchangeCombActionField_ClientID_get, _thostmduserapi.CThostFtdcQryExchangeCombActionField_ClientID_set, doc=r"""客户代码""")
    reserve1: "TThostFtdcOldExchangeInstIDType" = property(_thostmduserapi.CThostFtdcQryExchangeCombActionField_reserve1_get, _thostmduserapi.CThostFtdcQryExchangeCombActionField_reserve1_set, doc=r"""保留的无效字段""")
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcQryExchangeCombActionField_ExchangeID_get, _thostmduserapi.CThostFtdcQryExchangeCombActionField_ExchangeID_set, doc=r"""交易所代码""")
    TraderID: "TThostFtdcTraderIDType" = property(_thostmduserapi.CThostFtdcQryExchangeCombActionField_TraderID_get, _thostmduserapi.CThostFtdcQryExchangeCombActionField_TraderID_set, doc=r"""交易所交易员代码""")
    ExchangeInstID: "TThostFtdcExchangeInstIDType" = property(_thostmduserapi.CThostFtdcQryExchangeCombActionField_ExchangeInstID_get, _thostmduserapi.CThostFtdcQryExchangeCombActionField_ExchangeInstID_set, doc=r"""合约在交易所的代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcQryExchangeCombActionField_swiginit(self, _thostmduserapi.new_CThostFtdcQryExchangeCombActionField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcQryExchangeCombActionField

# Register CThostFtdcQryExchangeCombActionField in _thostmduserapi:
_thostmduserapi.CThostFtdcQryExchangeCombActionField_swigregister(CThostFtdcQryExchangeCombActionField)
class CThostFtdcProductExchRateField(object):
    r"""产品报价汇率"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    reserve1: "TThostFtdcOldInstrumentIDType" = property(_thostmduserapi.CThostFtdcProductExchRateField_reserve1_get, _thostmduserapi.CThostFtdcProductExchRateField_reserve1_set, doc=r"""保留的无效字段""")
    QuoteCurrencyID: "TThostFtdcCurrencyIDType" = property(_thostmduserapi.CThostFtdcProductExchRateField_QuoteCurrencyID_get, _thostmduserapi.CThostFtdcProductExchRateField_QuoteCurrencyID_set, doc=r"""报价币种类型""")
    ExchangeRate: "TThostFtdcExchangeRateType" = property(_thostmduserapi.CThostFtdcProductExchRateField_ExchangeRate_get, _thostmduserapi.CThostFtdcProductExchRateField_ExchangeRate_set, doc=r"""汇率""")
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcProductExchRateField_ExchangeID_get, _thostmduserapi.CThostFtdcProductExchRateField_ExchangeID_set, doc=r"""交易所代码""")
    ProductID: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcProductExchRateField_ProductID_get, _thostmduserapi.CThostFtdcProductExchRateField_ProductID_set, doc=r"""产品代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcProductExchRateField_swiginit(self, _thostmduserapi.new_CThostFtdcProductExchRateField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcProductExchRateField

# Register CThostFtdcProductExchRateField in _thostmduserapi:
_thostmduserapi.CThostFtdcProductExchRateField_swigregister(CThostFtdcProductExchRateField)
class CThostFtdcQryProductExchRateField(object):
    r"""产品报价汇率查询"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    reserve1: "TThostFtdcOldInstrumentIDType" = property(_thostmduserapi.CThostFtdcQryProductExchRateField_reserve1_get, _thostmduserapi.CThostFtdcQryProductExchRateField_reserve1_set, doc=r"""保留的无效字段""")
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcQryProductExchRateField_ExchangeID_get, _thostmduserapi.CThostFtdcQryProductExchRateField_ExchangeID_set, doc=r"""交易所代码""")
    ProductID: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcQryProductExchRateField_ProductID_get, _thostmduserapi.CThostFtdcQryProductExchRateField_ProductID_set, doc=r"""产品代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcQryProductExchRateField_swiginit(self, _thostmduserapi.new_CThostFtdcQryProductExchRateField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcQryProductExchRateField

# Register CThostFtdcQryProductExchRateField in _thostmduserapi:
_thostmduserapi.CThostFtdcQryProductExchRateField_swigregister(CThostFtdcQryProductExchRateField)
class CThostFtdcQryForQuoteParamField(object):
    r"""查询询价价差参数"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcQryForQuoteParamField_BrokerID_get, _thostmduserapi.CThostFtdcQryForQuoteParamField_BrokerID_set, doc=r"""经纪公司代码""")
    reserve1: "TThostFtdcOldInstrumentIDType" = property(_thostmduserapi.CThostFtdcQryForQuoteParamField_reserve1_get, _thostmduserapi.CThostFtdcQryForQuoteParamField_reserve1_set, doc=r"""保留的无效字段""")
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcQryForQuoteParamField_ExchangeID_get, _thostmduserapi.CThostFtdcQryForQuoteParamField_ExchangeID_set, doc=r"""交易所代码""")
    InstrumentID: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcQryForQuoteParamField_InstrumentID_get, _thostmduserapi.CThostFtdcQryForQuoteParamField_InstrumentID_set, doc=r"""合约代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcQryForQuoteParamField_swiginit(self, _thostmduserapi.new_CThostFtdcQryForQuoteParamField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcQryForQuoteParamField

# Register CThostFtdcQryForQuoteParamField in _thostmduserapi:
_thostmduserapi.CThostFtdcQryForQuoteParamField_swigregister(CThostFtdcQryForQuoteParamField)
class CThostFtdcForQuoteParamField(object):
    r"""询价价差参数"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcForQuoteParamField_BrokerID_get, _thostmduserapi.CThostFtdcForQuoteParamField_BrokerID_set, doc=r"""经纪公司代码""")
    reserve1: "TThostFtdcOldInstrumentIDType" = property(_thostmduserapi.CThostFtdcForQuoteParamField_reserve1_get, _thostmduserapi.CThostFtdcForQuoteParamField_reserve1_set, doc=r"""保留的无效字段""")
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcForQuoteParamField_ExchangeID_get, _thostmduserapi.CThostFtdcForQuoteParamField_ExchangeID_set, doc=r"""交易所代码""")
    LastPrice: "TThostFtdcPriceType" = property(_thostmduserapi.CThostFtdcForQuoteParamField_LastPrice_get, _thostmduserapi.CThostFtdcForQuoteParamField_LastPrice_set, doc=r"""最新价""")
    PriceInterval: "TThostFtdcPriceType" = property(_thostmduserapi.CThostFtdcForQuoteParamField_PriceInterval_get, _thostmduserapi.CThostFtdcForQuoteParamField_PriceInterval_set, doc=r"""价差""")
    InstrumentID: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcForQuoteParamField_InstrumentID_get, _thostmduserapi.CThostFtdcForQuoteParamField_InstrumentID_set, doc=r"""合约代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcForQuoteParamField_swiginit(self, _thostmduserapi.new_CThostFtdcForQuoteParamField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcForQuoteParamField

# Register CThostFtdcForQuoteParamField in _thostmduserapi:
_thostmduserapi.CThostFtdcForQuoteParamField_swigregister(CThostFtdcForQuoteParamField)
class CThostFtdcMMOptionInstrCommRateField(object):
    r"""当前做市商期权合约手续费的详细内容"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    reserve1: "TThostFtdcOldInstrumentIDType" = property(_thostmduserapi.CThostFtdcMMOptionInstrCommRateField_reserve1_get, _thostmduserapi.CThostFtdcMMOptionInstrCommRateField_reserve1_set, doc=r"""保留的无效字段""")
    InvestorRange: "TThostFtdcInvestorRangeType" = property(_thostmduserapi.CThostFtdcMMOptionInstrCommRateField_InvestorRange_get, _thostmduserapi.CThostFtdcMMOptionInstrCommRateField_InvestorRange_set, doc=r"""投资者范围""")
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcMMOptionInstrCommRateField_BrokerID_get, _thostmduserapi.CThostFtdcMMOptionInstrCommRateField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "TThostFtdcInvestorIDType" = property(_thostmduserapi.CThostFtdcMMOptionInstrCommRateField_InvestorID_get, _thostmduserapi.CThostFtdcMMOptionInstrCommRateField_InvestorID_set, doc=r"""投资者代码""")
    OpenRatioByMoney: "TThostFtdcRatioType" = property(_thostmduserapi.CThostFtdcMMOptionInstrCommRateField_OpenRatioByMoney_get, _thostmduserapi.CThostFtdcMMOptionInstrCommRateField_OpenRatioByMoney_set, doc=r"""开仓手续费率""")
    OpenRatioByVolume: "TThostFtdcRatioType" = property(_thostmduserapi.CThostFtdcMMOptionInstrCommRateField_OpenRatioByVolume_get, _thostmduserapi.CThostFtdcMMOptionInstrCommRateField_OpenRatioByVolume_set, doc=r"""开仓手续费""")
    CloseRatioByMoney: "TThostFtdcRatioType" = property(_thostmduserapi.CThostFtdcMMOptionInstrCommRateField_CloseRatioByMoney_get, _thostmduserapi.CThostFtdcMMOptionInstrCommRateField_CloseRatioByMoney_set, doc=r"""平仓手续费率""")
    CloseRatioByVolume: "TThostFtdcRatioType" = property(_thostmduserapi.CThostFtdcMMOptionInstrCommRateField_CloseRatioByVolume_get, _thostmduserapi.CThostFtdcMMOptionInstrCommRateField_CloseRatioByVolume_set, doc=r"""平仓手续费""")
    CloseTodayRatioByMoney: "TThostFtdcRatioType" = property(_thostmduserapi.CThostFtdcMMOptionInstrCommRateField_CloseTodayRatioByMoney_get, _thostmduserapi.CThostFtdcMMOptionInstrCommRateField_CloseTodayRatioByMoney_set, doc=r"""平今手续费率""")
    CloseTodayRatioByVolume: "TThostFtdcRatioType" = property(_thostmduserapi.CThostFtdcMMOptionInstrCommRateField_CloseTodayRatioByVolume_get, _thostmduserapi.CThostFtdcMMOptionInstrCommRateField_CloseTodayRatioByVolume_set, doc=r"""平今手续费""")
    StrikeRatioByMoney: "TThostFtdcRatioType" = property(_thostmduserapi.CThostFtdcMMOptionInstrCommRateField_StrikeRatioByMoney_get, _thostmduserapi.CThostFtdcMMOptionInstrCommRateField_StrikeRatioByMoney_set, doc=r"""执行手续费率""")
    StrikeRatioByVolume: "TThostFtdcRatioType" = property(_thostmduserapi.CThostFtdcMMOptionInstrCommRateField_StrikeRatioByVolume_get, _thostmduserapi.CThostFtdcMMOptionInstrCommRateField_StrikeRatioByVolume_set, doc=r"""执行手续费""")
    InstrumentID: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcMMOptionInstrCommRateField_InstrumentID_get, _thostmduserapi.CThostFtdcMMOptionInstrCommRateField_InstrumentID_set, doc=r"""合约代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcMMOptionInstrCommRateField_swiginit(self, _thostmduserapi.new_CThostFtdcMMOptionInstrCommRateField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcMMOptionInstrCommRateField

# Register CThostFtdcMMOptionInstrCommRateField in _thostmduserapi:
_thostmduserapi.CThostFtdcMMOptionInstrCommRateField_swigregister(CThostFtdcMMOptionInstrCommRateField)
class CThostFtdcQryMMOptionInstrCommRateField(object):
    r"""做市商期权手续费率查询"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcQryMMOptionInstrCommRateField_BrokerID_get, _thostmduserapi.CThostFtdcQryMMOptionInstrCommRateField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "TThostFtdcInvestorIDType" = property(_thostmduserapi.CThostFtdcQryMMOptionInstrCommRateField_InvestorID_get, _thostmduserapi.CThostFtdcQryMMOptionInstrCommRateField_InvestorID_set, doc=r"""投资者代码""")
    reserve1: "TThostFtdcOldInstrumentIDType" = property(_thostmduserapi.CThostFtdcQryMMOptionInstrCommRateField_reserve1_get, _thostmduserapi.CThostFtdcQryMMOptionInstrCommRateField_reserve1_set, doc=r"""保留的无效字段""")
    InstrumentID: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcQryMMOptionInstrCommRateField_InstrumentID_get, _thostmduserapi.CThostFtdcQryMMOptionInstrCommRateField_InstrumentID_set, doc=r"""合约代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcQryMMOptionInstrCommRateField_swiginit(self, _thostmduserapi.new_CThostFtdcQryMMOptionInstrCommRateField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcQryMMOptionInstrCommRateField

# Register CThostFtdcQryMMOptionInstrCommRateField in _thostmduserapi:
_thostmduserapi.CThostFtdcQryMMOptionInstrCommRateField_swigregister(CThostFtdcQryMMOptionInstrCommRateField)
class CThostFtdcMMInstrumentCommissionRateField(object):
    r"""做市商合约手续费率"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    reserve1: "TThostFtdcOldInstrumentIDType" = property(_thostmduserapi.CThostFtdcMMInstrumentCommissionRateField_reserve1_get, _thostmduserapi.CThostFtdcMMInstrumentCommissionRateField_reserve1_set, doc=r"""保留的无效字段""")
    InvestorRange: "TThostFtdcInvestorRangeType" = property(_thostmduserapi.CThostFtdcMMInstrumentCommissionRateField_InvestorRange_get, _thostmduserapi.CThostFtdcMMInstrumentCommissionRateField_InvestorRange_set, doc=r"""投资者范围""")
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcMMInstrumentCommissionRateField_BrokerID_get, _thostmduserapi.CThostFtdcMMInstrumentCommissionRateField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "TThostFtdcInvestorIDType" = property(_thostmduserapi.CThostFtdcMMInstrumentCommissionRateField_InvestorID_get, _thostmduserapi.CThostFtdcMMInstrumentCommissionRateField_InvestorID_set, doc=r"""投资者代码""")
    OpenRatioByMoney: "TThostFtdcRatioType" = property(_thostmduserapi.CThostFtdcMMInstrumentCommissionRateField_OpenRatioByMoney_get, _thostmduserapi.CThostFtdcMMInstrumentCommissionRateField_OpenRatioByMoney_set, doc=r"""开仓手续费率""")
    OpenRatioByVolume: "TThostFtdcRatioType" = property(_thostmduserapi.CThostFtdcMMInstrumentCommissionRateField_OpenRatioByVolume_get, _thostmduserapi.CThostFtdcMMInstrumentCommissionRateField_OpenRatioByVolume_set, doc=r"""开仓手续费""")
    CloseRatioByMoney: "TThostFtdcRatioType" = property(_thostmduserapi.CThostFtdcMMInstrumentCommissionRateField_CloseRatioByMoney_get, _thostmduserapi.CThostFtdcMMInstrumentCommissionRateField_CloseRatioByMoney_set, doc=r"""平仓手续费率""")
    CloseRatioByVolume: "TThostFtdcRatioType" = property(_thostmduserapi.CThostFtdcMMInstrumentCommissionRateField_CloseRatioByVolume_get, _thostmduserapi.CThostFtdcMMInstrumentCommissionRateField_CloseRatioByVolume_set, doc=r"""平仓手续费""")
    CloseTodayRatioByMoney: "TThostFtdcRatioType" = property(_thostmduserapi.CThostFtdcMMInstrumentCommissionRateField_CloseTodayRatioByMoney_get, _thostmduserapi.CThostFtdcMMInstrumentCommissionRateField_CloseTodayRatioByMoney_set, doc=r"""平今手续费率""")
    CloseTodayRatioByVolume: "TThostFtdcRatioType" = property(_thostmduserapi.CThostFtdcMMInstrumentCommissionRateField_CloseTodayRatioByVolume_get, _thostmduserapi.CThostFtdcMMInstrumentCommissionRateField_CloseTodayRatioByVolume_set, doc=r"""平今手续费""")
    InstrumentID: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcMMInstrumentCommissionRateField_InstrumentID_get, _thostmduserapi.CThostFtdcMMInstrumentCommissionRateField_InstrumentID_set, doc=r"""合约代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcMMInstrumentCommissionRateField_swiginit(self, _thostmduserapi.new_CThostFtdcMMInstrumentCommissionRateField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcMMInstrumentCommissionRateField

# Register CThostFtdcMMInstrumentCommissionRateField in _thostmduserapi:
_thostmduserapi.CThostFtdcMMInstrumentCommissionRateField_swigregister(CThostFtdcMMInstrumentCommissionRateField)
class CThostFtdcQryMMInstrumentCommissionRateField(object):
    r"""查询做市商合约手续费率"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcQryMMInstrumentCommissionRateField_BrokerID_get, _thostmduserapi.CThostFtdcQryMMInstrumentCommissionRateField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "TThostFtdcInvestorIDType" = property(_thostmduserapi.CThostFtdcQryMMInstrumentCommissionRateField_InvestorID_get, _thostmduserapi.CThostFtdcQryMMInstrumentCommissionRateField_InvestorID_set, doc=r"""投资者代码""")
    reserve1: "TThostFtdcOldInstrumentIDType" = property(_thostmduserapi.CThostFtdcQryMMInstrumentCommissionRateField_reserve1_get, _thostmduserapi.CThostFtdcQryMMInstrumentCommissionRateField_reserve1_set, doc=r"""保留的无效字段""")
    InstrumentID: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcQryMMInstrumentCommissionRateField_InstrumentID_get, _thostmduserapi.CThostFtdcQryMMInstrumentCommissionRateField_InstrumentID_set, doc=r"""合约代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcQryMMInstrumentCommissionRateField_swiginit(self, _thostmduserapi.new_CThostFtdcQryMMInstrumentCommissionRateField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcQryMMInstrumentCommissionRateField

# Register CThostFtdcQryMMInstrumentCommissionRateField in _thostmduserapi:
_thostmduserapi.CThostFtdcQryMMInstrumentCommissionRateField_swigregister(CThostFtdcQryMMInstrumentCommissionRateField)
class CThostFtdcInstrumentOrderCommRateField(object):
    r"""当前报单手续费的详细内容"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    reserve1: "TThostFtdcOldInstrumentIDType" = property(_thostmduserapi.CThostFtdcInstrumentOrderCommRateField_reserve1_get, _thostmduserapi.CThostFtdcInstrumentOrderCommRateField_reserve1_set, doc=r"""保留的无效字段""")
    InvestorRange: "TThostFtdcInvestorRangeType" = property(_thostmduserapi.CThostFtdcInstrumentOrderCommRateField_InvestorRange_get, _thostmduserapi.CThostFtdcInstrumentOrderCommRateField_InvestorRange_set, doc=r"""投资者范围""")
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcInstrumentOrderCommRateField_BrokerID_get, _thostmduserapi.CThostFtdcInstrumentOrderCommRateField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "TThostFtdcInvestorIDType" = property(_thostmduserapi.CThostFtdcInstrumentOrderCommRateField_InvestorID_get, _thostmduserapi.CThostFtdcInstrumentOrderCommRateField_InvestorID_set, doc=r"""投资者代码""")
    HedgeFlag: "TThostFtdcHedgeFlagType" = property(_thostmduserapi.CThostFtdcInstrumentOrderCommRateField_HedgeFlag_get, _thostmduserapi.CThostFtdcInstrumentOrderCommRateField_HedgeFlag_set, doc=r"""投机套保标志""")
    OrderCommByVolume: "TThostFtdcRatioType" = property(_thostmduserapi.CThostFtdcInstrumentOrderCommRateField_OrderCommByVolume_get, _thostmduserapi.CThostFtdcInstrumentOrderCommRateField_OrderCommByVolume_set, doc=r"""报单手续费""")
    OrderActionCommByVolume: "TThostFtdcRatioType" = property(_thostmduserapi.CThostFtdcInstrumentOrderCommRateField_OrderActionCommByVolume_get, _thostmduserapi.CThostFtdcInstrumentOrderCommRateField_OrderActionCommByVolume_set, doc=r"""撤单手续费""")
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcInstrumentOrderCommRateField_ExchangeID_get, _thostmduserapi.CThostFtdcInstrumentOrderCommRateField_ExchangeID_set, doc=r"""交易所代码""")
    InvestUnitID: "TThostFtdcInvestUnitIDType" = property(_thostmduserapi.CThostFtdcInstrumentOrderCommRateField_InvestUnitID_get, _thostmduserapi.CThostFtdcInstrumentOrderCommRateField_InvestUnitID_set, doc=r"""投资单元代码""")
    InstrumentID: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcInstrumentOrderCommRateField_InstrumentID_get, _thostmduserapi.CThostFtdcInstrumentOrderCommRateField_InstrumentID_set, doc=r"""合约代码""")
    OrderCommByTrade: "TThostFtdcRatioType" = property(_thostmduserapi.CThostFtdcInstrumentOrderCommRateField_OrderCommByTrade_get, _thostmduserapi.CThostFtdcInstrumentOrderCommRateField_OrderCommByTrade_set, doc=r"""报单手续费""")
    OrderActionCommByTrade: "TThostFtdcRatioType" = property(_thostmduserapi.CThostFtdcInstrumentOrderCommRateField_OrderActionCommByTrade_get, _thostmduserapi.CThostFtdcInstrumentOrderCommRateField_OrderActionCommByTrade_set, doc=r"""撤单手续费""")

    def __init__(self):
        _thostmduserapi.CThostFtdcInstrumentOrderCommRateField_swiginit(self, _thostmduserapi.new_CThostFtdcInstrumentOrderCommRateField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcInstrumentOrderCommRateField

# Register CThostFtdcInstrumentOrderCommRateField in _thostmduserapi:
_thostmduserapi.CThostFtdcInstrumentOrderCommRateField_swigregister(CThostFtdcInstrumentOrderCommRateField)
class CThostFtdcQryInstrumentOrderCommRateField(object):
    r"""报单手续费率查询"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcQryInstrumentOrderCommRateField_BrokerID_get, _thostmduserapi.CThostFtdcQryInstrumentOrderCommRateField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "TThostFtdcInvestorIDType" = property(_thostmduserapi.CThostFtdcQryInstrumentOrderCommRateField_InvestorID_get, _thostmduserapi.CThostFtdcQryInstrumentOrderCommRateField_InvestorID_set, doc=r"""投资者代码""")
    reserve1: "TThostFtdcOldInstrumentIDType" = property(_thostmduserapi.CThostFtdcQryInstrumentOrderCommRateField_reserve1_get, _thostmduserapi.CThostFtdcQryInstrumentOrderCommRateField_reserve1_set, doc=r"""保留的无效字段""")
    InstrumentID: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcQryInstrumentOrderCommRateField_InstrumentID_get, _thostmduserapi.CThostFtdcQryInstrumentOrderCommRateField_InstrumentID_set, doc=r"""合约代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcQryInstrumentOrderCommRateField_swiginit(self, _thostmduserapi.new_CThostFtdcQryInstrumentOrderCommRateField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcQryInstrumentOrderCommRateField

# Register CThostFtdcQryInstrumentOrderCommRateField in _thostmduserapi:
_thostmduserapi.CThostFtdcQryInstrumentOrderCommRateField_swigregister(CThostFtdcQryInstrumentOrderCommRateField)
class CThostFtdcTradeParamField(object):
    r"""交易参数"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcTradeParamField_BrokerID_get, _thostmduserapi.CThostFtdcTradeParamField_BrokerID_set, doc=r"""经纪公司代码""")
    TradeParamID: "TThostFtdcTradeParamIDType" = property(_thostmduserapi.CThostFtdcTradeParamField_TradeParamID_get, _thostmduserapi.CThostFtdcTradeParamField_TradeParamID_set, doc=r"""参数代码""")
    TradeParamValue: "TThostFtdcSettlementParamValueType" = property(_thostmduserapi.CThostFtdcTradeParamField_TradeParamValue_get, _thostmduserapi.CThostFtdcTradeParamField_TradeParamValue_set, doc=r"""参数代码值""")
    Memo: "TThostFtdcMemoType" = property(_thostmduserapi.CThostFtdcTradeParamField_Memo_get, _thostmduserapi.CThostFtdcTradeParamField_Memo_set, doc=r"""备注""")

    def __init__(self):
        _thostmduserapi.CThostFtdcTradeParamField_swiginit(self, _thostmduserapi.new_CThostFtdcTradeParamField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcTradeParamField

# Register CThostFtdcTradeParamField in _thostmduserapi:
_thostmduserapi.CThostFtdcTradeParamField_swigregister(CThostFtdcTradeParamField)
class CThostFtdcInstrumentMarginRateULField(object):
    r"""合约保证金率调整"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    reserve1: "TThostFtdcOldInstrumentIDType" = property(_thostmduserapi.CThostFtdcInstrumentMarginRateULField_reserve1_get, _thostmduserapi.CThostFtdcInstrumentMarginRateULField_reserve1_set, doc=r"""保留的无效字段""")
    InvestorRange: "TThostFtdcInvestorRangeType" = property(_thostmduserapi.CThostFtdcInstrumentMarginRateULField_InvestorRange_get, _thostmduserapi.CThostFtdcInstrumentMarginRateULField_InvestorRange_set, doc=r"""投资者范围""")
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcInstrumentMarginRateULField_BrokerID_get, _thostmduserapi.CThostFtdcInstrumentMarginRateULField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "TThostFtdcInvestorIDType" = property(_thostmduserapi.CThostFtdcInstrumentMarginRateULField_InvestorID_get, _thostmduserapi.CThostFtdcInstrumentMarginRateULField_InvestorID_set, doc=r"""投资者代码""")
    HedgeFlag: "TThostFtdcHedgeFlagType" = property(_thostmduserapi.CThostFtdcInstrumentMarginRateULField_HedgeFlag_get, _thostmduserapi.CThostFtdcInstrumentMarginRateULField_HedgeFlag_set, doc=r"""投机套保标志""")
    LongMarginRatioByMoney: "TThostFtdcRatioType" = property(_thostmduserapi.CThostFtdcInstrumentMarginRateULField_LongMarginRatioByMoney_get, _thostmduserapi.CThostFtdcInstrumentMarginRateULField_LongMarginRatioByMoney_set, doc=r"""多头保证金率""")
    LongMarginRatioByVolume: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcInstrumentMarginRateULField_LongMarginRatioByVolume_get, _thostmduserapi.CThostFtdcInstrumentMarginRateULField_LongMarginRatioByVolume_set, doc=r"""多头保证金费""")
    ShortMarginRatioByMoney: "TThostFtdcRatioType" = property(_thostmduserapi.CThostFtdcInstrumentMarginRateULField_ShortMarginRatioByMoney_get, _thostmduserapi.CThostFtdcInstrumentMarginRateULField_ShortMarginRatioByMoney_set, doc=r"""空头保证金率""")
    ShortMarginRatioByVolume: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcInstrumentMarginRateULField_ShortMarginRatioByVolume_get, _thostmduserapi.CThostFtdcInstrumentMarginRateULField_ShortMarginRatioByVolume_set, doc=r"""空头保证金费""")
    InstrumentID: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcInstrumentMarginRateULField_InstrumentID_get, _thostmduserapi.CThostFtdcInstrumentMarginRateULField_InstrumentID_set, doc=r"""合约代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcInstrumentMarginRateULField_swiginit(self, _thostmduserapi.new_CThostFtdcInstrumentMarginRateULField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcInstrumentMarginRateULField

# Register CThostFtdcInstrumentMarginRateULField in _thostmduserapi:
_thostmduserapi.CThostFtdcInstrumentMarginRateULField_swigregister(CThostFtdcInstrumentMarginRateULField)
class CThostFtdcFutureLimitPosiParamField(object):
    r"""期货持仓限制参数"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    InvestorRange: "TThostFtdcInvestorRangeType" = property(_thostmduserapi.CThostFtdcFutureLimitPosiParamField_InvestorRange_get, _thostmduserapi.CThostFtdcFutureLimitPosiParamField_InvestorRange_set, doc=r"""投资者范围""")
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcFutureLimitPosiParamField_BrokerID_get, _thostmduserapi.CThostFtdcFutureLimitPosiParamField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "TThostFtdcInvestorIDType" = property(_thostmduserapi.CThostFtdcFutureLimitPosiParamField_InvestorID_get, _thostmduserapi.CThostFtdcFutureLimitPosiParamField_InvestorID_set, doc=r"""投资者代码""")
    reserve1: "TThostFtdcOldInstrumentIDType" = property(_thostmduserapi.CThostFtdcFutureLimitPosiParamField_reserve1_get, _thostmduserapi.CThostFtdcFutureLimitPosiParamField_reserve1_set, doc=r"""保留的无效字段""")
    SpecOpenVolume: "TThostFtdcVolumeType" = property(_thostmduserapi.CThostFtdcFutureLimitPosiParamField_SpecOpenVolume_get, _thostmduserapi.CThostFtdcFutureLimitPosiParamField_SpecOpenVolume_set, doc=r"""当日投机开仓数量限制""")
    ArbiOpenVolume: "TThostFtdcVolumeType" = property(_thostmduserapi.CThostFtdcFutureLimitPosiParamField_ArbiOpenVolume_get, _thostmduserapi.CThostFtdcFutureLimitPosiParamField_ArbiOpenVolume_set, doc=r"""当日套利开仓数量限制""")
    OpenVolume: "TThostFtdcVolumeType" = property(_thostmduserapi.CThostFtdcFutureLimitPosiParamField_OpenVolume_get, _thostmduserapi.CThostFtdcFutureLimitPosiParamField_OpenVolume_set, doc=r"""当日投机+套利开仓数量限制""")
    ProductID: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcFutureLimitPosiParamField_ProductID_get, _thostmduserapi.CThostFtdcFutureLimitPosiParamField_ProductID_set, doc=r"""产品代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcFutureLimitPosiParamField_swiginit(self, _thostmduserapi.new_CThostFtdcFutureLimitPosiParamField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcFutureLimitPosiParamField

# Register CThostFtdcFutureLimitPosiParamField in _thostmduserapi:
_thostmduserapi.CThostFtdcFutureLimitPosiParamField_swigregister(CThostFtdcFutureLimitPosiParamField)
class CThostFtdcLoginForbiddenIPField(object):
    r"""禁止登录IP"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    reserve1: "TThostFtdcOldIPAddressType" = property(_thostmduserapi.CThostFtdcLoginForbiddenIPField_reserve1_get, _thostmduserapi.CThostFtdcLoginForbiddenIPField_reserve1_set, doc=r"""保留的无效字段""")
    IPAddress: "TThostFtdcIPAddressType" = property(_thostmduserapi.CThostFtdcLoginForbiddenIPField_IPAddress_get, _thostmduserapi.CThostFtdcLoginForbiddenIPField_IPAddress_set, doc=r"""IP地址""")

    def __init__(self):
        _thostmduserapi.CThostFtdcLoginForbiddenIPField_swiginit(self, _thostmduserapi.new_CThostFtdcLoginForbiddenIPField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcLoginForbiddenIPField

# Register CThostFtdcLoginForbiddenIPField in _thostmduserapi:
_thostmduserapi.CThostFtdcLoginForbiddenIPField_swigregister(CThostFtdcLoginForbiddenIPField)
class CThostFtdcIPListField(object):
    r"""IP列表"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    reserve1: "TThostFtdcOldIPAddressType" = property(_thostmduserapi.CThostFtdcIPListField_reserve1_get, _thostmduserapi.CThostFtdcIPListField_reserve1_set, doc=r"""保留的无效字段""")
    IsWhite: "TThostFtdcBoolType" = property(_thostmduserapi.CThostFtdcIPListField_IsWhite_get, _thostmduserapi.CThostFtdcIPListField_IsWhite_set, doc=r"""是否白名单""")
    IPAddress: "TThostFtdcIPAddressType" = property(_thostmduserapi.CThostFtdcIPListField_IPAddress_get, _thostmduserapi.CThostFtdcIPListField_IPAddress_set, doc=r"""IP地址""")

    def __init__(self):
        _thostmduserapi.CThostFtdcIPListField_swiginit(self, _thostmduserapi.new_CThostFtdcIPListField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcIPListField

# Register CThostFtdcIPListField in _thostmduserapi:
_thostmduserapi.CThostFtdcIPListField_swigregister(CThostFtdcIPListField)
class CThostFtdcInputOptionSelfCloseField(object):
    r"""输入的期权自对冲"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcInputOptionSelfCloseField_BrokerID_get, _thostmduserapi.CThostFtdcInputOptionSelfCloseField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "TThostFtdcInvestorIDType" = property(_thostmduserapi.CThostFtdcInputOptionSelfCloseField_InvestorID_get, _thostmduserapi.CThostFtdcInputOptionSelfCloseField_InvestorID_set, doc=r"""投资者代码""")
    reserve1: "TThostFtdcOldInstrumentIDType" = property(_thostmduserapi.CThostFtdcInputOptionSelfCloseField_reserve1_get, _thostmduserapi.CThostFtdcInputOptionSelfCloseField_reserve1_set, doc=r"""保留的无效字段""")
    OptionSelfCloseRef: "TThostFtdcOrderRefType" = property(_thostmduserapi.CThostFtdcInputOptionSelfCloseField_OptionSelfCloseRef_get, _thostmduserapi.CThostFtdcInputOptionSelfCloseField_OptionSelfCloseRef_set, doc=r"""期权自对冲引用""")
    UserID: "TThostFtdcUserIDType" = property(_thostmduserapi.CThostFtdcInputOptionSelfCloseField_UserID_get, _thostmduserapi.CThostFtdcInputOptionSelfCloseField_UserID_set, doc=r"""用户代码""")
    Volume: "TThostFtdcVolumeType" = property(_thostmduserapi.CThostFtdcInputOptionSelfCloseField_Volume_get, _thostmduserapi.CThostFtdcInputOptionSelfCloseField_Volume_set, doc=r"""数量""")
    RequestID: "TThostFtdcRequestIDType" = property(_thostmduserapi.CThostFtdcInputOptionSelfCloseField_RequestID_get, _thostmduserapi.CThostFtdcInputOptionSelfCloseField_RequestID_set, doc=r"""请求编号""")
    BusinessUnit: "TThostFtdcBusinessUnitType" = property(_thostmduserapi.CThostFtdcInputOptionSelfCloseField_BusinessUnit_get, _thostmduserapi.CThostFtdcInputOptionSelfCloseField_BusinessUnit_set, doc=r"""业务单元""")
    HedgeFlag: "TThostFtdcHedgeFlagType" = property(_thostmduserapi.CThostFtdcInputOptionSelfCloseField_HedgeFlag_get, _thostmduserapi.CThostFtdcInputOptionSelfCloseField_HedgeFlag_set, doc=r"""投机套保标志""")
    OptSelfCloseFlag: "TThostFtdcOptSelfCloseFlagType" = property(_thostmduserapi.CThostFtdcInputOptionSelfCloseField_OptSelfCloseFlag_get, _thostmduserapi.CThostFtdcInputOptionSelfCloseField_OptSelfCloseFlag_set, doc=r"""期权行权的头寸是否自对冲""")
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcInputOptionSelfCloseField_ExchangeID_get, _thostmduserapi.CThostFtdcInputOptionSelfCloseField_ExchangeID_set, doc=r"""交易所代码""")
    InvestUnitID: "TThostFtdcInvestUnitIDType" = property(_thostmduserapi.CThostFtdcInputOptionSelfCloseField_InvestUnitID_get, _thostmduserapi.CThostFtdcInputOptionSelfCloseField_InvestUnitID_set, doc=r"""投资单元代码""")
    AccountID: "TThostFtdcAccountIDType" = property(_thostmduserapi.CThostFtdcInputOptionSelfCloseField_AccountID_get, _thostmduserapi.CThostFtdcInputOptionSelfCloseField_AccountID_set, doc=r"""资金账号""")
    CurrencyID: "TThostFtdcCurrencyIDType" = property(_thostmduserapi.CThostFtdcInputOptionSelfCloseField_CurrencyID_get, _thostmduserapi.CThostFtdcInputOptionSelfCloseField_CurrencyID_set, doc=r"""币种代码""")
    ClientID: "TThostFtdcClientIDType" = property(_thostmduserapi.CThostFtdcInputOptionSelfCloseField_ClientID_get, _thostmduserapi.CThostFtdcInputOptionSelfCloseField_ClientID_set, doc=r"""交易编码""")
    reserve2: "TThostFtdcOldIPAddressType" = property(_thostmduserapi.CThostFtdcInputOptionSelfCloseField_reserve2_get, _thostmduserapi.CThostFtdcInputOptionSelfCloseField_reserve2_set, doc=r"""保留的无效字段""")
    MacAddress: "TThostFtdcMacAddressType" = property(_thostmduserapi.CThostFtdcInputOptionSelfCloseField_MacAddress_get, _thostmduserapi.CThostFtdcInputOptionSelfCloseField_MacAddress_set, doc=r"""Mac地址""")
    InstrumentID: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcInputOptionSelfCloseField_InstrumentID_get, _thostmduserapi.CThostFtdcInputOptionSelfCloseField_InstrumentID_set, doc=r"""合约代码""")
    IPAddress: "TThostFtdcIPAddressType" = property(_thostmduserapi.CThostFtdcInputOptionSelfCloseField_IPAddress_get, _thostmduserapi.CThostFtdcInputOptionSelfCloseField_IPAddress_set, doc=r"""IP地址""")

    def __init__(self):
        _thostmduserapi.CThostFtdcInputOptionSelfCloseField_swiginit(self, _thostmduserapi.new_CThostFtdcInputOptionSelfCloseField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcInputOptionSelfCloseField

# Register CThostFtdcInputOptionSelfCloseField in _thostmduserapi:
_thostmduserapi.CThostFtdcInputOptionSelfCloseField_swigregister(CThostFtdcInputOptionSelfCloseField)
class CThostFtdcInputOptionSelfCloseActionField(object):
    r"""输入期权自对冲操作"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcInputOptionSelfCloseActionField_BrokerID_get, _thostmduserapi.CThostFtdcInputOptionSelfCloseActionField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "TThostFtdcInvestorIDType" = property(_thostmduserapi.CThostFtdcInputOptionSelfCloseActionField_InvestorID_get, _thostmduserapi.CThostFtdcInputOptionSelfCloseActionField_InvestorID_set, doc=r"""投资者代码""")
    OptionSelfCloseActionRef: "TThostFtdcOrderActionRefType" = property(_thostmduserapi.CThostFtdcInputOptionSelfCloseActionField_OptionSelfCloseActionRef_get, _thostmduserapi.CThostFtdcInputOptionSelfCloseActionField_OptionSelfCloseActionRef_set, doc=r"""期权自对冲操作引用""")
    OptionSelfCloseRef: "TThostFtdcOrderRefType" = property(_thostmduserapi.CThostFtdcInputOptionSelfCloseActionField_OptionSelfCloseRef_get, _thostmduserapi.CThostFtdcInputOptionSelfCloseActionField_OptionSelfCloseRef_set, doc=r"""期权自对冲引用""")
    RequestID: "TThostFtdcRequestIDType" = property(_thostmduserapi.CThostFtdcInputOptionSelfCloseActionField_RequestID_get, _thostmduserapi.CThostFtdcInputOptionSelfCloseActionField_RequestID_set, doc=r"""请求编号""")
    FrontID: "TThostFtdcFrontIDType" = property(_thostmduserapi.CThostFtdcInputOptionSelfCloseActionField_FrontID_get, _thostmduserapi.CThostFtdcInputOptionSelfCloseActionField_FrontID_set, doc=r"""前置编号""")
    SessionID: "TThostFtdcSessionIDType" = property(_thostmduserapi.CThostFtdcInputOptionSelfCloseActionField_SessionID_get, _thostmduserapi.CThostFtdcInputOptionSelfCloseActionField_SessionID_set, doc=r"""会话编号""")
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcInputOptionSelfCloseActionField_ExchangeID_get, _thostmduserapi.CThostFtdcInputOptionSelfCloseActionField_ExchangeID_set, doc=r"""交易所代码""")
    OptionSelfCloseSysID: "TThostFtdcOrderSysIDType" = property(_thostmduserapi.CThostFtdcInputOptionSelfCloseActionField_OptionSelfCloseSysID_get, _thostmduserapi.CThostFtdcInputOptionSelfCloseActionField_OptionSelfCloseSysID_set, doc=r"""期权自对冲操作编号""")
    ActionFlag: "TThostFtdcActionFlagType" = property(_thostmduserapi.CThostFtdcInputOptionSelfCloseActionField_ActionFlag_get, _thostmduserapi.CThostFtdcInputOptionSelfCloseActionField_ActionFlag_set, doc=r"""操作标志""")
    UserID: "TThostFtdcUserIDType" = property(_thostmduserapi.CThostFtdcInputOptionSelfCloseActionField_UserID_get, _thostmduserapi.CThostFtdcInputOptionSelfCloseActionField_UserID_set, doc=r"""用户代码""")
    reserve1: "TThostFtdcOldInstrumentIDType" = property(_thostmduserapi.CThostFtdcInputOptionSelfCloseActionField_reserve1_get, _thostmduserapi.CThostFtdcInputOptionSelfCloseActionField_reserve1_set, doc=r"""保留的无效字段""")
    InvestUnitID: "TThostFtdcInvestUnitIDType" = property(_thostmduserapi.CThostFtdcInputOptionSelfCloseActionField_InvestUnitID_get, _thostmduserapi.CThostFtdcInputOptionSelfCloseActionField_InvestUnitID_set, doc=r"""投资单元代码""")
    reserve2: "TThostFtdcOldIPAddressType" = property(_thostmduserapi.CThostFtdcInputOptionSelfCloseActionField_reserve2_get, _thostmduserapi.CThostFtdcInputOptionSelfCloseActionField_reserve2_set, doc=r"""保留的无效字段""")
    MacAddress: "TThostFtdcMacAddressType" = property(_thostmduserapi.CThostFtdcInputOptionSelfCloseActionField_MacAddress_get, _thostmduserapi.CThostFtdcInputOptionSelfCloseActionField_MacAddress_set, doc=r"""Mac地址""")
    InstrumentID: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcInputOptionSelfCloseActionField_InstrumentID_get, _thostmduserapi.CThostFtdcInputOptionSelfCloseActionField_InstrumentID_set, doc=r"""合约代码""")
    IPAddress: "TThostFtdcIPAddressType" = property(_thostmduserapi.CThostFtdcInputOptionSelfCloseActionField_IPAddress_get, _thostmduserapi.CThostFtdcInputOptionSelfCloseActionField_IPAddress_set, doc=r"""IP地址""")

    def __init__(self):
        _thostmduserapi.CThostFtdcInputOptionSelfCloseActionField_swiginit(self, _thostmduserapi.new_CThostFtdcInputOptionSelfCloseActionField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcInputOptionSelfCloseActionField

# Register CThostFtdcInputOptionSelfCloseActionField in _thostmduserapi:
_thostmduserapi.CThostFtdcInputOptionSelfCloseActionField_swigregister(CThostFtdcInputOptionSelfCloseActionField)
class CThostFtdcOptionSelfCloseField(object):
    r"""期权自对冲"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcOptionSelfCloseField_BrokerID_get, _thostmduserapi.CThostFtdcOptionSelfCloseField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "TThostFtdcInvestorIDType" = property(_thostmduserapi.CThostFtdcOptionSelfCloseField_InvestorID_get, _thostmduserapi.CThostFtdcOptionSelfCloseField_InvestorID_set, doc=r"""投资者代码""")
    reserve1: "TThostFtdcOldInstrumentIDType" = property(_thostmduserapi.CThostFtdcOptionSelfCloseField_reserve1_get, _thostmduserapi.CThostFtdcOptionSelfCloseField_reserve1_set, doc=r"""保留的无效字段""")
    OptionSelfCloseRef: "TThostFtdcOrderRefType" = property(_thostmduserapi.CThostFtdcOptionSelfCloseField_OptionSelfCloseRef_get, _thostmduserapi.CThostFtdcOptionSelfCloseField_OptionSelfCloseRef_set, doc=r"""期权自对冲引用""")
    UserID: "TThostFtdcUserIDType" = property(_thostmduserapi.CThostFtdcOptionSelfCloseField_UserID_get, _thostmduserapi.CThostFtdcOptionSelfCloseField_UserID_set, doc=r"""用户代码""")
    Volume: "TThostFtdcVolumeType" = property(_thostmduserapi.CThostFtdcOptionSelfCloseField_Volume_get, _thostmduserapi.CThostFtdcOptionSelfCloseField_Volume_set, doc=r"""数量""")
    RequestID: "TThostFtdcRequestIDType" = property(_thostmduserapi.CThostFtdcOptionSelfCloseField_RequestID_get, _thostmduserapi.CThostFtdcOptionSelfCloseField_RequestID_set, doc=r"""请求编号""")
    BusinessUnit: "TThostFtdcBusinessUnitType" = property(_thostmduserapi.CThostFtdcOptionSelfCloseField_BusinessUnit_get, _thostmduserapi.CThostFtdcOptionSelfCloseField_BusinessUnit_set, doc=r"""业务单元""")
    HedgeFlag: "TThostFtdcHedgeFlagType" = property(_thostmduserapi.CThostFtdcOptionSelfCloseField_HedgeFlag_get, _thostmduserapi.CThostFtdcOptionSelfCloseField_HedgeFlag_set, doc=r"""投机套保标志""")
    OptSelfCloseFlag: "TThostFtdcOptSelfCloseFlagType" = property(_thostmduserapi.CThostFtdcOptionSelfCloseField_OptSelfCloseFlag_get, _thostmduserapi.CThostFtdcOptionSelfCloseField_OptSelfCloseFlag_set, doc=r"""期权行权的头寸是否自对冲""")
    OptionSelfCloseLocalID: "TThostFtdcOrderLocalIDType" = property(_thostmduserapi.CThostFtdcOptionSelfCloseField_OptionSelfCloseLocalID_get, _thostmduserapi.CThostFtdcOptionSelfCloseField_OptionSelfCloseLocalID_set, doc=r"""本地期权自对冲编号""")
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcOptionSelfCloseField_ExchangeID_get, _thostmduserapi.CThostFtdcOptionSelfCloseField_ExchangeID_set, doc=r"""交易所代码""")
    ParticipantID: "TThostFtdcParticipantIDType" = property(_thostmduserapi.CThostFtdcOptionSelfCloseField_ParticipantID_get, _thostmduserapi.CThostFtdcOptionSelfCloseField_ParticipantID_set, doc=r"""会员代码""")
    ClientID: "TThostFtdcClientIDType" = property(_thostmduserapi.CThostFtdcOptionSelfCloseField_ClientID_get, _thostmduserapi.CThostFtdcOptionSelfCloseField_ClientID_set, doc=r"""客户代码""")
    reserve2: "TThostFtdcOldExchangeInstIDType" = property(_thostmduserapi.CThostFtdcOptionSelfCloseField_reserve2_get, _thostmduserapi.CThostFtdcOptionSelfCloseField_reserve2_set, doc=r"""保留的无效字段""")
    TraderID: "TThostFtdcTraderIDType" = property(_thostmduserapi.CThostFtdcOptionSelfCloseField_TraderID_get, _thostmduserapi.CThostFtdcOptionSelfCloseField_TraderID_set, doc=r"""交易所交易员代码""")
    InstallID: "TThostFtdcInstallIDType" = property(_thostmduserapi.CThostFtdcOptionSelfCloseField_InstallID_get, _thostmduserapi.CThostFtdcOptionSelfCloseField_InstallID_set, doc=r"""安装编号""")
    OrderSubmitStatus: "TThostFtdcOrderSubmitStatusType" = property(_thostmduserapi.CThostFtdcOptionSelfCloseField_OrderSubmitStatus_get, _thostmduserapi.CThostFtdcOptionSelfCloseField_OrderSubmitStatus_set, doc=r"""期权自对冲提交状态""")
    NotifySequence: "TThostFtdcSequenceNoType" = property(_thostmduserapi.CThostFtdcOptionSelfCloseField_NotifySequence_get, _thostmduserapi.CThostFtdcOptionSelfCloseField_NotifySequence_set, doc=r"""报单提示序号""")
    TradingDay: "TThostFtdcDateType" = property(_thostmduserapi.CThostFtdcOptionSelfCloseField_TradingDay_get, _thostmduserapi.CThostFtdcOptionSelfCloseField_TradingDay_set, doc=r"""交易日""")
    SettlementID: "TThostFtdcSettlementIDType" = property(_thostmduserapi.CThostFtdcOptionSelfCloseField_SettlementID_get, _thostmduserapi.CThostFtdcOptionSelfCloseField_SettlementID_set, doc=r"""结算编号""")
    OptionSelfCloseSysID: "TThostFtdcOrderSysIDType" = property(_thostmduserapi.CThostFtdcOptionSelfCloseField_OptionSelfCloseSysID_get, _thostmduserapi.CThostFtdcOptionSelfCloseField_OptionSelfCloseSysID_set, doc=r"""期权自对冲编号""")
    InsertDate: "TThostFtdcDateType" = property(_thostmduserapi.CThostFtdcOptionSelfCloseField_InsertDate_get, _thostmduserapi.CThostFtdcOptionSelfCloseField_InsertDate_set, doc=r"""报单日期""")
    InsertTime: "TThostFtdcTimeType" = property(_thostmduserapi.CThostFtdcOptionSelfCloseField_InsertTime_get, _thostmduserapi.CThostFtdcOptionSelfCloseField_InsertTime_set, doc=r"""插入时间""")
    CancelTime: "TThostFtdcTimeType" = property(_thostmduserapi.CThostFtdcOptionSelfCloseField_CancelTime_get, _thostmduserapi.CThostFtdcOptionSelfCloseField_CancelTime_set, doc=r"""撤销时间""")
    ExecResult: "TThostFtdcExecResultType" = property(_thostmduserapi.CThostFtdcOptionSelfCloseField_ExecResult_get, _thostmduserapi.CThostFtdcOptionSelfCloseField_ExecResult_set, doc=r"""自对冲结果""")
    ClearingPartID: "TThostFtdcParticipantIDType" = property(_thostmduserapi.CThostFtdcOptionSelfCloseField_ClearingPartID_get, _thostmduserapi.CThostFtdcOptionSelfCloseField_ClearingPartID_set, doc=r"""结算会员编号""")
    SequenceNo: "TThostFtdcSequenceNoType" = property(_thostmduserapi.CThostFtdcOptionSelfCloseField_SequenceNo_get, _thostmduserapi.CThostFtdcOptionSelfCloseField_SequenceNo_set, doc=r"""序号""")
    FrontID: "TThostFtdcFrontIDType" = property(_thostmduserapi.CThostFtdcOptionSelfCloseField_FrontID_get, _thostmduserapi.CThostFtdcOptionSelfCloseField_FrontID_set, doc=r"""前置编号""")
    SessionID: "TThostFtdcSessionIDType" = property(_thostmduserapi.CThostFtdcOptionSelfCloseField_SessionID_get, _thostmduserapi.CThostFtdcOptionSelfCloseField_SessionID_set, doc=r"""会话编号""")
    UserProductInfo: "TThostFtdcProductInfoType" = property(_thostmduserapi.CThostFtdcOptionSelfCloseField_UserProductInfo_get, _thostmduserapi.CThostFtdcOptionSelfCloseField_UserProductInfo_set, doc=r"""用户端产品信息""")
    StatusMsg: "TThostFtdcErrorMsgType" = property(_thostmduserapi.CThostFtdcOptionSelfCloseField_StatusMsg_get, _thostmduserapi.CThostFtdcOptionSelfCloseField_StatusMsg_set, doc=r"""状态信息""")
    ActiveUserID: "TThostFtdcUserIDType" = property(_thostmduserapi.CThostFtdcOptionSelfCloseField_ActiveUserID_get, _thostmduserapi.CThostFtdcOptionSelfCloseField_ActiveUserID_set, doc=r"""操作用户代码""")
    BrokerOptionSelfCloseSeq: "TThostFtdcSequenceNoType" = property(_thostmduserapi.CThostFtdcOptionSelfCloseField_BrokerOptionSelfCloseSeq_get, _thostmduserapi.CThostFtdcOptionSelfCloseField_BrokerOptionSelfCloseSeq_set, doc=r"""经纪公司报单编号""")
    BranchID: "TThostFtdcBranchIDType" = property(_thostmduserapi.CThostFtdcOptionSelfCloseField_BranchID_get, _thostmduserapi.CThostFtdcOptionSelfCloseField_BranchID_set, doc=r"""营业部编号""")
    InvestUnitID: "TThostFtdcInvestUnitIDType" = property(_thostmduserapi.CThostFtdcOptionSelfCloseField_InvestUnitID_get, _thostmduserapi.CThostFtdcOptionSelfCloseField_InvestUnitID_set, doc=r"""投资单元代码""")
    AccountID: "TThostFtdcAccountIDType" = property(_thostmduserapi.CThostFtdcOptionSelfCloseField_AccountID_get, _thostmduserapi.CThostFtdcOptionSelfCloseField_AccountID_set, doc=r"""资金账号""")
    CurrencyID: "TThostFtdcCurrencyIDType" = property(_thostmduserapi.CThostFtdcOptionSelfCloseField_CurrencyID_get, _thostmduserapi.CThostFtdcOptionSelfCloseField_CurrencyID_set, doc=r"""币种代码""")
    reserve3: "TThostFtdcOldIPAddressType" = property(_thostmduserapi.CThostFtdcOptionSelfCloseField_reserve3_get, _thostmduserapi.CThostFtdcOptionSelfCloseField_reserve3_set, doc=r"""保留的无效字段""")
    MacAddress: "TThostFtdcMacAddressType" = property(_thostmduserapi.CThostFtdcOptionSelfCloseField_MacAddress_get, _thostmduserapi.CThostFtdcOptionSelfCloseField_MacAddress_set, doc=r"""Mac地址""")
    InstrumentID: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcOptionSelfCloseField_InstrumentID_get, _thostmduserapi.CThostFtdcOptionSelfCloseField_InstrumentID_set, doc=r"""合约代码""")
    ExchangeInstID: "TThostFtdcExchangeInstIDType" = property(_thostmduserapi.CThostFtdcOptionSelfCloseField_ExchangeInstID_get, _thostmduserapi.CThostFtdcOptionSelfCloseField_ExchangeInstID_set, doc=r"""合约在交易所的代码""")
    IPAddress: "TThostFtdcIPAddressType" = property(_thostmduserapi.CThostFtdcOptionSelfCloseField_IPAddress_get, _thostmduserapi.CThostFtdcOptionSelfCloseField_IPAddress_set, doc=r"""IP地址""")

    def __init__(self):
        _thostmduserapi.CThostFtdcOptionSelfCloseField_swiginit(self, _thostmduserapi.new_CThostFtdcOptionSelfCloseField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcOptionSelfCloseField

# Register CThostFtdcOptionSelfCloseField in _thostmduserapi:
_thostmduserapi.CThostFtdcOptionSelfCloseField_swigregister(CThostFtdcOptionSelfCloseField)
class CThostFtdcOptionSelfCloseActionField(object):
    r"""期权自对冲操作"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcOptionSelfCloseActionField_BrokerID_get, _thostmduserapi.CThostFtdcOptionSelfCloseActionField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "TThostFtdcInvestorIDType" = property(_thostmduserapi.CThostFtdcOptionSelfCloseActionField_InvestorID_get, _thostmduserapi.CThostFtdcOptionSelfCloseActionField_InvestorID_set, doc=r"""投资者代码""")
    OptionSelfCloseActionRef: "TThostFtdcOrderActionRefType" = property(_thostmduserapi.CThostFtdcOptionSelfCloseActionField_OptionSelfCloseActionRef_get, _thostmduserapi.CThostFtdcOptionSelfCloseActionField_OptionSelfCloseActionRef_set, doc=r"""期权自对冲操作引用""")
    OptionSelfCloseRef: "TThostFtdcOrderRefType" = property(_thostmduserapi.CThostFtdcOptionSelfCloseActionField_OptionSelfCloseRef_get, _thostmduserapi.CThostFtdcOptionSelfCloseActionField_OptionSelfCloseRef_set, doc=r"""期权自对冲引用""")
    RequestID: "TThostFtdcRequestIDType" = property(_thostmduserapi.CThostFtdcOptionSelfCloseActionField_RequestID_get, _thostmduserapi.CThostFtdcOptionSelfCloseActionField_RequestID_set, doc=r"""请求编号""")
    FrontID: "TThostFtdcFrontIDType" = property(_thostmduserapi.CThostFtdcOptionSelfCloseActionField_FrontID_get, _thostmduserapi.CThostFtdcOptionSelfCloseActionField_FrontID_set, doc=r"""前置编号""")
    SessionID: "TThostFtdcSessionIDType" = property(_thostmduserapi.CThostFtdcOptionSelfCloseActionField_SessionID_get, _thostmduserapi.CThostFtdcOptionSelfCloseActionField_SessionID_set, doc=r"""会话编号""")
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcOptionSelfCloseActionField_ExchangeID_get, _thostmduserapi.CThostFtdcOptionSelfCloseActionField_ExchangeID_set, doc=r"""交易所代码""")
    OptionSelfCloseSysID: "TThostFtdcOrderSysIDType" = property(_thostmduserapi.CThostFtdcOptionSelfCloseActionField_OptionSelfCloseSysID_get, _thostmduserapi.CThostFtdcOptionSelfCloseActionField_OptionSelfCloseSysID_set, doc=r"""期权自对冲操作编号""")
    ActionFlag: "TThostFtdcActionFlagType" = property(_thostmduserapi.CThostFtdcOptionSelfCloseActionField_ActionFlag_get, _thostmduserapi.CThostFtdcOptionSelfCloseActionField_ActionFlag_set, doc=r"""操作标志""")
    ActionDate: "TThostFtdcDateType" = property(_thostmduserapi.CThostFtdcOptionSelfCloseActionField_ActionDate_get, _thostmduserapi.CThostFtdcOptionSelfCloseActionField_ActionDate_set, doc=r"""操作日期""")
    ActionTime: "TThostFtdcTimeType" = property(_thostmduserapi.CThostFtdcOptionSelfCloseActionField_ActionTime_get, _thostmduserapi.CThostFtdcOptionSelfCloseActionField_ActionTime_set, doc=r"""操作时间""")
    TraderID: "TThostFtdcTraderIDType" = property(_thostmduserapi.CThostFtdcOptionSelfCloseActionField_TraderID_get, _thostmduserapi.CThostFtdcOptionSelfCloseActionField_TraderID_set, doc=r"""交易所交易员代码""")
    InstallID: "TThostFtdcInstallIDType" = property(_thostmduserapi.CThostFtdcOptionSelfCloseActionField_InstallID_get, _thostmduserapi.CThostFtdcOptionSelfCloseActionField_InstallID_set, doc=r"""安装编号""")
    OptionSelfCloseLocalID: "TThostFtdcOrderLocalIDType" = property(_thostmduserapi.CThostFtdcOptionSelfCloseActionField_OptionSelfCloseLocalID_get, _thostmduserapi.CThostFtdcOptionSelfCloseActionField_OptionSelfCloseLocalID_set, doc=r"""本地期权自对冲编号""")
    ActionLocalID: "TThostFtdcOrderLocalIDType" = property(_thostmduserapi.CThostFtdcOptionSelfCloseActionField_ActionLocalID_get, _thostmduserapi.CThostFtdcOptionSelfCloseActionField_ActionLocalID_set, doc=r"""操作本地编号""")
    ParticipantID: "TThostFtdcParticipantIDType" = property(_thostmduserapi.CThostFtdcOptionSelfCloseActionField_ParticipantID_get, _thostmduserapi.CThostFtdcOptionSelfCloseActionField_ParticipantID_set, doc=r"""会员代码""")
    ClientID: "TThostFtdcClientIDType" = property(_thostmduserapi.CThostFtdcOptionSelfCloseActionField_ClientID_get, _thostmduserapi.CThostFtdcOptionSelfCloseActionField_ClientID_set, doc=r"""客户代码""")
    BusinessUnit: "TThostFtdcBusinessUnitType" = property(_thostmduserapi.CThostFtdcOptionSelfCloseActionField_BusinessUnit_get, _thostmduserapi.CThostFtdcOptionSelfCloseActionField_BusinessUnit_set, doc=r"""业务单元""")
    OrderActionStatus: "TThostFtdcOrderActionStatusType" = property(_thostmduserapi.CThostFtdcOptionSelfCloseActionField_OrderActionStatus_get, _thostmduserapi.CThostFtdcOptionSelfCloseActionField_OrderActionStatus_set, doc=r"""报单操作状态""")
    UserID: "TThostFtdcUserIDType" = property(_thostmduserapi.CThostFtdcOptionSelfCloseActionField_UserID_get, _thostmduserapi.CThostFtdcOptionSelfCloseActionField_UserID_set, doc=r"""用户代码""")
    StatusMsg: "TThostFtdcErrorMsgType" = property(_thostmduserapi.CThostFtdcOptionSelfCloseActionField_StatusMsg_get, _thostmduserapi.CThostFtdcOptionSelfCloseActionField_StatusMsg_set, doc=r"""状态信息""")
    reserve1: "TThostFtdcOldInstrumentIDType" = property(_thostmduserapi.CThostFtdcOptionSelfCloseActionField_reserve1_get, _thostmduserapi.CThostFtdcOptionSelfCloseActionField_reserve1_set, doc=r"""保留的无效字段""")
    BranchID: "TThostFtdcBranchIDType" = property(_thostmduserapi.CThostFtdcOptionSelfCloseActionField_BranchID_get, _thostmduserapi.CThostFtdcOptionSelfCloseActionField_BranchID_set, doc=r"""营业部编号""")
    InvestUnitID: "TThostFtdcInvestUnitIDType" = property(_thostmduserapi.CThostFtdcOptionSelfCloseActionField_InvestUnitID_get, _thostmduserapi.CThostFtdcOptionSelfCloseActionField_InvestUnitID_set, doc=r"""投资单元代码""")
    reserve2: "TThostFtdcOldIPAddressType" = property(_thostmduserapi.CThostFtdcOptionSelfCloseActionField_reserve2_get, _thostmduserapi.CThostFtdcOptionSelfCloseActionField_reserve2_set, doc=r"""保留的无效字段""")
    MacAddress: "TThostFtdcMacAddressType" = property(_thostmduserapi.CThostFtdcOptionSelfCloseActionField_MacAddress_get, _thostmduserapi.CThostFtdcOptionSelfCloseActionField_MacAddress_set, doc=r"""Mac地址""")
    InstrumentID: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcOptionSelfCloseActionField_InstrumentID_get, _thostmduserapi.CThostFtdcOptionSelfCloseActionField_InstrumentID_set, doc=r"""合约代码""")
    IPAddress: "TThostFtdcIPAddressType" = property(_thostmduserapi.CThostFtdcOptionSelfCloseActionField_IPAddress_get, _thostmduserapi.CThostFtdcOptionSelfCloseActionField_IPAddress_set, doc=r"""IP地址""")

    def __init__(self):
        _thostmduserapi.CThostFtdcOptionSelfCloseActionField_swiginit(self, _thostmduserapi.new_CThostFtdcOptionSelfCloseActionField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcOptionSelfCloseActionField

# Register CThostFtdcOptionSelfCloseActionField in _thostmduserapi:
_thostmduserapi.CThostFtdcOptionSelfCloseActionField_swigregister(CThostFtdcOptionSelfCloseActionField)
class CThostFtdcQryOptionSelfCloseField(object):
    r"""期权自对冲查询"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcQryOptionSelfCloseField_BrokerID_get, _thostmduserapi.CThostFtdcQryOptionSelfCloseField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "TThostFtdcInvestorIDType" = property(_thostmduserapi.CThostFtdcQryOptionSelfCloseField_InvestorID_get, _thostmduserapi.CThostFtdcQryOptionSelfCloseField_InvestorID_set, doc=r"""投资者代码""")
    reserve1: "TThostFtdcOldInstrumentIDType" = property(_thostmduserapi.CThostFtdcQryOptionSelfCloseField_reserve1_get, _thostmduserapi.CThostFtdcQryOptionSelfCloseField_reserve1_set, doc=r"""保留的无效字段""")
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcQryOptionSelfCloseField_ExchangeID_get, _thostmduserapi.CThostFtdcQryOptionSelfCloseField_ExchangeID_set, doc=r"""交易所代码""")
    OptionSelfCloseSysID: "TThostFtdcOrderSysIDType" = property(_thostmduserapi.CThostFtdcQryOptionSelfCloseField_OptionSelfCloseSysID_get, _thostmduserapi.CThostFtdcQryOptionSelfCloseField_OptionSelfCloseSysID_set, doc=r"""期权自对冲编号""")
    InsertTimeStart: "TThostFtdcTimeType" = property(_thostmduserapi.CThostFtdcQryOptionSelfCloseField_InsertTimeStart_get, _thostmduserapi.CThostFtdcQryOptionSelfCloseField_InsertTimeStart_set, doc=r"""开始时间""")
    InsertTimeEnd: "TThostFtdcTimeType" = property(_thostmduserapi.CThostFtdcQryOptionSelfCloseField_InsertTimeEnd_get, _thostmduserapi.CThostFtdcQryOptionSelfCloseField_InsertTimeEnd_set, doc=r"""结束时间""")
    InstrumentID: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcQryOptionSelfCloseField_InstrumentID_get, _thostmduserapi.CThostFtdcQryOptionSelfCloseField_InstrumentID_set, doc=r"""合约代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcQryOptionSelfCloseField_swiginit(self, _thostmduserapi.new_CThostFtdcQryOptionSelfCloseField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcQryOptionSelfCloseField

# Register CThostFtdcQryOptionSelfCloseField in _thostmduserapi:
_thostmduserapi.CThostFtdcQryOptionSelfCloseField_swigregister(CThostFtdcQryOptionSelfCloseField)
class CThostFtdcExchangeOptionSelfCloseField(object):
    r"""交易所期权自对冲信息"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Volume: "TThostFtdcVolumeType" = property(_thostmduserapi.CThostFtdcExchangeOptionSelfCloseField_Volume_get, _thostmduserapi.CThostFtdcExchangeOptionSelfCloseField_Volume_set, doc=r"""数量""")
    RequestID: "TThostFtdcRequestIDType" = property(_thostmduserapi.CThostFtdcExchangeOptionSelfCloseField_RequestID_get, _thostmduserapi.CThostFtdcExchangeOptionSelfCloseField_RequestID_set, doc=r"""请求编号""")
    BusinessUnit: "TThostFtdcBusinessUnitType" = property(_thostmduserapi.CThostFtdcExchangeOptionSelfCloseField_BusinessUnit_get, _thostmduserapi.CThostFtdcExchangeOptionSelfCloseField_BusinessUnit_set, doc=r"""业务单元""")
    HedgeFlag: "TThostFtdcHedgeFlagType" = property(_thostmduserapi.CThostFtdcExchangeOptionSelfCloseField_HedgeFlag_get, _thostmduserapi.CThostFtdcExchangeOptionSelfCloseField_HedgeFlag_set, doc=r"""投机套保标志""")
    OptSelfCloseFlag: "TThostFtdcOptSelfCloseFlagType" = property(_thostmduserapi.CThostFtdcExchangeOptionSelfCloseField_OptSelfCloseFlag_get, _thostmduserapi.CThostFtdcExchangeOptionSelfCloseField_OptSelfCloseFlag_set, doc=r"""期权行权的头寸是否自对冲""")
    OptionSelfCloseLocalID: "TThostFtdcOrderLocalIDType" = property(_thostmduserapi.CThostFtdcExchangeOptionSelfCloseField_OptionSelfCloseLocalID_get, _thostmduserapi.CThostFtdcExchangeOptionSelfCloseField_OptionSelfCloseLocalID_set, doc=r"""本地期权自对冲编号""")
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcExchangeOptionSelfCloseField_ExchangeID_get, _thostmduserapi.CThostFtdcExchangeOptionSelfCloseField_ExchangeID_set, doc=r"""交易所代码""")
    ParticipantID: "TThostFtdcParticipantIDType" = property(_thostmduserapi.CThostFtdcExchangeOptionSelfCloseField_ParticipantID_get, _thostmduserapi.CThostFtdcExchangeOptionSelfCloseField_ParticipantID_set, doc=r"""会员代码""")
    ClientID: "TThostFtdcClientIDType" = property(_thostmduserapi.CThostFtdcExchangeOptionSelfCloseField_ClientID_get, _thostmduserapi.CThostFtdcExchangeOptionSelfCloseField_ClientID_set, doc=r"""客户代码""")
    reserve1: "TThostFtdcOldExchangeInstIDType" = property(_thostmduserapi.CThostFtdcExchangeOptionSelfCloseField_reserve1_get, _thostmduserapi.CThostFtdcExchangeOptionSelfCloseField_reserve1_set, doc=r"""保留的无效字段""")
    TraderID: "TThostFtdcTraderIDType" = property(_thostmduserapi.CThostFtdcExchangeOptionSelfCloseField_TraderID_get, _thostmduserapi.CThostFtdcExchangeOptionSelfCloseField_TraderID_set, doc=r"""交易所交易员代码""")
    InstallID: "TThostFtdcInstallIDType" = property(_thostmduserapi.CThostFtdcExchangeOptionSelfCloseField_InstallID_get, _thostmduserapi.CThostFtdcExchangeOptionSelfCloseField_InstallID_set, doc=r"""安装编号""")
    OrderSubmitStatus: "TThostFtdcOrderSubmitStatusType" = property(_thostmduserapi.CThostFtdcExchangeOptionSelfCloseField_OrderSubmitStatus_get, _thostmduserapi.CThostFtdcExchangeOptionSelfCloseField_OrderSubmitStatus_set, doc=r"""期权自对冲提交状态""")
    NotifySequence: "TThostFtdcSequenceNoType" = property(_thostmduserapi.CThostFtdcExchangeOptionSelfCloseField_NotifySequence_get, _thostmduserapi.CThostFtdcExchangeOptionSelfCloseField_NotifySequence_set, doc=r"""报单提示序号""")
    TradingDay: "TThostFtdcDateType" = property(_thostmduserapi.CThostFtdcExchangeOptionSelfCloseField_TradingDay_get, _thostmduserapi.CThostFtdcExchangeOptionSelfCloseField_TradingDay_set, doc=r"""交易日""")
    SettlementID: "TThostFtdcSettlementIDType" = property(_thostmduserapi.CThostFtdcExchangeOptionSelfCloseField_SettlementID_get, _thostmduserapi.CThostFtdcExchangeOptionSelfCloseField_SettlementID_set, doc=r"""结算编号""")
    OptionSelfCloseSysID: "TThostFtdcOrderSysIDType" = property(_thostmduserapi.CThostFtdcExchangeOptionSelfCloseField_OptionSelfCloseSysID_get, _thostmduserapi.CThostFtdcExchangeOptionSelfCloseField_OptionSelfCloseSysID_set, doc=r"""期权自对冲编号""")
    InsertDate: "TThostFtdcDateType" = property(_thostmduserapi.CThostFtdcExchangeOptionSelfCloseField_InsertDate_get, _thostmduserapi.CThostFtdcExchangeOptionSelfCloseField_InsertDate_set, doc=r"""报单日期""")
    InsertTime: "TThostFtdcTimeType" = property(_thostmduserapi.CThostFtdcExchangeOptionSelfCloseField_InsertTime_get, _thostmduserapi.CThostFtdcExchangeOptionSelfCloseField_InsertTime_set, doc=r"""插入时间""")
    CancelTime: "TThostFtdcTimeType" = property(_thostmduserapi.CThostFtdcExchangeOptionSelfCloseField_CancelTime_get, _thostmduserapi.CThostFtdcExchangeOptionSelfCloseField_CancelTime_set, doc=r"""撤销时间""")
    ExecResult: "TThostFtdcExecResultType" = property(_thostmduserapi.CThostFtdcExchangeOptionSelfCloseField_ExecResult_get, _thostmduserapi.CThostFtdcExchangeOptionSelfCloseField_ExecResult_set, doc=r"""自对冲结果""")
    ClearingPartID: "TThostFtdcParticipantIDType" = property(_thostmduserapi.CThostFtdcExchangeOptionSelfCloseField_ClearingPartID_get, _thostmduserapi.CThostFtdcExchangeOptionSelfCloseField_ClearingPartID_set, doc=r"""结算会员编号""")
    SequenceNo: "TThostFtdcSequenceNoType" = property(_thostmduserapi.CThostFtdcExchangeOptionSelfCloseField_SequenceNo_get, _thostmduserapi.CThostFtdcExchangeOptionSelfCloseField_SequenceNo_set, doc=r"""序号""")
    BranchID: "TThostFtdcBranchIDType" = property(_thostmduserapi.CThostFtdcExchangeOptionSelfCloseField_BranchID_get, _thostmduserapi.CThostFtdcExchangeOptionSelfCloseField_BranchID_set, doc=r"""营业部编号""")
    reserve2: "TThostFtdcOldIPAddressType" = property(_thostmduserapi.CThostFtdcExchangeOptionSelfCloseField_reserve2_get, _thostmduserapi.CThostFtdcExchangeOptionSelfCloseField_reserve2_set, doc=r"""保留的无效字段""")
    MacAddress: "TThostFtdcMacAddressType" = property(_thostmduserapi.CThostFtdcExchangeOptionSelfCloseField_MacAddress_get, _thostmduserapi.CThostFtdcExchangeOptionSelfCloseField_MacAddress_set, doc=r"""Mac地址""")
    ExchangeInstID: "TThostFtdcExchangeInstIDType" = property(_thostmduserapi.CThostFtdcExchangeOptionSelfCloseField_ExchangeInstID_get, _thostmduserapi.CThostFtdcExchangeOptionSelfCloseField_ExchangeInstID_set, doc=r"""合约在交易所的代码""")
    IPAddress: "TThostFtdcIPAddressType" = property(_thostmduserapi.CThostFtdcExchangeOptionSelfCloseField_IPAddress_get, _thostmduserapi.CThostFtdcExchangeOptionSelfCloseField_IPAddress_set, doc=r"""IP地址""")

    def __init__(self):
        _thostmduserapi.CThostFtdcExchangeOptionSelfCloseField_swiginit(self, _thostmduserapi.new_CThostFtdcExchangeOptionSelfCloseField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcExchangeOptionSelfCloseField

# Register CThostFtdcExchangeOptionSelfCloseField in _thostmduserapi:
_thostmduserapi.CThostFtdcExchangeOptionSelfCloseField_swigregister(CThostFtdcExchangeOptionSelfCloseField)
class CThostFtdcQryOptionSelfCloseActionField(object):
    r"""期权自对冲操作查询"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcQryOptionSelfCloseActionField_BrokerID_get, _thostmduserapi.CThostFtdcQryOptionSelfCloseActionField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "TThostFtdcInvestorIDType" = property(_thostmduserapi.CThostFtdcQryOptionSelfCloseActionField_InvestorID_get, _thostmduserapi.CThostFtdcQryOptionSelfCloseActionField_InvestorID_set, doc=r"""投资者代码""")
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcQryOptionSelfCloseActionField_ExchangeID_get, _thostmduserapi.CThostFtdcQryOptionSelfCloseActionField_ExchangeID_set, doc=r"""交易所代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcQryOptionSelfCloseActionField_swiginit(self, _thostmduserapi.new_CThostFtdcQryOptionSelfCloseActionField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcQryOptionSelfCloseActionField

# Register CThostFtdcQryOptionSelfCloseActionField in _thostmduserapi:
_thostmduserapi.CThostFtdcQryOptionSelfCloseActionField_swigregister(CThostFtdcQryOptionSelfCloseActionField)
class CThostFtdcExchangeOptionSelfCloseActionField(object):
    r"""交易所期权自对冲操作"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcExchangeOptionSelfCloseActionField_ExchangeID_get, _thostmduserapi.CThostFtdcExchangeOptionSelfCloseActionField_ExchangeID_set, doc=r"""交易所代码""")
    OptionSelfCloseSysID: "TThostFtdcOrderSysIDType" = property(_thostmduserapi.CThostFtdcExchangeOptionSelfCloseActionField_OptionSelfCloseSysID_get, _thostmduserapi.CThostFtdcExchangeOptionSelfCloseActionField_OptionSelfCloseSysID_set, doc=r"""期权自对冲操作编号""")
    ActionFlag: "TThostFtdcActionFlagType" = property(_thostmduserapi.CThostFtdcExchangeOptionSelfCloseActionField_ActionFlag_get, _thostmduserapi.CThostFtdcExchangeOptionSelfCloseActionField_ActionFlag_set, doc=r"""操作标志""")
    ActionDate: "TThostFtdcDateType" = property(_thostmduserapi.CThostFtdcExchangeOptionSelfCloseActionField_ActionDate_get, _thostmduserapi.CThostFtdcExchangeOptionSelfCloseActionField_ActionDate_set, doc=r"""操作日期""")
    ActionTime: "TThostFtdcTimeType" = property(_thostmduserapi.CThostFtdcExchangeOptionSelfCloseActionField_ActionTime_get, _thostmduserapi.CThostFtdcExchangeOptionSelfCloseActionField_ActionTime_set, doc=r"""操作时间""")
    TraderID: "TThostFtdcTraderIDType" = property(_thostmduserapi.CThostFtdcExchangeOptionSelfCloseActionField_TraderID_get, _thostmduserapi.CThostFtdcExchangeOptionSelfCloseActionField_TraderID_set, doc=r"""交易所交易员代码""")
    InstallID: "TThostFtdcInstallIDType" = property(_thostmduserapi.CThostFtdcExchangeOptionSelfCloseActionField_InstallID_get, _thostmduserapi.CThostFtdcExchangeOptionSelfCloseActionField_InstallID_set, doc=r"""安装编号""")
    OptionSelfCloseLocalID: "TThostFtdcOrderLocalIDType" = property(_thostmduserapi.CThostFtdcExchangeOptionSelfCloseActionField_OptionSelfCloseLocalID_get, _thostmduserapi.CThostFtdcExchangeOptionSelfCloseActionField_OptionSelfCloseLocalID_set, doc=r"""本地期权自对冲编号""")
    ActionLocalID: "TThostFtdcOrderLocalIDType" = property(_thostmduserapi.CThostFtdcExchangeOptionSelfCloseActionField_ActionLocalID_get, _thostmduserapi.CThostFtdcExchangeOptionSelfCloseActionField_ActionLocalID_set, doc=r"""操作本地编号""")
    ParticipantID: "TThostFtdcParticipantIDType" = property(_thostmduserapi.CThostFtdcExchangeOptionSelfCloseActionField_ParticipantID_get, _thostmduserapi.CThostFtdcExchangeOptionSelfCloseActionField_ParticipantID_set, doc=r"""会员代码""")
    ClientID: "TThostFtdcClientIDType" = property(_thostmduserapi.CThostFtdcExchangeOptionSelfCloseActionField_ClientID_get, _thostmduserapi.CThostFtdcExchangeOptionSelfCloseActionField_ClientID_set, doc=r"""客户代码""")
    BusinessUnit: "TThostFtdcBusinessUnitType" = property(_thostmduserapi.CThostFtdcExchangeOptionSelfCloseActionField_BusinessUnit_get, _thostmduserapi.CThostFtdcExchangeOptionSelfCloseActionField_BusinessUnit_set, doc=r"""业务单元""")
    OrderActionStatus: "TThostFtdcOrderActionStatusType" = property(_thostmduserapi.CThostFtdcExchangeOptionSelfCloseActionField_OrderActionStatus_get, _thostmduserapi.CThostFtdcExchangeOptionSelfCloseActionField_OrderActionStatus_set, doc=r"""报单操作状态""")
    UserID: "TThostFtdcUserIDType" = property(_thostmduserapi.CThostFtdcExchangeOptionSelfCloseActionField_UserID_get, _thostmduserapi.CThostFtdcExchangeOptionSelfCloseActionField_UserID_set, doc=r"""用户代码""")
    BranchID: "TThostFtdcBranchIDType" = property(_thostmduserapi.CThostFtdcExchangeOptionSelfCloseActionField_BranchID_get, _thostmduserapi.CThostFtdcExchangeOptionSelfCloseActionField_BranchID_set, doc=r"""营业部编号""")
    reserve1: "TThostFtdcOldIPAddressType" = property(_thostmduserapi.CThostFtdcExchangeOptionSelfCloseActionField_reserve1_get, _thostmduserapi.CThostFtdcExchangeOptionSelfCloseActionField_reserve1_set, doc=r"""保留的无效字段""")
    MacAddress: "TThostFtdcMacAddressType" = property(_thostmduserapi.CThostFtdcExchangeOptionSelfCloseActionField_MacAddress_get, _thostmduserapi.CThostFtdcExchangeOptionSelfCloseActionField_MacAddress_set, doc=r"""Mac地址""")
    reserve2: "TThostFtdcOldExchangeInstIDType" = property(_thostmduserapi.CThostFtdcExchangeOptionSelfCloseActionField_reserve2_get, _thostmduserapi.CThostFtdcExchangeOptionSelfCloseActionField_reserve2_set, doc=r"""保留的无效字段""")
    OptSelfCloseFlag: "TThostFtdcOptSelfCloseFlagType" = property(_thostmduserapi.CThostFtdcExchangeOptionSelfCloseActionField_OptSelfCloseFlag_get, _thostmduserapi.CThostFtdcExchangeOptionSelfCloseActionField_OptSelfCloseFlag_set, doc=r"""期权行权的头寸是否自对冲""")
    IPAddress: "TThostFtdcIPAddressType" = property(_thostmduserapi.CThostFtdcExchangeOptionSelfCloseActionField_IPAddress_get, _thostmduserapi.CThostFtdcExchangeOptionSelfCloseActionField_IPAddress_set, doc=r"""IP地址""")
    ExchangeInstID: "TThostFtdcExchangeInstIDType" = property(_thostmduserapi.CThostFtdcExchangeOptionSelfCloseActionField_ExchangeInstID_get, _thostmduserapi.CThostFtdcExchangeOptionSelfCloseActionField_ExchangeInstID_set, doc=r"""合约在交易所的代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcExchangeOptionSelfCloseActionField_swiginit(self, _thostmduserapi.new_CThostFtdcExchangeOptionSelfCloseActionField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcExchangeOptionSelfCloseActionField

# Register CThostFtdcExchangeOptionSelfCloseActionField in _thostmduserapi:
_thostmduserapi.CThostFtdcExchangeOptionSelfCloseActionField_swigregister(CThostFtdcExchangeOptionSelfCloseActionField)
class CThostFtdcSyncDelaySwapField(object):
    r"""延时换汇同步"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    DelaySwapSeqNo: "TThostFtdcDepositSeqNoType" = property(_thostmduserapi.CThostFtdcSyncDelaySwapField_DelaySwapSeqNo_get, _thostmduserapi.CThostFtdcSyncDelaySwapField_DelaySwapSeqNo_set, doc=r"""换汇流水号""")
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcSyncDelaySwapField_BrokerID_get, _thostmduserapi.CThostFtdcSyncDelaySwapField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "TThostFtdcInvestorIDType" = property(_thostmduserapi.CThostFtdcSyncDelaySwapField_InvestorID_get, _thostmduserapi.CThostFtdcSyncDelaySwapField_InvestorID_set, doc=r"""投资者代码""")
    FromCurrencyID: "TThostFtdcCurrencyIDType" = property(_thostmduserapi.CThostFtdcSyncDelaySwapField_FromCurrencyID_get, _thostmduserapi.CThostFtdcSyncDelaySwapField_FromCurrencyID_set, doc=r"""源币种""")
    FromAmount: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcSyncDelaySwapField_FromAmount_get, _thostmduserapi.CThostFtdcSyncDelaySwapField_FromAmount_set, doc=r"""源金额""")
    FromFrozenSwap: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcSyncDelaySwapField_FromFrozenSwap_get, _thostmduserapi.CThostFtdcSyncDelaySwapField_FromFrozenSwap_set, doc=r"""源换汇冻结金额(可用冻结)""")
    FromRemainSwap: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcSyncDelaySwapField_FromRemainSwap_get, _thostmduserapi.CThostFtdcSyncDelaySwapField_FromRemainSwap_set, doc=r"""源剩余换汇额度(可提冻结)""")
    ToCurrencyID: "TThostFtdcCurrencyIDType" = property(_thostmduserapi.CThostFtdcSyncDelaySwapField_ToCurrencyID_get, _thostmduserapi.CThostFtdcSyncDelaySwapField_ToCurrencyID_set, doc=r"""目标币种""")
    ToAmount: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcSyncDelaySwapField_ToAmount_get, _thostmduserapi.CThostFtdcSyncDelaySwapField_ToAmount_set, doc=r"""目标金额""")
    IsManualSwap: "TThostFtdcBoolType" = property(_thostmduserapi.CThostFtdcSyncDelaySwapField_IsManualSwap_get, _thostmduserapi.CThostFtdcSyncDelaySwapField_IsManualSwap_set, doc=r"""是否手工换汇""")
    IsAllRemainSetZero: "TThostFtdcBoolType" = property(_thostmduserapi.CThostFtdcSyncDelaySwapField_IsAllRemainSetZero_get, _thostmduserapi.CThostFtdcSyncDelaySwapField_IsAllRemainSetZero_set, doc=r"""是否将所有外币的剩余换汇额度设置为0""")

    def __init__(self):
        _thostmduserapi.CThostFtdcSyncDelaySwapField_swiginit(self, _thostmduserapi.new_CThostFtdcSyncDelaySwapField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcSyncDelaySwapField

# Register CThostFtdcSyncDelaySwapField in _thostmduserapi:
_thostmduserapi.CThostFtdcSyncDelaySwapField_swigregister(CThostFtdcSyncDelaySwapField)
class CThostFtdcQrySyncDelaySwapField(object):
    r"""查询延时换汇同步"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcQrySyncDelaySwapField_BrokerID_get, _thostmduserapi.CThostFtdcQrySyncDelaySwapField_BrokerID_set, doc=r"""经纪公司代码""")
    DelaySwapSeqNo: "TThostFtdcDepositSeqNoType" = property(_thostmduserapi.CThostFtdcQrySyncDelaySwapField_DelaySwapSeqNo_get, _thostmduserapi.CThostFtdcQrySyncDelaySwapField_DelaySwapSeqNo_set, doc=r"""延时换汇流水号""")

    def __init__(self):
        _thostmduserapi.CThostFtdcQrySyncDelaySwapField_swiginit(self, _thostmduserapi.new_CThostFtdcQrySyncDelaySwapField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcQrySyncDelaySwapField

# Register CThostFtdcQrySyncDelaySwapField in _thostmduserapi:
_thostmduserapi.CThostFtdcQrySyncDelaySwapField_swigregister(CThostFtdcQrySyncDelaySwapField)
class CThostFtdcInvestUnitField(object):
    r"""投资单元"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcInvestUnitField_BrokerID_get, _thostmduserapi.CThostFtdcInvestUnitField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "TThostFtdcInvestorIDType" = property(_thostmduserapi.CThostFtdcInvestUnitField_InvestorID_get, _thostmduserapi.CThostFtdcInvestUnitField_InvestorID_set, doc=r"""投资者代码""")
    InvestUnitID: "TThostFtdcInvestUnitIDType" = property(_thostmduserapi.CThostFtdcInvestUnitField_InvestUnitID_get, _thostmduserapi.CThostFtdcInvestUnitField_InvestUnitID_set, doc=r"""投资单元代码""")
    InvestorUnitName: "TThostFtdcPartyNameType" = property(_thostmduserapi.CThostFtdcInvestUnitField_InvestorUnitName_get, _thostmduserapi.CThostFtdcInvestUnitField_InvestorUnitName_set, doc=r"""投资者单元名称""")
    InvestorGroupID: "TThostFtdcInvestorIDType" = property(_thostmduserapi.CThostFtdcInvestUnitField_InvestorGroupID_get, _thostmduserapi.CThostFtdcInvestUnitField_InvestorGroupID_set, doc=r"""投资者分组代码""")
    CommModelID: "TThostFtdcInvestorIDType" = property(_thostmduserapi.CThostFtdcInvestUnitField_CommModelID_get, _thostmduserapi.CThostFtdcInvestUnitField_CommModelID_set, doc=r"""手续费率模板代码""")
    MarginModelID: "TThostFtdcInvestorIDType" = property(_thostmduserapi.CThostFtdcInvestUnitField_MarginModelID_get, _thostmduserapi.CThostFtdcInvestUnitField_MarginModelID_set, doc=r"""保证金率模板代码""")
    AccountID: "TThostFtdcAccountIDType" = property(_thostmduserapi.CThostFtdcInvestUnitField_AccountID_get, _thostmduserapi.CThostFtdcInvestUnitField_AccountID_set, doc=r"""资金账号""")
    CurrencyID: "TThostFtdcCurrencyIDType" = property(_thostmduserapi.CThostFtdcInvestUnitField_CurrencyID_get, _thostmduserapi.CThostFtdcInvestUnitField_CurrencyID_set, doc=r"""币种代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcInvestUnitField_swiginit(self, _thostmduserapi.new_CThostFtdcInvestUnitField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcInvestUnitField

# Register CThostFtdcInvestUnitField in _thostmduserapi:
_thostmduserapi.CThostFtdcInvestUnitField_swigregister(CThostFtdcInvestUnitField)
class CThostFtdcQryInvestUnitField(object):
    r"""查询投资单元"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcQryInvestUnitField_BrokerID_get, _thostmduserapi.CThostFtdcQryInvestUnitField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "TThostFtdcInvestorIDType" = property(_thostmduserapi.CThostFtdcQryInvestUnitField_InvestorID_get, _thostmduserapi.CThostFtdcQryInvestUnitField_InvestorID_set, doc=r"""投资者代码""")
    InvestUnitID: "TThostFtdcInvestUnitIDType" = property(_thostmduserapi.CThostFtdcQryInvestUnitField_InvestUnitID_get, _thostmduserapi.CThostFtdcQryInvestUnitField_InvestUnitID_set, doc=r"""投资单元代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcQryInvestUnitField_swiginit(self, _thostmduserapi.new_CThostFtdcQryInvestUnitField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcQryInvestUnitField

# Register CThostFtdcQryInvestUnitField in _thostmduserapi:
_thostmduserapi.CThostFtdcQryInvestUnitField_swigregister(CThostFtdcQryInvestUnitField)
class CThostFtdcSecAgentCheckModeField(object):
    r"""二级代理商资金校验模式"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    InvestorID: "TThostFtdcInvestorIDType" = property(_thostmduserapi.CThostFtdcSecAgentCheckModeField_InvestorID_get, _thostmduserapi.CThostFtdcSecAgentCheckModeField_InvestorID_set, doc=r"""投资者代码""")
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcSecAgentCheckModeField_BrokerID_get, _thostmduserapi.CThostFtdcSecAgentCheckModeField_BrokerID_set, doc=r"""经纪公司代码""")
    CurrencyID: "TThostFtdcCurrencyIDType" = property(_thostmduserapi.CThostFtdcSecAgentCheckModeField_CurrencyID_get, _thostmduserapi.CThostFtdcSecAgentCheckModeField_CurrencyID_set, doc=r"""币种""")
    BrokerSecAgentID: "TThostFtdcAccountIDType" = property(_thostmduserapi.CThostFtdcSecAgentCheckModeField_BrokerSecAgentID_get, _thostmduserapi.CThostFtdcSecAgentCheckModeField_BrokerSecAgentID_set, doc=r"""境外中介机构资金帐号""")
    CheckSelfAccount: "TThostFtdcBoolType" = property(_thostmduserapi.CThostFtdcSecAgentCheckModeField_CheckSelfAccount_get, _thostmduserapi.CThostFtdcSecAgentCheckModeField_CheckSelfAccount_set, doc=r"""是否需要校验自己的资金账户""")

    def __init__(self):
        _thostmduserapi.CThostFtdcSecAgentCheckModeField_swiginit(self, _thostmduserapi.new_CThostFtdcSecAgentCheckModeField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcSecAgentCheckModeField

# Register CThostFtdcSecAgentCheckModeField in _thostmduserapi:
_thostmduserapi.CThostFtdcSecAgentCheckModeField_swigregister(CThostFtdcSecAgentCheckModeField)
class CThostFtdcSecAgentTradeInfoField(object):
    r"""二级代理商信息"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcSecAgentTradeInfoField_BrokerID_get, _thostmduserapi.CThostFtdcSecAgentTradeInfoField_BrokerID_set, doc=r"""经纪公司代码""")
    BrokerSecAgentID: "TThostFtdcAccountIDType" = property(_thostmduserapi.CThostFtdcSecAgentTradeInfoField_BrokerSecAgentID_get, _thostmduserapi.CThostFtdcSecAgentTradeInfoField_BrokerSecAgentID_set, doc=r"""境外中介机构资金帐号""")
    InvestorID: "TThostFtdcInvestorIDType" = property(_thostmduserapi.CThostFtdcSecAgentTradeInfoField_InvestorID_get, _thostmduserapi.CThostFtdcSecAgentTradeInfoField_InvestorID_set, doc=r"""投资者代码""")
    LongCustomerName: "TThostFtdcLongIndividualNameType" = property(_thostmduserapi.CThostFtdcSecAgentTradeInfoField_LongCustomerName_get, _thostmduserapi.CThostFtdcSecAgentTradeInfoField_LongCustomerName_set, doc=r"""二级代理商姓名""")

    def __init__(self):
        _thostmduserapi.CThostFtdcSecAgentTradeInfoField_swiginit(self, _thostmduserapi.new_CThostFtdcSecAgentTradeInfoField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcSecAgentTradeInfoField

# Register CThostFtdcSecAgentTradeInfoField in _thostmduserapi:
_thostmduserapi.CThostFtdcSecAgentTradeInfoField_swigregister(CThostFtdcSecAgentTradeInfoField)
class CThostFtdcMarketDataField(object):
    r"""市场行情"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    TradingDay: "TThostFtdcDateType" = property(_thostmduserapi.CThostFtdcMarketDataField_TradingDay_get, _thostmduserapi.CThostFtdcMarketDataField_TradingDay_set, doc=r"""交易日""")
    reserve1: "TThostFtdcOldInstrumentIDType" = property(_thostmduserapi.CThostFtdcMarketDataField_reserve1_get, _thostmduserapi.CThostFtdcMarketDataField_reserve1_set, doc=r"""保留的无效字段""")
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcMarketDataField_ExchangeID_get, _thostmduserapi.CThostFtdcMarketDataField_ExchangeID_set, doc=r"""交易所代码""")
    reserve2: "TThostFtdcOldExchangeInstIDType" = property(_thostmduserapi.CThostFtdcMarketDataField_reserve2_get, _thostmduserapi.CThostFtdcMarketDataField_reserve2_set, doc=r"""保留的无效字段""")
    LastPrice: "TThostFtdcPriceType" = property(_thostmduserapi.CThostFtdcMarketDataField_LastPrice_get, _thostmduserapi.CThostFtdcMarketDataField_LastPrice_set, doc=r"""最新价""")
    PreSettlementPrice: "TThostFtdcPriceType" = property(_thostmduserapi.CThostFtdcMarketDataField_PreSettlementPrice_get, _thostmduserapi.CThostFtdcMarketDataField_PreSettlementPrice_set, doc=r"""上次结算价""")
    PreClosePrice: "TThostFtdcPriceType" = property(_thostmduserapi.CThostFtdcMarketDataField_PreClosePrice_get, _thostmduserapi.CThostFtdcMarketDataField_PreClosePrice_set, doc=r"""昨收盘""")
    PreOpenInterest: "TThostFtdcLargeVolumeType" = property(_thostmduserapi.CThostFtdcMarketDataField_PreOpenInterest_get, _thostmduserapi.CThostFtdcMarketDataField_PreOpenInterest_set, doc=r"""昨持仓量""")
    OpenPrice: "TThostFtdcPriceType" = property(_thostmduserapi.CThostFtdcMarketDataField_OpenPrice_get, _thostmduserapi.CThostFtdcMarketDataField_OpenPrice_set, doc=r"""今开盘""")
    HighestPrice: "TThostFtdcPriceType" = property(_thostmduserapi.CThostFtdcMarketDataField_HighestPrice_get, _thostmduserapi.CThostFtdcMarketDataField_HighestPrice_set, doc=r"""最高价""")
    LowestPrice: "TThostFtdcPriceType" = property(_thostmduserapi.CThostFtdcMarketDataField_LowestPrice_get, _thostmduserapi.CThostFtdcMarketDataField_LowestPrice_set, doc=r"""最低价""")
    Volume: "TThostFtdcVolumeType" = property(_thostmduserapi.CThostFtdcMarketDataField_Volume_get, _thostmduserapi.CThostFtdcMarketDataField_Volume_set, doc=r"""数量""")
    Turnover: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcMarketDataField_Turnover_get, _thostmduserapi.CThostFtdcMarketDataField_Turnover_set, doc=r"""成交金额""")
    OpenInterest: "TThostFtdcLargeVolumeType" = property(_thostmduserapi.CThostFtdcMarketDataField_OpenInterest_get, _thostmduserapi.CThostFtdcMarketDataField_OpenInterest_set, doc=r"""持仓量""")
    ClosePrice: "TThostFtdcPriceType" = property(_thostmduserapi.CThostFtdcMarketDataField_ClosePrice_get, _thostmduserapi.CThostFtdcMarketDataField_ClosePrice_set, doc=r"""今收盘""")
    SettlementPrice: "TThostFtdcPriceType" = property(_thostmduserapi.CThostFtdcMarketDataField_SettlementPrice_get, _thostmduserapi.CThostFtdcMarketDataField_SettlementPrice_set, doc=r"""本次结算价""")
    UpperLimitPrice: "TThostFtdcPriceType" = property(_thostmduserapi.CThostFtdcMarketDataField_UpperLimitPrice_get, _thostmduserapi.CThostFtdcMarketDataField_UpperLimitPrice_set, doc=r"""涨停板价""")
    LowerLimitPrice: "TThostFtdcPriceType" = property(_thostmduserapi.CThostFtdcMarketDataField_LowerLimitPrice_get, _thostmduserapi.CThostFtdcMarketDataField_LowerLimitPrice_set, doc=r"""跌停板价""")
    PreDelta: "TThostFtdcRatioType" = property(_thostmduserapi.CThostFtdcMarketDataField_PreDelta_get, _thostmduserapi.CThostFtdcMarketDataField_PreDelta_set, doc=r"""昨虚实度""")
    CurrDelta: "TThostFtdcRatioType" = property(_thostmduserapi.CThostFtdcMarketDataField_CurrDelta_get, _thostmduserapi.CThostFtdcMarketDataField_CurrDelta_set, doc=r"""今虚实度""")
    UpdateTime: "TThostFtdcTimeType" = property(_thostmduserapi.CThostFtdcMarketDataField_UpdateTime_get, _thostmduserapi.CThostFtdcMarketDataField_UpdateTime_set, doc=r"""最后修改时间""")
    UpdateMillisec: "TThostFtdcMillisecType" = property(_thostmduserapi.CThostFtdcMarketDataField_UpdateMillisec_get, _thostmduserapi.CThostFtdcMarketDataField_UpdateMillisec_set, doc=r"""最后修改毫秒""")
    ActionDay: "TThostFtdcDateType" = property(_thostmduserapi.CThostFtdcMarketDataField_ActionDay_get, _thostmduserapi.CThostFtdcMarketDataField_ActionDay_set, doc=r"""业务日期""")
    InstrumentID: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcMarketDataField_InstrumentID_get, _thostmduserapi.CThostFtdcMarketDataField_InstrumentID_set, doc=r"""合约代码""")
    ExchangeInstID: "TThostFtdcExchangeInstIDType" = property(_thostmduserapi.CThostFtdcMarketDataField_ExchangeInstID_get, _thostmduserapi.CThostFtdcMarketDataField_ExchangeInstID_set, doc=r"""合约在交易所的代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcMarketDataField_swiginit(self, _thostmduserapi.new_CThostFtdcMarketDataField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcMarketDataField

# Register CThostFtdcMarketDataField in _thostmduserapi:
_thostmduserapi.CThostFtdcMarketDataField_swigregister(CThostFtdcMarketDataField)
class CThostFtdcMarketDataBaseField(object):
    r"""行情基础属性"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    TradingDay: "TThostFtdcDateType" = property(_thostmduserapi.CThostFtdcMarketDataBaseField_TradingDay_get, _thostmduserapi.CThostFtdcMarketDataBaseField_TradingDay_set, doc=r"""交易日""")
    PreSettlementPrice: "TThostFtdcPriceType" = property(_thostmduserapi.CThostFtdcMarketDataBaseField_PreSettlementPrice_get, _thostmduserapi.CThostFtdcMarketDataBaseField_PreSettlementPrice_set, doc=r"""上次结算价""")
    PreClosePrice: "TThostFtdcPriceType" = property(_thostmduserapi.CThostFtdcMarketDataBaseField_PreClosePrice_get, _thostmduserapi.CThostFtdcMarketDataBaseField_PreClosePrice_set, doc=r"""昨收盘""")
    PreOpenInterest: "TThostFtdcLargeVolumeType" = property(_thostmduserapi.CThostFtdcMarketDataBaseField_PreOpenInterest_get, _thostmduserapi.CThostFtdcMarketDataBaseField_PreOpenInterest_set, doc=r"""昨持仓量""")
    PreDelta: "TThostFtdcRatioType" = property(_thostmduserapi.CThostFtdcMarketDataBaseField_PreDelta_get, _thostmduserapi.CThostFtdcMarketDataBaseField_PreDelta_set, doc=r"""昨虚实度""")

    def __init__(self):
        _thostmduserapi.CThostFtdcMarketDataBaseField_swiginit(self, _thostmduserapi.new_CThostFtdcMarketDataBaseField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcMarketDataBaseField

# Register CThostFtdcMarketDataBaseField in _thostmduserapi:
_thostmduserapi.CThostFtdcMarketDataBaseField_swigregister(CThostFtdcMarketDataBaseField)
class CThostFtdcMarketDataStaticField(object):
    r"""行情静态属性"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    OpenPrice: "TThostFtdcPriceType" = property(_thostmduserapi.CThostFtdcMarketDataStaticField_OpenPrice_get, _thostmduserapi.CThostFtdcMarketDataStaticField_OpenPrice_set, doc=r"""今开盘""")
    HighestPrice: "TThostFtdcPriceType" = property(_thostmduserapi.CThostFtdcMarketDataStaticField_HighestPrice_get, _thostmduserapi.CThostFtdcMarketDataStaticField_HighestPrice_set, doc=r"""最高价""")
    LowestPrice: "TThostFtdcPriceType" = property(_thostmduserapi.CThostFtdcMarketDataStaticField_LowestPrice_get, _thostmduserapi.CThostFtdcMarketDataStaticField_LowestPrice_set, doc=r"""最低价""")
    ClosePrice: "TThostFtdcPriceType" = property(_thostmduserapi.CThostFtdcMarketDataStaticField_ClosePrice_get, _thostmduserapi.CThostFtdcMarketDataStaticField_ClosePrice_set, doc=r"""今收盘""")
    UpperLimitPrice: "TThostFtdcPriceType" = property(_thostmduserapi.CThostFtdcMarketDataStaticField_UpperLimitPrice_get, _thostmduserapi.CThostFtdcMarketDataStaticField_UpperLimitPrice_set, doc=r"""涨停板价""")
    LowerLimitPrice: "TThostFtdcPriceType" = property(_thostmduserapi.CThostFtdcMarketDataStaticField_LowerLimitPrice_get, _thostmduserapi.CThostFtdcMarketDataStaticField_LowerLimitPrice_set, doc=r"""跌停板价""")
    SettlementPrice: "TThostFtdcPriceType" = property(_thostmduserapi.CThostFtdcMarketDataStaticField_SettlementPrice_get, _thostmduserapi.CThostFtdcMarketDataStaticField_SettlementPrice_set, doc=r"""本次结算价""")
    CurrDelta: "TThostFtdcRatioType" = property(_thostmduserapi.CThostFtdcMarketDataStaticField_CurrDelta_get, _thostmduserapi.CThostFtdcMarketDataStaticField_CurrDelta_set, doc=r"""今虚实度""")

    def __init__(self):
        _thostmduserapi.CThostFtdcMarketDataStaticField_swiginit(self, _thostmduserapi.new_CThostFtdcMarketDataStaticField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcMarketDataStaticField

# Register CThostFtdcMarketDataStaticField in _thostmduserapi:
_thostmduserapi.CThostFtdcMarketDataStaticField_swigregister(CThostFtdcMarketDataStaticField)
class CThostFtdcMarketDataLastMatchField(object):
    r"""行情最新成交属性"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    LastPrice: "TThostFtdcPriceType" = property(_thostmduserapi.CThostFtdcMarketDataLastMatchField_LastPrice_get, _thostmduserapi.CThostFtdcMarketDataLastMatchField_LastPrice_set, doc=r"""最新价""")
    Volume: "TThostFtdcVolumeType" = property(_thostmduserapi.CThostFtdcMarketDataLastMatchField_Volume_get, _thostmduserapi.CThostFtdcMarketDataLastMatchField_Volume_set, doc=r"""数量""")
    Turnover: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcMarketDataLastMatchField_Turnover_get, _thostmduserapi.CThostFtdcMarketDataLastMatchField_Turnover_set, doc=r"""成交金额""")
    OpenInterest: "TThostFtdcLargeVolumeType" = property(_thostmduserapi.CThostFtdcMarketDataLastMatchField_OpenInterest_get, _thostmduserapi.CThostFtdcMarketDataLastMatchField_OpenInterest_set, doc=r"""持仓量""")

    def __init__(self):
        _thostmduserapi.CThostFtdcMarketDataLastMatchField_swiginit(self, _thostmduserapi.new_CThostFtdcMarketDataLastMatchField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcMarketDataLastMatchField

# Register CThostFtdcMarketDataLastMatchField in _thostmduserapi:
_thostmduserapi.CThostFtdcMarketDataLastMatchField_swigregister(CThostFtdcMarketDataLastMatchField)
class CThostFtdcMarketDataBestPriceField(object):
    r"""行情最优价属性"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BidPrice1: "TThostFtdcPriceType" = property(_thostmduserapi.CThostFtdcMarketDataBestPriceField_BidPrice1_get, _thostmduserapi.CThostFtdcMarketDataBestPriceField_BidPrice1_set, doc=r"""申买价一""")
    BidVolume1: "TThostFtdcVolumeType" = property(_thostmduserapi.CThostFtdcMarketDataBestPriceField_BidVolume1_get, _thostmduserapi.CThostFtdcMarketDataBestPriceField_BidVolume1_set, doc=r"""申买量一""")
    AskPrice1: "TThostFtdcPriceType" = property(_thostmduserapi.CThostFtdcMarketDataBestPriceField_AskPrice1_get, _thostmduserapi.CThostFtdcMarketDataBestPriceField_AskPrice1_set, doc=r"""申卖价一""")
    AskVolume1: "TThostFtdcVolumeType" = property(_thostmduserapi.CThostFtdcMarketDataBestPriceField_AskVolume1_get, _thostmduserapi.CThostFtdcMarketDataBestPriceField_AskVolume1_set, doc=r"""申卖量一""")

    def __init__(self):
        _thostmduserapi.CThostFtdcMarketDataBestPriceField_swiginit(self, _thostmduserapi.new_CThostFtdcMarketDataBestPriceField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcMarketDataBestPriceField

# Register CThostFtdcMarketDataBestPriceField in _thostmduserapi:
_thostmduserapi.CThostFtdcMarketDataBestPriceField_swigregister(CThostFtdcMarketDataBestPriceField)
class CThostFtdcMarketDataBid23Field(object):
    r"""行情申买二、三属性"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BidPrice2: "TThostFtdcPriceType" = property(_thostmduserapi.CThostFtdcMarketDataBid23Field_BidPrice2_get, _thostmduserapi.CThostFtdcMarketDataBid23Field_BidPrice2_set, doc=r"""申买价二""")
    BidVolume2: "TThostFtdcVolumeType" = property(_thostmduserapi.CThostFtdcMarketDataBid23Field_BidVolume2_get, _thostmduserapi.CThostFtdcMarketDataBid23Field_BidVolume2_set, doc=r"""申买量二""")
    BidPrice3: "TThostFtdcPriceType" = property(_thostmduserapi.CThostFtdcMarketDataBid23Field_BidPrice3_get, _thostmduserapi.CThostFtdcMarketDataBid23Field_BidPrice3_set, doc=r"""申买价三""")
    BidVolume3: "TThostFtdcVolumeType" = property(_thostmduserapi.CThostFtdcMarketDataBid23Field_BidVolume3_get, _thostmduserapi.CThostFtdcMarketDataBid23Field_BidVolume3_set, doc=r"""申买量三""")

    def __init__(self):
        _thostmduserapi.CThostFtdcMarketDataBid23Field_swiginit(self, _thostmduserapi.new_CThostFtdcMarketDataBid23Field())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcMarketDataBid23Field

# Register CThostFtdcMarketDataBid23Field in _thostmduserapi:
_thostmduserapi.CThostFtdcMarketDataBid23Field_swigregister(CThostFtdcMarketDataBid23Field)
class CThostFtdcMarketDataAsk23Field(object):
    r"""行情申卖二、三属性"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    AskPrice2: "TThostFtdcPriceType" = property(_thostmduserapi.CThostFtdcMarketDataAsk23Field_AskPrice2_get, _thostmduserapi.CThostFtdcMarketDataAsk23Field_AskPrice2_set, doc=r"""申卖价二""")
    AskVolume2: "TThostFtdcVolumeType" = property(_thostmduserapi.CThostFtdcMarketDataAsk23Field_AskVolume2_get, _thostmduserapi.CThostFtdcMarketDataAsk23Field_AskVolume2_set, doc=r"""申卖量二""")
    AskPrice3: "TThostFtdcPriceType" = property(_thostmduserapi.CThostFtdcMarketDataAsk23Field_AskPrice3_get, _thostmduserapi.CThostFtdcMarketDataAsk23Field_AskPrice3_set, doc=r"""申卖价三""")
    AskVolume3: "TThostFtdcVolumeType" = property(_thostmduserapi.CThostFtdcMarketDataAsk23Field_AskVolume3_get, _thostmduserapi.CThostFtdcMarketDataAsk23Field_AskVolume3_set, doc=r"""申卖量三""")

    def __init__(self):
        _thostmduserapi.CThostFtdcMarketDataAsk23Field_swiginit(self, _thostmduserapi.new_CThostFtdcMarketDataAsk23Field())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcMarketDataAsk23Field

# Register CThostFtdcMarketDataAsk23Field in _thostmduserapi:
_thostmduserapi.CThostFtdcMarketDataAsk23Field_swigregister(CThostFtdcMarketDataAsk23Field)
class CThostFtdcMarketDataBid45Field(object):
    r"""行情申买四、五属性"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BidPrice4: "TThostFtdcPriceType" = property(_thostmduserapi.CThostFtdcMarketDataBid45Field_BidPrice4_get, _thostmduserapi.CThostFtdcMarketDataBid45Field_BidPrice4_set, doc=r"""申买价四""")
    BidVolume4: "TThostFtdcVolumeType" = property(_thostmduserapi.CThostFtdcMarketDataBid45Field_BidVolume4_get, _thostmduserapi.CThostFtdcMarketDataBid45Field_BidVolume4_set, doc=r"""申买量四""")
    BidPrice5: "TThostFtdcPriceType" = property(_thostmduserapi.CThostFtdcMarketDataBid45Field_BidPrice5_get, _thostmduserapi.CThostFtdcMarketDataBid45Field_BidPrice5_set, doc=r"""申买价五""")
    BidVolume5: "TThostFtdcVolumeType" = property(_thostmduserapi.CThostFtdcMarketDataBid45Field_BidVolume5_get, _thostmduserapi.CThostFtdcMarketDataBid45Field_BidVolume5_set, doc=r"""申买量五""")

    def __init__(self):
        _thostmduserapi.CThostFtdcMarketDataBid45Field_swiginit(self, _thostmduserapi.new_CThostFtdcMarketDataBid45Field())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcMarketDataBid45Field

# Register CThostFtdcMarketDataBid45Field in _thostmduserapi:
_thostmduserapi.CThostFtdcMarketDataBid45Field_swigregister(CThostFtdcMarketDataBid45Field)
class CThostFtdcMarketDataAsk45Field(object):
    r"""行情申卖四、五属性"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    AskPrice4: "TThostFtdcPriceType" = property(_thostmduserapi.CThostFtdcMarketDataAsk45Field_AskPrice4_get, _thostmduserapi.CThostFtdcMarketDataAsk45Field_AskPrice4_set, doc=r"""申卖价四""")
    AskVolume4: "TThostFtdcVolumeType" = property(_thostmduserapi.CThostFtdcMarketDataAsk45Field_AskVolume4_get, _thostmduserapi.CThostFtdcMarketDataAsk45Field_AskVolume4_set, doc=r"""申卖量四""")
    AskPrice5: "TThostFtdcPriceType" = property(_thostmduserapi.CThostFtdcMarketDataAsk45Field_AskPrice5_get, _thostmduserapi.CThostFtdcMarketDataAsk45Field_AskPrice5_set, doc=r"""申卖价五""")
    AskVolume5: "TThostFtdcVolumeType" = property(_thostmduserapi.CThostFtdcMarketDataAsk45Field_AskVolume5_get, _thostmduserapi.CThostFtdcMarketDataAsk45Field_AskVolume5_set, doc=r"""申卖量五""")

    def __init__(self):
        _thostmduserapi.CThostFtdcMarketDataAsk45Field_swiginit(self, _thostmduserapi.new_CThostFtdcMarketDataAsk45Field())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcMarketDataAsk45Field

# Register CThostFtdcMarketDataAsk45Field in _thostmduserapi:
_thostmduserapi.CThostFtdcMarketDataAsk45Field_swigregister(CThostFtdcMarketDataAsk45Field)
class CThostFtdcMarketDataUpdateTimeField(object):
    r"""行情更新时间属性"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    reserve1: "TThostFtdcOldInstrumentIDType" = property(_thostmduserapi.CThostFtdcMarketDataUpdateTimeField_reserve1_get, _thostmduserapi.CThostFtdcMarketDataUpdateTimeField_reserve1_set, doc=r"""保留的无效字段""")
    UpdateTime: "TThostFtdcTimeType" = property(_thostmduserapi.CThostFtdcMarketDataUpdateTimeField_UpdateTime_get, _thostmduserapi.CThostFtdcMarketDataUpdateTimeField_UpdateTime_set, doc=r"""最后修改时间""")
    UpdateMillisec: "TThostFtdcMillisecType" = property(_thostmduserapi.CThostFtdcMarketDataUpdateTimeField_UpdateMillisec_get, _thostmduserapi.CThostFtdcMarketDataUpdateTimeField_UpdateMillisec_set, doc=r"""最后修改毫秒""")
    ActionDay: "TThostFtdcDateType" = property(_thostmduserapi.CThostFtdcMarketDataUpdateTimeField_ActionDay_get, _thostmduserapi.CThostFtdcMarketDataUpdateTimeField_ActionDay_set, doc=r"""业务日期""")
    InstrumentID: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcMarketDataUpdateTimeField_InstrumentID_get, _thostmduserapi.CThostFtdcMarketDataUpdateTimeField_InstrumentID_set, doc=r"""合约代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcMarketDataUpdateTimeField_swiginit(self, _thostmduserapi.new_CThostFtdcMarketDataUpdateTimeField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcMarketDataUpdateTimeField

# Register CThostFtdcMarketDataUpdateTimeField in _thostmduserapi:
_thostmduserapi.CThostFtdcMarketDataUpdateTimeField_swigregister(CThostFtdcMarketDataUpdateTimeField)
class CThostFtdcMarketDataBandingPriceField(object):
    r"""行情上下带价"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BandingUpperPrice: "TThostFtdcPriceType" = property(_thostmduserapi.CThostFtdcMarketDataBandingPriceField_BandingUpperPrice_get, _thostmduserapi.CThostFtdcMarketDataBandingPriceField_BandingUpperPrice_set, doc=r"""上带价""")
    BandingLowerPrice: "TThostFtdcPriceType" = property(_thostmduserapi.CThostFtdcMarketDataBandingPriceField_BandingLowerPrice_get, _thostmduserapi.CThostFtdcMarketDataBandingPriceField_BandingLowerPrice_set, doc=r"""下带价""")

    def __init__(self):
        _thostmduserapi.CThostFtdcMarketDataBandingPriceField_swiginit(self, _thostmduserapi.new_CThostFtdcMarketDataBandingPriceField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcMarketDataBandingPriceField

# Register CThostFtdcMarketDataBandingPriceField in _thostmduserapi:
_thostmduserapi.CThostFtdcMarketDataBandingPriceField_swigregister(CThostFtdcMarketDataBandingPriceField)
class CThostFtdcMarketDataExchangeField(object):
    r"""行情交易所代码属性"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcMarketDataExchangeField_ExchangeID_get, _thostmduserapi.CThostFtdcMarketDataExchangeField_ExchangeID_set, doc=r"""交易所代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcMarketDataExchangeField_swiginit(self, _thostmduserapi.new_CThostFtdcMarketDataExchangeField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcMarketDataExchangeField

# Register CThostFtdcMarketDataExchangeField in _thostmduserapi:
_thostmduserapi.CThostFtdcMarketDataExchangeField_swigregister(CThostFtdcMarketDataExchangeField)
class CThostFtdcSpecificInstrumentField(object):
    r"""指定的合约"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    reserve1: "TThostFtdcOldInstrumentIDType" = property(_thostmduserapi.CThostFtdcSpecificInstrumentField_reserve1_get, _thostmduserapi.CThostFtdcSpecificInstrumentField_reserve1_set, doc=r"""保留的无效字段""")
    InstrumentID: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcSpecificInstrumentField_InstrumentID_get, _thostmduserapi.CThostFtdcSpecificInstrumentField_InstrumentID_set, doc=r"""合约代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcSpecificInstrumentField_swiginit(self, _thostmduserapi.new_CThostFtdcSpecificInstrumentField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcSpecificInstrumentField

# Register CThostFtdcSpecificInstrumentField in _thostmduserapi:
_thostmduserapi.CThostFtdcSpecificInstrumentField_swigregister(CThostFtdcSpecificInstrumentField)
class CThostFtdcInstrumentStatusField(object):
    r"""合约状态"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcInstrumentStatusField_ExchangeID_get, _thostmduserapi.CThostFtdcInstrumentStatusField_ExchangeID_set, doc=r"""交易所代码""")
    reserve1: "TThostFtdcOldExchangeInstIDType" = property(_thostmduserapi.CThostFtdcInstrumentStatusField_reserve1_get, _thostmduserapi.CThostFtdcInstrumentStatusField_reserve1_set, doc=r"""保留的无效字段""")
    SettlementGroupID: "TThostFtdcSettlementGroupIDType" = property(_thostmduserapi.CThostFtdcInstrumentStatusField_SettlementGroupID_get, _thostmduserapi.CThostFtdcInstrumentStatusField_SettlementGroupID_set, doc=r"""结算组代码""")
    reserve2: "TThostFtdcOldInstrumentIDType" = property(_thostmduserapi.CThostFtdcInstrumentStatusField_reserve2_get, _thostmduserapi.CThostFtdcInstrumentStatusField_reserve2_set, doc=r"""保留的无效字段""")
    InstrumentStatus: "TThostFtdcInstrumentStatusType" = property(_thostmduserapi.CThostFtdcInstrumentStatusField_InstrumentStatus_get, _thostmduserapi.CThostFtdcInstrumentStatusField_InstrumentStatus_set, doc=r"""合约交易状态""")
    TradingSegmentSN: "TThostFtdcTradingSegmentSNType" = property(_thostmduserapi.CThostFtdcInstrumentStatusField_TradingSegmentSN_get, _thostmduserapi.CThostFtdcInstrumentStatusField_TradingSegmentSN_set, doc=r"""交易阶段编号""")
    EnterTime: "TThostFtdcTimeType" = property(_thostmduserapi.CThostFtdcInstrumentStatusField_EnterTime_get, _thostmduserapi.CThostFtdcInstrumentStatusField_EnterTime_set, doc=r"""进入本状态时间""")
    EnterReason: "TThostFtdcInstStatusEnterReasonType" = property(_thostmduserapi.CThostFtdcInstrumentStatusField_EnterReason_get, _thostmduserapi.CThostFtdcInstrumentStatusField_EnterReason_set, doc=r"""进入本状态原因""")
    ExchangeInstID: "TThostFtdcExchangeInstIDType" = property(_thostmduserapi.CThostFtdcInstrumentStatusField_ExchangeInstID_get, _thostmduserapi.CThostFtdcInstrumentStatusField_ExchangeInstID_set, doc=r"""合约在交易所的代码""")
    InstrumentID: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcInstrumentStatusField_InstrumentID_get, _thostmduserapi.CThostFtdcInstrumentStatusField_InstrumentID_set, doc=r"""合约代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcInstrumentStatusField_swiginit(self, _thostmduserapi.new_CThostFtdcInstrumentStatusField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcInstrumentStatusField

# Register CThostFtdcInstrumentStatusField in _thostmduserapi:
_thostmduserapi.CThostFtdcInstrumentStatusField_swigregister(CThostFtdcInstrumentStatusField)
class CThostFtdcQryInstrumentStatusField(object):
    r"""查询合约状态"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcQryInstrumentStatusField_ExchangeID_get, _thostmduserapi.CThostFtdcQryInstrumentStatusField_ExchangeID_set, doc=r"""交易所代码""")
    reserve1: "TThostFtdcOldExchangeInstIDType" = property(_thostmduserapi.CThostFtdcQryInstrumentStatusField_reserve1_get, _thostmduserapi.CThostFtdcQryInstrumentStatusField_reserve1_set, doc=r"""保留的无效字段""")
    ExchangeInstID: "TThostFtdcExchangeInstIDType" = property(_thostmduserapi.CThostFtdcQryInstrumentStatusField_ExchangeInstID_get, _thostmduserapi.CThostFtdcQryInstrumentStatusField_ExchangeInstID_set, doc=r"""合约在交易所的代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcQryInstrumentStatusField_swiginit(self, _thostmduserapi.new_CThostFtdcQryInstrumentStatusField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcQryInstrumentStatusField

# Register CThostFtdcQryInstrumentStatusField in _thostmduserapi:
_thostmduserapi.CThostFtdcQryInstrumentStatusField_swigregister(CThostFtdcQryInstrumentStatusField)
class CThostFtdcInvestorAccountField(object):
    r"""投资者账户"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcInvestorAccountField_BrokerID_get, _thostmduserapi.CThostFtdcInvestorAccountField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "TThostFtdcInvestorIDType" = property(_thostmduserapi.CThostFtdcInvestorAccountField_InvestorID_get, _thostmduserapi.CThostFtdcInvestorAccountField_InvestorID_set, doc=r"""投资者代码""")
    AccountID: "TThostFtdcAccountIDType" = property(_thostmduserapi.CThostFtdcInvestorAccountField_AccountID_get, _thostmduserapi.CThostFtdcInvestorAccountField_AccountID_set, doc=r"""投资者帐号""")
    CurrencyID: "TThostFtdcCurrencyIDType" = property(_thostmduserapi.CThostFtdcInvestorAccountField_CurrencyID_get, _thostmduserapi.CThostFtdcInvestorAccountField_CurrencyID_set, doc=r"""币种代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcInvestorAccountField_swiginit(self, _thostmduserapi.new_CThostFtdcInvestorAccountField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcInvestorAccountField

# Register CThostFtdcInvestorAccountField in _thostmduserapi:
_thostmduserapi.CThostFtdcInvestorAccountField_swigregister(CThostFtdcInvestorAccountField)
class CThostFtdcPositionProfitAlgorithmField(object):
    r"""浮动盈亏算法"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcPositionProfitAlgorithmField_BrokerID_get, _thostmduserapi.CThostFtdcPositionProfitAlgorithmField_BrokerID_set, doc=r"""经纪公司代码""")
    AccountID: "TThostFtdcAccountIDType" = property(_thostmduserapi.CThostFtdcPositionProfitAlgorithmField_AccountID_get, _thostmduserapi.CThostFtdcPositionProfitAlgorithmField_AccountID_set, doc=r"""投资者帐号""")
    Algorithm: "TThostFtdcAlgorithmType" = property(_thostmduserapi.CThostFtdcPositionProfitAlgorithmField_Algorithm_get, _thostmduserapi.CThostFtdcPositionProfitAlgorithmField_Algorithm_set, doc=r"""盈亏算法""")
    Memo: "TThostFtdcMemoType" = property(_thostmduserapi.CThostFtdcPositionProfitAlgorithmField_Memo_get, _thostmduserapi.CThostFtdcPositionProfitAlgorithmField_Memo_set, doc=r"""备注""")
    CurrencyID: "TThostFtdcCurrencyIDType" = property(_thostmduserapi.CThostFtdcPositionProfitAlgorithmField_CurrencyID_get, _thostmduserapi.CThostFtdcPositionProfitAlgorithmField_CurrencyID_set, doc=r"""币种代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcPositionProfitAlgorithmField_swiginit(self, _thostmduserapi.new_CThostFtdcPositionProfitAlgorithmField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcPositionProfitAlgorithmField

# Register CThostFtdcPositionProfitAlgorithmField in _thostmduserapi:
_thostmduserapi.CThostFtdcPositionProfitAlgorithmField_swigregister(CThostFtdcPositionProfitAlgorithmField)
class CThostFtdcDiscountField(object):
    r"""会员资金折扣"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcDiscountField_BrokerID_get, _thostmduserapi.CThostFtdcDiscountField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorRange: "TThostFtdcInvestorRangeType" = property(_thostmduserapi.CThostFtdcDiscountField_InvestorRange_get, _thostmduserapi.CThostFtdcDiscountField_InvestorRange_set, doc=r"""投资者范围""")
    InvestorID: "TThostFtdcInvestorIDType" = property(_thostmduserapi.CThostFtdcDiscountField_InvestorID_get, _thostmduserapi.CThostFtdcDiscountField_InvestorID_set, doc=r"""投资者代码""")
    Discount: "TThostFtdcRatioType" = property(_thostmduserapi.CThostFtdcDiscountField_Discount_get, _thostmduserapi.CThostFtdcDiscountField_Discount_set, doc=r"""资金折扣比例""")

    def __init__(self):
        _thostmduserapi.CThostFtdcDiscountField_swiginit(self, _thostmduserapi.new_CThostFtdcDiscountField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcDiscountField

# Register CThostFtdcDiscountField in _thostmduserapi:
_thostmduserapi.CThostFtdcDiscountField_swigregister(CThostFtdcDiscountField)
class CThostFtdcQryTransferBankField(object):
    r"""查询转帐银行"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BankID: "TThostFtdcBankIDType" = property(_thostmduserapi.CThostFtdcQryTransferBankField_BankID_get, _thostmduserapi.CThostFtdcQryTransferBankField_BankID_set, doc=r"""银行代码""")
    BankBrchID: "TThostFtdcBankBrchIDType" = property(_thostmduserapi.CThostFtdcQryTransferBankField_BankBrchID_get, _thostmduserapi.CThostFtdcQryTransferBankField_BankBrchID_set, doc=r"""银行分中心代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcQryTransferBankField_swiginit(self, _thostmduserapi.new_CThostFtdcQryTransferBankField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcQryTransferBankField

# Register CThostFtdcQryTransferBankField in _thostmduserapi:
_thostmduserapi.CThostFtdcQryTransferBankField_swigregister(CThostFtdcQryTransferBankField)
class CThostFtdcTransferBankField(object):
    r"""转帐银行"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BankID: "TThostFtdcBankIDType" = property(_thostmduserapi.CThostFtdcTransferBankField_BankID_get, _thostmduserapi.CThostFtdcTransferBankField_BankID_set, doc=r"""银行代码""")
    BankBrchID: "TThostFtdcBankBrchIDType" = property(_thostmduserapi.CThostFtdcTransferBankField_BankBrchID_get, _thostmduserapi.CThostFtdcTransferBankField_BankBrchID_set, doc=r"""银行分中心代码""")
    BankName: "TThostFtdcBankNameType" = property(_thostmduserapi.CThostFtdcTransferBankField_BankName_get, _thostmduserapi.CThostFtdcTransferBankField_BankName_set, doc=r"""银行名称""")
    IsActive: "TThostFtdcBoolType" = property(_thostmduserapi.CThostFtdcTransferBankField_IsActive_get, _thostmduserapi.CThostFtdcTransferBankField_IsActive_set, doc=r"""是否活跃""")

    def __init__(self):
        _thostmduserapi.CThostFtdcTransferBankField_swiginit(self, _thostmduserapi.new_CThostFtdcTransferBankField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcTransferBankField

# Register CThostFtdcTransferBankField in _thostmduserapi:
_thostmduserapi.CThostFtdcTransferBankField_swigregister(CThostFtdcTransferBankField)
class CThostFtdcQryInvestorPositionDetailField(object):
    r"""查询投资者持仓明细"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcQryInvestorPositionDetailField_BrokerID_get, _thostmduserapi.CThostFtdcQryInvestorPositionDetailField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "TThostFtdcInvestorIDType" = property(_thostmduserapi.CThostFtdcQryInvestorPositionDetailField_InvestorID_get, _thostmduserapi.CThostFtdcQryInvestorPositionDetailField_InvestorID_set, doc=r"""投资者代码""")
    reserve1: "TThostFtdcOldInstrumentIDType" = property(_thostmduserapi.CThostFtdcQryInvestorPositionDetailField_reserve1_get, _thostmduserapi.CThostFtdcQryInvestorPositionDetailField_reserve1_set, doc=r"""保留的无效字段""")
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcQryInvestorPositionDetailField_ExchangeID_get, _thostmduserapi.CThostFtdcQryInvestorPositionDetailField_ExchangeID_set, doc=r"""交易所代码""")
    InvestUnitID: "TThostFtdcInvestUnitIDType" = property(_thostmduserapi.CThostFtdcQryInvestorPositionDetailField_InvestUnitID_get, _thostmduserapi.CThostFtdcQryInvestorPositionDetailField_InvestUnitID_set, doc=r"""投资单元代码""")
    InstrumentID: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcQryInvestorPositionDetailField_InstrumentID_get, _thostmduserapi.CThostFtdcQryInvestorPositionDetailField_InstrumentID_set, doc=r"""合约代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcQryInvestorPositionDetailField_swiginit(self, _thostmduserapi.new_CThostFtdcQryInvestorPositionDetailField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcQryInvestorPositionDetailField

# Register CThostFtdcQryInvestorPositionDetailField in _thostmduserapi:
_thostmduserapi.CThostFtdcQryInvestorPositionDetailField_swigregister(CThostFtdcQryInvestorPositionDetailField)
class CThostFtdcInvestorPositionDetailField(object):
    r"""投资者持仓明细"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    reserve1: "TThostFtdcOldInstrumentIDType" = property(_thostmduserapi.CThostFtdcInvestorPositionDetailField_reserve1_get, _thostmduserapi.CThostFtdcInvestorPositionDetailField_reserve1_set, doc=r"""保留的无效字段""")
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcInvestorPositionDetailField_BrokerID_get, _thostmduserapi.CThostFtdcInvestorPositionDetailField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "TThostFtdcInvestorIDType" = property(_thostmduserapi.CThostFtdcInvestorPositionDetailField_InvestorID_get, _thostmduserapi.CThostFtdcInvestorPositionDetailField_InvestorID_set, doc=r"""投资者代码""")
    HedgeFlag: "TThostFtdcHedgeFlagType" = property(_thostmduserapi.CThostFtdcInvestorPositionDetailField_HedgeFlag_get, _thostmduserapi.CThostFtdcInvestorPositionDetailField_HedgeFlag_set, doc=r"""投机套保标志""")
    Direction: "TThostFtdcDirectionType" = property(_thostmduserapi.CThostFtdcInvestorPositionDetailField_Direction_get, _thostmduserapi.CThostFtdcInvestorPositionDetailField_Direction_set, doc=r"""买卖""")
    OpenDate: "TThostFtdcDateType" = property(_thostmduserapi.CThostFtdcInvestorPositionDetailField_OpenDate_get, _thostmduserapi.CThostFtdcInvestorPositionDetailField_OpenDate_set, doc=r"""开仓日期""")
    TradeID: "TThostFtdcTradeIDType" = property(_thostmduserapi.CThostFtdcInvestorPositionDetailField_TradeID_get, _thostmduserapi.CThostFtdcInvestorPositionDetailField_TradeID_set, doc=r"""成交编号""")
    Volume: "TThostFtdcVolumeType" = property(_thostmduserapi.CThostFtdcInvestorPositionDetailField_Volume_get, _thostmduserapi.CThostFtdcInvestorPositionDetailField_Volume_set, doc=r"""数量""")
    OpenPrice: "TThostFtdcPriceType" = property(_thostmduserapi.CThostFtdcInvestorPositionDetailField_OpenPrice_get, _thostmduserapi.CThostFtdcInvestorPositionDetailField_OpenPrice_set, doc=r"""开仓价""")
    TradingDay: "TThostFtdcDateType" = property(_thostmduserapi.CThostFtdcInvestorPositionDetailField_TradingDay_get, _thostmduserapi.CThostFtdcInvestorPositionDetailField_TradingDay_set, doc=r"""交易日""")
    SettlementID: "TThostFtdcSettlementIDType" = property(_thostmduserapi.CThostFtdcInvestorPositionDetailField_SettlementID_get, _thostmduserapi.CThostFtdcInvestorPositionDetailField_SettlementID_set, doc=r"""结算编号""")
    TradeType: "TThostFtdcTradeTypeType" = property(_thostmduserapi.CThostFtdcInvestorPositionDetailField_TradeType_get, _thostmduserapi.CThostFtdcInvestorPositionDetailField_TradeType_set, doc=r"""成交类型""")
    reserve2: "TThostFtdcOldInstrumentIDType" = property(_thostmduserapi.CThostFtdcInvestorPositionDetailField_reserve2_get, _thostmduserapi.CThostFtdcInvestorPositionDetailField_reserve2_set, doc=r"""保留的无效字段""")
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcInvestorPositionDetailField_ExchangeID_get, _thostmduserapi.CThostFtdcInvestorPositionDetailField_ExchangeID_set, doc=r"""交易所代码""")
    CloseProfitByDate: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcInvestorPositionDetailField_CloseProfitByDate_get, _thostmduserapi.CThostFtdcInvestorPositionDetailField_CloseProfitByDate_set, doc=r"""逐日盯市平仓盈亏""")
    CloseProfitByTrade: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcInvestorPositionDetailField_CloseProfitByTrade_get, _thostmduserapi.CThostFtdcInvestorPositionDetailField_CloseProfitByTrade_set, doc=r"""逐笔对冲平仓盈亏""")
    PositionProfitByDate: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcInvestorPositionDetailField_PositionProfitByDate_get, _thostmduserapi.CThostFtdcInvestorPositionDetailField_PositionProfitByDate_set, doc=r"""逐日盯市持仓盈亏""")
    PositionProfitByTrade: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcInvestorPositionDetailField_PositionProfitByTrade_get, _thostmduserapi.CThostFtdcInvestorPositionDetailField_PositionProfitByTrade_set, doc=r"""逐笔对冲持仓盈亏""")
    Margin: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcInvestorPositionDetailField_Margin_get, _thostmduserapi.CThostFtdcInvestorPositionDetailField_Margin_set, doc=r"""投资者保证金""")
    ExchMargin: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcInvestorPositionDetailField_ExchMargin_get, _thostmduserapi.CThostFtdcInvestorPositionDetailField_ExchMargin_set, doc=r"""交易所保证金""")
    MarginRateByMoney: "TThostFtdcRatioType" = property(_thostmduserapi.CThostFtdcInvestorPositionDetailField_MarginRateByMoney_get, _thostmduserapi.CThostFtdcInvestorPositionDetailField_MarginRateByMoney_set, doc=r"""保证金率""")
    MarginRateByVolume: "TThostFtdcRatioType" = property(_thostmduserapi.CThostFtdcInvestorPositionDetailField_MarginRateByVolume_get, _thostmduserapi.CThostFtdcInvestorPositionDetailField_MarginRateByVolume_set, doc=r"""保证金率(按手数)""")
    LastSettlementPrice: "TThostFtdcPriceType" = property(_thostmduserapi.CThostFtdcInvestorPositionDetailField_LastSettlementPrice_get, _thostmduserapi.CThostFtdcInvestorPositionDetailField_LastSettlementPrice_set, doc=r"""昨结算价""")
    SettlementPrice: "TThostFtdcPriceType" = property(_thostmduserapi.CThostFtdcInvestorPositionDetailField_SettlementPrice_get, _thostmduserapi.CThostFtdcInvestorPositionDetailField_SettlementPrice_set, doc=r"""结算价""")
    CloseVolume: "TThostFtdcVolumeType" = property(_thostmduserapi.CThostFtdcInvestorPositionDetailField_CloseVolume_get, _thostmduserapi.CThostFtdcInvestorPositionDetailField_CloseVolume_set, doc=r"""平仓量""")
    CloseAmount: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcInvestorPositionDetailField_CloseAmount_get, _thostmduserapi.CThostFtdcInvestorPositionDetailField_CloseAmount_set, doc=r"""平仓金额""")
    TimeFirstVolume: "TThostFtdcVolumeType" = property(_thostmduserapi.CThostFtdcInvestorPositionDetailField_TimeFirstVolume_get, _thostmduserapi.CThostFtdcInvestorPositionDetailField_TimeFirstVolume_set, doc=r"""先开先平剩余数量""")
    InvestUnitID: "TThostFtdcInvestUnitIDType" = property(_thostmduserapi.CThostFtdcInvestorPositionDetailField_InvestUnitID_get, _thostmduserapi.CThostFtdcInvestorPositionDetailField_InvestUnitID_set, doc=r"""投资单元代码""")
    SpecPosiType: "TThostFtdcSpecPosiTypeType" = property(_thostmduserapi.CThostFtdcInvestorPositionDetailField_SpecPosiType_get, _thostmduserapi.CThostFtdcInvestorPositionDetailField_SpecPosiType_set, doc=r"""特殊持仓标志""")
    InstrumentID: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcInvestorPositionDetailField_InstrumentID_get, _thostmduserapi.CThostFtdcInvestorPositionDetailField_InstrumentID_set, doc=r"""合约代码""")
    CombInstrumentID: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcInvestorPositionDetailField_CombInstrumentID_get, _thostmduserapi.CThostFtdcInvestorPositionDetailField_CombInstrumentID_set, doc=r"""组合合约代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcInvestorPositionDetailField_swiginit(self, _thostmduserapi.new_CThostFtdcInvestorPositionDetailField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcInvestorPositionDetailField

# Register CThostFtdcInvestorPositionDetailField in _thostmduserapi:
_thostmduserapi.CThostFtdcInvestorPositionDetailField_swigregister(CThostFtdcInvestorPositionDetailField)
class CThostFtdcTradingAccountPasswordField(object):
    r"""资金账户口令域"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcTradingAccountPasswordField_BrokerID_get, _thostmduserapi.CThostFtdcTradingAccountPasswordField_BrokerID_set, doc=r"""经纪公司代码""")
    AccountID: "TThostFtdcAccountIDType" = property(_thostmduserapi.CThostFtdcTradingAccountPasswordField_AccountID_get, _thostmduserapi.CThostFtdcTradingAccountPasswordField_AccountID_set, doc=r"""投资者帐号""")
    Password: "TThostFtdcPasswordType" = property(_thostmduserapi.CThostFtdcTradingAccountPasswordField_Password_get, _thostmduserapi.CThostFtdcTradingAccountPasswordField_Password_set, doc=r"""密码""")
    CurrencyID: "TThostFtdcCurrencyIDType" = property(_thostmduserapi.CThostFtdcTradingAccountPasswordField_CurrencyID_get, _thostmduserapi.CThostFtdcTradingAccountPasswordField_CurrencyID_set, doc=r"""币种代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcTradingAccountPasswordField_swiginit(self, _thostmduserapi.new_CThostFtdcTradingAccountPasswordField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcTradingAccountPasswordField

# Register CThostFtdcTradingAccountPasswordField in _thostmduserapi:
_thostmduserapi.CThostFtdcTradingAccountPasswordField_swigregister(CThostFtdcTradingAccountPasswordField)
class CThostFtdcMDTraderOfferField(object):
    r"""交易所行情报盘机"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcMDTraderOfferField_ExchangeID_get, _thostmduserapi.CThostFtdcMDTraderOfferField_ExchangeID_set, doc=r"""交易所代码""")
    TraderID: "TThostFtdcTraderIDType" = property(_thostmduserapi.CThostFtdcMDTraderOfferField_TraderID_get, _thostmduserapi.CThostFtdcMDTraderOfferField_TraderID_set, doc=r"""交易所交易员代码""")
    ParticipantID: "TThostFtdcParticipantIDType" = property(_thostmduserapi.CThostFtdcMDTraderOfferField_ParticipantID_get, _thostmduserapi.CThostFtdcMDTraderOfferField_ParticipantID_set, doc=r"""会员代码""")
    Password: "TThostFtdcPasswordType" = property(_thostmduserapi.CThostFtdcMDTraderOfferField_Password_get, _thostmduserapi.CThostFtdcMDTraderOfferField_Password_set, doc=r"""密码""")
    InstallID: "TThostFtdcInstallIDType" = property(_thostmduserapi.CThostFtdcMDTraderOfferField_InstallID_get, _thostmduserapi.CThostFtdcMDTraderOfferField_InstallID_set, doc=r"""安装编号""")
    OrderLocalID: "TThostFtdcOrderLocalIDType" = property(_thostmduserapi.CThostFtdcMDTraderOfferField_OrderLocalID_get, _thostmduserapi.CThostFtdcMDTraderOfferField_OrderLocalID_set, doc=r"""本地报单编号""")
    TraderConnectStatus: "TThostFtdcTraderConnectStatusType" = property(_thostmduserapi.CThostFtdcMDTraderOfferField_TraderConnectStatus_get, _thostmduserapi.CThostFtdcMDTraderOfferField_TraderConnectStatus_set, doc=r"""交易所交易员连接状态""")
    ConnectRequestDate: "TThostFtdcDateType" = property(_thostmduserapi.CThostFtdcMDTraderOfferField_ConnectRequestDate_get, _thostmduserapi.CThostFtdcMDTraderOfferField_ConnectRequestDate_set, doc=r"""发出连接请求的日期""")
    ConnectRequestTime: "TThostFtdcTimeType" = property(_thostmduserapi.CThostFtdcMDTraderOfferField_ConnectRequestTime_get, _thostmduserapi.CThostFtdcMDTraderOfferField_ConnectRequestTime_set, doc=r"""发出连接请求的时间""")
    LastReportDate: "TThostFtdcDateType" = property(_thostmduserapi.CThostFtdcMDTraderOfferField_LastReportDate_get, _thostmduserapi.CThostFtdcMDTraderOfferField_LastReportDate_set, doc=r"""上次报告日期""")
    LastReportTime: "TThostFtdcTimeType" = property(_thostmduserapi.CThostFtdcMDTraderOfferField_LastReportTime_get, _thostmduserapi.CThostFtdcMDTraderOfferField_LastReportTime_set, doc=r"""上次报告时间""")
    ConnectDate: "TThostFtdcDateType" = property(_thostmduserapi.CThostFtdcMDTraderOfferField_ConnectDate_get, _thostmduserapi.CThostFtdcMDTraderOfferField_ConnectDate_set, doc=r"""完成连接日期""")
    ConnectTime: "TThostFtdcTimeType" = property(_thostmduserapi.CThostFtdcMDTraderOfferField_ConnectTime_get, _thostmduserapi.CThostFtdcMDTraderOfferField_ConnectTime_set, doc=r"""完成连接时间""")
    StartDate: "TThostFtdcDateType" = property(_thostmduserapi.CThostFtdcMDTraderOfferField_StartDate_get, _thostmduserapi.CThostFtdcMDTraderOfferField_StartDate_set, doc=r"""启动日期""")
    StartTime: "TThostFtdcTimeType" = property(_thostmduserapi.CThostFtdcMDTraderOfferField_StartTime_get, _thostmduserapi.CThostFtdcMDTraderOfferField_StartTime_set, doc=r"""启动时间""")
    TradingDay: "TThostFtdcDateType" = property(_thostmduserapi.CThostFtdcMDTraderOfferField_TradingDay_get, _thostmduserapi.CThostFtdcMDTraderOfferField_TradingDay_set, doc=r"""交易日""")
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcMDTraderOfferField_BrokerID_get, _thostmduserapi.CThostFtdcMDTraderOfferField_BrokerID_set, doc=r"""经纪公司代码""")
    MaxTradeID: "TThostFtdcTradeIDType" = property(_thostmduserapi.CThostFtdcMDTraderOfferField_MaxTradeID_get, _thostmduserapi.CThostFtdcMDTraderOfferField_MaxTradeID_set, doc=r"""本席位最大成交编号""")
    MaxOrderMessageReference: "TThostFtdcReturnCodeType" = property(_thostmduserapi.CThostFtdcMDTraderOfferField_MaxOrderMessageReference_get, _thostmduserapi.CThostFtdcMDTraderOfferField_MaxOrderMessageReference_set, doc=r"""本席位最大报单备拷""")
    OrderCancelAlg: "TThostFtdcOrderCancelAlgType" = property(_thostmduserapi.CThostFtdcMDTraderOfferField_OrderCancelAlg_get, _thostmduserapi.CThostFtdcMDTraderOfferField_OrderCancelAlg_set, doc=r"""撤单时选择席位算法""")

    def __init__(self):
        _thostmduserapi.CThostFtdcMDTraderOfferField_swiginit(self, _thostmduserapi.new_CThostFtdcMDTraderOfferField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcMDTraderOfferField

# Register CThostFtdcMDTraderOfferField in _thostmduserapi:
_thostmduserapi.CThostFtdcMDTraderOfferField_swigregister(CThostFtdcMDTraderOfferField)
class CThostFtdcQryMDTraderOfferField(object):
    r"""查询行情报盘机"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcQryMDTraderOfferField_ExchangeID_get, _thostmduserapi.CThostFtdcQryMDTraderOfferField_ExchangeID_set, doc=r"""交易所代码""")
    ParticipantID: "TThostFtdcParticipantIDType" = property(_thostmduserapi.CThostFtdcQryMDTraderOfferField_ParticipantID_get, _thostmduserapi.CThostFtdcQryMDTraderOfferField_ParticipantID_set, doc=r"""会员代码""")
    TraderID: "TThostFtdcTraderIDType" = property(_thostmduserapi.CThostFtdcQryMDTraderOfferField_TraderID_get, _thostmduserapi.CThostFtdcQryMDTraderOfferField_TraderID_set, doc=r"""交易所交易员代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcQryMDTraderOfferField_swiginit(self, _thostmduserapi.new_CThostFtdcQryMDTraderOfferField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcQryMDTraderOfferField

# Register CThostFtdcQryMDTraderOfferField in _thostmduserapi:
_thostmduserapi.CThostFtdcQryMDTraderOfferField_swigregister(CThostFtdcQryMDTraderOfferField)
class CThostFtdcQryNoticeField(object):
    r"""查询客户通知"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcQryNoticeField_BrokerID_get, _thostmduserapi.CThostFtdcQryNoticeField_BrokerID_set, doc=r"""经纪公司代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcQryNoticeField_swiginit(self, _thostmduserapi.new_CThostFtdcQryNoticeField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcQryNoticeField

# Register CThostFtdcQryNoticeField in _thostmduserapi:
_thostmduserapi.CThostFtdcQryNoticeField_swigregister(CThostFtdcQryNoticeField)
class CThostFtdcNoticeField(object):
    r"""客户通知"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcNoticeField_BrokerID_get, _thostmduserapi.CThostFtdcNoticeField_BrokerID_set, doc=r"""经纪公司代码""")
    Content: "TThostFtdcContentType" = property(_thostmduserapi.CThostFtdcNoticeField_Content_get, _thostmduserapi.CThostFtdcNoticeField_Content_set, doc=r"""消息正文""")
    SequenceLabel: "TThostFtdcSequenceLabelType" = property(_thostmduserapi.CThostFtdcNoticeField_SequenceLabel_get, _thostmduserapi.CThostFtdcNoticeField_SequenceLabel_set, doc=r"""经纪公司通知内容序列号""")

    def __init__(self):
        _thostmduserapi.CThostFtdcNoticeField_swiginit(self, _thostmduserapi.new_CThostFtdcNoticeField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcNoticeField

# Register CThostFtdcNoticeField in _thostmduserapi:
_thostmduserapi.CThostFtdcNoticeField_swigregister(CThostFtdcNoticeField)
class CThostFtdcUserRightField(object):
    r"""用户权限"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcUserRightField_BrokerID_get, _thostmduserapi.CThostFtdcUserRightField_BrokerID_set, doc=r"""经纪公司代码""")
    UserID: "TThostFtdcUserIDType" = property(_thostmduserapi.CThostFtdcUserRightField_UserID_get, _thostmduserapi.CThostFtdcUserRightField_UserID_set, doc=r"""用户代码""")
    UserRightType: "TThostFtdcUserRightTypeType" = property(_thostmduserapi.CThostFtdcUserRightField_UserRightType_get, _thostmduserapi.CThostFtdcUserRightField_UserRightType_set, doc=r"""客户权限类型""")
    IsForbidden: "TThostFtdcBoolType" = property(_thostmduserapi.CThostFtdcUserRightField_IsForbidden_get, _thostmduserapi.CThostFtdcUserRightField_IsForbidden_set, doc=r"""是否禁止""")

    def __init__(self):
        _thostmduserapi.CThostFtdcUserRightField_swiginit(self, _thostmduserapi.new_CThostFtdcUserRightField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcUserRightField

# Register CThostFtdcUserRightField in _thostmduserapi:
_thostmduserapi.CThostFtdcUserRightField_swigregister(CThostFtdcUserRightField)
class CThostFtdcQrySettlementInfoConfirmField(object):
    r"""查询结算信息确认域"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcQrySettlementInfoConfirmField_BrokerID_get, _thostmduserapi.CThostFtdcQrySettlementInfoConfirmField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "TThostFtdcInvestorIDType" = property(_thostmduserapi.CThostFtdcQrySettlementInfoConfirmField_InvestorID_get, _thostmduserapi.CThostFtdcQrySettlementInfoConfirmField_InvestorID_set, doc=r"""投资者代码""")
    AccountID: "TThostFtdcAccountIDType" = property(_thostmduserapi.CThostFtdcQrySettlementInfoConfirmField_AccountID_get, _thostmduserapi.CThostFtdcQrySettlementInfoConfirmField_AccountID_set, doc=r"""投资者帐号""")
    CurrencyID: "TThostFtdcCurrencyIDType" = property(_thostmduserapi.CThostFtdcQrySettlementInfoConfirmField_CurrencyID_get, _thostmduserapi.CThostFtdcQrySettlementInfoConfirmField_CurrencyID_set, doc=r"""币种代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcQrySettlementInfoConfirmField_swiginit(self, _thostmduserapi.new_CThostFtdcQrySettlementInfoConfirmField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcQrySettlementInfoConfirmField

# Register CThostFtdcQrySettlementInfoConfirmField in _thostmduserapi:
_thostmduserapi.CThostFtdcQrySettlementInfoConfirmField_swigregister(CThostFtdcQrySettlementInfoConfirmField)
class CThostFtdcLoadSettlementInfoField(object):
    r"""装载结算信息"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcLoadSettlementInfoField_BrokerID_get, _thostmduserapi.CThostFtdcLoadSettlementInfoField_BrokerID_set, doc=r"""经纪公司代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcLoadSettlementInfoField_swiginit(self, _thostmduserapi.new_CThostFtdcLoadSettlementInfoField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcLoadSettlementInfoField

# Register CThostFtdcLoadSettlementInfoField in _thostmduserapi:
_thostmduserapi.CThostFtdcLoadSettlementInfoField_swigregister(CThostFtdcLoadSettlementInfoField)
class CThostFtdcBrokerWithdrawAlgorithmField(object):
    r"""经纪公司可提资金算法表"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcBrokerWithdrawAlgorithmField_BrokerID_get, _thostmduserapi.CThostFtdcBrokerWithdrawAlgorithmField_BrokerID_set, doc=r"""经纪公司代码""")
    WithdrawAlgorithm: "TThostFtdcAlgorithmType" = property(_thostmduserapi.CThostFtdcBrokerWithdrawAlgorithmField_WithdrawAlgorithm_get, _thostmduserapi.CThostFtdcBrokerWithdrawAlgorithmField_WithdrawAlgorithm_set, doc=r"""可提资金算法""")
    UsingRatio: "TThostFtdcRatioType" = property(_thostmduserapi.CThostFtdcBrokerWithdrawAlgorithmField_UsingRatio_get, _thostmduserapi.CThostFtdcBrokerWithdrawAlgorithmField_UsingRatio_set, doc=r"""资金使用率""")
    IncludeCloseProfit: "TThostFtdcIncludeCloseProfitType" = property(_thostmduserapi.CThostFtdcBrokerWithdrawAlgorithmField_IncludeCloseProfit_get, _thostmduserapi.CThostFtdcBrokerWithdrawAlgorithmField_IncludeCloseProfit_set, doc=r"""可提是否包含平仓盈利""")
    AllWithoutTrade: "TThostFtdcAllWithoutTradeType" = property(_thostmduserapi.CThostFtdcBrokerWithdrawAlgorithmField_AllWithoutTrade_get, _thostmduserapi.CThostFtdcBrokerWithdrawAlgorithmField_AllWithoutTrade_set, doc=r"""本日无仓且无成交客户是否受可提比例限制""")
    AvailIncludeCloseProfit: "TThostFtdcIncludeCloseProfitType" = property(_thostmduserapi.CThostFtdcBrokerWithdrawAlgorithmField_AvailIncludeCloseProfit_get, _thostmduserapi.CThostFtdcBrokerWithdrawAlgorithmField_AvailIncludeCloseProfit_set, doc=r"""可用是否包含平仓盈利""")
    IsBrokerUserEvent: "TThostFtdcBoolType" = property(_thostmduserapi.CThostFtdcBrokerWithdrawAlgorithmField_IsBrokerUserEvent_get, _thostmduserapi.CThostFtdcBrokerWithdrawAlgorithmField_IsBrokerUserEvent_set, doc=r"""是否启用用户事件""")
    CurrencyID: "TThostFtdcCurrencyIDType" = property(_thostmduserapi.CThostFtdcBrokerWithdrawAlgorithmField_CurrencyID_get, _thostmduserapi.CThostFtdcBrokerWithdrawAlgorithmField_CurrencyID_set, doc=r"""币种代码""")
    FundMortgageRatio: "TThostFtdcRatioType" = property(_thostmduserapi.CThostFtdcBrokerWithdrawAlgorithmField_FundMortgageRatio_get, _thostmduserapi.CThostFtdcBrokerWithdrawAlgorithmField_FundMortgageRatio_set, doc=r"""货币质押比率""")
    BalanceAlgorithm: "TThostFtdcBalanceAlgorithmType" = property(_thostmduserapi.CThostFtdcBrokerWithdrawAlgorithmField_BalanceAlgorithm_get, _thostmduserapi.CThostFtdcBrokerWithdrawAlgorithmField_BalanceAlgorithm_set, doc=r"""权益算法""")

    def __init__(self):
        _thostmduserapi.CThostFtdcBrokerWithdrawAlgorithmField_swiginit(self, _thostmduserapi.new_CThostFtdcBrokerWithdrawAlgorithmField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcBrokerWithdrawAlgorithmField

# Register CThostFtdcBrokerWithdrawAlgorithmField in _thostmduserapi:
_thostmduserapi.CThostFtdcBrokerWithdrawAlgorithmField_swigregister(CThostFtdcBrokerWithdrawAlgorithmField)
class CThostFtdcTradingAccountPasswordUpdateV1Field(object):
    r"""资金账户口令变更域"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcTradingAccountPasswordUpdateV1Field_BrokerID_get, _thostmduserapi.CThostFtdcTradingAccountPasswordUpdateV1Field_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "TThostFtdcInvestorIDType" = property(_thostmduserapi.CThostFtdcTradingAccountPasswordUpdateV1Field_InvestorID_get, _thostmduserapi.CThostFtdcTradingAccountPasswordUpdateV1Field_InvestorID_set, doc=r"""投资者代码""")
    OldPassword: "TThostFtdcPasswordType" = property(_thostmduserapi.CThostFtdcTradingAccountPasswordUpdateV1Field_OldPassword_get, _thostmduserapi.CThostFtdcTradingAccountPasswordUpdateV1Field_OldPassword_set, doc=r"""原来的口令""")
    NewPassword: "TThostFtdcPasswordType" = property(_thostmduserapi.CThostFtdcTradingAccountPasswordUpdateV1Field_NewPassword_get, _thostmduserapi.CThostFtdcTradingAccountPasswordUpdateV1Field_NewPassword_set, doc=r"""新的口令""")

    def __init__(self):
        _thostmduserapi.CThostFtdcTradingAccountPasswordUpdateV1Field_swiginit(self, _thostmduserapi.new_CThostFtdcTradingAccountPasswordUpdateV1Field())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcTradingAccountPasswordUpdateV1Field

# Register CThostFtdcTradingAccountPasswordUpdateV1Field in _thostmduserapi:
_thostmduserapi.CThostFtdcTradingAccountPasswordUpdateV1Field_swigregister(CThostFtdcTradingAccountPasswordUpdateV1Field)
class CThostFtdcTradingAccountPasswordUpdateField(object):
    r"""资金账户口令变更域"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcTradingAccountPasswordUpdateField_BrokerID_get, _thostmduserapi.CThostFtdcTradingAccountPasswordUpdateField_BrokerID_set, doc=r"""经纪公司代码""")
    AccountID: "TThostFtdcAccountIDType" = property(_thostmduserapi.CThostFtdcTradingAccountPasswordUpdateField_AccountID_get, _thostmduserapi.CThostFtdcTradingAccountPasswordUpdateField_AccountID_set, doc=r"""投资者帐号""")
    OldPassword: "TThostFtdcPasswordType" = property(_thostmduserapi.CThostFtdcTradingAccountPasswordUpdateField_OldPassword_get, _thostmduserapi.CThostFtdcTradingAccountPasswordUpdateField_OldPassword_set, doc=r"""原来的口令""")
    NewPassword: "TThostFtdcPasswordType" = property(_thostmduserapi.CThostFtdcTradingAccountPasswordUpdateField_NewPassword_get, _thostmduserapi.CThostFtdcTradingAccountPasswordUpdateField_NewPassword_set, doc=r"""新的口令""")
    CurrencyID: "TThostFtdcCurrencyIDType" = property(_thostmduserapi.CThostFtdcTradingAccountPasswordUpdateField_CurrencyID_get, _thostmduserapi.CThostFtdcTradingAccountPasswordUpdateField_CurrencyID_set, doc=r"""币种代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcTradingAccountPasswordUpdateField_swiginit(self, _thostmduserapi.new_CThostFtdcTradingAccountPasswordUpdateField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcTradingAccountPasswordUpdateField

# Register CThostFtdcTradingAccountPasswordUpdateField in _thostmduserapi:
_thostmduserapi.CThostFtdcTradingAccountPasswordUpdateField_swigregister(CThostFtdcTradingAccountPasswordUpdateField)
class CThostFtdcQryCombinationLegField(object):
    r"""查询组合合约分腿"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    reserve1: "TThostFtdcOldInstrumentIDType" = property(_thostmduserapi.CThostFtdcQryCombinationLegField_reserve1_get, _thostmduserapi.CThostFtdcQryCombinationLegField_reserve1_set, doc=r"""保留的无效字段""")
    LegID: "TThostFtdcLegIDType" = property(_thostmduserapi.CThostFtdcQryCombinationLegField_LegID_get, _thostmduserapi.CThostFtdcQryCombinationLegField_LegID_set, doc=r"""单腿编号""")
    reserve2: "TThostFtdcOldInstrumentIDType" = property(_thostmduserapi.CThostFtdcQryCombinationLegField_reserve2_get, _thostmduserapi.CThostFtdcQryCombinationLegField_reserve2_set, doc=r"""保留的无效字段""")
    CombInstrumentID: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcQryCombinationLegField_CombInstrumentID_get, _thostmduserapi.CThostFtdcQryCombinationLegField_CombInstrumentID_set, doc=r"""组合合约代码""")
    LegInstrumentID: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcQryCombinationLegField_LegInstrumentID_get, _thostmduserapi.CThostFtdcQryCombinationLegField_LegInstrumentID_set, doc=r"""单腿合约代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcQryCombinationLegField_swiginit(self, _thostmduserapi.new_CThostFtdcQryCombinationLegField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcQryCombinationLegField

# Register CThostFtdcQryCombinationLegField in _thostmduserapi:
_thostmduserapi.CThostFtdcQryCombinationLegField_swigregister(CThostFtdcQryCombinationLegField)
class CThostFtdcQrySyncStatusField(object):
    r"""查询组合合约分腿"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    TradingDay: "TThostFtdcDateType" = property(_thostmduserapi.CThostFtdcQrySyncStatusField_TradingDay_get, _thostmduserapi.CThostFtdcQrySyncStatusField_TradingDay_set, doc=r"""交易日""")

    def __init__(self):
        _thostmduserapi.CThostFtdcQrySyncStatusField_swiginit(self, _thostmduserapi.new_CThostFtdcQrySyncStatusField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcQrySyncStatusField

# Register CThostFtdcQrySyncStatusField in _thostmduserapi:
_thostmduserapi.CThostFtdcQrySyncStatusField_swigregister(CThostFtdcQrySyncStatusField)
class CThostFtdcCombinationLegField(object):
    r"""组合交易合约的单腿"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    reserve1: "TThostFtdcOldInstrumentIDType" = property(_thostmduserapi.CThostFtdcCombinationLegField_reserve1_get, _thostmduserapi.CThostFtdcCombinationLegField_reserve1_set, doc=r"""保留的无效字段""")
    LegID: "TThostFtdcLegIDType" = property(_thostmduserapi.CThostFtdcCombinationLegField_LegID_get, _thostmduserapi.CThostFtdcCombinationLegField_LegID_set, doc=r"""单腿编号""")
    reserve2: "TThostFtdcOldInstrumentIDType" = property(_thostmduserapi.CThostFtdcCombinationLegField_reserve2_get, _thostmduserapi.CThostFtdcCombinationLegField_reserve2_set, doc=r"""保留的无效字段""")
    Direction: "TThostFtdcDirectionType" = property(_thostmduserapi.CThostFtdcCombinationLegField_Direction_get, _thostmduserapi.CThostFtdcCombinationLegField_Direction_set, doc=r"""买卖方向""")
    LegMultiple: "TThostFtdcLegMultipleType" = property(_thostmduserapi.CThostFtdcCombinationLegField_LegMultiple_get, _thostmduserapi.CThostFtdcCombinationLegField_LegMultiple_set, doc=r"""单腿乘数""")
    ImplyLevel: "TThostFtdcImplyLevelType" = property(_thostmduserapi.CThostFtdcCombinationLegField_ImplyLevel_get, _thostmduserapi.CThostFtdcCombinationLegField_ImplyLevel_set, doc=r"""派生层数""")
    CombInstrumentID: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcCombinationLegField_CombInstrumentID_get, _thostmduserapi.CThostFtdcCombinationLegField_CombInstrumentID_set, doc=r"""组合合约代码""")
    LegInstrumentID: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcCombinationLegField_LegInstrumentID_get, _thostmduserapi.CThostFtdcCombinationLegField_LegInstrumentID_set, doc=r"""单腿合约代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcCombinationLegField_swiginit(self, _thostmduserapi.new_CThostFtdcCombinationLegField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcCombinationLegField

# Register CThostFtdcCombinationLegField in _thostmduserapi:
_thostmduserapi.CThostFtdcCombinationLegField_swigregister(CThostFtdcCombinationLegField)
class CThostFtdcSyncStatusField(object):
    r"""数据同步状态"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    TradingDay: "TThostFtdcDateType" = property(_thostmduserapi.CThostFtdcSyncStatusField_TradingDay_get, _thostmduserapi.CThostFtdcSyncStatusField_TradingDay_set, doc=r"""交易日""")
    DataSyncStatus: "TThostFtdcDataSyncStatusType" = property(_thostmduserapi.CThostFtdcSyncStatusField_DataSyncStatus_get, _thostmduserapi.CThostFtdcSyncStatusField_DataSyncStatus_set, doc=r"""数据同步状态""")

    def __init__(self):
        _thostmduserapi.CThostFtdcSyncStatusField_swiginit(self, _thostmduserapi.new_CThostFtdcSyncStatusField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcSyncStatusField

# Register CThostFtdcSyncStatusField in _thostmduserapi:
_thostmduserapi.CThostFtdcSyncStatusField_swigregister(CThostFtdcSyncStatusField)
class CThostFtdcQryLinkManField(object):
    r"""查询联系人"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcQryLinkManField_BrokerID_get, _thostmduserapi.CThostFtdcQryLinkManField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "TThostFtdcInvestorIDType" = property(_thostmduserapi.CThostFtdcQryLinkManField_InvestorID_get, _thostmduserapi.CThostFtdcQryLinkManField_InvestorID_set, doc=r"""投资者代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcQryLinkManField_swiginit(self, _thostmduserapi.new_CThostFtdcQryLinkManField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcQryLinkManField

# Register CThostFtdcQryLinkManField in _thostmduserapi:
_thostmduserapi.CThostFtdcQryLinkManField_swigregister(CThostFtdcQryLinkManField)
class CThostFtdcLinkManField(object):
    r"""联系人"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcLinkManField_BrokerID_get, _thostmduserapi.CThostFtdcLinkManField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "TThostFtdcInvestorIDType" = property(_thostmduserapi.CThostFtdcLinkManField_InvestorID_get, _thostmduserapi.CThostFtdcLinkManField_InvestorID_set, doc=r"""投资者代码""")
    PersonType: "TThostFtdcPersonTypeType" = property(_thostmduserapi.CThostFtdcLinkManField_PersonType_get, _thostmduserapi.CThostFtdcLinkManField_PersonType_set, doc=r"""联系人类型""")
    IdentifiedCardType: "TThostFtdcIdCardTypeType" = property(_thostmduserapi.CThostFtdcLinkManField_IdentifiedCardType_get, _thostmduserapi.CThostFtdcLinkManField_IdentifiedCardType_set, doc=r"""证件类型""")
    IdentifiedCardNo: "TThostFtdcIdentifiedCardNoType" = property(_thostmduserapi.CThostFtdcLinkManField_IdentifiedCardNo_get, _thostmduserapi.CThostFtdcLinkManField_IdentifiedCardNo_set, doc=r"""证件号码""")
    PersonName: "TThostFtdcPartyNameType" = property(_thostmduserapi.CThostFtdcLinkManField_PersonName_get, _thostmduserapi.CThostFtdcLinkManField_PersonName_set, doc=r"""名称""")
    Telephone: "TThostFtdcTelephoneType" = property(_thostmduserapi.CThostFtdcLinkManField_Telephone_get, _thostmduserapi.CThostFtdcLinkManField_Telephone_set, doc=r"""联系电话""")
    Address: "TThostFtdcAddressType" = property(_thostmduserapi.CThostFtdcLinkManField_Address_get, _thostmduserapi.CThostFtdcLinkManField_Address_set, doc=r"""通讯地址""")
    ZipCode: "TThostFtdcZipCodeType" = property(_thostmduserapi.CThostFtdcLinkManField_ZipCode_get, _thostmduserapi.CThostFtdcLinkManField_ZipCode_set, doc=r"""邮政编码""")
    Priority: "TThostFtdcPriorityType" = property(_thostmduserapi.CThostFtdcLinkManField_Priority_get, _thostmduserapi.CThostFtdcLinkManField_Priority_set, doc=r"""优先级""")
    UOAZipCode: "TThostFtdcUOAZipCodeType" = property(_thostmduserapi.CThostFtdcLinkManField_UOAZipCode_get, _thostmduserapi.CThostFtdcLinkManField_UOAZipCode_set, doc=r"""开户邮政编码""")
    PersonFullName: "TThostFtdcInvestorFullNameType" = property(_thostmduserapi.CThostFtdcLinkManField_PersonFullName_get, _thostmduserapi.CThostFtdcLinkManField_PersonFullName_set, doc=r"""全称""")

    def __init__(self):
        _thostmduserapi.CThostFtdcLinkManField_swiginit(self, _thostmduserapi.new_CThostFtdcLinkManField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcLinkManField

# Register CThostFtdcLinkManField in _thostmduserapi:
_thostmduserapi.CThostFtdcLinkManField_swigregister(CThostFtdcLinkManField)
class CThostFtdcQryBrokerUserEventField(object):
    r"""查询经纪公司用户事件"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcQryBrokerUserEventField_BrokerID_get, _thostmduserapi.CThostFtdcQryBrokerUserEventField_BrokerID_set, doc=r"""经纪公司代码""")
    UserID: "TThostFtdcUserIDType" = property(_thostmduserapi.CThostFtdcQryBrokerUserEventField_UserID_get, _thostmduserapi.CThostFtdcQryBrokerUserEventField_UserID_set, doc=r"""用户代码""")
    UserEventType: "TThostFtdcUserEventTypeType" = property(_thostmduserapi.CThostFtdcQryBrokerUserEventField_UserEventType_get, _thostmduserapi.CThostFtdcQryBrokerUserEventField_UserEventType_set, doc=r"""用户事件类型""")

    def __init__(self):
        _thostmduserapi.CThostFtdcQryBrokerUserEventField_swiginit(self, _thostmduserapi.new_CThostFtdcQryBrokerUserEventField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcQryBrokerUserEventField

# Register CThostFtdcQryBrokerUserEventField in _thostmduserapi:
_thostmduserapi.CThostFtdcQryBrokerUserEventField_swigregister(CThostFtdcQryBrokerUserEventField)
class CThostFtdcBrokerUserEventField(object):
    r"""查询经纪公司用户事件"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcBrokerUserEventField_BrokerID_get, _thostmduserapi.CThostFtdcBrokerUserEventField_BrokerID_set, doc=r"""经纪公司代码""")
    UserID: "TThostFtdcUserIDType" = property(_thostmduserapi.CThostFtdcBrokerUserEventField_UserID_get, _thostmduserapi.CThostFtdcBrokerUserEventField_UserID_set, doc=r"""用户代码""")
    UserEventType: "TThostFtdcUserEventTypeType" = property(_thostmduserapi.CThostFtdcBrokerUserEventField_UserEventType_get, _thostmduserapi.CThostFtdcBrokerUserEventField_UserEventType_set, doc=r"""用户事件类型""")
    EventSequenceNo: "TThostFtdcSequenceNoType" = property(_thostmduserapi.CThostFtdcBrokerUserEventField_EventSequenceNo_get, _thostmduserapi.CThostFtdcBrokerUserEventField_EventSequenceNo_set, doc=r"""用户事件序号""")
    EventDate: "TThostFtdcDateType" = property(_thostmduserapi.CThostFtdcBrokerUserEventField_EventDate_get, _thostmduserapi.CThostFtdcBrokerUserEventField_EventDate_set, doc=r"""事件发生日期""")
    EventTime: "TThostFtdcTimeType" = property(_thostmduserapi.CThostFtdcBrokerUserEventField_EventTime_get, _thostmduserapi.CThostFtdcBrokerUserEventField_EventTime_set, doc=r"""事件发生时间""")
    UserEventInfo: "TThostFtdcUserEventInfoType" = property(_thostmduserapi.CThostFtdcBrokerUserEventField_UserEventInfo_get, _thostmduserapi.CThostFtdcBrokerUserEventField_UserEventInfo_set, doc=r"""用户事件信息""")
    InvestorID: "TThostFtdcInvestorIDType" = property(_thostmduserapi.CThostFtdcBrokerUserEventField_InvestorID_get, _thostmduserapi.CThostFtdcBrokerUserEventField_InvestorID_set, doc=r"""投资者代码""")
    reserve1: "TThostFtdcOldInstrumentIDType" = property(_thostmduserapi.CThostFtdcBrokerUserEventField_reserve1_get, _thostmduserapi.CThostFtdcBrokerUserEventField_reserve1_set, doc=r"""保留的无效字段""")
    InstrumentID: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcBrokerUserEventField_InstrumentID_get, _thostmduserapi.CThostFtdcBrokerUserEventField_InstrumentID_set, doc=r"""合约代码""")
    DRIdentityID: "TThostFtdcDRIdentityIDType" = property(_thostmduserapi.CThostFtdcBrokerUserEventField_DRIdentityID_get, _thostmduserapi.CThostFtdcBrokerUserEventField_DRIdentityID_set, doc=r"""交易中心代码""")
    TradingDay: "TThostFtdcDateType" = property(_thostmduserapi.CThostFtdcBrokerUserEventField_TradingDay_get, _thostmduserapi.CThostFtdcBrokerUserEventField_TradingDay_set, doc=r"""交易日""")

    def __init__(self):
        _thostmduserapi.CThostFtdcBrokerUserEventField_swiginit(self, _thostmduserapi.new_CThostFtdcBrokerUserEventField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcBrokerUserEventField

# Register CThostFtdcBrokerUserEventField in _thostmduserapi:
_thostmduserapi.CThostFtdcBrokerUserEventField_swigregister(CThostFtdcBrokerUserEventField)
class CThostFtdcQryContractBankField(object):
    r"""查询签约银行请求"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcQryContractBankField_BrokerID_get, _thostmduserapi.CThostFtdcQryContractBankField_BrokerID_set, doc=r"""经纪公司代码""")
    BankID: "TThostFtdcBankIDType" = property(_thostmduserapi.CThostFtdcQryContractBankField_BankID_get, _thostmduserapi.CThostFtdcQryContractBankField_BankID_set, doc=r"""银行代码""")
    BankBrchID: "TThostFtdcBankBrchIDType" = property(_thostmduserapi.CThostFtdcQryContractBankField_BankBrchID_get, _thostmduserapi.CThostFtdcQryContractBankField_BankBrchID_set, doc=r"""银行分中心代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcQryContractBankField_swiginit(self, _thostmduserapi.new_CThostFtdcQryContractBankField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcQryContractBankField

# Register CThostFtdcQryContractBankField in _thostmduserapi:
_thostmduserapi.CThostFtdcQryContractBankField_swigregister(CThostFtdcQryContractBankField)
class CThostFtdcContractBankField(object):
    r"""查询签约银行响应"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcContractBankField_BrokerID_get, _thostmduserapi.CThostFtdcContractBankField_BrokerID_set, doc=r"""经纪公司代码""")
    BankID: "TThostFtdcBankIDType" = property(_thostmduserapi.CThostFtdcContractBankField_BankID_get, _thostmduserapi.CThostFtdcContractBankField_BankID_set, doc=r"""银行代码""")
    BankBrchID: "TThostFtdcBankBrchIDType" = property(_thostmduserapi.CThostFtdcContractBankField_BankBrchID_get, _thostmduserapi.CThostFtdcContractBankField_BankBrchID_set, doc=r"""银行分中心代码""")
    BankName: "TThostFtdcBankNameType" = property(_thostmduserapi.CThostFtdcContractBankField_BankName_get, _thostmduserapi.CThostFtdcContractBankField_BankName_set, doc=r"""银行名称""")

    def __init__(self):
        _thostmduserapi.CThostFtdcContractBankField_swiginit(self, _thostmduserapi.new_CThostFtdcContractBankField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcContractBankField

# Register CThostFtdcContractBankField in _thostmduserapi:
_thostmduserapi.CThostFtdcContractBankField_swigregister(CThostFtdcContractBankField)
class CThostFtdcInvestorPositionCombineDetailField(object):
    r"""投资者组合持仓明细"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    TradingDay: "TThostFtdcDateType" = property(_thostmduserapi.CThostFtdcInvestorPositionCombineDetailField_TradingDay_get, _thostmduserapi.CThostFtdcInvestorPositionCombineDetailField_TradingDay_set, doc=r"""交易日""")
    OpenDate: "TThostFtdcDateType" = property(_thostmduserapi.CThostFtdcInvestorPositionCombineDetailField_OpenDate_get, _thostmduserapi.CThostFtdcInvestorPositionCombineDetailField_OpenDate_set, doc=r"""开仓日期""")
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcInvestorPositionCombineDetailField_ExchangeID_get, _thostmduserapi.CThostFtdcInvestorPositionCombineDetailField_ExchangeID_set, doc=r"""交易所代码""")
    SettlementID: "TThostFtdcSettlementIDType" = property(_thostmduserapi.CThostFtdcInvestorPositionCombineDetailField_SettlementID_get, _thostmduserapi.CThostFtdcInvestorPositionCombineDetailField_SettlementID_set, doc=r"""结算编号""")
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcInvestorPositionCombineDetailField_BrokerID_get, _thostmduserapi.CThostFtdcInvestorPositionCombineDetailField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "TThostFtdcInvestorIDType" = property(_thostmduserapi.CThostFtdcInvestorPositionCombineDetailField_InvestorID_get, _thostmduserapi.CThostFtdcInvestorPositionCombineDetailField_InvestorID_set, doc=r"""投资者代码""")
    ComTradeID: "TThostFtdcTradeIDType" = property(_thostmduserapi.CThostFtdcInvestorPositionCombineDetailField_ComTradeID_get, _thostmduserapi.CThostFtdcInvestorPositionCombineDetailField_ComTradeID_set, doc=r"""组合编号""")
    TradeID: "TThostFtdcTradeIDType" = property(_thostmduserapi.CThostFtdcInvestorPositionCombineDetailField_TradeID_get, _thostmduserapi.CThostFtdcInvestorPositionCombineDetailField_TradeID_set, doc=r"""撮合编号""")
    reserve1: "TThostFtdcOldInstrumentIDType" = property(_thostmduserapi.CThostFtdcInvestorPositionCombineDetailField_reserve1_get, _thostmduserapi.CThostFtdcInvestorPositionCombineDetailField_reserve1_set, doc=r"""保留的无效字段""")
    HedgeFlag: "TThostFtdcHedgeFlagType" = property(_thostmduserapi.CThostFtdcInvestorPositionCombineDetailField_HedgeFlag_get, _thostmduserapi.CThostFtdcInvestorPositionCombineDetailField_HedgeFlag_set, doc=r"""投机套保标志""")
    Direction: "TThostFtdcDirectionType" = property(_thostmduserapi.CThostFtdcInvestorPositionCombineDetailField_Direction_get, _thostmduserapi.CThostFtdcInvestorPositionCombineDetailField_Direction_set, doc=r"""买卖""")
    TotalAmt: "TThostFtdcVolumeType" = property(_thostmduserapi.CThostFtdcInvestorPositionCombineDetailField_TotalAmt_get, _thostmduserapi.CThostFtdcInvestorPositionCombineDetailField_TotalAmt_set, doc=r"""持仓量""")
    Margin: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcInvestorPositionCombineDetailField_Margin_get, _thostmduserapi.CThostFtdcInvestorPositionCombineDetailField_Margin_set, doc=r"""投资者保证金""")
    ExchMargin: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcInvestorPositionCombineDetailField_ExchMargin_get, _thostmduserapi.CThostFtdcInvestorPositionCombineDetailField_ExchMargin_set, doc=r"""交易所保证金""")
    MarginRateByMoney: "TThostFtdcRatioType" = property(_thostmduserapi.CThostFtdcInvestorPositionCombineDetailField_MarginRateByMoney_get, _thostmduserapi.CThostFtdcInvestorPositionCombineDetailField_MarginRateByMoney_set, doc=r"""保证金率""")
    MarginRateByVolume: "TThostFtdcRatioType" = property(_thostmduserapi.CThostFtdcInvestorPositionCombineDetailField_MarginRateByVolume_get, _thostmduserapi.CThostFtdcInvestorPositionCombineDetailField_MarginRateByVolume_set, doc=r"""保证金率(按手数)""")
    LegID: "TThostFtdcLegIDType" = property(_thostmduserapi.CThostFtdcInvestorPositionCombineDetailField_LegID_get, _thostmduserapi.CThostFtdcInvestorPositionCombineDetailField_LegID_set, doc=r"""单腿编号""")
    LegMultiple: "TThostFtdcLegMultipleType" = property(_thostmduserapi.CThostFtdcInvestorPositionCombineDetailField_LegMultiple_get, _thostmduserapi.CThostFtdcInvestorPositionCombineDetailField_LegMultiple_set, doc=r"""单腿乘数""")
    reserve2: "TThostFtdcOldInstrumentIDType" = property(_thostmduserapi.CThostFtdcInvestorPositionCombineDetailField_reserve2_get, _thostmduserapi.CThostFtdcInvestorPositionCombineDetailField_reserve2_set, doc=r"""保留的无效字段""")
    TradeGroupID: "TThostFtdcTradeGroupIDType" = property(_thostmduserapi.CThostFtdcInvestorPositionCombineDetailField_TradeGroupID_get, _thostmduserapi.CThostFtdcInvestorPositionCombineDetailField_TradeGroupID_set, doc=r"""成交组号""")
    InvestUnitID: "TThostFtdcInvestUnitIDType" = property(_thostmduserapi.CThostFtdcInvestorPositionCombineDetailField_InvestUnitID_get, _thostmduserapi.CThostFtdcInvestorPositionCombineDetailField_InvestUnitID_set, doc=r"""投资单元代码""")
    InstrumentID: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcInvestorPositionCombineDetailField_InstrumentID_get, _thostmduserapi.CThostFtdcInvestorPositionCombineDetailField_InstrumentID_set, doc=r"""合约代码""")
    CombInstrumentID: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcInvestorPositionCombineDetailField_CombInstrumentID_get, _thostmduserapi.CThostFtdcInvestorPositionCombineDetailField_CombInstrumentID_set, doc=r"""组合持仓合约编码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcInvestorPositionCombineDetailField_swiginit(self, _thostmduserapi.new_CThostFtdcInvestorPositionCombineDetailField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcInvestorPositionCombineDetailField

# Register CThostFtdcInvestorPositionCombineDetailField in _thostmduserapi:
_thostmduserapi.CThostFtdcInvestorPositionCombineDetailField_swigregister(CThostFtdcInvestorPositionCombineDetailField)
class CThostFtdcParkedOrderField(object):
    r"""预埋单"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcParkedOrderField_BrokerID_get, _thostmduserapi.CThostFtdcParkedOrderField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "TThostFtdcInvestorIDType" = property(_thostmduserapi.CThostFtdcParkedOrderField_InvestorID_get, _thostmduserapi.CThostFtdcParkedOrderField_InvestorID_set, doc=r"""投资者代码""")
    reserve1: "TThostFtdcOldInstrumentIDType" = property(_thostmduserapi.CThostFtdcParkedOrderField_reserve1_get, _thostmduserapi.CThostFtdcParkedOrderField_reserve1_set, doc=r"""保留的无效字段""")
    OrderRef: "TThostFtdcOrderRefType" = property(_thostmduserapi.CThostFtdcParkedOrderField_OrderRef_get, _thostmduserapi.CThostFtdcParkedOrderField_OrderRef_set, doc=r"""报单引用""")
    UserID: "TThostFtdcUserIDType" = property(_thostmduserapi.CThostFtdcParkedOrderField_UserID_get, _thostmduserapi.CThostFtdcParkedOrderField_UserID_set, doc=r"""用户代码""")
    OrderPriceType: "TThostFtdcOrderPriceTypeType" = property(_thostmduserapi.CThostFtdcParkedOrderField_OrderPriceType_get, _thostmduserapi.CThostFtdcParkedOrderField_OrderPriceType_set, doc=r"""报单价格条件""")
    Direction: "TThostFtdcDirectionType" = property(_thostmduserapi.CThostFtdcParkedOrderField_Direction_get, _thostmduserapi.CThostFtdcParkedOrderField_Direction_set, doc=r"""买卖方向""")
    CombOffsetFlag: "TThostFtdcCombOffsetFlagType" = property(_thostmduserapi.CThostFtdcParkedOrderField_CombOffsetFlag_get, _thostmduserapi.CThostFtdcParkedOrderField_CombOffsetFlag_set, doc=r"""组合开平标志""")
    CombHedgeFlag: "TThostFtdcCombHedgeFlagType" = property(_thostmduserapi.CThostFtdcParkedOrderField_CombHedgeFlag_get, _thostmduserapi.CThostFtdcParkedOrderField_CombHedgeFlag_set, doc=r"""组合投机套保标志""")
    LimitPrice: "TThostFtdcPriceType" = property(_thostmduserapi.CThostFtdcParkedOrderField_LimitPrice_get, _thostmduserapi.CThostFtdcParkedOrderField_LimitPrice_set, doc=r"""价格""")
    VolumeTotalOriginal: "TThostFtdcVolumeType" = property(_thostmduserapi.CThostFtdcParkedOrderField_VolumeTotalOriginal_get, _thostmduserapi.CThostFtdcParkedOrderField_VolumeTotalOriginal_set, doc=r"""数量""")
    TimeCondition: "TThostFtdcTimeConditionType" = property(_thostmduserapi.CThostFtdcParkedOrderField_TimeCondition_get, _thostmduserapi.CThostFtdcParkedOrderField_TimeCondition_set, doc=r"""有效期类型""")
    GTDDate: "TThostFtdcDateType" = property(_thostmduserapi.CThostFtdcParkedOrderField_GTDDate_get, _thostmduserapi.CThostFtdcParkedOrderField_GTDDate_set, doc=r"""GTD日期""")
    VolumeCondition: "TThostFtdcVolumeConditionType" = property(_thostmduserapi.CThostFtdcParkedOrderField_VolumeCondition_get, _thostmduserapi.CThostFtdcParkedOrderField_VolumeCondition_set, doc=r"""成交量类型""")
    MinVolume: "TThostFtdcVolumeType" = property(_thostmduserapi.CThostFtdcParkedOrderField_MinVolume_get, _thostmduserapi.CThostFtdcParkedOrderField_MinVolume_set, doc=r"""最小成交量""")
    ContingentCondition: "TThostFtdcContingentConditionType" = property(_thostmduserapi.CThostFtdcParkedOrderField_ContingentCondition_get, _thostmduserapi.CThostFtdcParkedOrderField_ContingentCondition_set, doc=r"""触发条件""")
    StopPrice: "TThostFtdcPriceType" = property(_thostmduserapi.CThostFtdcParkedOrderField_StopPrice_get, _thostmduserapi.CThostFtdcParkedOrderField_StopPrice_set, doc=r"""止损价""")
    ForceCloseReason: "TThostFtdcForceCloseReasonType" = property(_thostmduserapi.CThostFtdcParkedOrderField_ForceCloseReason_get, _thostmduserapi.CThostFtdcParkedOrderField_ForceCloseReason_set, doc=r"""强平原因""")
    IsAutoSuspend: "TThostFtdcBoolType" = property(_thostmduserapi.CThostFtdcParkedOrderField_IsAutoSuspend_get, _thostmduserapi.CThostFtdcParkedOrderField_IsAutoSuspend_set, doc=r"""自动挂起标志""")
    BusinessUnit: "TThostFtdcBusinessUnitType" = property(_thostmduserapi.CThostFtdcParkedOrderField_BusinessUnit_get, _thostmduserapi.CThostFtdcParkedOrderField_BusinessUnit_set, doc=r"""业务单元""")
    RequestID: "TThostFtdcRequestIDType" = property(_thostmduserapi.CThostFtdcParkedOrderField_RequestID_get, _thostmduserapi.CThostFtdcParkedOrderField_RequestID_set, doc=r"""请求编号""")
    UserForceClose: "TThostFtdcBoolType" = property(_thostmduserapi.CThostFtdcParkedOrderField_UserForceClose_get, _thostmduserapi.CThostFtdcParkedOrderField_UserForceClose_set, doc=r"""用户强评标志""")
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcParkedOrderField_ExchangeID_get, _thostmduserapi.CThostFtdcParkedOrderField_ExchangeID_set, doc=r"""交易所代码""")
    ParkedOrderID: "TThostFtdcParkedOrderIDType" = property(_thostmduserapi.CThostFtdcParkedOrderField_ParkedOrderID_get, _thostmduserapi.CThostFtdcParkedOrderField_ParkedOrderID_set, doc=r"""预埋报单编号""")
    UserType: "TThostFtdcUserTypeType" = property(_thostmduserapi.CThostFtdcParkedOrderField_UserType_get, _thostmduserapi.CThostFtdcParkedOrderField_UserType_set, doc=r"""用户类型""")
    Status: "TThostFtdcParkedOrderStatusType" = property(_thostmduserapi.CThostFtdcParkedOrderField_Status_get, _thostmduserapi.CThostFtdcParkedOrderField_Status_set, doc=r"""预埋单状态""")
    ErrorID: "TThostFtdcErrorIDType" = property(_thostmduserapi.CThostFtdcParkedOrderField_ErrorID_get, _thostmduserapi.CThostFtdcParkedOrderField_ErrorID_set, doc=r"""错误代码""")
    ErrorMsg: "TThostFtdcErrorMsgType" = property(_thostmduserapi.CThostFtdcParkedOrderField_ErrorMsg_get, _thostmduserapi.CThostFtdcParkedOrderField_ErrorMsg_set, doc=r"""错误信息""")
    IsSwapOrder: "TThostFtdcBoolType" = property(_thostmduserapi.CThostFtdcParkedOrderField_IsSwapOrder_get, _thostmduserapi.CThostFtdcParkedOrderField_IsSwapOrder_set, doc=r"""互换单标志""")
    AccountID: "TThostFtdcAccountIDType" = property(_thostmduserapi.CThostFtdcParkedOrderField_AccountID_get, _thostmduserapi.CThostFtdcParkedOrderField_AccountID_set, doc=r"""资金账号""")
    CurrencyID: "TThostFtdcCurrencyIDType" = property(_thostmduserapi.CThostFtdcParkedOrderField_CurrencyID_get, _thostmduserapi.CThostFtdcParkedOrderField_CurrencyID_set, doc=r"""币种代码""")
    ClientID: "TThostFtdcClientIDType" = property(_thostmduserapi.CThostFtdcParkedOrderField_ClientID_get, _thostmduserapi.CThostFtdcParkedOrderField_ClientID_set, doc=r"""交易编码""")
    InvestUnitID: "TThostFtdcInvestUnitIDType" = property(_thostmduserapi.CThostFtdcParkedOrderField_InvestUnitID_get, _thostmduserapi.CThostFtdcParkedOrderField_InvestUnitID_set, doc=r"""投资单元代码""")
    reserve2: "TThostFtdcOldIPAddressType" = property(_thostmduserapi.CThostFtdcParkedOrderField_reserve2_get, _thostmduserapi.CThostFtdcParkedOrderField_reserve2_set, doc=r"""保留的无效字段""")
    MacAddress: "TThostFtdcMacAddressType" = property(_thostmduserapi.CThostFtdcParkedOrderField_MacAddress_get, _thostmduserapi.CThostFtdcParkedOrderField_MacAddress_set, doc=r"""Mac地址""")
    InstrumentID: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcParkedOrderField_InstrumentID_get, _thostmduserapi.CThostFtdcParkedOrderField_InstrumentID_set, doc=r"""合约代码""")
    IPAddress: "TThostFtdcIPAddressType" = property(_thostmduserapi.CThostFtdcParkedOrderField_IPAddress_get, _thostmduserapi.CThostFtdcParkedOrderField_IPAddress_set, doc=r"""IP地址""")

    def __init__(self):
        _thostmduserapi.CThostFtdcParkedOrderField_swiginit(self, _thostmduserapi.new_CThostFtdcParkedOrderField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcParkedOrderField

# Register CThostFtdcParkedOrderField in _thostmduserapi:
_thostmduserapi.CThostFtdcParkedOrderField_swigregister(CThostFtdcParkedOrderField)
class CThostFtdcParkedOrderActionField(object):
    r"""输入预埋单操作"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcParkedOrderActionField_BrokerID_get, _thostmduserapi.CThostFtdcParkedOrderActionField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "TThostFtdcInvestorIDType" = property(_thostmduserapi.CThostFtdcParkedOrderActionField_InvestorID_get, _thostmduserapi.CThostFtdcParkedOrderActionField_InvestorID_set, doc=r"""投资者代码""")
    OrderActionRef: "TThostFtdcOrderActionRefType" = property(_thostmduserapi.CThostFtdcParkedOrderActionField_OrderActionRef_get, _thostmduserapi.CThostFtdcParkedOrderActionField_OrderActionRef_set, doc=r"""报单操作引用""")
    OrderRef: "TThostFtdcOrderRefType" = property(_thostmduserapi.CThostFtdcParkedOrderActionField_OrderRef_get, _thostmduserapi.CThostFtdcParkedOrderActionField_OrderRef_set, doc=r"""报单引用""")
    RequestID: "TThostFtdcRequestIDType" = property(_thostmduserapi.CThostFtdcParkedOrderActionField_RequestID_get, _thostmduserapi.CThostFtdcParkedOrderActionField_RequestID_set, doc=r"""请求编号""")
    FrontID: "TThostFtdcFrontIDType" = property(_thostmduserapi.CThostFtdcParkedOrderActionField_FrontID_get, _thostmduserapi.CThostFtdcParkedOrderActionField_FrontID_set, doc=r"""前置编号""")
    SessionID: "TThostFtdcSessionIDType" = property(_thostmduserapi.CThostFtdcParkedOrderActionField_SessionID_get, _thostmduserapi.CThostFtdcParkedOrderActionField_SessionID_set, doc=r"""会话编号""")
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcParkedOrderActionField_ExchangeID_get, _thostmduserapi.CThostFtdcParkedOrderActionField_ExchangeID_set, doc=r"""交易所代码""")
    OrderSysID: "TThostFtdcOrderSysIDType" = property(_thostmduserapi.CThostFtdcParkedOrderActionField_OrderSysID_get, _thostmduserapi.CThostFtdcParkedOrderActionField_OrderSysID_set, doc=r"""报单编号""")
    ActionFlag: "TThostFtdcActionFlagType" = property(_thostmduserapi.CThostFtdcParkedOrderActionField_ActionFlag_get, _thostmduserapi.CThostFtdcParkedOrderActionField_ActionFlag_set, doc=r"""操作标志""")
    LimitPrice: "TThostFtdcPriceType" = property(_thostmduserapi.CThostFtdcParkedOrderActionField_LimitPrice_get, _thostmduserapi.CThostFtdcParkedOrderActionField_LimitPrice_set, doc=r"""价格""")
    VolumeChange: "TThostFtdcVolumeType" = property(_thostmduserapi.CThostFtdcParkedOrderActionField_VolumeChange_get, _thostmduserapi.CThostFtdcParkedOrderActionField_VolumeChange_set, doc=r"""数量变化""")
    UserID: "TThostFtdcUserIDType" = property(_thostmduserapi.CThostFtdcParkedOrderActionField_UserID_get, _thostmduserapi.CThostFtdcParkedOrderActionField_UserID_set, doc=r"""用户代码""")
    reserve1: "TThostFtdcOldInstrumentIDType" = property(_thostmduserapi.CThostFtdcParkedOrderActionField_reserve1_get, _thostmduserapi.CThostFtdcParkedOrderActionField_reserve1_set, doc=r"""保留的无效字段""")
    ParkedOrderActionID: "TThostFtdcParkedOrderActionIDType" = property(_thostmduserapi.CThostFtdcParkedOrderActionField_ParkedOrderActionID_get, _thostmduserapi.CThostFtdcParkedOrderActionField_ParkedOrderActionID_set, doc=r"""预埋撤单单编号""")
    UserType: "TThostFtdcUserTypeType" = property(_thostmduserapi.CThostFtdcParkedOrderActionField_UserType_get, _thostmduserapi.CThostFtdcParkedOrderActionField_UserType_set, doc=r"""用户类型""")
    Status: "TThostFtdcParkedOrderStatusType" = property(_thostmduserapi.CThostFtdcParkedOrderActionField_Status_get, _thostmduserapi.CThostFtdcParkedOrderActionField_Status_set, doc=r"""预埋撤单状态""")
    ErrorID: "TThostFtdcErrorIDType" = property(_thostmduserapi.CThostFtdcParkedOrderActionField_ErrorID_get, _thostmduserapi.CThostFtdcParkedOrderActionField_ErrorID_set, doc=r"""错误代码""")
    ErrorMsg: "TThostFtdcErrorMsgType" = property(_thostmduserapi.CThostFtdcParkedOrderActionField_ErrorMsg_get, _thostmduserapi.CThostFtdcParkedOrderActionField_ErrorMsg_set, doc=r"""错误信息""")
    InvestUnitID: "TThostFtdcInvestUnitIDType" = property(_thostmduserapi.CThostFtdcParkedOrderActionField_InvestUnitID_get, _thostmduserapi.CThostFtdcParkedOrderActionField_InvestUnitID_set, doc=r"""投资单元代码""")
    reserve2: "TThostFtdcOldIPAddressType" = property(_thostmduserapi.CThostFtdcParkedOrderActionField_reserve2_get, _thostmduserapi.CThostFtdcParkedOrderActionField_reserve2_set, doc=r"""保留的无效字段""")
    MacAddress: "TThostFtdcMacAddressType" = property(_thostmduserapi.CThostFtdcParkedOrderActionField_MacAddress_get, _thostmduserapi.CThostFtdcParkedOrderActionField_MacAddress_set, doc=r"""Mac地址""")
    InstrumentID: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcParkedOrderActionField_InstrumentID_get, _thostmduserapi.CThostFtdcParkedOrderActionField_InstrumentID_set, doc=r"""合约代码""")
    IPAddress: "TThostFtdcIPAddressType" = property(_thostmduserapi.CThostFtdcParkedOrderActionField_IPAddress_get, _thostmduserapi.CThostFtdcParkedOrderActionField_IPAddress_set, doc=r"""IP地址""")

    def __init__(self):
        _thostmduserapi.CThostFtdcParkedOrderActionField_swiginit(self, _thostmduserapi.new_CThostFtdcParkedOrderActionField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcParkedOrderActionField

# Register CThostFtdcParkedOrderActionField in _thostmduserapi:
_thostmduserapi.CThostFtdcParkedOrderActionField_swigregister(CThostFtdcParkedOrderActionField)
class CThostFtdcQryParkedOrderField(object):
    r"""查询预埋单"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcQryParkedOrderField_BrokerID_get, _thostmduserapi.CThostFtdcQryParkedOrderField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "TThostFtdcInvestorIDType" = property(_thostmduserapi.CThostFtdcQryParkedOrderField_InvestorID_get, _thostmduserapi.CThostFtdcQryParkedOrderField_InvestorID_set, doc=r"""投资者代码""")
    reserve1: "TThostFtdcOldInstrumentIDType" = property(_thostmduserapi.CThostFtdcQryParkedOrderField_reserve1_get, _thostmduserapi.CThostFtdcQryParkedOrderField_reserve1_set, doc=r"""保留的无效字段""")
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcQryParkedOrderField_ExchangeID_get, _thostmduserapi.CThostFtdcQryParkedOrderField_ExchangeID_set, doc=r"""交易所代码""")
    InvestUnitID: "TThostFtdcInvestUnitIDType" = property(_thostmduserapi.CThostFtdcQryParkedOrderField_InvestUnitID_get, _thostmduserapi.CThostFtdcQryParkedOrderField_InvestUnitID_set, doc=r"""投资单元代码""")
    InstrumentID: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcQryParkedOrderField_InstrumentID_get, _thostmduserapi.CThostFtdcQryParkedOrderField_InstrumentID_set, doc=r"""合约代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcQryParkedOrderField_swiginit(self, _thostmduserapi.new_CThostFtdcQryParkedOrderField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcQryParkedOrderField

# Register CThostFtdcQryParkedOrderField in _thostmduserapi:
_thostmduserapi.CThostFtdcQryParkedOrderField_swigregister(CThostFtdcQryParkedOrderField)
class CThostFtdcQryParkedOrderActionField(object):
    r"""查询预埋撤单"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcQryParkedOrderActionField_BrokerID_get, _thostmduserapi.CThostFtdcQryParkedOrderActionField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "TThostFtdcInvestorIDType" = property(_thostmduserapi.CThostFtdcQryParkedOrderActionField_InvestorID_get, _thostmduserapi.CThostFtdcQryParkedOrderActionField_InvestorID_set, doc=r"""投资者代码""")
    reserve1: "TThostFtdcOldInstrumentIDType" = property(_thostmduserapi.CThostFtdcQryParkedOrderActionField_reserve1_get, _thostmduserapi.CThostFtdcQryParkedOrderActionField_reserve1_set, doc=r"""保留的无效字段""")
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcQryParkedOrderActionField_ExchangeID_get, _thostmduserapi.CThostFtdcQryParkedOrderActionField_ExchangeID_set, doc=r"""交易所代码""")
    InvestUnitID: "TThostFtdcInvestUnitIDType" = property(_thostmduserapi.CThostFtdcQryParkedOrderActionField_InvestUnitID_get, _thostmduserapi.CThostFtdcQryParkedOrderActionField_InvestUnitID_set, doc=r"""投资单元代码""")
    InstrumentID: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcQryParkedOrderActionField_InstrumentID_get, _thostmduserapi.CThostFtdcQryParkedOrderActionField_InstrumentID_set, doc=r"""合约代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcQryParkedOrderActionField_swiginit(self, _thostmduserapi.new_CThostFtdcQryParkedOrderActionField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcQryParkedOrderActionField

# Register CThostFtdcQryParkedOrderActionField in _thostmduserapi:
_thostmduserapi.CThostFtdcQryParkedOrderActionField_swigregister(CThostFtdcQryParkedOrderActionField)
class CThostFtdcRemoveParkedOrderField(object):
    r"""删除预埋单"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcRemoveParkedOrderField_BrokerID_get, _thostmduserapi.CThostFtdcRemoveParkedOrderField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "TThostFtdcInvestorIDType" = property(_thostmduserapi.CThostFtdcRemoveParkedOrderField_InvestorID_get, _thostmduserapi.CThostFtdcRemoveParkedOrderField_InvestorID_set, doc=r"""投资者代码""")
    ParkedOrderID: "TThostFtdcParkedOrderIDType" = property(_thostmduserapi.CThostFtdcRemoveParkedOrderField_ParkedOrderID_get, _thostmduserapi.CThostFtdcRemoveParkedOrderField_ParkedOrderID_set, doc=r"""预埋报单编号""")
    InvestUnitID: "TThostFtdcInvestUnitIDType" = property(_thostmduserapi.CThostFtdcRemoveParkedOrderField_InvestUnitID_get, _thostmduserapi.CThostFtdcRemoveParkedOrderField_InvestUnitID_set, doc=r"""投资单元代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcRemoveParkedOrderField_swiginit(self, _thostmduserapi.new_CThostFtdcRemoveParkedOrderField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcRemoveParkedOrderField

# Register CThostFtdcRemoveParkedOrderField in _thostmduserapi:
_thostmduserapi.CThostFtdcRemoveParkedOrderField_swigregister(CThostFtdcRemoveParkedOrderField)
class CThostFtdcRemoveParkedOrderActionField(object):
    r"""删除预埋撤单"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcRemoveParkedOrderActionField_BrokerID_get, _thostmduserapi.CThostFtdcRemoveParkedOrderActionField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "TThostFtdcInvestorIDType" = property(_thostmduserapi.CThostFtdcRemoveParkedOrderActionField_InvestorID_get, _thostmduserapi.CThostFtdcRemoveParkedOrderActionField_InvestorID_set, doc=r"""投资者代码""")
    ParkedOrderActionID: "TThostFtdcParkedOrderActionIDType" = property(_thostmduserapi.CThostFtdcRemoveParkedOrderActionField_ParkedOrderActionID_get, _thostmduserapi.CThostFtdcRemoveParkedOrderActionField_ParkedOrderActionID_set, doc=r"""预埋撤单编号""")
    InvestUnitID: "TThostFtdcInvestUnitIDType" = property(_thostmduserapi.CThostFtdcRemoveParkedOrderActionField_InvestUnitID_get, _thostmduserapi.CThostFtdcRemoveParkedOrderActionField_InvestUnitID_set, doc=r"""投资单元代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcRemoveParkedOrderActionField_swiginit(self, _thostmduserapi.new_CThostFtdcRemoveParkedOrderActionField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcRemoveParkedOrderActionField

# Register CThostFtdcRemoveParkedOrderActionField in _thostmduserapi:
_thostmduserapi.CThostFtdcRemoveParkedOrderActionField_swigregister(CThostFtdcRemoveParkedOrderActionField)
class CThostFtdcInvestorWithdrawAlgorithmField(object):
    r"""经纪公司可提资金算法表"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcInvestorWithdrawAlgorithmField_BrokerID_get, _thostmduserapi.CThostFtdcInvestorWithdrawAlgorithmField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorRange: "TThostFtdcInvestorRangeType" = property(_thostmduserapi.CThostFtdcInvestorWithdrawAlgorithmField_InvestorRange_get, _thostmduserapi.CThostFtdcInvestorWithdrawAlgorithmField_InvestorRange_set, doc=r"""投资者范围""")
    InvestorID: "TThostFtdcInvestorIDType" = property(_thostmduserapi.CThostFtdcInvestorWithdrawAlgorithmField_InvestorID_get, _thostmduserapi.CThostFtdcInvestorWithdrawAlgorithmField_InvestorID_set, doc=r"""投资者代码""")
    UsingRatio: "TThostFtdcRatioType" = property(_thostmduserapi.CThostFtdcInvestorWithdrawAlgorithmField_UsingRatio_get, _thostmduserapi.CThostFtdcInvestorWithdrawAlgorithmField_UsingRatio_set, doc=r"""可提资金比例""")
    CurrencyID: "TThostFtdcCurrencyIDType" = property(_thostmduserapi.CThostFtdcInvestorWithdrawAlgorithmField_CurrencyID_get, _thostmduserapi.CThostFtdcInvestorWithdrawAlgorithmField_CurrencyID_set, doc=r"""币种代码""")
    FundMortgageRatio: "TThostFtdcRatioType" = property(_thostmduserapi.CThostFtdcInvestorWithdrawAlgorithmField_FundMortgageRatio_get, _thostmduserapi.CThostFtdcInvestorWithdrawAlgorithmField_FundMortgageRatio_set, doc=r"""货币质押比率""")

    def __init__(self):
        _thostmduserapi.CThostFtdcInvestorWithdrawAlgorithmField_swiginit(self, _thostmduserapi.new_CThostFtdcInvestorWithdrawAlgorithmField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcInvestorWithdrawAlgorithmField

# Register CThostFtdcInvestorWithdrawAlgorithmField in _thostmduserapi:
_thostmduserapi.CThostFtdcInvestorWithdrawAlgorithmField_swigregister(CThostFtdcInvestorWithdrawAlgorithmField)
class CThostFtdcQryInvestorPositionCombineDetailField(object):
    r"""查询组合持仓明细"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcQryInvestorPositionCombineDetailField_BrokerID_get, _thostmduserapi.CThostFtdcQryInvestorPositionCombineDetailField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "TThostFtdcInvestorIDType" = property(_thostmduserapi.CThostFtdcQryInvestorPositionCombineDetailField_InvestorID_get, _thostmduserapi.CThostFtdcQryInvestorPositionCombineDetailField_InvestorID_set, doc=r"""投资者代码""")
    reserve1: "TThostFtdcOldInstrumentIDType" = property(_thostmduserapi.CThostFtdcQryInvestorPositionCombineDetailField_reserve1_get, _thostmduserapi.CThostFtdcQryInvestorPositionCombineDetailField_reserve1_set, doc=r"""保留的无效字段""")
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcQryInvestorPositionCombineDetailField_ExchangeID_get, _thostmduserapi.CThostFtdcQryInvestorPositionCombineDetailField_ExchangeID_set, doc=r"""交易所代码""")
    InvestUnitID: "TThostFtdcInvestUnitIDType" = property(_thostmduserapi.CThostFtdcQryInvestorPositionCombineDetailField_InvestUnitID_get, _thostmduserapi.CThostFtdcQryInvestorPositionCombineDetailField_InvestUnitID_set, doc=r"""投资单元代码""")
    CombInstrumentID: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcQryInvestorPositionCombineDetailField_CombInstrumentID_get, _thostmduserapi.CThostFtdcQryInvestorPositionCombineDetailField_CombInstrumentID_set, doc=r"""组合持仓合约编码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcQryInvestorPositionCombineDetailField_swiginit(self, _thostmduserapi.new_CThostFtdcQryInvestorPositionCombineDetailField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcQryInvestorPositionCombineDetailField

# Register CThostFtdcQryInvestorPositionCombineDetailField in _thostmduserapi:
_thostmduserapi.CThostFtdcQryInvestorPositionCombineDetailField_swigregister(CThostFtdcQryInvestorPositionCombineDetailField)
class CThostFtdcMarketDataAveragePriceField(object):
    r"""成交均价"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    AveragePrice: "TThostFtdcPriceType" = property(_thostmduserapi.CThostFtdcMarketDataAveragePriceField_AveragePrice_get, _thostmduserapi.CThostFtdcMarketDataAveragePriceField_AveragePrice_set, doc=r"""当日均价""")

    def __init__(self):
        _thostmduserapi.CThostFtdcMarketDataAveragePriceField_swiginit(self, _thostmduserapi.new_CThostFtdcMarketDataAveragePriceField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcMarketDataAveragePriceField

# Register CThostFtdcMarketDataAveragePriceField in _thostmduserapi:
_thostmduserapi.CThostFtdcMarketDataAveragePriceField_swigregister(CThostFtdcMarketDataAveragePriceField)
class CThostFtdcVerifyInvestorPasswordField(object):
    r"""校验投资者密码"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcVerifyInvestorPasswordField_BrokerID_get, _thostmduserapi.CThostFtdcVerifyInvestorPasswordField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "TThostFtdcInvestorIDType" = property(_thostmduserapi.CThostFtdcVerifyInvestorPasswordField_InvestorID_get, _thostmduserapi.CThostFtdcVerifyInvestorPasswordField_InvestorID_set, doc=r"""投资者代码""")
    Password: "TThostFtdcPasswordType" = property(_thostmduserapi.CThostFtdcVerifyInvestorPasswordField_Password_get, _thostmduserapi.CThostFtdcVerifyInvestorPasswordField_Password_set, doc=r"""密码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcVerifyInvestorPasswordField_swiginit(self, _thostmduserapi.new_CThostFtdcVerifyInvestorPasswordField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcVerifyInvestorPasswordField

# Register CThostFtdcVerifyInvestorPasswordField in _thostmduserapi:
_thostmduserapi.CThostFtdcVerifyInvestorPasswordField_swigregister(CThostFtdcVerifyInvestorPasswordField)
class CThostFtdcUserIPField(object):
    r"""用户IP"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcUserIPField_BrokerID_get, _thostmduserapi.CThostFtdcUserIPField_BrokerID_set, doc=r"""经纪公司代码""")
    UserID: "TThostFtdcUserIDType" = property(_thostmduserapi.CThostFtdcUserIPField_UserID_get, _thostmduserapi.CThostFtdcUserIPField_UserID_set, doc=r"""用户代码""")
    reserve1: "TThostFtdcOldIPAddressType" = property(_thostmduserapi.CThostFtdcUserIPField_reserve1_get, _thostmduserapi.CThostFtdcUserIPField_reserve1_set, doc=r"""保留的无效字段""")
    reserve2: "TThostFtdcOldIPAddressType" = property(_thostmduserapi.CThostFtdcUserIPField_reserve2_get, _thostmduserapi.CThostFtdcUserIPField_reserve2_set, doc=r"""保留的无效字段""")
    MacAddress: "TThostFtdcMacAddressType" = property(_thostmduserapi.CThostFtdcUserIPField_MacAddress_get, _thostmduserapi.CThostFtdcUserIPField_MacAddress_set, doc=r"""Mac地址""")
    IPAddress: "TThostFtdcIPAddressType" = property(_thostmduserapi.CThostFtdcUserIPField_IPAddress_get, _thostmduserapi.CThostFtdcUserIPField_IPAddress_set, doc=r"""IP地址""")
    IPMask: "TThostFtdcIPAddressType" = property(_thostmduserapi.CThostFtdcUserIPField_IPMask_get, _thostmduserapi.CThostFtdcUserIPField_IPMask_set, doc=r"""IP地址掩码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcUserIPField_swiginit(self, _thostmduserapi.new_CThostFtdcUserIPField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcUserIPField

# Register CThostFtdcUserIPField in _thostmduserapi:
_thostmduserapi.CThostFtdcUserIPField_swigregister(CThostFtdcUserIPField)
class CThostFtdcTradingNoticeInfoField(object):
    r"""用户事件通知信息"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcTradingNoticeInfoField_BrokerID_get, _thostmduserapi.CThostFtdcTradingNoticeInfoField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "TThostFtdcInvestorIDType" = property(_thostmduserapi.CThostFtdcTradingNoticeInfoField_InvestorID_get, _thostmduserapi.CThostFtdcTradingNoticeInfoField_InvestorID_set, doc=r"""投资者代码""")
    SendTime: "TThostFtdcTimeType" = property(_thostmduserapi.CThostFtdcTradingNoticeInfoField_SendTime_get, _thostmduserapi.CThostFtdcTradingNoticeInfoField_SendTime_set, doc=r"""发送时间""")
    FieldContent: "TThostFtdcContentType" = property(_thostmduserapi.CThostFtdcTradingNoticeInfoField_FieldContent_get, _thostmduserapi.CThostFtdcTradingNoticeInfoField_FieldContent_set, doc=r"""消息正文""")
    SequenceSeries: "TThostFtdcSequenceSeriesType" = property(_thostmduserapi.CThostFtdcTradingNoticeInfoField_SequenceSeries_get, _thostmduserapi.CThostFtdcTradingNoticeInfoField_SequenceSeries_set, doc=r"""序列系列号""")
    SequenceNo: "TThostFtdcSequenceNoType" = property(_thostmduserapi.CThostFtdcTradingNoticeInfoField_SequenceNo_get, _thostmduserapi.CThostFtdcTradingNoticeInfoField_SequenceNo_set, doc=r"""序列号""")
    InvestUnitID: "TThostFtdcInvestUnitIDType" = property(_thostmduserapi.CThostFtdcTradingNoticeInfoField_InvestUnitID_get, _thostmduserapi.CThostFtdcTradingNoticeInfoField_InvestUnitID_set, doc=r"""投资单元代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcTradingNoticeInfoField_swiginit(self, _thostmduserapi.new_CThostFtdcTradingNoticeInfoField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcTradingNoticeInfoField

# Register CThostFtdcTradingNoticeInfoField in _thostmduserapi:
_thostmduserapi.CThostFtdcTradingNoticeInfoField_swigregister(CThostFtdcTradingNoticeInfoField)
class CThostFtdcTradingNoticeField(object):
    r"""用户事件通知"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcTradingNoticeField_BrokerID_get, _thostmduserapi.CThostFtdcTradingNoticeField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorRange: "TThostFtdcInvestorRangeType" = property(_thostmduserapi.CThostFtdcTradingNoticeField_InvestorRange_get, _thostmduserapi.CThostFtdcTradingNoticeField_InvestorRange_set, doc=r"""投资者范围""")
    InvestorID: "TThostFtdcInvestorIDType" = property(_thostmduserapi.CThostFtdcTradingNoticeField_InvestorID_get, _thostmduserapi.CThostFtdcTradingNoticeField_InvestorID_set, doc=r"""投资者代码""")
    SequenceSeries: "TThostFtdcSequenceSeriesType" = property(_thostmduserapi.CThostFtdcTradingNoticeField_SequenceSeries_get, _thostmduserapi.CThostFtdcTradingNoticeField_SequenceSeries_set, doc=r"""序列系列号""")
    UserID: "TThostFtdcUserIDType" = property(_thostmduserapi.CThostFtdcTradingNoticeField_UserID_get, _thostmduserapi.CThostFtdcTradingNoticeField_UserID_set, doc=r"""用户代码""")
    SendTime: "TThostFtdcTimeType" = property(_thostmduserapi.CThostFtdcTradingNoticeField_SendTime_get, _thostmduserapi.CThostFtdcTradingNoticeField_SendTime_set, doc=r"""发送时间""")
    SequenceNo: "TThostFtdcSequenceNoType" = property(_thostmduserapi.CThostFtdcTradingNoticeField_SequenceNo_get, _thostmduserapi.CThostFtdcTradingNoticeField_SequenceNo_set, doc=r"""序列号""")
    FieldContent: "TThostFtdcContentType" = property(_thostmduserapi.CThostFtdcTradingNoticeField_FieldContent_get, _thostmduserapi.CThostFtdcTradingNoticeField_FieldContent_set, doc=r"""消息正文""")
    InvestUnitID: "TThostFtdcInvestUnitIDType" = property(_thostmduserapi.CThostFtdcTradingNoticeField_InvestUnitID_get, _thostmduserapi.CThostFtdcTradingNoticeField_InvestUnitID_set, doc=r"""投资单元代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcTradingNoticeField_swiginit(self, _thostmduserapi.new_CThostFtdcTradingNoticeField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcTradingNoticeField

# Register CThostFtdcTradingNoticeField in _thostmduserapi:
_thostmduserapi.CThostFtdcTradingNoticeField_swigregister(CThostFtdcTradingNoticeField)
class CThostFtdcQryTradingNoticeField(object):
    r"""查询交易事件通知"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcQryTradingNoticeField_BrokerID_get, _thostmduserapi.CThostFtdcQryTradingNoticeField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "TThostFtdcInvestorIDType" = property(_thostmduserapi.CThostFtdcQryTradingNoticeField_InvestorID_get, _thostmduserapi.CThostFtdcQryTradingNoticeField_InvestorID_set, doc=r"""投资者代码""")
    InvestUnitID: "TThostFtdcInvestUnitIDType" = property(_thostmduserapi.CThostFtdcQryTradingNoticeField_InvestUnitID_get, _thostmduserapi.CThostFtdcQryTradingNoticeField_InvestUnitID_set, doc=r"""投资单元代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcQryTradingNoticeField_swiginit(self, _thostmduserapi.new_CThostFtdcQryTradingNoticeField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcQryTradingNoticeField

# Register CThostFtdcQryTradingNoticeField in _thostmduserapi:
_thostmduserapi.CThostFtdcQryTradingNoticeField_swigregister(CThostFtdcQryTradingNoticeField)
class CThostFtdcQryErrOrderField(object):
    r"""查询错误报单"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcQryErrOrderField_BrokerID_get, _thostmduserapi.CThostFtdcQryErrOrderField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "TThostFtdcInvestorIDType" = property(_thostmduserapi.CThostFtdcQryErrOrderField_InvestorID_get, _thostmduserapi.CThostFtdcQryErrOrderField_InvestorID_set, doc=r"""投资者代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcQryErrOrderField_swiginit(self, _thostmduserapi.new_CThostFtdcQryErrOrderField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcQryErrOrderField

# Register CThostFtdcQryErrOrderField in _thostmduserapi:
_thostmduserapi.CThostFtdcQryErrOrderField_swigregister(CThostFtdcQryErrOrderField)
class CThostFtdcErrOrderField(object):
    r"""错误报单"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcErrOrderField_BrokerID_get, _thostmduserapi.CThostFtdcErrOrderField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "TThostFtdcInvestorIDType" = property(_thostmduserapi.CThostFtdcErrOrderField_InvestorID_get, _thostmduserapi.CThostFtdcErrOrderField_InvestorID_set, doc=r"""投资者代码""")
    reserve1: "TThostFtdcOldInstrumentIDType" = property(_thostmduserapi.CThostFtdcErrOrderField_reserve1_get, _thostmduserapi.CThostFtdcErrOrderField_reserve1_set, doc=r"""保留的无效字段""")
    OrderRef: "TThostFtdcOrderRefType" = property(_thostmduserapi.CThostFtdcErrOrderField_OrderRef_get, _thostmduserapi.CThostFtdcErrOrderField_OrderRef_set, doc=r"""报单引用""")
    UserID: "TThostFtdcUserIDType" = property(_thostmduserapi.CThostFtdcErrOrderField_UserID_get, _thostmduserapi.CThostFtdcErrOrderField_UserID_set, doc=r"""用户代码""")
    OrderPriceType: "TThostFtdcOrderPriceTypeType" = property(_thostmduserapi.CThostFtdcErrOrderField_OrderPriceType_get, _thostmduserapi.CThostFtdcErrOrderField_OrderPriceType_set, doc=r"""报单价格条件""")
    Direction: "TThostFtdcDirectionType" = property(_thostmduserapi.CThostFtdcErrOrderField_Direction_get, _thostmduserapi.CThostFtdcErrOrderField_Direction_set, doc=r"""买卖方向""")
    CombOffsetFlag: "TThostFtdcCombOffsetFlagType" = property(_thostmduserapi.CThostFtdcErrOrderField_CombOffsetFlag_get, _thostmduserapi.CThostFtdcErrOrderField_CombOffsetFlag_set, doc=r"""组合开平标志""")
    CombHedgeFlag: "TThostFtdcCombHedgeFlagType" = property(_thostmduserapi.CThostFtdcErrOrderField_CombHedgeFlag_get, _thostmduserapi.CThostFtdcErrOrderField_CombHedgeFlag_set, doc=r"""组合投机套保标志""")
    LimitPrice: "TThostFtdcPriceType" = property(_thostmduserapi.CThostFtdcErrOrderField_LimitPrice_get, _thostmduserapi.CThostFtdcErrOrderField_LimitPrice_set, doc=r"""价格""")
    VolumeTotalOriginal: "TThostFtdcVolumeType" = property(_thostmduserapi.CThostFtdcErrOrderField_VolumeTotalOriginal_get, _thostmduserapi.CThostFtdcErrOrderField_VolumeTotalOriginal_set, doc=r"""数量""")
    TimeCondition: "TThostFtdcTimeConditionType" = property(_thostmduserapi.CThostFtdcErrOrderField_TimeCondition_get, _thostmduserapi.CThostFtdcErrOrderField_TimeCondition_set, doc=r"""有效期类型""")
    GTDDate: "TThostFtdcDateType" = property(_thostmduserapi.CThostFtdcErrOrderField_GTDDate_get, _thostmduserapi.CThostFtdcErrOrderField_GTDDate_set, doc=r"""GTD日期""")
    VolumeCondition: "TThostFtdcVolumeConditionType" = property(_thostmduserapi.CThostFtdcErrOrderField_VolumeCondition_get, _thostmduserapi.CThostFtdcErrOrderField_VolumeCondition_set, doc=r"""成交量类型""")
    MinVolume: "TThostFtdcVolumeType" = property(_thostmduserapi.CThostFtdcErrOrderField_MinVolume_get, _thostmduserapi.CThostFtdcErrOrderField_MinVolume_set, doc=r"""最小成交量""")
    ContingentCondition: "TThostFtdcContingentConditionType" = property(_thostmduserapi.CThostFtdcErrOrderField_ContingentCondition_get, _thostmduserapi.CThostFtdcErrOrderField_ContingentCondition_set, doc=r"""触发条件""")
    StopPrice: "TThostFtdcPriceType" = property(_thostmduserapi.CThostFtdcErrOrderField_StopPrice_get, _thostmduserapi.CThostFtdcErrOrderField_StopPrice_set, doc=r"""止损价""")
    ForceCloseReason: "TThostFtdcForceCloseReasonType" = property(_thostmduserapi.CThostFtdcErrOrderField_ForceCloseReason_get, _thostmduserapi.CThostFtdcErrOrderField_ForceCloseReason_set, doc=r"""强平原因""")
    IsAutoSuspend: "TThostFtdcBoolType" = property(_thostmduserapi.CThostFtdcErrOrderField_IsAutoSuspend_get, _thostmduserapi.CThostFtdcErrOrderField_IsAutoSuspend_set, doc=r"""自动挂起标志""")
    BusinessUnit: "TThostFtdcBusinessUnitType" = property(_thostmduserapi.CThostFtdcErrOrderField_BusinessUnit_get, _thostmduserapi.CThostFtdcErrOrderField_BusinessUnit_set, doc=r"""业务单元""")
    RequestID: "TThostFtdcRequestIDType" = property(_thostmduserapi.CThostFtdcErrOrderField_RequestID_get, _thostmduserapi.CThostFtdcErrOrderField_RequestID_set, doc=r"""请求编号""")
    UserForceClose: "TThostFtdcBoolType" = property(_thostmduserapi.CThostFtdcErrOrderField_UserForceClose_get, _thostmduserapi.CThostFtdcErrOrderField_UserForceClose_set, doc=r"""用户强评标志""")
    ErrorID: "TThostFtdcErrorIDType" = property(_thostmduserapi.CThostFtdcErrOrderField_ErrorID_get, _thostmduserapi.CThostFtdcErrOrderField_ErrorID_set, doc=r"""错误代码""")
    ErrorMsg: "TThostFtdcErrorMsgType" = property(_thostmduserapi.CThostFtdcErrOrderField_ErrorMsg_get, _thostmduserapi.CThostFtdcErrOrderField_ErrorMsg_set, doc=r"""错误信息""")
    IsSwapOrder: "TThostFtdcBoolType" = property(_thostmduserapi.CThostFtdcErrOrderField_IsSwapOrder_get, _thostmduserapi.CThostFtdcErrOrderField_IsSwapOrder_set, doc=r"""互换单标志""")
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcErrOrderField_ExchangeID_get, _thostmduserapi.CThostFtdcErrOrderField_ExchangeID_set, doc=r"""交易所代码""")
    InvestUnitID: "TThostFtdcInvestUnitIDType" = property(_thostmduserapi.CThostFtdcErrOrderField_InvestUnitID_get, _thostmduserapi.CThostFtdcErrOrderField_InvestUnitID_set, doc=r"""投资单元代码""")
    AccountID: "TThostFtdcAccountIDType" = property(_thostmduserapi.CThostFtdcErrOrderField_AccountID_get, _thostmduserapi.CThostFtdcErrOrderField_AccountID_set, doc=r"""资金账号""")
    CurrencyID: "TThostFtdcCurrencyIDType" = property(_thostmduserapi.CThostFtdcErrOrderField_CurrencyID_get, _thostmduserapi.CThostFtdcErrOrderField_CurrencyID_set, doc=r"""币种代码""")
    ClientID: "TThostFtdcClientIDType" = property(_thostmduserapi.CThostFtdcErrOrderField_ClientID_get, _thostmduserapi.CThostFtdcErrOrderField_ClientID_set, doc=r"""交易编码""")
    reserve2: "TThostFtdcOldIPAddressType" = property(_thostmduserapi.CThostFtdcErrOrderField_reserve2_get, _thostmduserapi.CThostFtdcErrOrderField_reserve2_set, doc=r"""保留的无效字段""")
    MacAddress: "TThostFtdcMacAddressType" = property(_thostmduserapi.CThostFtdcErrOrderField_MacAddress_get, _thostmduserapi.CThostFtdcErrOrderField_MacAddress_set, doc=r"""Mac地址""")
    InstrumentID: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcErrOrderField_InstrumentID_get, _thostmduserapi.CThostFtdcErrOrderField_InstrumentID_set, doc=r"""合约代码""")
    IPAddress: "TThostFtdcIPAddressType" = property(_thostmduserapi.CThostFtdcErrOrderField_IPAddress_get, _thostmduserapi.CThostFtdcErrOrderField_IPAddress_set, doc=r"""IP地址""")

    def __init__(self):
        _thostmduserapi.CThostFtdcErrOrderField_swiginit(self, _thostmduserapi.new_CThostFtdcErrOrderField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcErrOrderField

# Register CThostFtdcErrOrderField in _thostmduserapi:
_thostmduserapi.CThostFtdcErrOrderField_swigregister(CThostFtdcErrOrderField)
class CThostFtdcErrorConditionalOrderField(object):
    r"""查询错误报单操作"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcErrorConditionalOrderField_BrokerID_get, _thostmduserapi.CThostFtdcErrorConditionalOrderField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "TThostFtdcInvestorIDType" = property(_thostmduserapi.CThostFtdcErrorConditionalOrderField_InvestorID_get, _thostmduserapi.CThostFtdcErrorConditionalOrderField_InvestorID_set, doc=r"""投资者代码""")
    reserve1: "TThostFtdcOldInstrumentIDType" = property(_thostmduserapi.CThostFtdcErrorConditionalOrderField_reserve1_get, _thostmduserapi.CThostFtdcErrorConditionalOrderField_reserve1_set, doc=r"""保留的无效字段""")
    OrderRef: "TThostFtdcOrderRefType" = property(_thostmduserapi.CThostFtdcErrorConditionalOrderField_OrderRef_get, _thostmduserapi.CThostFtdcErrorConditionalOrderField_OrderRef_set, doc=r"""报单引用""")
    UserID: "TThostFtdcUserIDType" = property(_thostmduserapi.CThostFtdcErrorConditionalOrderField_UserID_get, _thostmduserapi.CThostFtdcErrorConditionalOrderField_UserID_set, doc=r"""用户代码""")
    OrderPriceType: "TThostFtdcOrderPriceTypeType" = property(_thostmduserapi.CThostFtdcErrorConditionalOrderField_OrderPriceType_get, _thostmduserapi.CThostFtdcErrorConditionalOrderField_OrderPriceType_set, doc=r"""报单价格条件""")
    Direction: "TThostFtdcDirectionType" = property(_thostmduserapi.CThostFtdcErrorConditionalOrderField_Direction_get, _thostmduserapi.CThostFtdcErrorConditionalOrderField_Direction_set, doc=r"""买卖方向""")
    CombOffsetFlag: "TThostFtdcCombOffsetFlagType" = property(_thostmduserapi.CThostFtdcErrorConditionalOrderField_CombOffsetFlag_get, _thostmduserapi.CThostFtdcErrorConditionalOrderField_CombOffsetFlag_set, doc=r"""组合开平标志""")
    CombHedgeFlag: "TThostFtdcCombHedgeFlagType" = property(_thostmduserapi.CThostFtdcErrorConditionalOrderField_CombHedgeFlag_get, _thostmduserapi.CThostFtdcErrorConditionalOrderField_CombHedgeFlag_set, doc=r"""组合投机套保标志""")
    LimitPrice: "TThostFtdcPriceType" = property(_thostmduserapi.CThostFtdcErrorConditionalOrderField_LimitPrice_get, _thostmduserapi.CThostFtdcErrorConditionalOrderField_LimitPrice_set, doc=r"""价格""")
    VolumeTotalOriginal: "TThostFtdcVolumeType" = property(_thostmduserapi.CThostFtdcErrorConditionalOrderField_VolumeTotalOriginal_get, _thostmduserapi.CThostFtdcErrorConditionalOrderField_VolumeTotalOriginal_set, doc=r"""数量""")
    TimeCondition: "TThostFtdcTimeConditionType" = property(_thostmduserapi.CThostFtdcErrorConditionalOrderField_TimeCondition_get, _thostmduserapi.CThostFtdcErrorConditionalOrderField_TimeCondition_set, doc=r"""有效期类型""")
    GTDDate: "TThostFtdcDateType" = property(_thostmduserapi.CThostFtdcErrorConditionalOrderField_GTDDate_get, _thostmduserapi.CThostFtdcErrorConditionalOrderField_GTDDate_set, doc=r"""GTD日期""")
    VolumeCondition: "TThostFtdcVolumeConditionType" = property(_thostmduserapi.CThostFtdcErrorConditionalOrderField_VolumeCondition_get, _thostmduserapi.CThostFtdcErrorConditionalOrderField_VolumeCondition_set, doc=r"""成交量类型""")
    MinVolume: "TThostFtdcVolumeType" = property(_thostmduserapi.CThostFtdcErrorConditionalOrderField_MinVolume_get, _thostmduserapi.CThostFtdcErrorConditionalOrderField_MinVolume_set, doc=r"""最小成交量""")
    ContingentCondition: "TThostFtdcContingentConditionType" = property(_thostmduserapi.CThostFtdcErrorConditionalOrderField_ContingentCondition_get, _thostmduserapi.CThostFtdcErrorConditionalOrderField_ContingentCondition_set, doc=r"""触发条件""")
    StopPrice: "TThostFtdcPriceType" = property(_thostmduserapi.CThostFtdcErrorConditionalOrderField_StopPrice_get, _thostmduserapi.CThostFtdcErrorConditionalOrderField_StopPrice_set, doc=r"""止损价""")
    ForceCloseReason: "TThostFtdcForceCloseReasonType" = property(_thostmduserapi.CThostFtdcErrorConditionalOrderField_ForceCloseReason_get, _thostmduserapi.CThostFtdcErrorConditionalOrderField_ForceCloseReason_set, doc=r"""强平原因""")
    IsAutoSuspend: "TThostFtdcBoolType" = property(_thostmduserapi.CThostFtdcErrorConditionalOrderField_IsAutoSuspend_get, _thostmduserapi.CThostFtdcErrorConditionalOrderField_IsAutoSuspend_set, doc=r"""自动挂起标志""")
    BusinessUnit: "TThostFtdcBusinessUnitType" = property(_thostmduserapi.CThostFtdcErrorConditionalOrderField_BusinessUnit_get, _thostmduserapi.CThostFtdcErrorConditionalOrderField_BusinessUnit_set, doc=r"""业务单元""")
    RequestID: "TThostFtdcRequestIDType" = property(_thostmduserapi.CThostFtdcErrorConditionalOrderField_RequestID_get, _thostmduserapi.CThostFtdcErrorConditionalOrderField_RequestID_set, doc=r"""请求编号""")
    OrderLocalID: "TThostFtdcOrderLocalIDType" = property(_thostmduserapi.CThostFtdcErrorConditionalOrderField_OrderLocalID_get, _thostmduserapi.CThostFtdcErrorConditionalOrderField_OrderLocalID_set, doc=r"""本地报单编号""")
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcErrorConditionalOrderField_ExchangeID_get, _thostmduserapi.CThostFtdcErrorConditionalOrderField_ExchangeID_set, doc=r"""交易所代码""")
    ParticipantID: "TThostFtdcParticipantIDType" = property(_thostmduserapi.CThostFtdcErrorConditionalOrderField_ParticipantID_get, _thostmduserapi.CThostFtdcErrorConditionalOrderField_ParticipantID_set, doc=r"""会员代码""")
    ClientID: "TThostFtdcClientIDType" = property(_thostmduserapi.CThostFtdcErrorConditionalOrderField_ClientID_get, _thostmduserapi.CThostFtdcErrorConditionalOrderField_ClientID_set, doc=r"""客户代码""")
    reserve2: "TThostFtdcOldExchangeInstIDType" = property(_thostmduserapi.CThostFtdcErrorConditionalOrderField_reserve2_get, _thostmduserapi.CThostFtdcErrorConditionalOrderField_reserve2_set, doc=r"""保留的无效字段""")
    TraderID: "TThostFtdcTraderIDType" = property(_thostmduserapi.CThostFtdcErrorConditionalOrderField_TraderID_get, _thostmduserapi.CThostFtdcErrorConditionalOrderField_TraderID_set, doc=r"""交易所交易员代码""")
    InstallID: "TThostFtdcInstallIDType" = property(_thostmduserapi.CThostFtdcErrorConditionalOrderField_InstallID_get, _thostmduserapi.CThostFtdcErrorConditionalOrderField_InstallID_set, doc=r"""安装编号""")
    OrderSubmitStatus: "TThostFtdcOrderSubmitStatusType" = property(_thostmduserapi.CThostFtdcErrorConditionalOrderField_OrderSubmitStatus_get, _thostmduserapi.CThostFtdcErrorConditionalOrderField_OrderSubmitStatus_set, doc=r"""报单提交状态""")
    NotifySequence: "TThostFtdcSequenceNoType" = property(_thostmduserapi.CThostFtdcErrorConditionalOrderField_NotifySequence_get, _thostmduserapi.CThostFtdcErrorConditionalOrderField_NotifySequence_set, doc=r"""报单提示序号""")
    TradingDay: "TThostFtdcDateType" = property(_thostmduserapi.CThostFtdcErrorConditionalOrderField_TradingDay_get, _thostmduserapi.CThostFtdcErrorConditionalOrderField_TradingDay_set, doc=r"""交易日""")
    SettlementID: "TThostFtdcSettlementIDType" = property(_thostmduserapi.CThostFtdcErrorConditionalOrderField_SettlementID_get, _thostmduserapi.CThostFtdcErrorConditionalOrderField_SettlementID_set, doc=r"""结算编号""")
    OrderSysID: "TThostFtdcOrderSysIDType" = property(_thostmduserapi.CThostFtdcErrorConditionalOrderField_OrderSysID_get, _thostmduserapi.CThostFtdcErrorConditionalOrderField_OrderSysID_set, doc=r"""报单编号""")
    OrderSource: "TThostFtdcOrderSourceType" = property(_thostmduserapi.CThostFtdcErrorConditionalOrderField_OrderSource_get, _thostmduserapi.CThostFtdcErrorConditionalOrderField_OrderSource_set, doc=r"""报单来源""")
    OrderStatus: "TThostFtdcOrderStatusType" = property(_thostmduserapi.CThostFtdcErrorConditionalOrderField_OrderStatus_get, _thostmduserapi.CThostFtdcErrorConditionalOrderField_OrderStatus_set, doc=r"""报单状态""")
    OrderType: "TThostFtdcOrderTypeType" = property(_thostmduserapi.CThostFtdcErrorConditionalOrderField_OrderType_get, _thostmduserapi.CThostFtdcErrorConditionalOrderField_OrderType_set, doc=r"""报单类型""")
    VolumeTraded: "TThostFtdcVolumeType" = property(_thostmduserapi.CThostFtdcErrorConditionalOrderField_VolumeTraded_get, _thostmduserapi.CThostFtdcErrorConditionalOrderField_VolumeTraded_set, doc=r"""今成交数量""")
    VolumeTotal: "TThostFtdcVolumeType" = property(_thostmduserapi.CThostFtdcErrorConditionalOrderField_VolumeTotal_get, _thostmduserapi.CThostFtdcErrorConditionalOrderField_VolumeTotal_set, doc=r"""剩余数量""")
    InsertDate: "TThostFtdcDateType" = property(_thostmduserapi.CThostFtdcErrorConditionalOrderField_InsertDate_get, _thostmduserapi.CThostFtdcErrorConditionalOrderField_InsertDate_set, doc=r"""报单日期""")
    InsertTime: "TThostFtdcTimeType" = property(_thostmduserapi.CThostFtdcErrorConditionalOrderField_InsertTime_get, _thostmduserapi.CThostFtdcErrorConditionalOrderField_InsertTime_set, doc=r"""委托时间""")
    ActiveTime: "TThostFtdcTimeType" = property(_thostmduserapi.CThostFtdcErrorConditionalOrderField_ActiveTime_get, _thostmduserapi.CThostFtdcErrorConditionalOrderField_ActiveTime_set, doc=r"""激活时间""")
    SuspendTime: "TThostFtdcTimeType" = property(_thostmduserapi.CThostFtdcErrorConditionalOrderField_SuspendTime_get, _thostmduserapi.CThostFtdcErrorConditionalOrderField_SuspendTime_set, doc=r"""挂起时间""")
    UpdateTime: "TThostFtdcTimeType" = property(_thostmduserapi.CThostFtdcErrorConditionalOrderField_UpdateTime_get, _thostmduserapi.CThostFtdcErrorConditionalOrderField_UpdateTime_set, doc=r"""最后修改时间""")
    CancelTime: "TThostFtdcTimeType" = property(_thostmduserapi.CThostFtdcErrorConditionalOrderField_CancelTime_get, _thostmduserapi.CThostFtdcErrorConditionalOrderField_CancelTime_set, doc=r"""撤销时间""")
    ActiveTraderID: "TThostFtdcTraderIDType" = property(_thostmduserapi.CThostFtdcErrorConditionalOrderField_ActiveTraderID_get, _thostmduserapi.CThostFtdcErrorConditionalOrderField_ActiveTraderID_set, doc=r"""最后修改交易所交易员代码""")
    ClearingPartID: "TThostFtdcParticipantIDType" = property(_thostmduserapi.CThostFtdcErrorConditionalOrderField_ClearingPartID_get, _thostmduserapi.CThostFtdcErrorConditionalOrderField_ClearingPartID_set, doc=r"""结算会员编号""")
    SequenceNo: "TThostFtdcSequenceNoType" = property(_thostmduserapi.CThostFtdcErrorConditionalOrderField_SequenceNo_get, _thostmduserapi.CThostFtdcErrorConditionalOrderField_SequenceNo_set, doc=r"""序号""")
    FrontID: "TThostFtdcFrontIDType" = property(_thostmduserapi.CThostFtdcErrorConditionalOrderField_FrontID_get, _thostmduserapi.CThostFtdcErrorConditionalOrderField_FrontID_set, doc=r"""前置编号""")
    SessionID: "TThostFtdcSessionIDType" = property(_thostmduserapi.CThostFtdcErrorConditionalOrderField_SessionID_get, _thostmduserapi.CThostFtdcErrorConditionalOrderField_SessionID_set, doc=r"""会话编号""")
    UserProductInfo: "TThostFtdcProductInfoType" = property(_thostmduserapi.CThostFtdcErrorConditionalOrderField_UserProductInfo_get, _thostmduserapi.CThostFtdcErrorConditionalOrderField_UserProductInfo_set, doc=r"""用户端产品信息""")
    StatusMsg: "TThostFtdcErrorMsgType" = property(_thostmduserapi.CThostFtdcErrorConditionalOrderField_StatusMsg_get, _thostmduserapi.CThostFtdcErrorConditionalOrderField_StatusMsg_set, doc=r"""状态信息""")
    UserForceClose: "TThostFtdcBoolType" = property(_thostmduserapi.CThostFtdcErrorConditionalOrderField_UserForceClose_get, _thostmduserapi.CThostFtdcErrorConditionalOrderField_UserForceClose_set, doc=r"""用户强评标志""")
    ActiveUserID: "TThostFtdcUserIDType" = property(_thostmduserapi.CThostFtdcErrorConditionalOrderField_ActiveUserID_get, _thostmduserapi.CThostFtdcErrorConditionalOrderField_ActiveUserID_set, doc=r"""操作用户代码""")
    BrokerOrderSeq: "TThostFtdcSequenceNoType" = property(_thostmduserapi.CThostFtdcErrorConditionalOrderField_BrokerOrderSeq_get, _thostmduserapi.CThostFtdcErrorConditionalOrderField_BrokerOrderSeq_set, doc=r"""经纪公司报单编号""")
    RelativeOrderSysID: "TThostFtdcOrderSysIDType" = property(_thostmduserapi.CThostFtdcErrorConditionalOrderField_RelativeOrderSysID_get, _thostmduserapi.CThostFtdcErrorConditionalOrderField_RelativeOrderSysID_set, doc=r"""相关报单""")
    ZCETotalTradedVolume: "TThostFtdcVolumeType" = property(_thostmduserapi.CThostFtdcErrorConditionalOrderField_ZCETotalTradedVolume_get, _thostmduserapi.CThostFtdcErrorConditionalOrderField_ZCETotalTradedVolume_set, doc=r"""郑商所成交数量""")
    ErrorID: "TThostFtdcErrorIDType" = property(_thostmduserapi.CThostFtdcErrorConditionalOrderField_ErrorID_get, _thostmduserapi.CThostFtdcErrorConditionalOrderField_ErrorID_set, doc=r"""错误代码""")
    ErrorMsg: "TThostFtdcErrorMsgType" = property(_thostmduserapi.CThostFtdcErrorConditionalOrderField_ErrorMsg_get, _thostmduserapi.CThostFtdcErrorConditionalOrderField_ErrorMsg_set, doc=r"""错误信息""")
    IsSwapOrder: "TThostFtdcBoolType" = property(_thostmduserapi.CThostFtdcErrorConditionalOrderField_IsSwapOrder_get, _thostmduserapi.CThostFtdcErrorConditionalOrderField_IsSwapOrder_set, doc=r"""互换单标志""")
    BranchID: "TThostFtdcBranchIDType" = property(_thostmduserapi.CThostFtdcErrorConditionalOrderField_BranchID_get, _thostmduserapi.CThostFtdcErrorConditionalOrderField_BranchID_set, doc=r"""营业部编号""")
    InvestUnitID: "TThostFtdcInvestUnitIDType" = property(_thostmduserapi.CThostFtdcErrorConditionalOrderField_InvestUnitID_get, _thostmduserapi.CThostFtdcErrorConditionalOrderField_InvestUnitID_set, doc=r"""投资单元代码""")
    AccountID: "TThostFtdcAccountIDType" = property(_thostmduserapi.CThostFtdcErrorConditionalOrderField_AccountID_get, _thostmduserapi.CThostFtdcErrorConditionalOrderField_AccountID_set, doc=r"""资金账号""")
    CurrencyID: "TThostFtdcCurrencyIDType" = property(_thostmduserapi.CThostFtdcErrorConditionalOrderField_CurrencyID_get, _thostmduserapi.CThostFtdcErrorConditionalOrderField_CurrencyID_set, doc=r"""币种代码""")
    reserve3: "TThostFtdcOldIPAddressType" = property(_thostmduserapi.CThostFtdcErrorConditionalOrderField_reserve3_get, _thostmduserapi.CThostFtdcErrorConditionalOrderField_reserve3_set, doc=r"""保留的无效字段""")
    MacAddress: "TThostFtdcMacAddressType" = property(_thostmduserapi.CThostFtdcErrorConditionalOrderField_MacAddress_get, _thostmduserapi.CThostFtdcErrorConditionalOrderField_MacAddress_set, doc=r"""Mac地址""")
    InstrumentID: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcErrorConditionalOrderField_InstrumentID_get, _thostmduserapi.CThostFtdcErrorConditionalOrderField_InstrumentID_set, doc=r"""合约代码""")
    ExchangeInstID: "TThostFtdcExchangeInstIDType" = property(_thostmduserapi.CThostFtdcErrorConditionalOrderField_ExchangeInstID_get, _thostmduserapi.CThostFtdcErrorConditionalOrderField_ExchangeInstID_set, doc=r"""合约在交易所的代码""")
    IPAddress: "TThostFtdcIPAddressType" = property(_thostmduserapi.CThostFtdcErrorConditionalOrderField_IPAddress_get, _thostmduserapi.CThostFtdcErrorConditionalOrderField_IPAddress_set, doc=r"""IP地址""")

    def __init__(self):
        _thostmduserapi.CThostFtdcErrorConditionalOrderField_swiginit(self, _thostmduserapi.new_CThostFtdcErrorConditionalOrderField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcErrorConditionalOrderField

# Register CThostFtdcErrorConditionalOrderField in _thostmduserapi:
_thostmduserapi.CThostFtdcErrorConditionalOrderField_swigregister(CThostFtdcErrorConditionalOrderField)
class CThostFtdcQryErrOrderActionField(object):
    r"""查询错误报单操作"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcQryErrOrderActionField_BrokerID_get, _thostmduserapi.CThostFtdcQryErrOrderActionField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "TThostFtdcInvestorIDType" = property(_thostmduserapi.CThostFtdcQryErrOrderActionField_InvestorID_get, _thostmduserapi.CThostFtdcQryErrOrderActionField_InvestorID_set, doc=r"""投资者代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcQryErrOrderActionField_swiginit(self, _thostmduserapi.new_CThostFtdcQryErrOrderActionField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcQryErrOrderActionField

# Register CThostFtdcQryErrOrderActionField in _thostmduserapi:
_thostmduserapi.CThostFtdcQryErrOrderActionField_swigregister(CThostFtdcQryErrOrderActionField)
class CThostFtdcErrOrderActionField(object):
    r"""错误报单操作"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcErrOrderActionField_BrokerID_get, _thostmduserapi.CThostFtdcErrOrderActionField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "TThostFtdcInvestorIDType" = property(_thostmduserapi.CThostFtdcErrOrderActionField_InvestorID_get, _thostmduserapi.CThostFtdcErrOrderActionField_InvestorID_set, doc=r"""投资者代码""")
    OrderActionRef: "TThostFtdcOrderActionRefType" = property(_thostmduserapi.CThostFtdcErrOrderActionField_OrderActionRef_get, _thostmduserapi.CThostFtdcErrOrderActionField_OrderActionRef_set, doc=r"""报单操作引用""")
    OrderRef: "TThostFtdcOrderRefType" = property(_thostmduserapi.CThostFtdcErrOrderActionField_OrderRef_get, _thostmduserapi.CThostFtdcErrOrderActionField_OrderRef_set, doc=r"""报单引用""")
    RequestID: "TThostFtdcRequestIDType" = property(_thostmduserapi.CThostFtdcErrOrderActionField_RequestID_get, _thostmduserapi.CThostFtdcErrOrderActionField_RequestID_set, doc=r"""请求编号""")
    FrontID: "TThostFtdcFrontIDType" = property(_thostmduserapi.CThostFtdcErrOrderActionField_FrontID_get, _thostmduserapi.CThostFtdcErrOrderActionField_FrontID_set, doc=r"""前置编号""")
    SessionID: "TThostFtdcSessionIDType" = property(_thostmduserapi.CThostFtdcErrOrderActionField_SessionID_get, _thostmduserapi.CThostFtdcErrOrderActionField_SessionID_set, doc=r"""会话编号""")
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcErrOrderActionField_ExchangeID_get, _thostmduserapi.CThostFtdcErrOrderActionField_ExchangeID_set, doc=r"""交易所代码""")
    OrderSysID: "TThostFtdcOrderSysIDType" = property(_thostmduserapi.CThostFtdcErrOrderActionField_OrderSysID_get, _thostmduserapi.CThostFtdcErrOrderActionField_OrderSysID_set, doc=r"""报单编号""")
    ActionFlag: "TThostFtdcActionFlagType" = property(_thostmduserapi.CThostFtdcErrOrderActionField_ActionFlag_get, _thostmduserapi.CThostFtdcErrOrderActionField_ActionFlag_set, doc=r"""操作标志""")
    LimitPrice: "TThostFtdcPriceType" = property(_thostmduserapi.CThostFtdcErrOrderActionField_LimitPrice_get, _thostmduserapi.CThostFtdcErrOrderActionField_LimitPrice_set, doc=r"""价格""")
    VolumeChange: "TThostFtdcVolumeType" = property(_thostmduserapi.CThostFtdcErrOrderActionField_VolumeChange_get, _thostmduserapi.CThostFtdcErrOrderActionField_VolumeChange_set, doc=r"""数量变化""")
    ActionDate: "TThostFtdcDateType" = property(_thostmduserapi.CThostFtdcErrOrderActionField_ActionDate_get, _thostmduserapi.CThostFtdcErrOrderActionField_ActionDate_set, doc=r"""操作日期""")
    ActionTime: "TThostFtdcTimeType" = property(_thostmduserapi.CThostFtdcErrOrderActionField_ActionTime_get, _thostmduserapi.CThostFtdcErrOrderActionField_ActionTime_set, doc=r"""操作时间""")
    TraderID: "TThostFtdcTraderIDType" = property(_thostmduserapi.CThostFtdcErrOrderActionField_TraderID_get, _thostmduserapi.CThostFtdcErrOrderActionField_TraderID_set, doc=r"""交易所交易员代码""")
    InstallID: "TThostFtdcInstallIDType" = property(_thostmduserapi.CThostFtdcErrOrderActionField_InstallID_get, _thostmduserapi.CThostFtdcErrOrderActionField_InstallID_set, doc=r"""安装编号""")
    OrderLocalID: "TThostFtdcOrderLocalIDType" = property(_thostmduserapi.CThostFtdcErrOrderActionField_OrderLocalID_get, _thostmduserapi.CThostFtdcErrOrderActionField_OrderLocalID_set, doc=r"""本地报单编号""")
    ActionLocalID: "TThostFtdcOrderLocalIDType" = property(_thostmduserapi.CThostFtdcErrOrderActionField_ActionLocalID_get, _thostmduserapi.CThostFtdcErrOrderActionField_ActionLocalID_set, doc=r"""操作本地编号""")
    ParticipantID: "TThostFtdcParticipantIDType" = property(_thostmduserapi.CThostFtdcErrOrderActionField_ParticipantID_get, _thostmduserapi.CThostFtdcErrOrderActionField_ParticipantID_set, doc=r"""会员代码""")
    ClientID: "TThostFtdcClientIDType" = property(_thostmduserapi.CThostFtdcErrOrderActionField_ClientID_get, _thostmduserapi.CThostFtdcErrOrderActionField_ClientID_set, doc=r"""客户代码""")
    BusinessUnit: "TThostFtdcBusinessUnitType" = property(_thostmduserapi.CThostFtdcErrOrderActionField_BusinessUnit_get, _thostmduserapi.CThostFtdcErrOrderActionField_BusinessUnit_set, doc=r"""业务单元""")
    OrderActionStatus: "TThostFtdcOrderActionStatusType" = property(_thostmduserapi.CThostFtdcErrOrderActionField_OrderActionStatus_get, _thostmduserapi.CThostFtdcErrOrderActionField_OrderActionStatus_set, doc=r"""报单操作状态""")
    UserID: "TThostFtdcUserIDType" = property(_thostmduserapi.CThostFtdcErrOrderActionField_UserID_get, _thostmduserapi.CThostFtdcErrOrderActionField_UserID_set, doc=r"""用户代码""")
    StatusMsg: "TThostFtdcErrorMsgType" = property(_thostmduserapi.CThostFtdcErrOrderActionField_StatusMsg_get, _thostmduserapi.CThostFtdcErrOrderActionField_StatusMsg_set, doc=r"""状态信息""")
    reserve1: "TThostFtdcOldInstrumentIDType" = property(_thostmduserapi.CThostFtdcErrOrderActionField_reserve1_get, _thostmduserapi.CThostFtdcErrOrderActionField_reserve1_set, doc=r"""保留的无效字段""")
    BranchID: "TThostFtdcBranchIDType" = property(_thostmduserapi.CThostFtdcErrOrderActionField_BranchID_get, _thostmduserapi.CThostFtdcErrOrderActionField_BranchID_set, doc=r"""营业部编号""")
    InvestUnitID: "TThostFtdcInvestUnitIDType" = property(_thostmduserapi.CThostFtdcErrOrderActionField_InvestUnitID_get, _thostmduserapi.CThostFtdcErrOrderActionField_InvestUnitID_set, doc=r"""投资单元代码""")
    reserve2: "TThostFtdcOldIPAddressType" = property(_thostmduserapi.CThostFtdcErrOrderActionField_reserve2_get, _thostmduserapi.CThostFtdcErrOrderActionField_reserve2_set, doc=r"""保留的无效字段""")
    MacAddress: "TThostFtdcMacAddressType" = property(_thostmduserapi.CThostFtdcErrOrderActionField_MacAddress_get, _thostmduserapi.CThostFtdcErrOrderActionField_MacAddress_set, doc=r"""Mac地址""")
    ErrorID: "TThostFtdcErrorIDType" = property(_thostmduserapi.CThostFtdcErrOrderActionField_ErrorID_get, _thostmduserapi.CThostFtdcErrOrderActionField_ErrorID_set, doc=r"""错误代码""")
    ErrorMsg: "TThostFtdcErrorMsgType" = property(_thostmduserapi.CThostFtdcErrOrderActionField_ErrorMsg_get, _thostmduserapi.CThostFtdcErrOrderActionField_ErrorMsg_set, doc=r"""错误信息""")
    InstrumentID: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcErrOrderActionField_InstrumentID_get, _thostmduserapi.CThostFtdcErrOrderActionField_InstrumentID_set, doc=r"""合约代码""")
    IPAddress: "TThostFtdcIPAddressType" = property(_thostmduserapi.CThostFtdcErrOrderActionField_IPAddress_get, _thostmduserapi.CThostFtdcErrOrderActionField_IPAddress_set, doc=r"""IP地址""")

    def __init__(self):
        _thostmduserapi.CThostFtdcErrOrderActionField_swiginit(self, _thostmduserapi.new_CThostFtdcErrOrderActionField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcErrOrderActionField

# Register CThostFtdcErrOrderActionField in _thostmduserapi:
_thostmduserapi.CThostFtdcErrOrderActionField_swigregister(CThostFtdcErrOrderActionField)
class CThostFtdcQryExchangeSequenceField(object):
    r"""查询交易所状态"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcQryExchangeSequenceField_ExchangeID_get, _thostmduserapi.CThostFtdcQryExchangeSequenceField_ExchangeID_set, doc=r"""交易所代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcQryExchangeSequenceField_swiginit(self, _thostmduserapi.new_CThostFtdcQryExchangeSequenceField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcQryExchangeSequenceField

# Register CThostFtdcQryExchangeSequenceField in _thostmduserapi:
_thostmduserapi.CThostFtdcQryExchangeSequenceField_swigregister(CThostFtdcQryExchangeSequenceField)
class CThostFtdcExchangeSequenceField(object):
    r"""交易所状态"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcExchangeSequenceField_ExchangeID_get, _thostmduserapi.CThostFtdcExchangeSequenceField_ExchangeID_set, doc=r"""交易所代码""")
    SequenceNo: "TThostFtdcSequenceNoType" = property(_thostmduserapi.CThostFtdcExchangeSequenceField_SequenceNo_get, _thostmduserapi.CThostFtdcExchangeSequenceField_SequenceNo_set, doc=r"""序号""")
    MarketStatus: "TThostFtdcInstrumentStatusType" = property(_thostmduserapi.CThostFtdcExchangeSequenceField_MarketStatus_get, _thostmduserapi.CThostFtdcExchangeSequenceField_MarketStatus_set, doc=r"""合约交易状态""")

    def __init__(self):
        _thostmduserapi.CThostFtdcExchangeSequenceField_swiginit(self, _thostmduserapi.new_CThostFtdcExchangeSequenceField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcExchangeSequenceField

# Register CThostFtdcExchangeSequenceField in _thostmduserapi:
_thostmduserapi.CThostFtdcExchangeSequenceField_swigregister(CThostFtdcExchangeSequenceField)
class CThostFtdcQryMaxOrderVolumeWithPriceField(object):
    r"""根据价格查询最大报单数量"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcQryMaxOrderVolumeWithPriceField_BrokerID_get, _thostmduserapi.CThostFtdcQryMaxOrderVolumeWithPriceField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "TThostFtdcInvestorIDType" = property(_thostmduserapi.CThostFtdcQryMaxOrderVolumeWithPriceField_InvestorID_get, _thostmduserapi.CThostFtdcQryMaxOrderVolumeWithPriceField_InvestorID_set, doc=r"""投资者代码""")
    reserve1: "TThostFtdcOldInstrumentIDType" = property(_thostmduserapi.CThostFtdcQryMaxOrderVolumeWithPriceField_reserve1_get, _thostmduserapi.CThostFtdcQryMaxOrderVolumeWithPriceField_reserve1_set, doc=r"""保留的无效字段""")
    Direction: "TThostFtdcDirectionType" = property(_thostmduserapi.CThostFtdcQryMaxOrderVolumeWithPriceField_Direction_get, _thostmduserapi.CThostFtdcQryMaxOrderVolumeWithPriceField_Direction_set, doc=r"""买卖方向""")
    OffsetFlag: "TThostFtdcOffsetFlagType" = property(_thostmduserapi.CThostFtdcQryMaxOrderVolumeWithPriceField_OffsetFlag_get, _thostmduserapi.CThostFtdcQryMaxOrderVolumeWithPriceField_OffsetFlag_set, doc=r"""开平标志""")
    HedgeFlag: "TThostFtdcHedgeFlagType" = property(_thostmduserapi.CThostFtdcQryMaxOrderVolumeWithPriceField_HedgeFlag_get, _thostmduserapi.CThostFtdcQryMaxOrderVolumeWithPriceField_HedgeFlag_set, doc=r"""投机套保标志""")
    MaxVolume: "TThostFtdcVolumeType" = property(_thostmduserapi.CThostFtdcQryMaxOrderVolumeWithPriceField_MaxVolume_get, _thostmduserapi.CThostFtdcQryMaxOrderVolumeWithPriceField_MaxVolume_set, doc=r"""最大允许报单数量""")
    Price: "TThostFtdcPriceType" = property(_thostmduserapi.CThostFtdcQryMaxOrderVolumeWithPriceField_Price_get, _thostmduserapi.CThostFtdcQryMaxOrderVolumeWithPriceField_Price_set, doc=r"""报单价格""")
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcQryMaxOrderVolumeWithPriceField_ExchangeID_get, _thostmduserapi.CThostFtdcQryMaxOrderVolumeWithPriceField_ExchangeID_set, doc=r"""交易所代码""")
    InvestUnitID: "TThostFtdcInvestUnitIDType" = property(_thostmduserapi.CThostFtdcQryMaxOrderVolumeWithPriceField_InvestUnitID_get, _thostmduserapi.CThostFtdcQryMaxOrderVolumeWithPriceField_InvestUnitID_set, doc=r"""投资单元代码""")
    InstrumentID: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcQryMaxOrderVolumeWithPriceField_InstrumentID_get, _thostmduserapi.CThostFtdcQryMaxOrderVolumeWithPriceField_InstrumentID_set, doc=r"""合约代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcQryMaxOrderVolumeWithPriceField_swiginit(self, _thostmduserapi.new_CThostFtdcQryMaxOrderVolumeWithPriceField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcQryMaxOrderVolumeWithPriceField

# Register CThostFtdcQryMaxOrderVolumeWithPriceField in _thostmduserapi:
_thostmduserapi.CThostFtdcQryMaxOrderVolumeWithPriceField_swigregister(CThostFtdcQryMaxOrderVolumeWithPriceField)
class CThostFtdcQryBrokerTradingParamsField(object):
    r"""查询经纪公司交易参数"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcQryBrokerTradingParamsField_BrokerID_get, _thostmduserapi.CThostFtdcQryBrokerTradingParamsField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "TThostFtdcInvestorIDType" = property(_thostmduserapi.CThostFtdcQryBrokerTradingParamsField_InvestorID_get, _thostmduserapi.CThostFtdcQryBrokerTradingParamsField_InvestorID_set, doc=r"""投资者代码""")
    CurrencyID: "TThostFtdcCurrencyIDType" = property(_thostmduserapi.CThostFtdcQryBrokerTradingParamsField_CurrencyID_get, _thostmduserapi.CThostFtdcQryBrokerTradingParamsField_CurrencyID_set, doc=r"""币种代码""")
    AccountID: "TThostFtdcAccountIDType" = property(_thostmduserapi.CThostFtdcQryBrokerTradingParamsField_AccountID_get, _thostmduserapi.CThostFtdcQryBrokerTradingParamsField_AccountID_set, doc=r"""投资者帐号""")

    def __init__(self):
        _thostmduserapi.CThostFtdcQryBrokerTradingParamsField_swiginit(self, _thostmduserapi.new_CThostFtdcQryBrokerTradingParamsField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcQryBrokerTradingParamsField

# Register CThostFtdcQryBrokerTradingParamsField in _thostmduserapi:
_thostmduserapi.CThostFtdcQryBrokerTradingParamsField_swigregister(CThostFtdcQryBrokerTradingParamsField)
class CThostFtdcBrokerTradingParamsField(object):
    r"""经纪公司交易参数"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcBrokerTradingParamsField_BrokerID_get, _thostmduserapi.CThostFtdcBrokerTradingParamsField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "TThostFtdcInvestorIDType" = property(_thostmduserapi.CThostFtdcBrokerTradingParamsField_InvestorID_get, _thostmduserapi.CThostFtdcBrokerTradingParamsField_InvestorID_set, doc=r"""投资者代码""")
    MarginPriceType: "TThostFtdcMarginPriceTypeType" = property(_thostmduserapi.CThostFtdcBrokerTradingParamsField_MarginPriceType_get, _thostmduserapi.CThostFtdcBrokerTradingParamsField_MarginPriceType_set, doc=r"""保证金价格类型""")
    Algorithm: "TThostFtdcAlgorithmType" = property(_thostmduserapi.CThostFtdcBrokerTradingParamsField_Algorithm_get, _thostmduserapi.CThostFtdcBrokerTradingParamsField_Algorithm_set, doc=r"""盈亏算法""")
    AvailIncludeCloseProfit: "TThostFtdcIncludeCloseProfitType" = property(_thostmduserapi.CThostFtdcBrokerTradingParamsField_AvailIncludeCloseProfit_get, _thostmduserapi.CThostFtdcBrokerTradingParamsField_AvailIncludeCloseProfit_set, doc=r"""可用是否包含平仓盈利""")
    CurrencyID: "TThostFtdcCurrencyIDType" = property(_thostmduserapi.CThostFtdcBrokerTradingParamsField_CurrencyID_get, _thostmduserapi.CThostFtdcBrokerTradingParamsField_CurrencyID_set, doc=r"""币种代码""")
    OptionRoyaltyPriceType: "TThostFtdcOptionRoyaltyPriceTypeType" = property(_thostmduserapi.CThostFtdcBrokerTradingParamsField_OptionRoyaltyPriceType_get, _thostmduserapi.CThostFtdcBrokerTradingParamsField_OptionRoyaltyPriceType_set, doc=r"""期权权利金价格类型""")
    AccountID: "TThostFtdcAccountIDType" = property(_thostmduserapi.CThostFtdcBrokerTradingParamsField_AccountID_get, _thostmduserapi.CThostFtdcBrokerTradingParamsField_AccountID_set, doc=r"""投资者帐号""")

    def __init__(self):
        _thostmduserapi.CThostFtdcBrokerTradingParamsField_swiginit(self, _thostmduserapi.new_CThostFtdcBrokerTradingParamsField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcBrokerTradingParamsField

# Register CThostFtdcBrokerTradingParamsField in _thostmduserapi:
_thostmduserapi.CThostFtdcBrokerTradingParamsField_swigregister(CThostFtdcBrokerTradingParamsField)
class CThostFtdcQryBrokerTradingAlgosField(object):
    r"""查询经纪公司交易算法"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcQryBrokerTradingAlgosField_BrokerID_get, _thostmduserapi.CThostFtdcQryBrokerTradingAlgosField_BrokerID_set, doc=r"""经纪公司代码""")
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcQryBrokerTradingAlgosField_ExchangeID_get, _thostmduserapi.CThostFtdcQryBrokerTradingAlgosField_ExchangeID_set, doc=r"""交易所代码""")
    reserve1: "TThostFtdcOldInstrumentIDType" = property(_thostmduserapi.CThostFtdcQryBrokerTradingAlgosField_reserve1_get, _thostmduserapi.CThostFtdcQryBrokerTradingAlgosField_reserve1_set, doc=r"""保留的无效字段""")
    InstrumentID: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcQryBrokerTradingAlgosField_InstrumentID_get, _thostmduserapi.CThostFtdcQryBrokerTradingAlgosField_InstrumentID_set, doc=r"""合约代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcQryBrokerTradingAlgosField_swiginit(self, _thostmduserapi.new_CThostFtdcQryBrokerTradingAlgosField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcQryBrokerTradingAlgosField

# Register CThostFtdcQryBrokerTradingAlgosField in _thostmduserapi:
_thostmduserapi.CThostFtdcQryBrokerTradingAlgosField_swigregister(CThostFtdcQryBrokerTradingAlgosField)
class CThostFtdcBrokerTradingAlgosField(object):
    r"""经纪公司交易算法"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcBrokerTradingAlgosField_BrokerID_get, _thostmduserapi.CThostFtdcBrokerTradingAlgosField_BrokerID_set, doc=r"""经纪公司代码""")
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcBrokerTradingAlgosField_ExchangeID_get, _thostmduserapi.CThostFtdcBrokerTradingAlgosField_ExchangeID_set, doc=r"""交易所代码""")
    reserve1: "TThostFtdcOldInstrumentIDType" = property(_thostmduserapi.CThostFtdcBrokerTradingAlgosField_reserve1_get, _thostmduserapi.CThostFtdcBrokerTradingAlgosField_reserve1_set, doc=r"""保留的无效字段""")
    HandlePositionAlgoID: "TThostFtdcHandlePositionAlgoIDType" = property(_thostmduserapi.CThostFtdcBrokerTradingAlgosField_HandlePositionAlgoID_get, _thostmduserapi.CThostFtdcBrokerTradingAlgosField_HandlePositionAlgoID_set, doc=r"""持仓处理算法编号""")
    FindMarginRateAlgoID: "TThostFtdcFindMarginRateAlgoIDType" = property(_thostmduserapi.CThostFtdcBrokerTradingAlgosField_FindMarginRateAlgoID_get, _thostmduserapi.CThostFtdcBrokerTradingAlgosField_FindMarginRateAlgoID_set, doc=r"""寻找保证金率算法编号""")
    HandleTradingAccountAlgoID: "TThostFtdcHandleTradingAccountAlgoIDType" = property(_thostmduserapi.CThostFtdcBrokerTradingAlgosField_HandleTradingAccountAlgoID_get, _thostmduserapi.CThostFtdcBrokerTradingAlgosField_HandleTradingAccountAlgoID_set, doc=r"""资金处理算法编号""")
    InstrumentID: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcBrokerTradingAlgosField_InstrumentID_get, _thostmduserapi.CThostFtdcBrokerTradingAlgosField_InstrumentID_set, doc=r"""合约代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcBrokerTradingAlgosField_swiginit(self, _thostmduserapi.new_CThostFtdcBrokerTradingAlgosField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcBrokerTradingAlgosField

# Register CThostFtdcBrokerTradingAlgosField in _thostmduserapi:
_thostmduserapi.CThostFtdcBrokerTradingAlgosField_swigregister(CThostFtdcBrokerTradingAlgosField)
class CThostFtdcQueryBrokerDepositField(object):
    r"""查询经纪公司资金"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcQueryBrokerDepositField_BrokerID_get, _thostmduserapi.CThostFtdcQueryBrokerDepositField_BrokerID_set, doc=r"""经纪公司代码""")
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcQueryBrokerDepositField_ExchangeID_get, _thostmduserapi.CThostFtdcQueryBrokerDepositField_ExchangeID_set, doc=r"""交易所代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcQueryBrokerDepositField_swiginit(self, _thostmduserapi.new_CThostFtdcQueryBrokerDepositField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcQueryBrokerDepositField

# Register CThostFtdcQueryBrokerDepositField in _thostmduserapi:
_thostmduserapi.CThostFtdcQueryBrokerDepositField_swigregister(CThostFtdcQueryBrokerDepositField)
class CThostFtdcBrokerDepositField(object):
    r"""经纪公司资金"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    TradingDay: "TThostFtdcTradeDateType" = property(_thostmduserapi.CThostFtdcBrokerDepositField_TradingDay_get, _thostmduserapi.CThostFtdcBrokerDepositField_TradingDay_set, doc=r"""交易日期""")
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcBrokerDepositField_BrokerID_get, _thostmduserapi.CThostFtdcBrokerDepositField_BrokerID_set, doc=r"""经纪公司代码""")
    ParticipantID: "TThostFtdcParticipantIDType" = property(_thostmduserapi.CThostFtdcBrokerDepositField_ParticipantID_get, _thostmduserapi.CThostFtdcBrokerDepositField_ParticipantID_set, doc=r"""会员代码""")
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcBrokerDepositField_ExchangeID_get, _thostmduserapi.CThostFtdcBrokerDepositField_ExchangeID_set, doc=r"""交易所代码""")
    PreBalance: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcBrokerDepositField_PreBalance_get, _thostmduserapi.CThostFtdcBrokerDepositField_PreBalance_set, doc=r"""上次结算准备金""")
    CurrMargin: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcBrokerDepositField_CurrMargin_get, _thostmduserapi.CThostFtdcBrokerDepositField_CurrMargin_set, doc=r"""当前保证金总额""")
    CloseProfit: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcBrokerDepositField_CloseProfit_get, _thostmduserapi.CThostFtdcBrokerDepositField_CloseProfit_set, doc=r"""平仓盈亏""")
    Balance: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcBrokerDepositField_Balance_get, _thostmduserapi.CThostFtdcBrokerDepositField_Balance_set, doc=r"""期货结算准备金""")
    Deposit: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcBrokerDepositField_Deposit_get, _thostmduserapi.CThostFtdcBrokerDepositField_Deposit_set, doc=r"""入金金额""")
    Withdraw: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcBrokerDepositField_Withdraw_get, _thostmduserapi.CThostFtdcBrokerDepositField_Withdraw_set, doc=r"""出金金额""")
    Available: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcBrokerDepositField_Available_get, _thostmduserapi.CThostFtdcBrokerDepositField_Available_set, doc=r"""可提资金""")
    Reserve: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcBrokerDepositField_Reserve_get, _thostmduserapi.CThostFtdcBrokerDepositField_Reserve_set, doc=r"""基本准备金""")
    FrozenMargin: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcBrokerDepositField_FrozenMargin_get, _thostmduserapi.CThostFtdcBrokerDepositField_FrozenMargin_set, doc=r"""冻结的保证金""")

    def __init__(self):
        _thostmduserapi.CThostFtdcBrokerDepositField_swiginit(self, _thostmduserapi.new_CThostFtdcBrokerDepositField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcBrokerDepositField

# Register CThostFtdcBrokerDepositField in _thostmduserapi:
_thostmduserapi.CThostFtdcBrokerDepositField_swigregister(CThostFtdcBrokerDepositField)
class CThostFtdcQryCFMMCBrokerKeyField(object):
    r"""查询保证金监管系统经纪公司密钥"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcQryCFMMCBrokerKeyField_BrokerID_get, _thostmduserapi.CThostFtdcQryCFMMCBrokerKeyField_BrokerID_set, doc=r"""经纪公司代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcQryCFMMCBrokerKeyField_swiginit(self, _thostmduserapi.new_CThostFtdcQryCFMMCBrokerKeyField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcQryCFMMCBrokerKeyField

# Register CThostFtdcQryCFMMCBrokerKeyField in _thostmduserapi:
_thostmduserapi.CThostFtdcQryCFMMCBrokerKeyField_swigregister(CThostFtdcQryCFMMCBrokerKeyField)
class CThostFtdcCFMMCBrokerKeyField(object):
    r"""保证金监管系统经纪公司密钥"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcCFMMCBrokerKeyField_BrokerID_get, _thostmduserapi.CThostFtdcCFMMCBrokerKeyField_BrokerID_set, doc=r"""经纪公司代码""")
    ParticipantID: "TThostFtdcParticipantIDType" = property(_thostmduserapi.CThostFtdcCFMMCBrokerKeyField_ParticipantID_get, _thostmduserapi.CThostFtdcCFMMCBrokerKeyField_ParticipantID_set, doc=r"""经纪公司统一编码""")
    CreateDate: "TThostFtdcDateType" = property(_thostmduserapi.CThostFtdcCFMMCBrokerKeyField_CreateDate_get, _thostmduserapi.CThostFtdcCFMMCBrokerKeyField_CreateDate_set, doc=r"""密钥生成日期""")
    CreateTime: "TThostFtdcTimeType" = property(_thostmduserapi.CThostFtdcCFMMCBrokerKeyField_CreateTime_get, _thostmduserapi.CThostFtdcCFMMCBrokerKeyField_CreateTime_set, doc=r"""密钥生成时间""")
    KeyID: "TThostFtdcSequenceNoType" = property(_thostmduserapi.CThostFtdcCFMMCBrokerKeyField_KeyID_get, _thostmduserapi.CThostFtdcCFMMCBrokerKeyField_KeyID_set, doc=r"""密钥编号""")
    CurrentKey: "TThostFtdcCFMMCKeyType" = property(_thostmduserapi.CThostFtdcCFMMCBrokerKeyField_CurrentKey_get, _thostmduserapi.CThostFtdcCFMMCBrokerKeyField_CurrentKey_set, doc=r"""动态密钥""")
    KeyKind: "TThostFtdcCFMMCKeyKindType" = property(_thostmduserapi.CThostFtdcCFMMCBrokerKeyField_KeyKind_get, _thostmduserapi.CThostFtdcCFMMCBrokerKeyField_KeyKind_set, doc=r"""动态密钥类型""")

    def __init__(self):
        _thostmduserapi.CThostFtdcCFMMCBrokerKeyField_swiginit(self, _thostmduserapi.new_CThostFtdcCFMMCBrokerKeyField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcCFMMCBrokerKeyField

# Register CThostFtdcCFMMCBrokerKeyField in _thostmduserapi:
_thostmduserapi.CThostFtdcCFMMCBrokerKeyField_swigregister(CThostFtdcCFMMCBrokerKeyField)
class CThostFtdcCFMMCTradingAccountKeyField(object):
    r"""保证金监管系统经纪公司资金账户密钥"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcCFMMCTradingAccountKeyField_BrokerID_get, _thostmduserapi.CThostFtdcCFMMCTradingAccountKeyField_BrokerID_set, doc=r"""经纪公司代码""")
    ParticipantID: "TThostFtdcParticipantIDType" = property(_thostmduserapi.CThostFtdcCFMMCTradingAccountKeyField_ParticipantID_get, _thostmduserapi.CThostFtdcCFMMCTradingAccountKeyField_ParticipantID_set, doc=r"""经纪公司统一编码""")
    AccountID: "TThostFtdcAccountIDType" = property(_thostmduserapi.CThostFtdcCFMMCTradingAccountKeyField_AccountID_get, _thostmduserapi.CThostFtdcCFMMCTradingAccountKeyField_AccountID_set, doc=r"""投资者帐号""")
    KeyID: "TThostFtdcSequenceNoType" = property(_thostmduserapi.CThostFtdcCFMMCTradingAccountKeyField_KeyID_get, _thostmduserapi.CThostFtdcCFMMCTradingAccountKeyField_KeyID_set, doc=r"""密钥编号""")
    CurrentKey: "TThostFtdcCFMMCKeyType" = property(_thostmduserapi.CThostFtdcCFMMCTradingAccountKeyField_CurrentKey_get, _thostmduserapi.CThostFtdcCFMMCTradingAccountKeyField_CurrentKey_set, doc=r"""动态密钥""")

    def __init__(self):
        _thostmduserapi.CThostFtdcCFMMCTradingAccountKeyField_swiginit(self, _thostmduserapi.new_CThostFtdcCFMMCTradingAccountKeyField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcCFMMCTradingAccountKeyField

# Register CThostFtdcCFMMCTradingAccountKeyField in _thostmduserapi:
_thostmduserapi.CThostFtdcCFMMCTradingAccountKeyField_swigregister(CThostFtdcCFMMCTradingAccountKeyField)
class CThostFtdcQryCFMMCTradingAccountKeyField(object):
    r"""请求查询保证金监管系统经纪公司资金账户密钥"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcQryCFMMCTradingAccountKeyField_BrokerID_get, _thostmduserapi.CThostFtdcQryCFMMCTradingAccountKeyField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "TThostFtdcInvestorIDType" = property(_thostmduserapi.CThostFtdcQryCFMMCTradingAccountKeyField_InvestorID_get, _thostmduserapi.CThostFtdcQryCFMMCTradingAccountKeyField_InvestorID_set, doc=r"""投资者代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcQryCFMMCTradingAccountKeyField_swiginit(self, _thostmduserapi.new_CThostFtdcQryCFMMCTradingAccountKeyField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcQryCFMMCTradingAccountKeyField

# Register CThostFtdcQryCFMMCTradingAccountKeyField in _thostmduserapi:
_thostmduserapi.CThostFtdcQryCFMMCTradingAccountKeyField_swigregister(CThostFtdcQryCFMMCTradingAccountKeyField)
class CThostFtdcBrokerUserOTPParamField(object):
    r"""用户动态令牌参数"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcBrokerUserOTPParamField_BrokerID_get, _thostmduserapi.CThostFtdcBrokerUserOTPParamField_BrokerID_set, doc=r"""经纪公司代码""")
    UserID: "TThostFtdcUserIDType" = property(_thostmduserapi.CThostFtdcBrokerUserOTPParamField_UserID_get, _thostmduserapi.CThostFtdcBrokerUserOTPParamField_UserID_set, doc=r"""用户代码""")
    OTPVendorsID: "TThostFtdcOTPVendorsIDType" = property(_thostmduserapi.CThostFtdcBrokerUserOTPParamField_OTPVendorsID_get, _thostmduserapi.CThostFtdcBrokerUserOTPParamField_OTPVendorsID_set, doc=r"""动态令牌提供商""")
    SerialNumber: "TThostFtdcSerialNumberType" = property(_thostmduserapi.CThostFtdcBrokerUserOTPParamField_SerialNumber_get, _thostmduserapi.CThostFtdcBrokerUserOTPParamField_SerialNumber_set, doc=r"""动态令牌序列号""")
    AuthKey: "TThostFtdcAuthKeyType" = property(_thostmduserapi.CThostFtdcBrokerUserOTPParamField_AuthKey_get, _thostmduserapi.CThostFtdcBrokerUserOTPParamField_AuthKey_set, doc=r"""令牌密钥""")
    LastDrift: "TThostFtdcLastDriftType" = property(_thostmduserapi.CThostFtdcBrokerUserOTPParamField_LastDrift_get, _thostmduserapi.CThostFtdcBrokerUserOTPParamField_LastDrift_set, doc=r"""漂移值""")
    LastSuccess: "TThostFtdcLastSuccessType" = property(_thostmduserapi.CThostFtdcBrokerUserOTPParamField_LastSuccess_get, _thostmduserapi.CThostFtdcBrokerUserOTPParamField_LastSuccess_set, doc=r"""成功值""")
    OTPType: "TThostFtdcOTPTypeType" = property(_thostmduserapi.CThostFtdcBrokerUserOTPParamField_OTPType_get, _thostmduserapi.CThostFtdcBrokerUserOTPParamField_OTPType_set, doc=r"""动态令牌类型""")

    def __init__(self):
        _thostmduserapi.CThostFtdcBrokerUserOTPParamField_swiginit(self, _thostmduserapi.new_CThostFtdcBrokerUserOTPParamField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcBrokerUserOTPParamField

# Register CThostFtdcBrokerUserOTPParamField in _thostmduserapi:
_thostmduserapi.CThostFtdcBrokerUserOTPParamField_swigregister(CThostFtdcBrokerUserOTPParamField)
class CThostFtdcManualSyncBrokerUserOTPField(object):
    r"""手工同步用户动态令牌"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcManualSyncBrokerUserOTPField_BrokerID_get, _thostmduserapi.CThostFtdcManualSyncBrokerUserOTPField_BrokerID_set, doc=r"""经纪公司代码""")
    UserID: "TThostFtdcUserIDType" = property(_thostmduserapi.CThostFtdcManualSyncBrokerUserOTPField_UserID_get, _thostmduserapi.CThostFtdcManualSyncBrokerUserOTPField_UserID_set, doc=r"""用户代码""")
    OTPType: "TThostFtdcOTPTypeType" = property(_thostmduserapi.CThostFtdcManualSyncBrokerUserOTPField_OTPType_get, _thostmduserapi.CThostFtdcManualSyncBrokerUserOTPField_OTPType_set, doc=r"""动态令牌类型""")
    FirstOTP: "TThostFtdcPasswordType" = property(_thostmduserapi.CThostFtdcManualSyncBrokerUserOTPField_FirstOTP_get, _thostmduserapi.CThostFtdcManualSyncBrokerUserOTPField_FirstOTP_set, doc=r"""第一个动态密码""")
    SecondOTP: "TThostFtdcPasswordType" = property(_thostmduserapi.CThostFtdcManualSyncBrokerUserOTPField_SecondOTP_get, _thostmduserapi.CThostFtdcManualSyncBrokerUserOTPField_SecondOTP_set, doc=r"""第二个动态密码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcManualSyncBrokerUserOTPField_swiginit(self, _thostmduserapi.new_CThostFtdcManualSyncBrokerUserOTPField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcManualSyncBrokerUserOTPField

# Register CThostFtdcManualSyncBrokerUserOTPField in _thostmduserapi:
_thostmduserapi.CThostFtdcManualSyncBrokerUserOTPField_swigregister(CThostFtdcManualSyncBrokerUserOTPField)
class CThostFtdcCommRateModelField(object):
    r"""投资者手续费率模板"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcCommRateModelField_BrokerID_get, _thostmduserapi.CThostFtdcCommRateModelField_BrokerID_set, doc=r"""经纪公司代码""")
    CommModelID: "TThostFtdcInvestorIDType" = property(_thostmduserapi.CThostFtdcCommRateModelField_CommModelID_get, _thostmduserapi.CThostFtdcCommRateModelField_CommModelID_set, doc=r"""手续费率模板代码""")
    CommModelName: "TThostFtdcCommModelNameType" = property(_thostmduserapi.CThostFtdcCommRateModelField_CommModelName_get, _thostmduserapi.CThostFtdcCommRateModelField_CommModelName_set, doc=r"""模板名称""")

    def __init__(self):
        _thostmduserapi.CThostFtdcCommRateModelField_swiginit(self, _thostmduserapi.new_CThostFtdcCommRateModelField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcCommRateModelField

# Register CThostFtdcCommRateModelField in _thostmduserapi:
_thostmduserapi.CThostFtdcCommRateModelField_swigregister(CThostFtdcCommRateModelField)
class CThostFtdcQryCommRateModelField(object):
    r"""请求查询投资者手续费率模板"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcQryCommRateModelField_BrokerID_get, _thostmduserapi.CThostFtdcQryCommRateModelField_BrokerID_set, doc=r"""经纪公司代码""")
    CommModelID: "TThostFtdcInvestorIDType" = property(_thostmduserapi.CThostFtdcQryCommRateModelField_CommModelID_get, _thostmduserapi.CThostFtdcQryCommRateModelField_CommModelID_set, doc=r"""手续费率模板代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcQryCommRateModelField_swiginit(self, _thostmduserapi.new_CThostFtdcQryCommRateModelField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcQryCommRateModelField

# Register CThostFtdcQryCommRateModelField in _thostmduserapi:
_thostmduserapi.CThostFtdcQryCommRateModelField_swigregister(CThostFtdcQryCommRateModelField)
class CThostFtdcMarginModelField(object):
    r"""投资者保证金率模板"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcMarginModelField_BrokerID_get, _thostmduserapi.CThostFtdcMarginModelField_BrokerID_set, doc=r"""经纪公司代码""")
    MarginModelID: "TThostFtdcInvestorIDType" = property(_thostmduserapi.CThostFtdcMarginModelField_MarginModelID_get, _thostmduserapi.CThostFtdcMarginModelField_MarginModelID_set, doc=r"""保证金率模板代码""")
    MarginModelName: "TThostFtdcCommModelNameType" = property(_thostmduserapi.CThostFtdcMarginModelField_MarginModelName_get, _thostmduserapi.CThostFtdcMarginModelField_MarginModelName_set, doc=r"""模板名称""")

    def __init__(self):
        _thostmduserapi.CThostFtdcMarginModelField_swiginit(self, _thostmduserapi.new_CThostFtdcMarginModelField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcMarginModelField

# Register CThostFtdcMarginModelField in _thostmduserapi:
_thostmduserapi.CThostFtdcMarginModelField_swigregister(CThostFtdcMarginModelField)
class CThostFtdcQryMarginModelField(object):
    r"""请求查询投资者保证金率模板"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcQryMarginModelField_BrokerID_get, _thostmduserapi.CThostFtdcQryMarginModelField_BrokerID_set, doc=r"""经纪公司代码""")
    MarginModelID: "TThostFtdcInvestorIDType" = property(_thostmduserapi.CThostFtdcQryMarginModelField_MarginModelID_get, _thostmduserapi.CThostFtdcQryMarginModelField_MarginModelID_set, doc=r"""保证金率模板代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcQryMarginModelField_swiginit(self, _thostmduserapi.new_CThostFtdcQryMarginModelField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcQryMarginModelField

# Register CThostFtdcQryMarginModelField in _thostmduserapi:
_thostmduserapi.CThostFtdcQryMarginModelField_swigregister(CThostFtdcQryMarginModelField)
class CThostFtdcEWarrantOffsetField(object):
    r"""仓单折抵信息"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    TradingDay: "TThostFtdcTradeDateType" = property(_thostmduserapi.CThostFtdcEWarrantOffsetField_TradingDay_get, _thostmduserapi.CThostFtdcEWarrantOffsetField_TradingDay_set, doc=r"""交易日期""")
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcEWarrantOffsetField_BrokerID_get, _thostmduserapi.CThostFtdcEWarrantOffsetField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "TThostFtdcInvestorIDType" = property(_thostmduserapi.CThostFtdcEWarrantOffsetField_InvestorID_get, _thostmduserapi.CThostFtdcEWarrantOffsetField_InvestorID_set, doc=r"""投资者代码""")
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcEWarrantOffsetField_ExchangeID_get, _thostmduserapi.CThostFtdcEWarrantOffsetField_ExchangeID_set, doc=r"""交易所代码""")
    reserve1: "TThostFtdcOldInstrumentIDType" = property(_thostmduserapi.CThostFtdcEWarrantOffsetField_reserve1_get, _thostmduserapi.CThostFtdcEWarrantOffsetField_reserve1_set, doc=r"""保留的无效字段""")
    Direction: "TThostFtdcDirectionType" = property(_thostmduserapi.CThostFtdcEWarrantOffsetField_Direction_get, _thostmduserapi.CThostFtdcEWarrantOffsetField_Direction_set, doc=r"""买卖方向""")
    HedgeFlag: "TThostFtdcHedgeFlagType" = property(_thostmduserapi.CThostFtdcEWarrantOffsetField_HedgeFlag_get, _thostmduserapi.CThostFtdcEWarrantOffsetField_HedgeFlag_set, doc=r"""投机套保标志""")
    Volume: "TThostFtdcVolumeType" = property(_thostmduserapi.CThostFtdcEWarrantOffsetField_Volume_get, _thostmduserapi.CThostFtdcEWarrantOffsetField_Volume_set, doc=r"""数量""")
    InvestUnitID: "TThostFtdcInvestUnitIDType" = property(_thostmduserapi.CThostFtdcEWarrantOffsetField_InvestUnitID_get, _thostmduserapi.CThostFtdcEWarrantOffsetField_InvestUnitID_set, doc=r"""投资单元代码""")
    InstrumentID: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcEWarrantOffsetField_InstrumentID_get, _thostmduserapi.CThostFtdcEWarrantOffsetField_InstrumentID_set, doc=r"""合约代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcEWarrantOffsetField_swiginit(self, _thostmduserapi.new_CThostFtdcEWarrantOffsetField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcEWarrantOffsetField

# Register CThostFtdcEWarrantOffsetField in _thostmduserapi:
_thostmduserapi.CThostFtdcEWarrantOffsetField_swigregister(CThostFtdcEWarrantOffsetField)
class CThostFtdcQryEWarrantOffsetField(object):
    r"""查询仓单折抵信息"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcQryEWarrantOffsetField_BrokerID_get, _thostmduserapi.CThostFtdcQryEWarrantOffsetField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "TThostFtdcInvestorIDType" = property(_thostmduserapi.CThostFtdcQryEWarrantOffsetField_InvestorID_get, _thostmduserapi.CThostFtdcQryEWarrantOffsetField_InvestorID_set, doc=r"""投资者代码""")
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcQryEWarrantOffsetField_ExchangeID_get, _thostmduserapi.CThostFtdcQryEWarrantOffsetField_ExchangeID_set, doc=r"""交易所代码""")
    reserve1: "TThostFtdcOldInstrumentIDType" = property(_thostmduserapi.CThostFtdcQryEWarrantOffsetField_reserve1_get, _thostmduserapi.CThostFtdcQryEWarrantOffsetField_reserve1_set, doc=r"""保留的无效字段""")
    InvestUnitID: "TThostFtdcInvestUnitIDType" = property(_thostmduserapi.CThostFtdcQryEWarrantOffsetField_InvestUnitID_get, _thostmduserapi.CThostFtdcQryEWarrantOffsetField_InvestUnitID_set, doc=r"""投资单元代码""")
    InstrumentID: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcQryEWarrantOffsetField_InstrumentID_get, _thostmduserapi.CThostFtdcQryEWarrantOffsetField_InstrumentID_set, doc=r"""合约代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcQryEWarrantOffsetField_swiginit(self, _thostmduserapi.new_CThostFtdcQryEWarrantOffsetField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcQryEWarrantOffsetField

# Register CThostFtdcQryEWarrantOffsetField in _thostmduserapi:
_thostmduserapi.CThostFtdcQryEWarrantOffsetField_swigregister(CThostFtdcQryEWarrantOffsetField)
class CThostFtdcQryInvestorProductGroupMarginField(object):
    r"""查询投资者品种/跨品种保证金"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcQryInvestorProductGroupMarginField_BrokerID_get, _thostmduserapi.CThostFtdcQryInvestorProductGroupMarginField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "TThostFtdcInvestorIDType" = property(_thostmduserapi.CThostFtdcQryInvestorProductGroupMarginField_InvestorID_get, _thostmduserapi.CThostFtdcQryInvestorProductGroupMarginField_InvestorID_set, doc=r"""投资者代码""")
    reserve1: "TThostFtdcOldInstrumentIDType" = property(_thostmduserapi.CThostFtdcQryInvestorProductGroupMarginField_reserve1_get, _thostmduserapi.CThostFtdcQryInvestorProductGroupMarginField_reserve1_set, doc=r"""保留的无效字段""")
    HedgeFlag: "TThostFtdcHedgeFlagType" = property(_thostmduserapi.CThostFtdcQryInvestorProductGroupMarginField_HedgeFlag_get, _thostmduserapi.CThostFtdcQryInvestorProductGroupMarginField_HedgeFlag_set, doc=r"""投机套保标志""")
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcQryInvestorProductGroupMarginField_ExchangeID_get, _thostmduserapi.CThostFtdcQryInvestorProductGroupMarginField_ExchangeID_set, doc=r"""交易所代码""")
    InvestUnitID: "TThostFtdcInvestUnitIDType" = property(_thostmduserapi.CThostFtdcQryInvestorProductGroupMarginField_InvestUnitID_get, _thostmduserapi.CThostFtdcQryInvestorProductGroupMarginField_InvestUnitID_set, doc=r"""投资单元代码""")
    ProductGroupID: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcQryInvestorProductGroupMarginField_ProductGroupID_get, _thostmduserapi.CThostFtdcQryInvestorProductGroupMarginField_ProductGroupID_set, doc=r"""品种/跨品种标示""")

    def __init__(self):
        _thostmduserapi.CThostFtdcQryInvestorProductGroupMarginField_swiginit(self, _thostmduserapi.new_CThostFtdcQryInvestorProductGroupMarginField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcQryInvestorProductGroupMarginField

# Register CThostFtdcQryInvestorProductGroupMarginField in _thostmduserapi:
_thostmduserapi.CThostFtdcQryInvestorProductGroupMarginField_swigregister(CThostFtdcQryInvestorProductGroupMarginField)
class CThostFtdcInvestorProductGroupMarginField(object):
    r"""投资者品种/跨品种保证金"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    reserve1: "TThostFtdcOldInstrumentIDType" = property(_thostmduserapi.CThostFtdcInvestorProductGroupMarginField_reserve1_get, _thostmduserapi.CThostFtdcInvestorProductGroupMarginField_reserve1_set, doc=r"""保留的无效字段""")
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcInvestorProductGroupMarginField_BrokerID_get, _thostmduserapi.CThostFtdcInvestorProductGroupMarginField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "TThostFtdcInvestorIDType" = property(_thostmduserapi.CThostFtdcInvestorProductGroupMarginField_InvestorID_get, _thostmduserapi.CThostFtdcInvestorProductGroupMarginField_InvestorID_set, doc=r"""投资者代码""")
    TradingDay: "TThostFtdcDateType" = property(_thostmduserapi.CThostFtdcInvestorProductGroupMarginField_TradingDay_get, _thostmduserapi.CThostFtdcInvestorProductGroupMarginField_TradingDay_set, doc=r"""交易日""")
    SettlementID: "TThostFtdcSettlementIDType" = property(_thostmduserapi.CThostFtdcInvestorProductGroupMarginField_SettlementID_get, _thostmduserapi.CThostFtdcInvestorProductGroupMarginField_SettlementID_set, doc=r"""结算编号""")
    FrozenMargin: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcInvestorProductGroupMarginField_FrozenMargin_get, _thostmduserapi.CThostFtdcInvestorProductGroupMarginField_FrozenMargin_set, doc=r"""冻结的保证金""")
    LongFrozenMargin: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcInvestorProductGroupMarginField_LongFrozenMargin_get, _thostmduserapi.CThostFtdcInvestorProductGroupMarginField_LongFrozenMargin_set, doc=r"""多头冻结的保证金""")
    ShortFrozenMargin: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcInvestorProductGroupMarginField_ShortFrozenMargin_get, _thostmduserapi.CThostFtdcInvestorProductGroupMarginField_ShortFrozenMargin_set, doc=r"""空头冻结的保证金""")
    UseMargin: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcInvestorProductGroupMarginField_UseMargin_get, _thostmduserapi.CThostFtdcInvestorProductGroupMarginField_UseMargin_set, doc=r"""占用的保证金""")
    LongUseMargin: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcInvestorProductGroupMarginField_LongUseMargin_get, _thostmduserapi.CThostFtdcInvestorProductGroupMarginField_LongUseMargin_set, doc=r"""多头保证金""")
    ShortUseMargin: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcInvestorProductGroupMarginField_ShortUseMargin_get, _thostmduserapi.CThostFtdcInvestorProductGroupMarginField_ShortUseMargin_set, doc=r"""空头保证金""")
    ExchMargin: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcInvestorProductGroupMarginField_ExchMargin_get, _thostmduserapi.CThostFtdcInvestorProductGroupMarginField_ExchMargin_set, doc=r"""交易所保证金""")
    LongExchMargin: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcInvestorProductGroupMarginField_LongExchMargin_get, _thostmduserapi.CThostFtdcInvestorProductGroupMarginField_LongExchMargin_set, doc=r"""交易所多头保证金""")
    ShortExchMargin: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcInvestorProductGroupMarginField_ShortExchMargin_get, _thostmduserapi.CThostFtdcInvestorProductGroupMarginField_ShortExchMargin_set, doc=r"""交易所空头保证金""")
    CloseProfit: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcInvestorProductGroupMarginField_CloseProfit_get, _thostmduserapi.CThostFtdcInvestorProductGroupMarginField_CloseProfit_set, doc=r"""平仓盈亏""")
    FrozenCommission: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcInvestorProductGroupMarginField_FrozenCommission_get, _thostmduserapi.CThostFtdcInvestorProductGroupMarginField_FrozenCommission_set, doc=r"""冻结的手续费""")
    Commission: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcInvestorProductGroupMarginField_Commission_get, _thostmduserapi.CThostFtdcInvestorProductGroupMarginField_Commission_set, doc=r"""手续费""")
    FrozenCash: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcInvestorProductGroupMarginField_FrozenCash_get, _thostmduserapi.CThostFtdcInvestorProductGroupMarginField_FrozenCash_set, doc=r"""冻结的资金""")
    CashIn: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcInvestorProductGroupMarginField_CashIn_get, _thostmduserapi.CThostFtdcInvestorProductGroupMarginField_CashIn_set, doc=r"""资金差额""")
    PositionProfit: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcInvestorProductGroupMarginField_PositionProfit_get, _thostmduserapi.CThostFtdcInvestorProductGroupMarginField_PositionProfit_set, doc=r"""持仓盈亏""")
    OffsetAmount: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcInvestorProductGroupMarginField_OffsetAmount_get, _thostmduserapi.CThostFtdcInvestorProductGroupMarginField_OffsetAmount_set, doc=r"""折抵总金额""")
    LongOffsetAmount: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcInvestorProductGroupMarginField_LongOffsetAmount_get, _thostmduserapi.CThostFtdcInvestorProductGroupMarginField_LongOffsetAmount_set, doc=r"""多头折抵总金额""")
    ShortOffsetAmount: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcInvestorProductGroupMarginField_ShortOffsetAmount_get, _thostmduserapi.CThostFtdcInvestorProductGroupMarginField_ShortOffsetAmount_set, doc=r"""空头折抵总金额""")
    ExchOffsetAmount: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcInvestorProductGroupMarginField_ExchOffsetAmount_get, _thostmduserapi.CThostFtdcInvestorProductGroupMarginField_ExchOffsetAmount_set, doc=r"""交易所折抵总金额""")
    LongExchOffsetAmount: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcInvestorProductGroupMarginField_LongExchOffsetAmount_get, _thostmduserapi.CThostFtdcInvestorProductGroupMarginField_LongExchOffsetAmount_set, doc=r"""交易所多头折抵总金额""")
    ShortExchOffsetAmount: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcInvestorProductGroupMarginField_ShortExchOffsetAmount_get, _thostmduserapi.CThostFtdcInvestorProductGroupMarginField_ShortExchOffsetAmount_set, doc=r"""交易所空头折抵总金额""")
    HedgeFlag: "TThostFtdcHedgeFlagType" = property(_thostmduserapi.CThostFtdcInvestorProductGroupMarginField_HedgeFlag_get, _thostmduserapi.CThostFtdcInvestorProductGroupMarginField_HedgeFlag_set, doc=r"""投机套保标志""")
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcInvestorProductGroupMarginField_ExchangeID_get, _thostmduserapi.CThostFtdcInvestorProductGroupMarginField_ExchangeID_set, doc=r"""交易所代码""")
    InvestUnitID: "TThostFtdcInvestUnitIDType" = property(_thostmduserapi.CThostFtdcInvestorProductGroupMarginField_InvestUnitID_get, _thostmduserapi.CThostFtdcInvestorProductGroupMarginField_InvestUnitID_set, doc=r"""投资单元代码""")
    ProductGroupID: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcInvestorProductGroupMarginField_ProductGroupID_get, _thostmduserapi.CThostFtdcInvestorProductGroupMarginField_ProductGroupID_set, doc=r"""品种/跨品种标示""")

    def __init__(self):
        _thostmduserapi.CThostFtdcInvestorProductGroupMarginField_swiginit(self, _thostmduserapi.new_CThostFtdcInvestorProductGroupMarginField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcInvestorProductGroupMarginField

# Register CThostFtdcInvestorProductGroupMarginField in _thostmduserapi:
_thostmduserapi.CThostFtdcInvestorProductGroupMarginField_swigregister(CThostFtdcInvestorProductGroupMarginField)
class CThostFtdcQueryCFMMCTradingAccountTokenField(object):
    r"""查询监控中心用户令牌"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcQueryCFMMCTradingAccountTokenField_BrokerID_get, _thostmduserapi.CThostFtdcQueryCFMMCTradingAccountTokenField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "TThostFtdcInvestorIDType" = property(_thostmduserapi.CThostFtdcQueryCFMMCTradingAccountTokenField_InvestorID_get, _thostmduserapi.CThostFtdcQueryCFMMCTradingAccountTokenField_InvestorID_set, doc=r"""投资者代码""")
    InvestUnitID: "TThostFtdcInvestUnitIDType" = property(_thostmduserapi.CThostFtdcQueryCFMMCTradingAccountTokenField_InvestUnitID_get, _thostmduserapi.CThostFtdcQueryCFMMCTradingAccountTokenField_InvestUnitID_set, doc=r"""投资单元代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcQueryCFMMCTradingAccountTokenField_swiginit(self, _thostmduserapi.new_CThostFtdcQueryCFMMCTradingAccountTokenField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcQueryCFMMCTradingAccountTokenField

# Register CThostFtdcQueryCFMMCTradingAccountTokenField in _thostmduserapi:
_thostmduserapi.CThostFtdcQueryCFMMCTradingAccountTokenField_swigregister(CThostFtdcQueryCFMMCTradingAccountTokenField)
class CThostFtdcCFMMCTradingAccountTokenField(object):
    r"""监控中心用户令牌"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcCFMMCTradingAccountTokenField_BrokerID_get, _thostmduserapi.CThostFtdcCFMMCTradingAccountTokenField_BrokerID_set, doc=r"""经纪公司代码""")
    ParticipantID: "TThostFtdcParticipantIDType" = property(_thostmduserapi.CThostFtdcCFMMCTradingAccountTokenField_ParticipantID_get, _thostmduserapi.CThostFtdcCFMMCTradingAccountTokenField_ParticipantID_set, doc=r"""经纪公司统一编码""")
    AccountID: "TThostFtdcAccountIDType" = property(_thostmduserapi.CThostFtdcCFMMCTradingAccountTokenField_AccountID_get, _thostmduserapi.CThostFtdcCFMMCTradingAccountTokenField_AccountID_set, doc=r"""投资者帐号""")
    KeyID: "TThostFtdcSequenceNoType" = property(_thostmduserapi.CThostFtdcCFMMCTradingAccountTokenField_KeyID_get, _thostmduserapi.CThostFtdcCFMMCTradingAccountTokenField_KeyID_set, doc=r"""密钥编号""")
    Token: "TThostFtdcCFMMCTokenType" = property(_thostmduserapi.CThostFtdcCFMMCTradingAccountTokenField_Token_get, _thostmduserapi.CThostFtdcCFMMCTradingAccountTokenField_Token_set, doc=r"""动态令牌""")

    def __init__(self):
        _thostmduserapi.CThostFtdcCFMMCTradingAccountTokenField_swiginit(self, _thostmduserapi.new_CThostFtdcCFMMCTradingAccountTokenField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcCFMMCTradingAccountTokenField

# Register CThostFtdcCFMMCTradingAccountTokenField in _thostmduserapi:
_thostmduserapi.CThostFtdcCFMMCTradingAccountTokenField_swigregister(CThostFtdcCFMMCTradingAccountTokenField)
class CThostFtdcQryProductGroupField(object):
    r"""查询产品组"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    reserve1: "TThostFtdcOldInstrumentIDType" = property(_thostmduserapi.CThostFtdcQryProductGroupField_reserve1_get, _thostmduserapi.CThostFtdcQryProductGroupField_reserve1_set, doc=r"""保留的无效字段""")
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcQryProductGroupField_ExchangeID_get, _thostmduserapi.CThostFtdcQryProductGroupField_ExchangeID_set, doc=r"""交易所代码""")
    ProductID: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcQryProductGroupField_ProductID_get, _thostmduserapi.CThostFtdcQryProductGroupField_ProductID_set, doc=r"""产品代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcQryProductGroupField_swiginit(self, _thostmduserapi.new_CThostFtdcQryProductGroupField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcQryProductGroupField

# Register CThostFtdcQryProductGroupField in _thostmduserapi:
_thostmduserapi.CThostFtdcQryProductGroupField_swigregister(CThostFtdcQryProductGroupField)
class CThostFtdcProductGroupField(object):
    r"""投资者品种/跨品种保证金产品组"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    reserve1: "TThostFtdcOldInstrumentIDType" = property(_thostmduserapi.CThostFtdcProductGroupField_reserve1_get, _thostmduserapi.CThostFtdcProductGroupField_reserve1_set, doc=r"""保留的无效字段""")
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcProductGroupField_ExchangeID_get, _thostmduserapi.CThostFtdcProductGroupField_ExchangeID_set, doc=r"""交易所代码""")
    reserve2: "TThostFtdcOldInstrumentIDType" = property(_thostmduserapi.CThostFtdcProductGroupField_reserve2_get, _thostmduserapi.CThostFtdcProductGroupField_reserve2_set, doc=r"""保留的无效字段""")
    ProductID: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcProductGroupField_ProductID_get, _thostmduserapi.CThostFtdcProductGroupField_ProductID_set, doc=r"""产品代码""")
    ProductGroupID: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcProductGroupField_ProductGroupID_get, _thostmduserapi.CThostFtdcProductGroupField_ProductGroupID_set, doc=r"""产品组代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcProductGroupField_swiginit(self, _thostmduserapi.new_CThostFtdcProductGroupField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcProductGroupField

# Register CThostFtdcProductGroupField in _thostmduserapi:
_thostmduserapi.CThostFtdcProductGroupField_swigregister(CThostFtdcProductGroupField)
class CThostFtdcBulletinField(object):
    r"""交易所公告"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcBulletinField_ExchangeID_get, _thostmduserapi.CThostFtdcBulletinField_ExchangeID_set, doc=r"""交易所代码""")
    TradingDay: "TThostFtdcDateType" = property(_thostmduserapi.CThostFtdcBulletinField_TradingDay_get, _thostmduserapi.CThostFtdcBulletinField_TradingDay_set, doc=r"""交易日""")
    BulletinID: "TThostFtdcBulletinIDType" = property(_thostmduserapi.CThostFtdcBulletinField_BulletinID_get, _thostmduserapi.CThostFtdcBulletinField_BulletinID_set, doc=r"""公告编号""")
    SequenceNo: "TThostFtdcSequenceNoType" = property(_thostmduserapi.CThostFtdcBulletinField_SequenceNo_get, _thostmduserapi.CThostFtdcBulletinField_SequenceNo_set, doc=r"""序列号""")
    NewsType: "TThostFtdcNewsTypeType" = property(_thostmduserapi.CThostFtdcBulletinField_NewsType_get, _thostmduserapi.CThostFtdcBulletinField_NewsType_set, doc=r"""公告类型""")
    NewsUrgency: "TThostFtdcNewsUrgencyType" = property(_thostmduserapi.CThostFtdcBulletinField_NewsUrgency_get, _thostmduserapi.CThostFtdcBulletinField_NewsUrgency_set, doc=r"""紧急程度""")
    SendTime: "TThostFtdcTimeType" = property(_thostmduserapi.CThostFtdcBulletinField_SendTime_get, _thostmduserapi.CThostFtdcBulletinField_SendTime_set, doc=r"""发送时间""")
    Abstract: "TThostFtdcAbstractType" = property(_thostmduserapi.CThostFtdcBulletinField_Abstract_get, _thostmduserapi.CThostFtdcBulletinField_Abstract_set, doc=r"""消息摘要""")
    ComeFrom: "TThostFtdcComeFromType" = property(_thostmduserapi.CThostFtdcBulletinField_ComeFrom_get, _thostmduserapi.CThostFtdcBulletinField_ComeFrom_set, doc=r"""消息来源""")
    Content: "TThostFtdcContentType" = property(_thostmduserapi.CThostFtdcBulletinField_Content_get, _thostmduserapi.CThostFtdcBulletinField_Content_set, doc=r"""消息正文""")
    URLLink: "TThostFtdcURLLinkType" = property(_thostmduserapi.CThostFtdcBulletinField_URLLink_get, _thostmduserapi.CThostFtdcBulletinField_URLLink_set, doc=r"""WEB地址""")
    MarketID: "TThostFtdcMarketIDType" = property(_thostmduserapi.CThostFtdcBulletinField_MarketID_get, _thostmduserapi.CThostFtdcBulletinField_MarketID_set, doc=r"""市场代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcBulletinField_swiginit(self, _thostmduserapi.new_CThostFtdcBulletinField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcBulletinField

# Register CThostFtdcBulletinField in _thostmduserapi:
_thostmduserapi.CThostFtdcBulletinField_swigregister(CThostFtdcBulletinField)
class CThostFtdcQryBulletinField(object):
    r"""查询交易所公告"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcQryBulletinField_ExchangeID_get, _thostmduserapi.CThostFtdcQryBulletinField_ExchangeID_set, doc=r"""交易所代码""")
    BulletinID: "TThostFtdcBulletinIDType" = property(_thostmduserapi.CThostFtdcQryBulletinField_BulletinID_get, _thostmduserapi.CThostFtdcQryBulletinField_BulletinID_set, doc=r"""公告编号""")
    SequenceNo: "TThostFtdcSequenceNoType" = property(_thostmduserapi.CThostFtdcQryBulletinField_SequenceNo_get, _thostmduserapi.CThostFtdcQryBulletinField_SequenceNo_set, doc=r"""序列号""")
    NewsType: "TThostFtdcNewsTypeType" = property(_thostmduserapi.CThostFtdcQryBulletinField_NewsType_get, _thostmduserapi.CThostFtdcQryBulletinField_NewsType_set, doc=r"""公告类型""")
    NewsUrgency: "TThostFtdcNewsUrgencyType" = property(_thostmduserapi.CThostFtdcQryBulletinField_NewsUrgency_get, _thostmduserapi.CThostFtdcQryBulletinField_NewsUrgency_set, doc=r"""紧急程度""")

    def __init__(self):
        _thostmduserapi.CThostFtdcQryBulletinField_swiginit(self, _thostmduserapi.new_CThostFtdcQryBulletinField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcQryBulletinField

# Register CThostFtdcQryBulletinField in _thostmduserapi:
_thostmduserapi.CThostFtdcQryBulletinField_swigregister(CThostFtdcQryBulletinField)
class CThostFtdcMulticastInstrumentField(object):
    r"""MulticastInstrument"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    TopicID: "TThostFtdcInstallIDType" = property(_thostmduserapi.CThostFtdcMulticastInstrumentField_TopicID_get, _thostmduserapi.CThostFtdcMulticastInstrumentField_TopicID_set, doc=r"""主题号""")
    reserve1: "TThostFtdcOldInstrumentIDType" = property(_thostmduserapi.CThostFtdcMulticastInstrumentField_reserve1_get, _thostmduserapi.CThostFtdcMulticastInstrumentField_reserve1_set, doc=r"""保留的无效字段""")
    InstrumentNo: "TThostFtdcInstallIDType" = property(_thostmduserapi.CThostFtdcMulticastInstrumentField_InstrumentNo_get, _thostmduserapi.CThostFtdcMulticastInstrumentField_InstrumentNo_set, doc=r"""合约编号""")
    CodePrice: "TThostFtdcPriceType" = property(_thostmduserapi.CThostFtdcMulticastInstrumentField_CodePrice_get, _thostmduserapi.CThostFtdcMulticastInstrumentField_CodePrice_set, doc=r"""基准价""")
    VolumeMultiple: "TThostFtdcVolumeMultipleType" = property(_thostmduserapi.CThostFtdcMulticastInstrumentField_VolumeMultiple_get, _thostmduserapi.CThostFtdcMulticastInstrumentField_VolumeMultiple_set, doc=r"""合约数量乘数""")
    PriceTick: "TThostFtdcPriceType" = property(_thostmduserapi.CThostFtdcMulticastInstrumentField_PriceTick_get, _thostmduserapi.CThostFtdcMulticastInstrumentField_PriceTick_set, doc=r"""最小变动价位""")
    InstrumentID: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcMulticastInstrumentField_InstrumentID_get, _thostmduserapi.CThostFtdcMulticastInstrumentField_InstrumentID_set, doc=r"""合约代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcMulticastInstrumentField_swiginit(self, _thostmduserapi.new_CThostFtdcMulticastInstrumentField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcMulticastInstrumentField

# Register CThostFtdcMulticastInstrumentField in _thostmduserapi:
_thostmduserapi.CThostFtdcMulticastInstrumentField_swigregister(CThostFtdcMulticastInstrumentField)
class CThostFtdcQryMulticastInstrumentField(object):
    r"""QryMulticastInstrument"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    TopicID: "TThostFtdcInstallIDType" = property(_thostmduserapi.CThostFtdcQryMulticastInstrumentField_TopicID_get, _thostmduserapi.CThostFtdcQryMulticastInstrumentField_TopicID_set, doc=r"""主题号""")
    reserve1: "TThostFtdcOldInstrumentIDType" = property(_thostmduserapi.CThostFtdcQryMulticastInstrumentField_reserve1_get, _thostmduserapi.CThostFtdcQryMulticastInstrumentField_reserve1_set, doc=r"""保留的无效字段""")
    InstrumentID: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcQryMulticastInstrumentField_InstrumentID_get, _thostmduserapi.CThostFtdcQryMulticastInstrumentField_InstrumentID_set, doc=r"""合约代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcQryMulticastInstrumentField_swiginit(self, _thostmduserapi.new_CThostFtdcQryMulticastInstrumentField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcQryMulticastInstrumentField

# Register CThostFtdcQryMulticastInstrumentField in _thostmduserapi:
_thostmduserapi.CThostFtdcQryMulticastInstrumentField_swigregister(CThostFtdcQryMulticastInstrumentField)
class CThostFtdcAppIDAuthAssignField(object):
    r"""App客户端权限分配"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcAppIDAuthAssignField_BrokerID_get, _thostmduserapi.CThostFtdcAppIDAuthAssignField_BrokerID_set, doc=r"""经纪公司代码""")
    AppID: "TThostFtdcAppIDType" = property(_thostmduserapi.CThostFtdcAppIDAuthAssignField_AppID_get, _thostmduserapi.CThostFtdcAppIDAuthAssignField_AppID_set, doc=r"""App代码""")
    DRIdentityID: "TThostFtdcDRIdentityIDType" = property(_thostmduserapi.CThostFtdcAppIDAuthAssignField_DRIdentityID_get, _thostmduserapi.CThostFtdcAppIDAuthAssignField_DRIdentityID_set, doc=r"""交易中心代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcAppIDAuthAssignField_swiginit(self, _thostmduserapi.new_CThostFtdcAppIDAuthAssignField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcAppIDAuthAssignField

# Register CThostFtdcAppIDAuthAssignField in _thostmduserapi:
_thostmduserapi.CThostFtdcAppIDAuthAssignField_swigregister(CThostFtdcAppIDAuthAssignField)
class CThostFtdcReqOpenAccountField(object):
    r"""转帐开户请求"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    TradeCode: "TThostFtdcTradeCodeType" = property(_thostmduserapi.CThostFtdcReqOpenAccountField_TradeCode_get, _thostmduserapi.CThostFtdcReqOpenAccountField_TradeCode_set, doc=r"""业务功能码""")
    BankID: "TThostFtdcBankIDType" = property(_thostmduserapi.CThostFtdcReqOpenAccountField_BankID_get, _thostmduserapi.CThostFtdcReqOpenAccountField_BankID_set, doc=r"""银行代码""")
    BankBranchID: "TThostFtdcBankBrchIDType" = property(_thostmduserapi.CThostFtdcReqOpenAccountField_BankBranchID_get, _thostmduserapi.CThostFtdcReqOpenAccountField_BankBranchID_set, doc=r"""银行分支机构代码""")
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcReqOpenAccountField_BrokerID_get, _thostmduserapi.CThostFtdcReqOpenAccountField_BrokerID_set, doc=r"""期商代码""")
    BrokerBranchID: "TThostFtdcFutureBranchIDType" = property(_thostmduserapi.CThostFtdcReqOpenAccountField_BrokerBranchID_get, _thostmduserapi.CThostFtdcReqOpenAccountField_BrokerBranchID_set, doc=r"""期商分支机构代码""")
    TradeDate: "TThostFtdcTradeDateType" = property(_thostmduserapi.CThostFtdcReqOpenAccountField_TradeDate_get, _thostmduserapi.CThostFtdcReqOpenAccountField_TradeDate_set, doc=r"""交易日期""")
    TradeTime: "TThostFtdcTradeTimeType" = property(_thostmduserapi.CThostFtdcReqOpenAccountField_TradeTime_get, _thostmduserapi.CThostFtdcReqOpenAccountField_TradeTime_set, doc=r"""交易时间""")
    BankSerial: "TThostFtdcBankSerialType" = property(_thostmduserapi.CThostFtdcReqOpenAccountField_BankSerial_get, _thostmduserapi.CThostFtdcReqOpenAccountField_BankSerial_set, doc=r"""银行流水号""")
    TradingDay: "TThostFtdcTradeDateType" = property(_thostmduserapi.CThostFtdcReqOpenAccountField_TradingDay_get, _thostmduserapi.CThostFtdcReqOpenAccountField_TradingDay_set, doc=r"""交易系统日期""")
    PlateSerial: "TThostFtdcSerialType" = property(_thostmduserapi.CThostFtdcReqOpenAccountField_PlateSerial_get, _thostmduserapi.CThostFtdcReqOpenAccountField_PlateSerial_set, doc=r"""银期平台消息流水号""")
    LastFragment: "TThostFtdcLastFragmentType" = property(_thostmduserapi.CThostFtdcReqOpenAccountField_LastFragment_get, _thostmduserapi.CThostFtdcReqOpenAccountField_LastFragment_set, doc=r"""最后分片标志""")
    SessionID: "TThostFtdcSessionIDType" = property(_thostmduserapi.CThostFtdcReqOpenAccountField_SessionID_get, _thostmduserapi.CThostFtdcReqOpenAccountField_SessionID_set, doc=r"""会话号""")
    CustomerName: "TThostFtdcIndividualNameType" = property(_thostmduserapi.CThostFtdcReqOpenAccountField_CustomerName_get, _thostmduserapi.CThostFtdcReqOpenAccountField_CustomerName_set, doc=r"""客户姓名""")
    IdCardType: "TThostFtdcIdCardTypeType" = property(_thostmduserapi.CThostFtdcReqOpenAccountField_IdCardType_get, _thostmduserapi.CThostFtdcReqOpenAccountField_IdCardType_set, doc=r"""证件类型""")
    IdentifiedCardNo: "TThostFtdcIdentifiedCardNoType" = property(_thostmduserapi.CThostFtdcReqOpenAccountField_IdentifiedCardNo_get, _thostmduserapi.CThostFtdcReqOpenAccountField_IdentifiedCardNo_set, doc=r"""证件号码""")
    Gender: "TThostFtdcGenderType" = property(_thostmduserapi.CThostFtdcReqOpenAccountField_Gender_get, _thostmduserapi.CThostFtdcReqOpenAccountField_Gender_set, doc=r"""性别""")
    CountryCode: "TThostFtdcCountryCodeType" = property(_thostmduserapi.CThostFtdcReqOpenAccountField_CountryCode_get, _thostmduserapi.CThostFtdcReqOpenAccountField_CountryCode_set, doc=r"""国家代码""")
    CustType: "TThostFtdcCustTypeType" = property(_thostmduserapi.CThostFtdcReqOpenAccountField_CustType_get, _thostmduserapi.CThostFtdcReqOpenAccountField_CustType_set, doc=r"""客户类型""")
    Address: "TThostFtdcAddressType" = property(_thostmduserapi.CThostFtdcReqOpenAccountField_Address_get, _thostmduserapi.CThostFtdcReqOpenAccountField_Address_set, doc=r"""地址""")
    ZipCode: "TThostFtdcZipCodeType" = property(_thostmduserapi.CThostFtdcReqOpenAccountField_ZipCode_get, _thostmduserapi.CThostFtdcReqOpenAccountField_ZipCode_set, doc=r"""邮编""")
    Telephone: "TThostFtdcTelephoneType" = property(_thostmduserapi.CThostFtdcReqOpenAccountField_Telephone_get, _thostmduserapi.CThostFtdcReqOpenAccountField_Telephone_set, doc=r"""电话号码""")
    MobilePhone: "TThostFtdcMobilePhoneType" = property(_thostmduserapi.CThostFtdcReqOpenAccountField_MobilePhone_get, _thostmduserapi.CThostFtdcReqOpenAccountField_MobilePhone_set, doc=r"""手机""")
    Fax: "TThostFtdcFaxType" = property(_thostmduserapi.CThostFtdcReqOpenAccountField_Fax_get, _thostmduserapi.CThostFtdcReqOpenAccountField_Fax_set, doc=r"""传真""")
    EMail: "TThostFtdcEMailType" = property(_thostmduserapi.CThostFtdcReqOpenAccountField_EMail_get, _thostmduserapi.CThostFtdcReqOpenAccountField_EMail_set, doc=r"""电子邮件""")
    MoneyAccountStatus: "TThostFtdcMoneyAccountStatusType" = property(_thostmduserapi.CThostFtdcReqOpenAccountField_MoneyAccountStatus_get, _thostmduserapi.CThostFtdcReqOpenAccountField_MoneyAccountStatus_set, doc=r"""资金账户状态""")
    BankAccount: "TThostFtdcBankAccountType" = property(_thostmduserapi.CThostFtdcReqOpenAccountField_BankAccount_get, _thostmduserapi.CThostFtdcReqOpenAccountField_BankAccount_set, doc=r"""银行帐号""")
    BankPassWord: "TThostFtdcPasswordType" = property(_thostmduserapi.CThostFtdcReqOpenAccountField_BankPassWord_get, _thostmduserapi.CThostFtdcReqOpenAccountField_BankPassWord_set, doc=r"""银行密码""")
    AccountID: "TThostFtdcAccountIDType" = property(_thostmduserapi.CThostFtdcReqOpenAccountField_AccountID_get, _thostmduserapi.CThostFtdcReqOpenAccountField_AccountID_set, doc=r"""投资者帐号""")
    Password: "TThostFtdcPasswordType" = property(_thostmduserapi.CThostFtdcReqOpenAccountField_Password_get, _thostmduserapi.CThostFtdcReqOpenAccountField_Password_set, doc=r"""期货密码""")
    InstallID: "TThostFtdcInstallIDType" = property(_thostmduserapi.CThostFtdcReqOpenAccountField_InstallID_get, _thostmduserapi.CThostFtdcReqOpenAccountField_InstallID_set, doc=r"""安装编号""")
    VerifyCertNoFlag: "TThostFtdcYesNoIndicatorType" = property(_thostmduserapi.CThostFtdcReqOpenAccountField_VerifyCertNoFlag_get, _thostmduserapi.CThostFtdcReqOpenAccountField_VerifyCertNoFlag_set, doc=r"""验证客户证件号码标志""")
    CurrencyID: "TThostFtdcCurrencyIDType" = property(_thostmduserapi.CThostFtdcReqOpenAccountField_CurrencyID_get, _thostmduserapi.CThostFtdcReqOpenAccountField_CurrencyID_set, doc=r"""币种代码""")
    CashExchangeCode: "TThostFtdcCashExchangeCodeType" = property(_thostmduserapi.CThostFtdcReqOpenAccountField_CashExchangeCode_get, _thostmduserapi.CThostFtdcReqOpenAccountField_CashExchangeCode_set, doc=r"""汇钞标志""")
    Digest: "TThostFtdcDigestType" = property(_thostmduserapi.CThostFtdcReqOpenAccountField_Digest_get, _thostmduserapi.CThostFtdcReqOpenAccountField_Digest_set, doc=r"""摘要""")
    BankAccType: "TThostFtdcBankAccTypeType" = property(_thostmduserapi.CThostFtdcReqOpenAccountField_BankAccType_get, _thostmduserapi.CThostFtdcReqOpenAccountField_BankAccType_set, doc=r"""银行帐号类型""")
    DeviceID: "TThostFtdcDeviceIDType" = property(_thostmduserapi.CThostFtdcReqOpenAccountField_DeviceID_get, _thostmduserapi.CThostFtdcReqOpenAccountField_DeviceID_set, doc=r"""渠道标志""")
    BankSecuAccType: "TThostFtdcBankAccTypeType" = property(_thostmduserapi.CThostFtdcReqOpenAccountField_BankSecuAccType_get, _thostmduserapi.CThostFtdcReqOpenAccountField_BankSecuAccType_set, doc=r"""期货单位帐号类型""")
    BrokerIDByBank: "TThostFtdcBankCodingForFutureType" = property(_thostmduserapi.CThostFtdcReqOpenAccountField_BrokerIDByBank_get, _thostmduserapi.CThostFtdcReqOpenAccountField_BrokerIDByBank_set, doc=r"""期货公司银行编码""")
    BankSecuAcc: "TThostFtdcBankAccountType" = property(_thostmduserapi.CThostFtdcReqOpenAccountField_BankSecuAcc_get, _thostmduserapi.CThostFtdcReqOpenAccountField_BankSecuAcc_set, doc=r"""期货单位帐号""")
    BankPwdFlag: "TThostFtdcPwdFlagType" = property(_thostmduserapi.CThostFtdcReqOpenAccountField_BankPwdFlag_get, _thostmduserapi.CThostFtdcReqOpenAccountField_BankPwdFlag_set, doc=r"""银行密码标志""")
    SecuPwdFlag: "TThostFtdcPwdFlagType" = property(_thostmduserapi.CThostFtdcReqOpenAccountField_SecuPwdFlag_get, _thostmduserapi.CThostFtdcReqOpenAccountField_SecuPwdFlag_set, doc=r"""期货资金密码核对标志""")
    OperNo: "TThostFtdcOperNoType" = property(_thostmduserapi.CThostFtdcReqOpenAccountField_OperNo_get, _thostmduserapi.CThostFtdcReqOpenAccountField_OperNo_set, doc=r"""交易柜员""")
    TID: "TThostFtdcTIDType" = property(_thostmduserapi.CThostFtdcReqOpenAccountField_TID_get, _thostmduserapi.CThostFtdcReqOpenAccountField_TID_set, doc=r"""交易ID""")
    UserID: "TThostFtdcUserIDType" = property(_thostmduserapi.CThostFtdcReqOpenAccountField_UserID_get, _thostmduserapi.CThostFtdcReqOpenAccountField_UserID_set, doc=r"""用户标识""")
    LongCustomerName: "TThostFtdcLongIndividualNameType" = property(_thostmduserapi.CThostFtdcReqOpenAccountField_LongCustomerName_get, _thostmduserapi.CThostFtdcReqOpenAccountField_LongCustomerName_set, doc=r"""长客户姓名""")

    def __init__(self):
        _thostmduserapi.CThostFtdcReqOpenAccountField_swiginit(self, _thostmduserapi.new_CThostFtdcReqOpenAccountField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcReqOpenAccountField

# Register CThostFtdcReqOpenAccountField in _thostmduserapi:
_thostmduserapi.CThostFtdcReqOpenAccountField_swigregister(CThostFtdcReqOpenAccountField)
class CThostFtdcReqCancelAccountField(object):
    r"""转帐销户请求"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    TradeCode: "TThostFtdcTradeCodeType" = property(_thostmduserapi.CThostFtdcReqCancelAccountField_TradeCode_get, _thostmduserapi.CThostFtdcReqCancelAccountField_TradeCode_set, doc=r"""业务功能码""")
    BankID: "TThostFtdcBankIDType" = property(_thostmduserapi.CThostFtdcReqCancelAccountField_BankID_get, _thostmduserapi.CThostFtdcReqCancelAccountField_BankID_set, doc=r"""银行代码""")
    BankBranchID: "TThostFtdcBankBrchIDType" = property(_thostmduserapi.CThostFtdcReqCancelAccountField_BankBranchID_get, _thostmduserapi.CThostFtdcReqCancelAccountField_BankBranchID_set, doc=r"""银行分支机构代码""")
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcReqCancelAccountField_BrokerID_get, _thostmduserapi.CThostFtdcReqCancelAccountField_BrokerID_set, doc=r"""期商代码""")
    BrokerBranchID: "TThostFtdcFutureBranchIDType" = property(_thostmduserapi.CThostFtdcReqCancelAccountField_BrokerBranchID_get, _thostmduserapi.CThostFtdcReqCancelAccountField_BrokerBranchID_set, doc=r"""期商分支机构代码""")
    TradeDate: "TThostFtdcTradeDateType" = property(_thostmduserapi.CThostFtdcReqCancelAccountField_TradeDate_get, _thostmduserapi.CThostFtdcReqCancelAccountField_TradeDate_set, doc=r"""交易日期""")
    TradeTime: "TThostFtdcTradeTimeType" = property(_thostmduserapi.CThostFtdcReqCancelAccountField_TradeTime_get, _thostmduserapi.CThostFtdcReqCancelAccountField_TradeTime_set, doc=r"""交易时间""")
    BankSerial: "TThostFtdcBankSerialType" = property(_thostmduserapi.CThostFtdcReqCancelAccountField_BankSerial_get, _thostmduserapi.CThostFtdcReqCancelAccountField_BankSerial_set, doc=r"""银行流水号""")
    TradingDay: "TThostFtdcTradeDateType" = property(_thostmduserapi.CThostFtdcReqCancelAccountField_TradingDay_get, _thostmduserapi.CThostFtdcReqCancelAccountField_TradingDay_set, doc=r"""交易系统日期""")
    PlateSerial: "TThostFtdcSerialType" = property(_thostmduserapi.CThostFtdcReqCancelAccountField_PlateSerial_get, _thostmduserapi.CThostFtdcReqCancelAccountField_PlateSerial_set, doc=r"""银期平台消息流水号""")
    LastFragment: "TThostFtdcLastFragmentType" = property(_thostmduserapi.CThostFtdcReqCancelAccountField_LastFragment_get, _thostmduserapi.CThostFtdcReqCancelAccountField_LastFragment_set, doc=r"""最后分片标志""")
    SessionID: "TThostFtdcSessionIDType" = property(_thostmduserapi.CThostFtdcReqCancelAccountField_SessionID_get, _thostmduserapi.CThostFtdcReqCancelAccountField_SessionID_set, doc=r"""会话号""")
    CustomerName: "TThostFtdcIndividualNameType" = property(_thostmduserapi.CThostFtdcReqCancelAccountField_CustomerName_get, _thostmduserapi.CThostFtdcReqCancelAccountField_CustomerName_set, doc=r"""客户姓名""")
    IdCardType: "TThostFtdcIdCardTypeType" = property(_thostmduserapi.CThostFtdcReqCancelAccountField_IdCardType_get, _thostmduserapi.CThostFtdcReqCancelAccountField_IdCardType_set, doc=r"""证件类型""")
    IdentifiedCardNo: "TThostFtdcIdentifiedCardNoType" = property(_thostmduserapi.CThostFtdcReqCancelAccountField_IdentifiedCardNo_get, _thostmduserapi.CThostFtdcReqCancelAccountField_IdentifiedCardNo_set, doc=r"""证件号码""")
    Gender: "TThostFtdcGenderType" = property(_thostmduserapi.CThostFtdcReqCancelAccountField_Gender_get, _thostmduserapi.CThostFtdcReqCancelAccountField_Gender_set, doc=r"""性别""")
    CountryCode: "TThostFtdcCountryCodeType" = property(_thostmduserapi.CThostFtdcReqCancelAccountField_CountryCode_get, _thostmduserapi.CThostFtdcReqCancelAccountField_CountryCode_set, doc=r"""国家代码""")
    CustType: "TThostFtdcCustTypeType" = property(_thostmduserapi.CThostFtdcReqCancelAccountField_CustType_get, _thostmduserapi.CThostFtdcReqCancelAccountField_CustType_set, doc=r"""客户类型""")
    Address: "TThostFtdcAddressType" = property(_thostmduserapi.CThostFtdcReqCancelAccountField_Address_get, _thostmduserapi.CThostFtdcReqCancelAccountField_Address_set, doc=r"""地址""")
    ZipCode: "TThostFtdcZipCodeType" = property(_thostmduserapi.CThostFtdcReqCancelAccountField_ZipCode_get, _thostmduserapi.CThostFtdcReqCancelAccountField_ZipCode_set, doc=r"""邮编""")
    Telephone: "TThostFtdcTelephoneType" = property(_thostmduserapi.CThostFtdcReqCancelAccountField_Telephone_get, _thostmduserapi.CThostFtdcReqCancelAccountField_Telephone_set, doc=r"""电话号码""")
    MobilePhone: "TThostFtdcMobilePhoneType" = property(_thostmduserapi.CThostFtdcReqCancelAccountField_MobilePhone_get, _thostmduserapi.CThostFtdcReqCancelAccountField_MobilePhone_set, doc=r"""手机""")
    Fax: "TThostFtdcFaxType" = property(_thostmduserapi.CThostFtdcReqCancelAccountField_Fax_get, _thostmduserapi.CThostFtdcReqCancelAccountField_Fax_set, doc=r"""传真""")
    EMail: "TThostFtdcEMailType" = property(_thostmduserapi.CThostFtdcReqCancelAccountField_EMail_get, _thostmduserapi.CThostFtdcReqCancelAccountField_EMail_set, doc=r"""电子邮件""")
    MoneyAccountStatus: "TThostFtdcMoneyAccountStatusType" = property(_thostmduserapi.CThostFtdcReqCancelAccountField_MoneyAccountStatus_get, _thostmduserapi.CThostFtdcReqCancelAccountField_MoneyAccountStatus_set, doc=r"""资金账户状态""")
    BankAccount: "TThostFtdcBankAccountType" = property(_thostmduserapi.CThostFtdcReqCancelAccountField_BankAccount_get, _thostmduserapi.CThostFtdcReqCancelAccountField_BankAccount_set, doc=r"""银行帐号""")
    BankPassWord: "TThostFtdcPasswordType" = property(_thostmduserapi.CThostFtdcReqCancelAccountField_BankPassWord_get, _thostmduserapi.CThostFtdcReqCancelAccountField_BankPassWord_set, doc=r"""银行密码""")
    AccountID: "TThostFtdcAccountIDType" = property(_thostmduserapi.CThostFtdcReqCancelAccountField_AccountID_get, _thostmduserapi.CThostFtdcReqCancelAccountField_AccountID_set, doc=r"""投资者帐号""")
    Password: "TThostFtdcPasswordType" = property(_thostmduserapi.CThostFtdcReqCancelAccountField_Password_get, _thostmduserapi.CThostFtdcReqCancelAccountField_Password_set, doc=r"""期货密码""")
    InstallID: "TThostFtdcInstallIDType" = property(_thostmduserapi.CThostFtdcReqCancelAccountField_InstallID_get, _thostmduserapi.CThostFtdcReqCancelAccountField_InstallID_set, doc=r"""安装编号""")
    VerifyCertNoFlag: "TThostFtdcYesNoIndicatorType" = property(_thostmduserapi.CThostFtdcReqCancelAccountField_VerifyCertNoFlag_get, _thostmduserapi.CThostFtdcReqCancelAccountField_VerifyCertNoFlag_set, doc=r"""验证客户证件号码标志""")
    CurrencyID: "TThostFtdcCurrencyIDType" = property(_thostmduserapi.CThostFtdcReqCancelAccountField_CurrencyID_get, _thostmduserapi.CThostFtdcReqCancelAccountField_CurrencyID_set, doc=r"""币种代码""")
    CashExchangeCode: "TThostFtdcCashExchangeCodeType" = property(_thostmduserapi.CThostFtdcReqCancelAccountField_CashExchangeCode_get, _thostmduserapi.CThostFtdcReqCancelAccountField_CashExchangeCode_set, doc=r"""汇钞标志""")
    Digest: "TThostFtdcDigestType" = property(_thostmduserapi.CThostFtdcReqCancelAccountField_Digest_get, _thostmduserapi.CThostFtdcReqCancelAccountField_Digest_set, doc=r"""摘要""")
    BankAccType: "TThostFtdcBankAccTypeType" = property(_thostmduserapi.CThostFtdcReqCancelAccountField_BankAccType_get, _thostmduserapi.CThostFtdcReqCancelAccountField_BankAccType_set, doc=r"""银行帐号类型""")
    DeviceID: "TThostFtdcDeviceIDType" = property(_thostmduserapi.CThostFtdcReqCancelAccountField_DeviceID_get, _thostmduserapi.CThostFtdcReqCancelAccountField_DeviceID_set, doc=r"""渠道标志""")
    BankSecuAccType: "TThostFtdcBankAccTypeType" = property(_thostmduserapi.CThostFtdcReqCancelAccountField_BankSecuAccType_get, _thostmduserapi.CThostFtdcReqCancelAccountField_BankSecuAccType_set, doc=r"""期货单位帐号类型""")
    BrokerIDByBank: "TThostFtdcBankCodingForFutureType" = property(_thostmduserapi.CThostFtdcReqCancelAccountField_BrokerIDByBank_get, _thostmduserapi.CThostFtdcReqCancelAccountField_BrokerIDByBank_set, doc=r"""期货公司银行编码""")
    BankSecuAcc: "TThostFtdcBankAccountType" = property(_thostmduserapi.CThostFtdcReqCancelAccountField_BankSecuAcc_get, _thostmduserapi.CThostFtdcReqCancelAccountField_BankSecuAcc_set, doc=r"""期货单位帐号""")
    BankPwdFlag: "TThostFtdcPwdFlagType" = property(_thostmduserapi.CThostFtdcReqCancelAccountField_BankPwdFlag_get, _thostmduserapi.CThostFtdcReqCancelAccountField_BankPwdFlag_set, doc=r"""银行密码标志""")
    SecuPwdFlag: "TThostFtdcPwdFlagType" = property(_thostmduserapi.CThostFtdcReqCancelAccountField_SecuPwdFlag_get, _thostmduserapi.CThostFtdcReqCancelAccountField_SecuPwdFlag_set, doc=r"""期货资金密码核对标志""")
    OperNo: "TThostFtdcOperNoType" = property(_thostmduserapi.CThostFtdcReqCancelAccountField_OperNo_get, _thostmduserapi.CThostFtdcReqCancelAccountField_OperNo_set, doc=r"""交易柜员""")
    TID: "TThostFtdcTIDType" = property(_thostmduserapi.CThostFtdcReqCancelAccountField_TID_get, _thostmduserapi.CThostFtdcReqCancelAccountField_TID_set, doc=r"""交易ID""")
    UserID: "TThostFtdcUserIDType" = property(_thostmduserapi.CThostFtdcReqCancelAccountField_UserID_get, _thostmduserapi.CThostFtdcReqCancelAccountField_UserID_set, doc=r"""用户标识""")
    LongCustomerName: "TThostFtdcLongIndividualNameType" = property(_thostmduserapi.CThostFtdcReqCancelAccountField_LongCustomerName_get, _thostmduserapi.CThostFtdcReqCancelAccountField_LongCustomerName_set, doc=r"""长客户姓名""")

    def __init__(self):
        _thostmduserapi.CThostFtdcReqCancelAccountField_swiginit(self, _thostmduserapi.new_CThostFtdcReqCancelAccountField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcReqCancelAccountField

# Register CThostFtdcReqCancelAccountField in _thostmduserapi:
_thostmduserapi.CThostFtdcReqCancelAccountField_swigregister(CThostFtdcReqCancelAccountField)
class CThostFtdcReqChangeAccountField(object):
    r"""变更银行账户请求"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    TradeCode: "TThostFtdcTradeCodeType" = property(_thostmduserapi.CThostFtdcReqChangeAccountField_TradeCode_get, _thostmduserapi.CThostFtdcReqChangeAccountField_TradeCode_set, doc=r"""业务功能码""")
    BankID: "TThostFtdcBankIDType" = property(_thostmduserapi.CThostFtdcReqChangeAccountField_BankID_get, _thostmduserapi.CThostFtdcReqChangeAccountField_BankID_set, doc=r"""银行代码""")
    BankBranchID: "TThostFtdcBankBrchIDType" = property(_thostmduserapi.CThostFtdcReqChangeAccountField_BankBranchID_get, _thostmduserapi.CThostFtdcReqChangeAccountField_BankBranchID_set, doc=r"""银行分支机构代码""")
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcReqChangeAccountField_BrokerID_get, _thostmduserapi.CThostFtdcReqChangeAccountField_BrokerID_set, doc=r"""期商代码""")
    BrokerBranchID: "TThostFtdcFutureBranchIDType" = property(_thostmduserapi.CThostFtdcReqChangeAccountField_BrokerBranchID_get, _thostmduserapi.CThostFtdcReqChangeAccountField_BrokerBranchID_set, doc=r"""期商分支机构代码""")
    TradeDate: "TThostFtdcTradeDateType" = property(_thostmduserapi.CThostFtdcReqChangeAccountField_TradeDate_get, _thostmduserapi.CThostFtdcReqChangeAccountField_TradeDate_set, doc=r"""交易日期""")
    TradeTime: "TThostFtdcTradeTimeType" = property(_thostmduserapi.CThostFtdcReqChangeAccountField_TradeTime_get, _thostmduserapi.CThostFtdcReqChangeAccountField_TradeTime_set, doc=r"""交易时间""")
    BankSerial: "TThostFtdcBankSerialType" = property(_thostmduserapi.CThostFtdcReqChangeAccountField_BankSerial_get, _thostmduserapi.CThostFtdcReqChangeAccountField_BankSerial_set, doc=r"""银行流水号""")
    TradingDay: "TThostFtdcTradeDateType" = property(_thostmduserapi.CThostFtdcReqChangeAccountField_TradingDay_get, _thostmduserapi.CThostFtdcReqChangeAccountField_TradingDay_set, doc=r"""交易系统日期""")
    PlateSerial: "TThostFtdcSerialType" = property(_thostmduserapi.CThostFtdcReqChangeAccountField_PlateSerial_get, _thostmduserapi.CThostFtdcReqChangeAccountField_PlateSerial_set, doc=r"""银期平台消息流水号""")
    LastFragment: "TThostFtdcLastFragmentType" = property(_thostmduserapi.CThostFtdcReqChangeAccountField_LastFragment_get, _thostmduserapi.CThostFtdcReqChangeAccountField_LastFragment_set, doc=r"""最后分片标志""")
    SessionID: "TThostFtdcSessionIDType" = property(_thostmduserapi.CThostFtdcReqChangeAccountField_SessionID_get, _thostmduserapi.CThostFtdcReqChangeAccountField_SessionID_set, doc=r"""会话号""")
    CustomerName: "TThostFtdcIndividualNameType" = property(_thostmduserapi.CThostFtdcReqChangeAccountField_CustomerName_get, _thostmduserapi.CThostFtdcReqChangeAccountField_CustomerName_set, doc=r"""客户姓名""")
    IdCardType: "TThostFtdcIdCardTypeType" = property(_thostmduserapi.CThostFtdcReqChangeAccountField_IdCardType_get, _thostmduserapi.CThostFtdcReqChangeAccountField_IdCardType_set, doc=r"""证件类型""")
    IdentifiedCardNo: "TThostFtdcIdentifiedCardNoType" = property(_thostmduserapi.CThostFtdcReqChangeAccountField_IdentifiedCardNo_get, _thostmduserapi.CThostFtdcReqChangeAccountField_IdentifiedCardNo_set, doc=r"""证件号码""")
    Gender: "TThostFtdcGenderType" = property(_thostmduserapi.CThostFtdcReqChangeAccountField_Gender_get, _thostmduserapi.CThostFtdcReqChangeAccountField_Gender_set, doc=r"""性别""")
    CountryCode: "TThostFtdcCountryCodeType" = property(_thostmduserapi.CThostFtdcReqChangeAccountField_CountryCode_get, _thostmduserapi.CThostFtdcReqChangeAccountField_CountryCode_set, doc=r"""国家代码""")
    CustType: "TThostFtdcCustTypeType" = property(_thostmduserapi.CThostFtdcReqChangeAccountField_CustType_get, _thostmduserapi.CThostFtdcReqChangeAccountField_CustType_set, doc=r"""客户类型""")
    Address: "TThostFtdcAddressType" = property(_thostmduserapi.CThostFtdcReqChangeAccountField_Address_get, _thostmduserapi.CThostFtdcReqChangeAccountField_Address_set, doc=r"""地址""")
    ZipCode: "TThostFtdcZipCodeType" = property(_thostmduserapi.CThostFtdcReqChangeAccountField_ZipCode_get, _thostmduserapi.CThostFtdcReqChangeAccountField_ZipCode_set, doc=r"""邮编""")
    Telephone: "TThostFtdcTelephoneType" = property(_thostmduserapi.CThostFtdcReqChangeAccountField_Telephone_get, _thostmduserapi.CThostFtdcReqChangeAccountField_Telephone_set, doc=r"""电话号码""")
    MobilePhone: "TThostFtdcMobilePhoneType" = property(_thostmduserapi.CThostFtdcReqChangeAccountField_MobilePhone_get, _thostmduserapi.CThostFtdcReqChangeAccountField_MobilePhone_set, doc=r"""手机""")
    Fax: "TThostFtdcFaxType" = property(_thostmduserapi.CThostFtdcReqChangeAccountField_Fax_get, _thostmduserapi.CThostFtdcReqChangeAccountField_Fax_set, doc=r"""传真""")
    EMail: "TThostFtdcEMailType" = property(_thostmduserapi.CThostFtdcReqChangeAccountField_EMail_get, _thostmduserapi.CThostFtdcReqChangeAccountField_EMail_set, doc=r"""电子邮件""")
    MoneyAccountStatus: "TThostFtdcMoneyAccountStatusType" = property(_thostmduserapi.CThostFtdcReqChangeAccountField_MoneyAccountStatus_get, _thostmduserapi.CThostFtdcReqChangeAccountField_MoneyAccountStatus_set, doc=r"""资金账户状态""")
    BankAccount: "TThostFtdcBankAccountType" = property(_thostmduserapi.CThostFtdcReqChangeAccountField_BankAccount_get, _thostmduserapi.CThostFtdcReqChangeAccountField_BankAccount_set, doc=r"""银行帐号""")
    BankPassWord: "TThostFtdcPasswordType" = property(_thostmduserapi.CThostFtdcReqChangeAccountField_BankPassWord_get, _thostmduserapi.CThostFtdcReqChangeAccountField_BankPassWord_set, doc=r"""银行密码""")
    NewBankAccount: "TThostFtdcBankAccountType" = property(_thostmduserapi.CThostFtdcReqChangeAccountField_NewBankAccount_get, _thostmduserapi.CThostFtdcReqChangeAccountField_NewBankAccount_set, doc=r"""新银行帐号""")
    NewBankPassWord: "TThostFtdcPasswordType" = property(_thostmduserapi.CThostFtdcReqChangeAccountField_NewBankPassWord_get, _thostmduserapi.CThostFtdcReqChangeAccountField_NewBankPassWord_set, doc=r"""新银行密码""")
    AccountID: "TThostFtdcAccountIDType" = property(_thostmduserapi.CThostFtdcReqChangeAccountField_AccountID_get, _thostmduserapi.CThostFtdcReqChangeAccountField_AccountID_set, doc=r"""投资者帐号""")
    Password: "TThostFtdcPasswordType" = property(_thostmduserapi.CThostFtdcReqChangeAccountField_Password_get, _thostmduserapi.CThostFtdcReqChangeAccountField_Password_set, doc=r"""期货密码""")
    BankAccType: "TThostFtdcBankAccTypeType" = property(_thostmduserapi.CThostFtdcReqChangeAccountField_BankAccType_get, _thostmduserapi.CThostFtdcReqChangeAccountField_BankAccType_set, doc=r"""银行帐号类型""")
    InstallID: "TThostFtdcInstallIDType" = property(_thostmduserapi.CThostFtdcReqChangeAccountField_InstallID_get, _thostmduserapi.CThostFtdcReqChangeAccountField_InstallID_set, doc=r"""安装编号""")
    VerifyCertNoFlag: "TThostFtdcYesNoIndicatorType" = property(_thostmduserapi.CThostFtdcReqChangeAccountField_VerifyCertNoFlag_get, _thostmduserapi.CThostFtdcReqChangeAccountField_VerifyCertNoFlag_set, doc=r"""验证客户证件号码标志""")
    CurrencyID: "TThostFtdcCurrencyIDType" = property(_thostmduserapi.CThostFtdcReqChangeAccountField_CurrencyID_get, _thostmduserapi.CThostFtdcReqChangeAccountField_CurrencyID_set, doc=r"""币种代码""")
    BrokerIDByBank: "TThostFtdcBankCodingForFutureType" = property(_thostmduserapi.CThostFtdcReqChangeAccountField_BrokerIDByBank_get, _thostmduserapi.CThostFtdcReqChangeAccountField_BrokerIDByBank_set, doc=r"""期货公司银行编码""")
    BankPwdFlag: "TThostFtdcPwdFlagType" = property(_thostmduserapi.CThostFtdcReqChangeAccountField_BankPwdFlag_get, _thostmduserapi.CThostFtdcReqChangeAccountField_BankPwdFlag_set, doc=r"""银行密码标志""")
    SecuPwdFlag: "TThostFtdcPwdFlagType" = property(_thostmduserapi.CThostFtdcReqChangeAccountField_SecuPwdFlag_get, _thostmduserapi.CThostFtdcReqChangeAccountField_SecuPwdFlag_set, doc=r"""期货资金密码核对标志""")
    TID: "TThostFtdcTIDType" = property(_thostmduserapi.CThostFtdcReqChangeAccountField_TID_get, _thostmduserapi.CThostFtdcReqChangeAccountField_TID_set, doc=r"""交易ID""")
    Digest: "TThostFtdcDigestType" = property(_thostmduserapi.CThostFtdcReqChangeAccountField_Digest_get, _thostmduserapi.CThostFtdcReqChangeAccountField_Digest_set, doc=r"""摘要""")
    LongCustomerName: "TThostFtdcLongIndividualNameType" = property(_thostmduserapi.CThostFtdcReqChangeAccountField_LongCustomerName_get, _thostmduserapi.CThostFtdcReqChangeAccountField_LongCustomerName_set, doc=r"""长客户姓名""")

    def __init__(self):
        _thostmduserapi.CThostFtdcReqChangeAccountField_swiginit(self, _thostmduserapi.new_CThostFtdcReqChangeAccountField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcReqChangeAccountField

# Register CThostFtdcReqChangeAccountField in _thostmduserapi:
_thostmduserapi.CThostFtdcReqChangeAccountField_swigregister(CThostFtdcReqChangeAccountField)
class CThostFtdcReqTransferField(object):
    r"""转账请求"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    TradeCode: "TThostFtdcTradeCodeType" = property(_thostmduserapi.CThostFtdcReqTransferField_TradeCode_get, _thostmduserapi.CThostFtdcReqTransferField_TradeCode_set, doc=r"""业务功能码""")
    BankID: "TThostFtdcBankIDType" = property(_thostmduserapi.CThostFtdcReqTransferField_BankID_get, _thostmduserapi.CThostFtdcReqTransferField_BankID_set, doc=r"""银行代码""")
    BankBranchID: "TThostFtdcBankBrchIDType" = property(_thostmduserapi.CThostFtdcReqTransferField_BankBranchID_get, _thostmduserapi.CThostFtdcReqTransferField_BankBranchID_set, doc=r"""银行分支机构代码""")
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcReqTransferField_BrokerID_get, _thostmduserapi.CThostFtdcReqTransferField_BrokerID_set, doc=r"""期商代码""")
    BrokerBranchID: "TThostFtdcFutureBranchIDType" = property(_thostmduserapi.CThostFtdcReqTransferField_BrokerBranchID_get, _thostmduserapi.CThostFtdcReqTransferField_BrokerBranchID_set, doc=r"""期商分支机构代码""")
    TradeDate: "TThostFtdcTradeDateType" = property(_thostmduserapi.CThostFtdcReqTransferField_TradeDate_get, _thostmduserapi.CThostFtdcReqTransferField_TradeDate_set, doc=r"""交易日期""")
    TradeTime: "TThostFtdcTradeTimeType" = property(_thostmduserapi.CThostFtdcReqTransferField_TradeTime_get, _thostmduserapi.CThostFtdcReqTransferField_TradeTime_set, doc=r"""交易时间""")
    BankSerial: "TThostFtdcBankSerialType" = property(_thostmduserapi.CThostFtdcReqTransferField_BankSerial_get, _thostmduserapi.CThostFtdcReqTransferField_BankSerial_set, doc=r"""银行流水号""")
    TradingDay: "TThostFtdcTradeDateType" = property(_thostmduserapi.CThostFtdcReqTransferField_TradingDay_get, _thostmduserapi.CThostFtdcReqTransferField_TradingDay_set, doc=r"""交易系统日期""")
    PlateSerial: "TThostFtdcSerialType" = property(_thostmduserapi.CThostFtdcReqTransferField_PlateSerial_get, _thostmduserapi.CThostFtdcReqTransferField_PlateSerial_set, doc=r"""银期平台消息流水号""")
    LastFragment: "TThostFtdcLastFragmentType" = property(_thostmduserapi.CThostFtdcReqTransferField_LastFragment_get, _thostmduserapi.CThostFtdcReqTransferField_LastFragment_set, doc=r"""最后分片标志""")
    SessionID: "TThostFtdcSessionIDType" = property(_thostmduserapi.CThostFtdcReqTransferField_SessionID_get, _thostmduserapi.CThostFtdcReqTransferField_SessionID_set, doc=r"""会话号""")
    CustomerName: "TThostFtdcIndividualNameType" = property(_thostmduserapi.CThostFtdcReqTransferField_CustomerName_get, _thostmduserapi.CThostFtdcReqTransferField_CustomerName_set, doc=r"""客户姓名""")
    IdCardType: "TThostFtdcIdCardTypeType" = property(_thostmduserapi.CThostFtdcReqTransferField_IdCardType_get, _thostmduserapi.CThostFtdcReqTransferField_IdCardType_set, doc=r"""证件类型""")
    IdentifiedCardNo: "TThostFtdcIdentifiedCardNoType" = property(_thostmduserapi.CThostFtdcReqTransferField_IdentifiedCardNo_get, _thostmduserapi.CThostFtdcReqTransferField_IdentifiedCardNo_set, doc=r"""证件号码""")
    CustType: "TThostFtdcCustTypeType" = property(_thostmduserapi.CThostFtdcReqTransferField_CustType_get, _thostmduserapi.CThostFtdcReqTransferField_CustType_set, doc=r"""客户类型""")
    BankAccount: "TThostFtdcBankAccountType" = property(_thostmduserapi.CThostFtdcReqTransferField_BankAccount_get, _thostmduserapi.CThostFtdcReqTransferField_BankAccount_set, doc=r"""银行帐号""")
    BankPassWord: "TThostFtdcPasswordType" = property(_thostmduserapi.CThostFtdcReqTransferField_BankPassWord_get, _thostmduserapi.CThostFtdcReqTransferField_BankPassWord_set, doc=r"""银行密码""")
    AccountID: "TThostFtdcAccountIDType" = property(_thostmduserapi.CThostFtdcReqTransferField_AccountID_get, _thostmduserapi.CThostFtdcReqTransferField_AccountID_set, doc=r"""投资者帐号""")
    Password: "TThostFtdcPasswordType" = property(_thostmduserapi.CThostFtdcReqTransferField_Password_get, _thostmduserapi.CThostFtdcReqTransferField_Password_set, doc=r"""期货密码""")
    InstallID: "TThostFtdcInstallIDType" = property(_thostmduserapi.CThostFtdcReqTransferField_InstallID_get, _thostmduserapi.CThostFtdcReqTransferField_InstallID_set, doc=r"""安装编号""")
    FutureSerial: "TThostFtdcFutureSerialType" = property(_thostmduserapi.CThostFtdcReqTransferField_FutureSerial_get, _thostmduserapi.CThostFtdcReqTransferField_FutureSerial_set, doc=r"""期货公司流水号""")
    UserID: "TThostFtdcUserIDType" = property(_thostmduserapi.CThostFtdcReqTransferField_UserID_get, _thostmduserapi.CThostFtdcReqTransferField_UserID_set, doc=r"""用户标识""")
    VerifyCertNoFlag: "TThostFtdcYesNoIndicatorType" = property(_thostmduserapi.CThostFtdcReqTransferField_VerifyCertNoFlag_get, _thostmduserapi.CThostFtdcReqTransferField_VerifyCertNoFlag_set, doc=r"""验证客户证件号码标志""")
    CurrencyID: "TThostFtdcCurrencyIDType" = property(_thostmduserapi.CThostFtdcReqTransferField_CurrencyID_get, _thostmduserapi.CThostFtdcReqTransferField_CurrencyID_set, doc=r"""币种代码""")
    TradeAmount: "TThostFtdcTradeAmountType" = property(_thostmduserapi.CThostFtdcReqTransferField_TradeAmount_get, _thostmduserapi.CThostFtdcReqTransferField_TradeAmount_set, doc=r"""转帐金额""")
    FutureFetchAmount: "TThostFtdcTradeAmountType" = property(_thostmduserapi.CThostFtdcReqTransferField_FutureFetchAmount_get, _thostmduserapi.CThostFtdcReqTransferField_FutureFetchAmount_set, doc=r"""期货可取金额""")
    FeePayFlag: "TThostFtdcFeePayFlagType" = property(_thostmduserapi.CThostFtdcReqTransferField_FeePayFlag_get, _thostmduserapi.CThostFtdcReqTransferField_FeePayFlag_set, doc=r"""费用支付标志""")
    CustFee: "TThostFtdcCustFeeType" = property(_thostmduserapi.CThostFtdcReqTransferField_CustFee_get, _thostmduserapi.CThostFtdcReqTransferField_CustFee_set, doc=r"""应收客户费用""")
    BrokerFee: "TThostFtdcFutureFeeType" = property(_thostmduserapi.CThostFtdcReqTransferField_BrokerFee_get, _thostmduserapi.CThostFtdcReqTransferField_BrokerFee_set, doc=r"""应收期货公司费用""")
    Message: "TThostFtdcAddInfoType" = property(_thostmduserapi.CThostFtdcReqTransferField_Message_get, _thostmduserapi.CThostFtdcReqTransferField_Message_set, doc=r"""发送方给接收方的消息""")
    Digest: "TThostFtdcDigestType" = property(_thostmduserapi.CThostFtdcReqTransferField_Digest_get, _thostmduserapi.CThostFtdcReqTransferField_Digest_set, doc=r"""摘要""")
    BankAccType: "TThostFtdcBankAccTypeType" = property(_thostmduserapi.CThostFtdcReqTransferField_BankAccType_get, _thostmduserapi.CThostFtdcReqTransferField_BankAccType_set, doc=r"""银行帐号类型""")
    DeviceID: "TThostFtdcDeviceIDType" = property(_thostmduserapi.CThostFtdcReqTransferField_DeviceID_get, _thostmduserapi.CThostFtdcReqTransferField_DeviceID_set, doc=r"""渠道标志""")
    BankSecuAccType: "TThostFtdcBankAccTypeType" = property(_thostmduserapi.CThostFtdcReqTransferField_BankSecuAccType_get, _thostmduserapi.CThostFtdcReqTransferField_BankSecuAccType_set, doc=r"""期货单位帐号类型""")
    BrokerIDByBank: "TThostFtdcBankCodingForFutureType" = property(_thostmduserapi.CThostFtdcReqTransferField_BrokerIDByBank_get, _thostmduserapi.CThostFtdcReqTransferField_BrokerIDByBank_set, doc=r"""期货公司银行编码""")
    BankSecuAcc: "TThostFtdcBankAccountType" = property(_thostmduserapi.CThostFtdcReqTransferField_BankSecuAcc_get, _thostmduserapi.CThostFtdcReqTransferField_BankSecuAcc_set, doc=r"""期货单位帐号""")
    BankPwdFlag: "TThostFtdcPwdFlagType" = property(_thostmduserapi.CThostFtdcReqTransferField_BankPwdFlag_get, _thostmduserapi.CThostFtdcReqTransferField_BankPwdFlag_set, doc=r"""银行密码标志""")
    SecuPwdFlag: "TThostFtdcPwdFlagType" = property(_thostmduserapi.CThostFtdcReqTransferField_SecuPwdFlag_get, _thostmduserapi.CThostFtdcReqTransferField_SecuPwdFlag_set, doc=r"""期货资金密码核对标志""")
    OperNo: "TThostFtdcOperNoType" = property(_thostmduserapi.CThostFtdcReqTransferField_OperNo_get, _thostmduserapi.CThostFtdcReqTransferField_OperNo_set, doc=r"""交易柜员""")
    RequestID: "TThostFtdcRequestIDType" = property(_thostmduserapi.CThostFtdcReqTransferField_RequestID_get, _thostmduserapi.CThostFtdcReqTransferField_RequestID_set, doc=r"""请求编号""")
    TID: "TThostFtdcTIDType" = property(_thostmduserapi.CThostFtdcReqTransferField_TID_get, _thostmduserapi.CThostFtdcReqTransferField_TID_set, doc=r"""交易ID""")
    TransferStatus: "TThostFtdcTransferStatusType" = property(_thostmduserapi.CThostFtdcReqTransferField_TransferStatus_get, _thostmduserapi.CThostFtdcReqTransferField_TransferStatus_set, doc=r"""转账交易状态""")
    LongCustomerName: "TThostFtdcLongIndividualNameType" = property(_thostmduserapi.CThostFtdcReqTransferField_LongCustomerName_get, _thostmduserapi.CThostFtdcReqTransferField_LongCustomerName_set, doc=r"""长客户姓名""")

    def __init__(self):
        _thostmduserapi.CThostFtdcReqTransferField_swiginit(self, _thostmduserapi.new_CThostFtdcReqTransferField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcReqTransferField

# Register CThostFtdcReqTransferField in _thostmduserapi:
_thostmduserapi.CThostFtdcReqTransferField_swigregister(CThostFtdcReqTransferField)
class CThostFtdcRspTransferField(object):
    r"""银行发起银行资金转期货响应"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    TradeCode: "TThostFtdcTradeCodeType" = property(_thostmduserapi.CThostFtdcRspTransferField_TradeCode_get, _thostmduserapi.CThostFtdcRspTransferField_TradeCode_set, doc=r"""业务功能码""")
    BankID: "TThostFtdcBankIDType" = property(_thostmduserapi.CThostFtdcRspTransferField_BankID_get, _thostmduserapi.CThostFtdcRspTransferField_BankID_set, doc=r"""银行代码""")
    BankBranchID: "TThostFtdcBankBrchIDType" = property(_thostmduserapi.CThostFtdcRspTransferField_BankBranchID_get, _thostmduserapi.CThostFtdcRspTransferField_BankBranchID_set, doc=r"""银行分支机构代码""")
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcRspTransferField_BrokerID_get, _thostmduserapi.CThostFtdcRspTransferField_BrokerID_set, doc=r"""期商代码""")
    BrokerBranchID: "TThostFtdcFutureBranchIDType" = property(_thostmduserapi.CThostFtdcRspTransferField_BrokerBranchID_get, _thostmduserapi.CThostFtdcRspTransferField_BrokerBranchID_set, doc=r"""期商分支机构代码""")
    TradeDate: "TThostFtdcTradeDateType" = property(_thostmduserapi.CThostFtdcRspTransferField_TradeDate_get, _thostmduserapi.CThostFtdcRspTransferField_TradeDate_set, doc=r"""交易日期""")
    TradeTime: "TThostFtdcTradeTimeType" = property(_thostmduserapi.CThostFtdcRspTransferField_TradeTime_get, _thostmduserapi.CThostFtdcRspTransferField_TradeTime_set, doc=r"""交易时间""")
    BankSerial: "TThostFtdcBankSerialType" = property(_thostmduserapi.CThostFtdcRspTransferField_BankSerial_get, _thostmduserapi.CThostFtdcRspTransferField_BankSerial_set, doc=r"""银行流水号""")
    TradingDay: "TThostFtdcTradeDateType" = property(_thostmduserapi.CThostFtdcRspTransferField_TradingDay_get, _thostmduserapi.CThostFtdcRspTransferField_TradingDay_set, doc=r"""交易系统日期""")
    PlateSerial: "TThostFtdcSerialType" = property(_thostmduserapi.CThostFtdcRspTransferField_PlateSerial_get, _thostmduserapi.CThostFtdcRspTransferField_PlateSerial_set, doc=r"""银期平台消息流水号""")
    LastFragment: "TThostFtdcLastFragmentType" = property(_thostmduserapi.CThostFtdcRspTransferField_LastFragment_get, _thostmduserapi.CThostFtdcRspTransferField_LastFragment_set, doc=r"""最后分片标志""")
    SessionID: "TThostFtdcSessionIDType" = property(_thostmduserapi.CThostFtdcRspTransferField_SessionID_get, _thostmduserapi.CThostFtdcRspTransferField_SessionID_set, doc=r"""会话号""")
    CustomerName: "TThostFtdcIndividualNameType" = property(_thostmduserapi.CThostFtdcRspTransferField_CustomerName_get, _thostmduserapi.CThostFtdcRspTransferField_CustomerName_set, doc=r"""客户姓名""")
    IdCardType: "TThostFtdcIdCardTypeType" = property(_thostmduserapi.CThostFtdcRspTransferField_IdCardType_get, _thostmduserapi.CThostFtdcRspTransferField_IdCardType_set, doc=r"""证件类型""")
    IdentifiedCardNo: "TThostFtdcIdentifiedCardNoType" = property(_thostmduserapi.CThostFtdcRspTransferField_IdentifiedCardNo_get, _thostmduserapi.CThostFtdcRspTransferField_IdentifiedCardNo_set, doc=r"""证件号码""")
    CustType: "TThostFtdcCustTypeType" = property(_thostmduserapi.CThostFtdcRspTransferField_CustType_get, _thostmduserapi.CThostFtdcRspTransferField_CustType_set, doc=r"""客户类型""")
    BankAccount: "TThostFtdcBankAccountType" = property(_thostmduserapi.CThostFtdcRspTransferField_BankAccount_get, _thostmduserapi.CThostFtdcRspTransferField_BankAccount_set, doc=r"""银行帐号""")
    BankPassWord: "TThostFtdcPasswordType" = property(_thostmduserapi.CThostFtdcRspTransferField_BankPassWord_get, _thostmduserapi.CThostFtdcRspTransferField_BankPassWord_set, doc=r"""银行密码""")
    AccountID: "TThostFtdcAccountIDType" = property(_thostmduserapi.CThostFtdcRspTransferField_AccountID_get, _thostmduserapi.CThostFtdcRspTransferField_AccountID_set, doc=r"""投资者帐号""")
    Password: "TThostFtdcPasswordType" = property(_thostmduserapi.CThostFtdcRspTransferField_Password_get, _thostmduserapi.CThostFtdcRspTransferField_Password_set, doc=r"""期货密码""")
    InstallID: "TThostFtdcInstallIDType" = property(_thostmduserapi.CThostFtdcRspTransferField_InstallID_get, _thostmduserapi.CThostFtdcRspTransferField_InstallID_set, doc=r"""安装编号""")
    FutureSerial: "TThostFtdcFutureSerialType" = property(_thostmduserapi.CThostFtdcRspTransferField_FutureSerial_get, _thostmduserapi.CThostFtdcRspTransferField_FutureSerial_set, doc=r"""期货公司流水号""")
    UserID: "TThostFtdcUserIDType" = property(_thostmduserapi.CThostFtdcRspTransferField_UserID_get, _thostmduserapi.CThostFtdcRspTransferField_UserID_set, doc=r"""用户标识""")
    VerifyCertNoFlag: "TThostFtdcYesNoIndicatorType" = property(_thostmduserapi.CThostFtdcRspTransferField_VerifyCertNoFlag_get, _thostmduserapi.CThostFtdcRspTransferField_VerifyCertNoFlag_set, doc=r"""验证客户证件号码标志""")
    CurrencyID: "TThostFtdcCurrencyIDType" = property(_thostmduserapi.CThostFtdcRspTransferField_CurrencyID_get, _thostmduserapi.CThostFtdcRspTransferField_CurrencyID_set, doc=r"""币种代码""")
    TradeAmount: "TThostFtdcTradeAmountType" = property(_thostmduserapi.CThostFtdcRspTransferField_TradeAmount_get, _thostmduserapi.CThostFtdcRspTransferField_TradeAmount_set, doc=r"""转帐金额""")
    FutureFetchAmount: "TThostFtdcTradeAmountType" = property(_thostmduserapi.CThostFtdcRspTransferField_FutureFetchAmount_get, _thostmduserapi.CThostFtdcRspTransferField_FutureFetchAmount_set, doc=r"""期货可取金额""")
    FeePayFlag: "TThostFtdcFeePayFlagType" = property(_thostmduserapi.CThostFtdcRspTransferField_FeePayFlag_get, _thostmduserapi.CThostFtdcRspTransferField_FeePayFlag_set, doc=r"""费用支付标志""")
    CustFee: "TThostFtdcCustFeeType" = property(_thostmduserapi.CThostFtdcRspTransferField_CustFee_get, _thostmduserapi.CThostFtdcRspTransferField_CustFee_set, doc=r"""应收客户费用""")
    BrokerFee: "TThostFtdcFutureFeeType" = property(_thostmduserapi.CThostFtdcRspTransferField_BrokerFee_get, _thostmduserapi.CThostFtdcRspTransferField_BrokerFee_set, doc=r"""应收期货公司费用""")
    Message: "TThostFtdcAddInfoType" = property(_thostmduserapi.CThostFtdcRspTransferField_Message_get, _thostmduserapi.CThostFtdcRspTransferField_Message_set, doc=r"""发送方给接收方的消息""")
    Digest: "TThostFtdcDigestType" = property(_thostmduserapi.CThostFtdcRspTransferField_Digest_get, _thostmduserapi.CThostFtdcRspTransferField_Digest_set, doc=r"""摘要""")
    BankAccType: "TThostFtdcBankAccTypeType" = property(_thostmduserapi.CThostFtdcRspTransferField_BankAccType_get, _thostmduserapi.CThostFtdcRspTransferField_BankAccType_set, doc=r"""银行帐号类型""")
    DeviceID: "TThostFtdcDeviceIDType" = property(_thostmduserapi.CThostFtdcRspTransferField_DeviceID_get, _thostmduserapi.CThostFtdcRspTransferField_DeviceID_set, doc=r"""渠道标志""")
    BankSecuAccType: "TThostFtdcBankAccTypeType" = property(_thostmduserapi.CThostFtdcRspTransferField_BankSecuAccType_get, _thostmduserapi.CThostFtdcRspTransferField_BankSecuAccType_set, doc=r"""期货单位帐号类型""")
    BrokerIDByBank: "TThostFtdcBankCodingForFutureType" = property(_thostmduserapi.CThostFtdcRspTransferField_BrokerIDByBank_get, _thostmduserapi.CThostFtdcRspTransferField_BrokerIDByBank_set, doc=r"""期货公司银行编码""")
    BankSecuAcc: "TThostFtdcBankAccountType" = property(_thostmduserapi.CThostFtdcRspTransferField_BankSecuAcc_get, _thostmduserapi.CThostFtdcRspTransferField_BankSecuAcc_set, doc=r"""期货单位帐号""")
    BankPwdFlag: "TThostFtdcPwdFlagType" = property(_thostmduserapi.CThostFtdcRspTransferField_BankPwdFlag_get, _thostmduserapi.CThostFtdcRspTransferField_BankPwdFlag_set, doc=r"""银行密码标志""")
    SecuPwdFlag: "TThostFtdcPwdFlagType" = property(_thostmduserapi.CThostFtdcRspTransferField_SecuPwdFlag_get, _thostmduserapi.CThostFtdcRspTransferField_SecuPwdFlag_set, doc=r"""期货资金密码核对标志""")
    OperNo: "TThostFtdcOperNoType" = property(_thostmduserapi.CThostFtdcRspTransferField_OperNo_get, _thostmduserapi.CThostFtdcRspTransferField_OperNo_set, doc=r"""交易柜员""")
    RequestID: "TThostFtdcRequestIDType" = property(_thostmduserapi.CThostFtdcRspTransferField_RequestID_get, _thostmduserapi.CThostFtdcRspTransferField_RequestID_set, doc=r"""请求编号""")
    TID: "TThostFtdcTIDType" = property(_thostmduserapi.CThostFtdcRspTransferField_TID_get, _thostmduserapi.CThostFtdcRspTransferField_TID_set, doc=r"""交易ID""")
    TransferStatus: "TThostFtdcTransferStatusType" = property(_thostmduserapi.CThostFtdcRspTransferField_TransferStatus_get, _thostmduserapi.CThostFtdcRspTransferField_TransferStatus_set, doc=r"""转账交易状态""")
    ErrorID: "TThostFtdcErrorIDType" = property(_thostmduserapi.CThostFtdcRspTransferField_ErrorID_get, _thostmduserapi.CThostFtdcRspTransferField_ErrorID_set, doc=r"""错误代码""")
    ErrorMsg: "TThostFtdcErrorMsgType" = property(_thostmduserapi.CThostFtdcRspTransferField_ErrorMsg_get, _thostmduserapi.CThostFtdcRspTransferField_ErrorMsg_set, doc=r"""错误信息""")
    LongCustomerName: "TThostFtdcLongIndividualNameType" = property(_thostmduserapi.CThostFtdcRspTransferField_LongCustomerName_get, _thostmduserapi.CThostFtdcRspTransferField_LongCustomerName_set, doc=r"""长客户姓名""")

    def __init__(self):
        _thostmduserapi.CThostFtdcRspTransferField_swiginit(self, _thostmduserapi.new_CThostFtdcRspTransferField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcRspTransferField

# Register CThostFtdcRspTransferField in _thostmduserapi:
_thostmduserapi.CThostFtdcRspTransferField_swigregister(CThostFtdcRspTransferField)
class CThostFtdcReqRepealField(object):
    r"""冲正请求"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    RepealTimeInterval: "TThostFtdcRepealTimeIntervalType" = property(_thostmduserapi.CThostFtdcReqRepealField_RepealTimeInterval_get, _thostmduserapi.CThostFtdcReqRepealField_RepealTimeInterval_set, doc=r"""冲正时间间隔""")
    RepealedTimes: "TThostFtdcRepealedTimesType" = property(_thostmduserapi.CThostFtdcReqRepealField_RepealedTimes_get, _thostmduserapi.CThostFtdcReqRepealField_RepealedTimes_set, doc=r"""已经冲正次数""")
    BankRepealFlag: "TThostFtdcBankRepealFlagType" = property(_thostmduserapi.CThostFtdcReqRepealField_BankRepealFlag_get, _thostmduserapi.CThostFtdcReqRepealField_BankRepealFlag_set, doc=r"""银行冲正标志""")
    BrokerRepealFlag: "TThostFtdcBrokerRepealFlagType" = property(_thostmduserapi.CThostFtdcReqRepealField_BrokerRepealFlag_get, _thostmduserapi.CThostFtdcReqRepealField_BrokerRepealFlag_set, doc=r"""期商冲正标志""")
    PlateRepealSerial: "TThostFtdcPlateSerialType" = property(_thostmduserapi.CThostFtdcReqRepealField_PlateRepealSerial_get, _thostmduserapi.CThostFtdcReqRepealField_PlateRepealSerial_set, doc=r"""被冲正平台流水号""")
    BankRepealSerial: "TThostFtdcBankSerialType" = property(_thostmduserapi.CThostFtdcReqRepealField_BankRepealSerial_get, _thostmduserapi.CThostFtdcReqRepealField_BankRepealSerial_set, doc=r"""被冲正银行流水号""")
    FutureRepealSerial: "TThostFtdcFutureSerialType" = property(_thostmduserapi.CThostFtdcReqRepealField_FutureRepealSerial_get, _thostmduserapi.CThostFtdcReqRepealField_FutureRepealSerial_set, doc=r"""被冲正期货流水号""")
    TradeCode: "TThostFtdcTradeCodeType" = property(_thostmduserapi.CThostFtdcReqRepealField_TradeCode_get, _thostmduserapi.CThostFtdcReqRepealField_TradeCode_set, doc=r"""业务功能码""")
    BankID: "TThostFtdcBankIDType" = property(_thostmduserapi.CThostFtdcReqRepealField_BankID_get, _thostmduserapi.CThostFtdcReqRepealField_BankID_set, doc=r"""银行代码""")
    BankBranchID: "TThostFtdcBankBrchIDType" = property(_thostmduserapi.CThostFtdcReqRepealField_BankBranchID_get, _thostmduserapi.CThostFtdcReqRepealField_BankBranchID_set, doc=r"""银行分支机构代码""")
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcReqRepealField_BrokerID_get, _thostmduserapi.CThostFtdcReqRepealField_BrokerID_set, doc=r"""期商代码""")
    BrokerBranchID: "TThostFtdcFutureBranchIDType" = property(_thostmduserapi.CThostFtdcReqRepealField_BrokerBranchID_get, _thostmduserapi.CThostFtdcReqRepealField_BrokerBranchID_set, doc=r"""期商分支机构代码""")
    TradeDate: "TThostFtdcTradeDateType" = property(_thostmduserapi.CThostFtdcReqRepealField_TradeDate_get, _thostmduserapi.CThostFtdcReqRepealField_TradeDate_set, doc=r"""交易日期""")
    TradeTime: "TThostFtdcTradeTimeType" = property(_thostmduserapi.CThostFtdcReqRepealField_TradeTime_get, _thostmduserapi.CThostFtdcReqRepealField_TradeTime_set, doc=r"""交易时间""")
    BankSerial: "TThostFtdcBankSerialType" = property(_thostmduserapi.CThostFtdcReqRepealField_BankSerial_get, _thostmduserapi.CThostFtdcReqRepealField_BankSerial_set, doc=r"""银行流水号""")
    TradingDay: "TThostFtdcTradeDateType" = property(_thostmduserapi.CThostFtdcReqRepealField_TradingDay_get, _thostmduserapi.CThostFtdcReqRepealField_TradingDay_set, doc=r"""交易系统日期""")
    PlateSerial: "TThostFtdcSerialType" = property(_thostmduserapi.CThostFtdcReqRepealField_PlateSerial_get, _thostmduserapi.CThostFtdcReqRepealField_PlateSerial_set, doc=r"""银期平台消息流水号""")
    LastFragment: "TThostFtdcLastFragmentType" = property(_thostmduserapi.CThostFtdcReqRepealField_LastFragment_get, _thostmduserapi.CThostFtdcReqRepealField_LastFragment_set, doc=r"""最后分片标志""")
    SessionID: "TThostFtdcSessionIDType" = property(_thostmduserapi.CThostFtdcReqRepealField_SessionID_get, _thostmduserapi.CThostFtdcReqRepealField_SessionID_set, doc=r"""会话号""")
    CustomerName: "TThostFtdcIndividualNameType" = property(_thostmduserapi.CThostFtdcReqRepealField_CustomerName_get, _thostmduserapi.CThostFtdcReqRepealField_CustomerName_set, doc=r"""客户姓名""")
    IdCardType: "TThostFtdcIdCardTypeType" = property(_thostmduserapi.CThostFtdcReqRepealField_IdCardType_get, _thostmduserapi.CThostFtdcReqRepealField_IdCardType_set, doc=r"""证件类型""")
    IdentifiedCardNo: "TThostFtdcIdentifiedCardNoType" = property(_thostmduserapi.CThostFtdcReqRepealField_IdentifiedCardNo_get, _thostmduserapi.CThostFtdcReqRepealField_IdentifiedCardNo_set, doc=r"""证件号码""")
    CustType: "TThostFtdcCustTypeType" = property(_thostmduserapi.CThostFtdcReqRepealField_CustType_get, _thostmduserapi.CThostFtdcReqRepealField_CustType_set, doc=r"""客户类型""")
    BankAccount: "TThostFtdcBankAccountType" = property(_thostmduserapi.CThostFtdcReqRepealField_BankAccount_get, _thostmduserapi.CThostFtdcReqRepealField_BankAccount_set, doc=r"""银行帐号""")
    BankPassWord: "TThostFtdcPasswordType" = property(_thostmduserapi.CThostFtdcReqRepealField_BankPassWord_get, _thostmduserapi.CThostFtdcReqRepealField_BankPassWord_set, doc=r"""银行密码""")
    AccountID: "TThostFtdcAccountIDType" = property(_thostmduserapi.CThostFtdcReqRepealField_AccountID_get, _thostmduserapi.CThostFtdcReqRepealField_AccountID_set, doc=r"""投资者帐号""")
    Password: "TThostFtdcPasswordType" = property(_thostmduserapi.CThostFtdcReqRepealField_Password_get, _thostmduserapi.CThostFtdcReqRepealField_Password_set, doc=r"""期货密码""")
    InstallID: "TThostFtdcInstallIDType" = property(_thostmduserapi.CThostFtdcReqRepealField_InstallID_get, _thostmduserapi.CThostFtdcReqRepealField_InstallID_set, doc=r"""安装编号""")
    FutureSerial: "TThostFtdcFutureSerialType" = property(_thostmduserapi.CThostFtdcReqRepealField_FutureSerial_get, _thostmduserapi.CThostFtdcReqRepealField_FutureSerial_set, doc=r"""期货公司流水号""")
    UserID: "TThostFtdcUserIDType" = property(_thostmduserapi.CThostFtdcReqRepealField_UserID_get, _thostmduserapi.CThostFtdcReqRepealField_UserID_set, doc=r"""用户标识""")
    VerifyCertNoFlag: "TThostFtdcYesNoIndicatorType" = property(_thostmduserapi.CThostFtdcReqRepealField_VerifyCertNoFlag_get, _thostmduserapi.CThostFtdcReqRepealField_VerifyCertNoFlag_set, doc=r"""验证客户证件号码标志""")
    CurrencyID: "TThostFtdcCurrencyIDType" = property(_thostmduserapi.CThostFtdcReqRepealField_CurrencyID_get, _thostmduserapi.CThostFtdcReqRepealField_CurrencyID_set, doc=r"""币种代码""")
    TradeAmount: "TThostFtdcTradeAmountType" = property(_thostmduserapi.CThostFtdcReqRepealField_TradeAmount_get, _thostmduserapi.CThostFtdcReqRepealField_TradeAmount_set, doc=r"""转帐金额""")
    FutureFetchAmount: "TThostFtdcTradeAmountType" = property(_thostmduserapi.CThostFtdcReqRepealField_FutureFetchAmount_get, _thostmduserapi.CThostFtdcReqRepealField_FutureFetchAmount_set, doc=r"""期货可取金额""")
    FeePayFlag: "TThostFtdcFeePayFlagType" = property(_thostmduserapi.CThostFtdcReqRepealField_FeePayFlag_get, _thostmduserapi.CThostFtdcReqRepealField_FeePayFlag_set, doc=r"""费用支付标志""")
    CustFee: "TThostFtdcCustFeeType" = property(_thostmduserapi.CThostFtdcReqRepealField_CustFee_get, _thostmduserapi.CThostFtdcReqRepealField_CustFee_set, doc=r"""应收客户费用""")
    BrokerFee: "TThostFtdcFutureFeeType" = property(_thostmduserapi.CThostFtdcReqRepealField_BrokerFee_get, _thostmduserapi.CThostFtdcReqRepealField_BrokerFee_set, doc=r"""应收期货公司费用""")
    Message: "TThostFtdcAddInfoType" = property(_thostmduserapi.CThostFtdcReqRepealField_Message_get, _thostmduserapi.CThostFtdcReqRepealField_Message_set, doc=r"""发送方给接收方的消息""")
    Digest: "TThostFtdcDigestType" = property(_thostmduserapi.CThostFtdcReqRepealField_Digest_get, _thostmduserapi.CThostFtdcReqRepealField_Digest_set, doc=r"""摘要""")
    BankAccType: "TThostFtdcBankAccTypeType" = property(_thostmduserapi.CThostFtdcReqRepealField_BankAccType_get, _thostmduserapi.CThostFtdcReqRepealField_BankAccType_set, doc=r"""银行帐号类型""")
    DeviceID: "TThostFtdcDeviceIDType" = property(_thostmduserapi.CThostFtdcReqRepealField_DeviceID_get, _thostmduserapi.CThostFtdcReqRepealField_DeviceID_set, doc=r"""渠道标志""")
    BankSecuAccType: "TThostFtdcBankAccTypeType" = property(_thostmduserapi.CThostFtdcReqRepealField_BankSecuAccType_get, _thostmduserapi.CThostFtdcReqRepealField_BankSecuAccType_set, doc=r"""期货单位帐号类型""")
    BrokerIDByBank: "TThostFtdcBankCodingForFutureType" = property(_thostmduserapi.CThostFtdcReqRepealField_BrokerIDByBank_get, _thostmduserapi.CThostFtdcReqRepealField_BrokerIDByBank_set, doc=r"""期货公司银行编码""")
    BankSecuAcc: "TThostFtdcBankAccountType" = property(_thostmduserapi.CThostFtdcReqRepealField_BankSecuAcc_get, _thostmduserapi.CThostFtdcReqRepealField_BankSecuAcc_set, doc=r"""期货单位帐号""")
    BankPwdFlag: "TThostFtdcPwdFlagType" = property(_thostmduserapi.CThostFtdcReqRepealField_BankPwdFlag_get, _thostmduserapi.CThostFtdcReqRepealField_BankPwdFlag_set, doc=r"""银行密码标志""")
    SecuPwdFlag: "TThostFtdcPwdFlagType" = property(_thostmduserapi.CThostFtdcReqRepealField_SecuPwdFlag_get, _thostmduserapi.CThostFtdcReqRepealField_SecuPwdFlag_set, doc=r"""期货资金密码核对标志""")
    OperNo: "TThostFtdcOperNoType" = property(_thostmduserapi.CThostFtdcReqRepealField_OperNo_get, _thostmduserapi.CThostFtdcReqRepealField_OperNo_set, doc=r"""交易柜员""")
    RequestID: "TThostFtdcRequestIDType" = property(_thostmduserapi.CThostFtdcReqRepealField_RequestID_get, _thostmduserapi.CThostFtdcReqRepealField_RequestID_set, doc=r"""请求编号""")
    TID: "TThostFtdcTIDType" = property(_thostmduserapi.CThostFtdcReqRepealField_TID_get, _thostmduserapi.CThostFtdcReqRepealField_TID_set, doc=r"""交易ID""")
    TransferStatus: "TThostFtdcTransferStatusType" = property(_thostmduserapi.CThostFtdcReqRepealField_TransferStatus_get, _thostmduserapi.CThostFtdcReqRepealField_TransferStatus_set, doc=r"""转账交易状态""")
    LongCustomerName: "TThostFtdcLongIndividualNameType" = property(_thostmduserapi.CThostFtdcReqRepealField_LongCustomerName_get, _thostmduserapi.CThostFtdcReqRepealField_LongCustomerName_set, doc=r"""长客户姓名""")

    def __init__(self):
        _thostmduserapi.CThostFtdcReqRepealField_swiginit(self, _thostmduserapi.new_CThostFtdcReqRepealField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcReqRepealField

# Register CThostFtdcReqRepealField in _thostmduserapi:
_thostmduserapi.CThostFtdcReqRepealField_swigregister(CThostFtdcReqRepealField)
class CThostFtdcRspRepealField(object):
    r"""冲正响应"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    RepealTimeInterval: "TThostFtdcRepealTimeIntervalType" = property(_thostmduserapi.CThostFtdcRspRepealField_RepealTimeInterval_get, _thostmduserapi.CThostFtdcRspRepealField_RepealTimeInterval_set, doc=r"""冲正时间间隔""")
    RepealedTimes: "TThostFtdcRepealedTimesType" = property(_thostmduserapi.CThostFtdcRspRepealField_RepealedTimes_get, _thostmduserapi.CThostFtdcRspRepealField_RepealedTimes_set, doc=r"""已经冲正次数""")
    BankRepealFlag: "TThostFtdcBankRepealFlagType" = property(_thostmduserapi.CThostFtdcRspRepealField_BankRepealFlag_get, _thostmduserapi.CThostFtdcRspRepealField_BankRepealFlag_set, doc=r"""银行冲正标志""")
    BrokerRepealFlag: "TThostFtdcBrokerRepealFlagType" = property(_thostmduserapi.CThostFtdcRspRepealField_BrokerRepealFlag_get, _thostmduserapi.CThostFtdcRspRepealField_BrokerRepealFlag_set, doc=r"""期商冲正标志""")
    PlateRepealSerial: "TThostFtdcPlateSerialType" = property(_thostmduserapi.CThostFtdcRspRepealField_PlateRepealSerial_get, _thostmduserapi.CThostFtdcRspRepealField_PlateRepealSerial_set, doc=r"""被冲正平台流水号""")
    BankRepealSerial: "TThostFtdcBankSerialType" = property(_thostmduserapi.CThostFtdcRspRepealField_BankRepealSerial_get, _thostmduserapi.CThostFtdcRspRepealField_BankRepealSerial_set, doc=r"""被冲正银行流水号""")
    FutureRepealSerial: "TThostFtdcFutureSerialType" = property(_thostmduserapi.CThostFtdcRspRepealField_FutureRepealSerial_get, _thostmduserapi.CThostFtdcRspRepealField_FutureRepealSerial_set, doc=r"""被冲正期货流水号""")
    TradeCode: "TThostFtdcTradeCodeType" = property(_thostmduserapi.CThostFtdcRspRepealField_TradeCode_get, _thostmduserapi.CThostFtdcRspRepealField_TradeCode_set, doc=r"""业务功能码""")
    BankID: "TThostFtdcBankIDType" = property(_thostmduserapi.CThostFtdcRspRepealField_BankID_get, _thostmduserapi.CThostFtdcRspRepealField_BankID_set, doc=r"""银行代码""")
    BankBranchID: "TThostFtdcBankBrchIDType" = property(_thostmduserapi.CThostFtdcRspRepealField_BankBranchID_get, _thostmduserapi.CThostFtdcRspRepealField_BankBranchID_set, doc=r"""银行分支机构代码""")
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcRspRepealField_BrokerID_get, _thostmduserapi.CThostFtdcRspRepealField_BrokerID_set, doc=r"""期商代码""")
    BrokerBranchID: "TThostFtdcFutureBranchIDType" = property(_thostmduserapi.CThostFtdcRspRepealField_BrokerBranchID_get, _thostmduserapi.CThostFtdcRspRepealField_BrokerBranchID_set, doc=r"""期商分支机构代码""")
    TradeDate: "TThostFtdcTradeDateType" = property(_thostmduserapi.CThostFtdcRspRepealField_TradeDate_get, _thostmduserapi.CThostFtdcRspRepealField_TradeDate_set, doc=r"""交易日期""")
    TradeTime: "TThostFtdcTradeTimeType" = property(_thostmduserapi.CThostFtdcRspRepealField_TradeTime_get, _thostmduserapi.CThostFtdcRspRepealField_TradeTime_set, doc=r"""交易时间""")
    BankSerial: "TThostFtdcBankSerialType" = property(_thostmduserapi.CThostFtdcRspRepealField_BankSerial_get, _thostmduserapi.CThostFtdcRspRepealField_BankSerial_set, doc=r"""银行流水号""")
    TradingDay: "TThostFtdcTradeDateType" = property(_thostmduserapi.CThostFtdcRspRepealField_TradingDay_get, _thostmduserapi.CThostFtdcRspRepealField_TradingDay_set, doc=r"""交易系统日期""")
    PlateSerial: "TThostFtdcSerialType" = property(_thostmduserapi.CThostFtdcRspRepealField_PlateSerial_get, _thostmduserapi.CThostFtdcRspRepealField_PlateSerial_set, doc=r"""银期平台消息流水号""")
    LastFragment: "TThostFtdcLastFragmentType" = property(_thostmduserapi.CThostFtdcRspRepealField_LastFragment_get, _thostmduserapi.CThostFtdcRspRepealField_LastFragment_set, doc=r"""最后分片标志""")
    SessionID: "TThostFtdcSessionIDType" = property(_thostmduserapi.CThostFtdcRspRepealField_SessionID_get, _thostmduserapi.CThostFtdcRspRepealField_SessionID_set, doc=r"""会话号""")
    CustomerName: "TThostFtdcIndividualNameType" = property(_thostmduserapi.CThostFtdcRspRepealField_CustomerName_get, _thostmduserapi.CThostFtdcRspRepealField_CustomerName_set, doc=r"""客户姓名""")
    IdCardType: "TThostFtdcIdCardTypeType" = property(_thostmduserapi.CThostFtdcRspRepealField_IdCardType_get, _thostmduserapi.CThostFtdcRspRepealField_IdCardType_set, doc=r"""证件类型""")
    IdentifiedCardNo: "TThostFtdcIdentifiedCardNoType" = property(_thostmduserapi.CThostFtdcRspRepealField_IdentifiedCardNo_get, _thostmduserapi.CThostFtdcRspRepealField_IdentifiedCardNo_set, doc=r"""证件号码""")
    CustType: "TThostFtdcCustTypeType" = property(_thostmduserapi.CThostFtdcRspRepealField_CustType_get, _thostmduserapi.CThostFtdcRspRepealField_CustType_set, doc=r"""客户类型""")
    BankAccount: "TThostFtdcBankAccountType" = property(_thostmduserapi.CThostFtdcRspRepealField_BankAccount_get, _thostmduserapi.CThostFtdcRspRepealField_BankAccount_set, doc=r"""银行帐号""")
    BankPassWord: "TThostFtdcPasswordType" = property(_thostmduserapi.CThostFtdcRspRepealField_BankPassWord_get, _thostmduserapi.CThostFtdcRspRepealField_BankPassWord_set, doc=r"""银行密码""")
    AccountID: "TThostFtdcAccountIDType" = property(_thostmduserapi.CThostFtdcRspRepealField_AccountID_get, _thostmduserapi.CThostFtdcRspRepealField_AccountID_set, doc=r"""投资者帐号""")
    Password: "TThostFtdcPasswordType" = property(_thostmduserapi.CThostFtdcRspRepealField_Password_get, _thostmduserapi.CThostFtdcRspRepealField_Password_set, doc=r"""期货密码""")
    InstallID: "TThostFtdcInstallIDType" = property(_thostmduserapi.CThostFtdcRspRepealField_InstallID_get, _thostmduserapi.CThostFtdcRspRepealField_InstallID_set, doc=r"""安装编号""")
    FutureSerial: "TThostFtdcFutureSerialType" = property(_thostmduserapi.CThostFtdcRspRepealField_FutureSerial_get, _thostmduserapi.CThostFtdcRspRepealField_FutureSerial_set, doc=r"""期货公司流水号""")
    UserID: "TThostFtdcUserIDType" = property(_thostmduserapi.CThostFtdcRspRepealField_UserID_get, _thostmduserapi.CThostFtdcRspRepealField_UserID_set, doc=r"""用户标识""")
    VerifyCertNoFlag: "TThostFtdcYesNoIndicatorType" = property(_thostmduserapi.CThostFtdcRspRepealField_VerifyCertNoFlag_get, _thostmduserapi.CThostFtdcRspRepealField_VerifyCertNoFlag_set, doc=r"""验证客户证件号码标志""")
    CurrencyID: "TThostFtdcCurrencyIDType" = property(_thostmduserapi.CThostFtdcRspRepealField_CurrencyID_get, _thostmduserapi.CThostFtdcRspRepealField_CurrencyID_set, doc=r"""币种代码""")
    TradeAmount: "TThostFtdcTradeAmountType" = property(_thostmduserapi.CThostFtdcRspRepealField_TradeAmount_get, _thostmduserapi.CThostFtdcRspRepealField_TradeAmount_set, doc=r"""转帐金额""")
    FutureFetchAmount: "TThostFtdcTradeAmountType" = property(_thostmduserapi.CThostFtdcRspRepealField_FutureFetchAmount_get, _thostmduserapi.CThostFtdcRspRepealField_FutureFetchAmount_set, doc=r"""期货可取金额""")
    FeePayFlag: "TThostFtdcFeePayFlagType" = property(_thostmduserapi.CThostFtdcRspRepealField_FeePayFlag_get, _thostmduserapi.CThostFtdcRspRepealField_FeePayFlag_set, doc=r"""费用支付标志""")
    CustFee: "TThostFtdcCustFeeType" = property(_thostmduserapi.CThostFtdcRspRepealField_CustFee_get, _thostmduserapi.CThostFtdcRspRepealField_CustFee_set, doc=r"""应收客户费用""")
    BrokerFee: "TThostFtdcFutureFeeType" = property(_thostmduserapi.CThostFtdcRspRepealField_BrokerFee_get, _thostmduserapi.CThostFtdcRspRepealField_BrokerFee_set, doc=r"""应收期货公司费用""")
    Message: "TThostFtdcAddInfoType" = property(_thostmduserapi.CThostFtdcRspRepealField_Message_get, _thostmduserapi.CThostFtdcRspRepealField_Message_set, doc=r"""发送方给接收方的消息""")
    Digest: "TThostFtdcDigestType" = property(_thostmduserapi.CThostFtdcRspRepealField_Digest_get, _thostmduserapi.CThostFtdcRspRepealField_Digest_set, doc=r"""摘要""")
    BankAccType: "TThostFtdcBankAccTypeType" = property(_thostmduserapi.CThostFtdcRspRepealField_BankAccType_get, _thostmduserapi.CThostFtdcRspRepealField_BankAccType_set, doc=r"""银行帐号类型""")
    DeviceID: "TThostFtdcDeviceIDType" = property(_thostmduserapi.CThostFtdcRspRepealField_DeviceID_get, _thostmduserapi.CThostFtdcRspRepealField_DeviceID_set, doc=r"""渠道标志""")
    BankSecuAccType: "TThostFtdcBankAccTypeType" = property(_thostmduserapi.CThostFtdcRspRepealField_BankSecuAccType_get, _thostmduserapi.CThostFtdcRspRepealField_BankSecuAccType_set, doc=r"""期货单位帐号类型""")
    BrokerIDByBank: "TThostFtdcBankCodingForFutureType" = property(_thostmduserapi.CThostFtdcRspRepealField_BrokerIDByBank_get, _thostmduserapi.CThostFtdcRspRepealField_BrokerIDByBank_set, doc=r"""期货公司银行编码""")
    BankSecuAcc: "TThostFtdcBankAccountType" = property(_thostmduserapi.CThostFtdcRspRepealField_BankSecuAcc_get, _thostmduserapi.CThostFtdcRspRepealField_BankSecuAcc_set, doc=r"""期货单位帐号""")
    BankPwdFlag: "TThostFtdcPwdFlagType" = property(_thostmduserapi.CThostFtdcRspRepealField_BankPwdFlag_get, _thostmduserapi.CThostFtdcRspRepealField_BankPwdFlag_set, doc=r"""银行密码标志""")
    SecuPwdFlag: "TThostFtdcPwdFlagType" = property(_thostmduserapi.CThostFtdcRspRepealField_SecuPwdFlag_get, _thostmduserapi.CThostFtdcRspRepealField_SecuPwdFlag_set, doc=r"""期货资金密码核对标志""")
    OperNo: "TThostFtdcOperNoType" = property(_thostmduserapi.CThostFtdcRspRepealField_OperNo_get, _thostmduserapi.CThostFtdcRspRepealField_OperNo_set, doc=r"""交易柜员""")
    RequestID: "TThostFtdcRequestIDType" = property(_thostmduserapi.CThostFtdcRspRepealField_RequestID_get, _thostmduserapi.CThostFtdcRspRepealField_RequestID_set, doc=r"""请求编号""")
    TID: "TThostFtdcTIDType" = property(_thostmduserapi.CThostFtdcRspRepealField_TID_get, _thostmduserapi.CThostFtdcRspRepealField_TID_set, doc=r"""交易ID""")
    TransferStatus: "TThostFtdcTransferStatusType" = property(_thostmduserapi.CThostFtdcRspRepealField_TransferStatus_get, _thostmduserapi.CThostFtdcRspRepealField_TransferStatus_set, doc=r"""转账交易状态""")
    ErrorID: "TThostFtdcErrorIDType" = property(_thostmduserapi.CThostFtdcRspRepealField_ErrorID_get, _thostmduserapi.CThostFtdcRspRepealField_ErrorID_set, doc=r"""错误代码""")
    ErrorMsg: "TThostFtdcErrorMsgType" = property(_thostmduserapi.CThostFtdcRspRepealField_ErrorMsg_get, _thostmduserapi.CThostFtdcRspRepealField_ErrorMsg_set, doc=r"""错误信息""")
    LongCustomerName: "TThostFtdcLongIndividualNameType" = property(_thostmduserapi.CThostFtdcRspRepealField_LongCustomerName_get, _thostmduserapi.CThostFtdcRspRepealField_LongCustomerName_set, doc=r"""长客户姓名""")

    def __init__(self):
        _thostmduserapi.CThostFtdcRspRepealField_swiginit(self, _thostmduserapi.new_CThostFtdcRspRepealField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcRspRepealField

# Register CThostFtdcRspRepealField in _thostmduserapi:
_thostmduserapi.CThostFtdcRspRepealField_swigregister(CThostFtdcRspRepealField)
class CThostFtdcReqQueryAccountField(object):
    r"""查询账户信息请求"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    TradeCode: "TThostFtdcTradeCodeType" = property(_thostmduserapi.CThostFtdcReqQueryAccountField_TradeCode_get, _thostmduserapi.CThostFtdcReqQueryAccountField_TradeCode_set, doc=r"""业务功能码""")
    BankID: "TThostFtdcBankIDType" = property(_thostmduserapi.CThostFtdcReqQueryAccountField_BankID_get, _thostmduserapi.CThostFtdcReqQueryAccountField_BankID_set, doc=r"""银行代码""")
    BankBranchID: "TThostFtdcBankBrchIDType" = property(_thostmduserapi.CThostFtdcReqQueryAccountField_BankBranchID_get, _thostmduserapi.CThostFtdcReqQueryAccountField_BankBranchID_set, doc=r"""银行分支机构代码""")
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcReqQueryAccountField_BrokerID_get, _thostmduserapi.CThostFtdcReqQueryAccountField_BrokerID_set, doc=r"""期商代码""")
    BrokerBranchID: "TThostFtdcFutureBranchIDType" = property(_thostmduserapi.CThostFtdcReqQueryAccountField_BrokerBranchID_get, _thostmduserapi.CThostFtdcReqQueryAccountField_BrokerBranchID_set, doc=r"""期商分支机构代码""")
    TradeDate: "TThostFtdcTradeDateType" = property(_thostmduserapi.CThostFtdcReqQueryAccountField_TradeDate_get, _thostmduserapi.CThostFtdcReqQueryAccountField_TradeDate_set, doc=r"""交易日期""")
    TradeTime: "TThostFtdcTradeTimeType" = property(_thostmduserapi.CThostFtdcReqQueryAccountField_TradeTime_get, _thostmduserapi.CThostFtdcReqQueryAccountField_TradeTime_set, doc=r"""交易时间""")
    BankSerial: "TThostFtdcBankSerialType" = property(_thostmduserapi.CThostFtdcReqQueryAccountField_BankSerial_get, _thostmduserapi.CThostFtdcReqQueryAccountField_BankSerial_set, doc=r"""银行流水号""")
    TradingDay: "TThostFtdcTradeDateType" = property(_thostmduserapi.CThostFtdcReqQueryAccountField_TradingDay_get, _thostmduserapi.CThostFtdcReqQueryAccountField_TradingDay_set, doc=r"""交易系统日期""")
    PlateSerial: "TThostFtdcSerialType" = property(_thostmduserapi.CThostFtdcReqQueryAccountField_PlateSerial_get, _thostmduserapi.CThostFtdcReqQueryAccountField_PlateSerial_set, doc=r"""银期平台消息流水号""")
    LastFragment: "TThostFtdcLastFragmentType" = property(_thostmduserapi.CThostFtdcReqQueryAccountField_LastFragment_get, _thostmduserapi.CThostFtdcReqQueryAccountField_LastFragment_set, doc=r"""最后分片标志""")
    SessionID: "TThostFtdcSessionIDType" = property(_thostmduserapi.CThostFtdcReqQueryAccountField_SessionID_get, _thostmduserapi.CThostFtdcReqQueryAccountField_SessionID_set, doc=r"""会话号""")
    CustomerName: "TThostFtdcIndividualNameType" = property(_thostmduserapi.CThostFtdcReqQueryAccountField_CustomerName_get, _thostmduserapi.CThostFtdcReqQueryAccountField_CustomerName_set, doc=r"""客户姓名""")
    IdCardType: "TThostFtdcIdCardTypeType" = property(_thostmduserapi.CThostFtdcReqQueryAccountField_IdCardType_get, _thostmduserapi.CThostFtdcReqQueryAccountField_IdCardType_set, doc=r"""证件类型""")
    IdentifiedCardNo: "TThostFtdcIdentifiedCardNoType" = property(_thostmduserapi.CThostFtdcReqQueryAccountField_IdentifiedCardNo_get, _thostmduserapi.CThostFtdcReqQueryAccountField_IdentifiedCardNo_set, doc=r"""证件号码""")
    CustType: "TThostFtdcCustTypeType" = property(_thostmduserapi.CThostFtdcReqQueryAccountField_CustType_get, _thostmduserapi.CThostFtdcReqQueryAccountField_CustType_set, doc=r"""客户类型""")
    BankAccount: "TThostFtdcBankAccountType" = property(_thostmduserapi.CThostFtdcReqQueryAccountField_BankAccount_get, _thostmduserapi.CThostFtdcReqQueryAccountField_BankAccount_set, doc=r"""银行帐号""")
    BankPassWord: "TThostFtdcPasswordType" = property(_thostmduserapi.CThostFtdcReqQueryAccountField_BankPassWord_get, _thostmduserapi.CThostFtdcReqQueryAccountField_BankPassWord_set, doc=r"""银行密码""")
    AccountID: "TThostFtdcAccountIDType" = property(_thostmduserapi.CThostFtdcReqQueryAccountField_AccountID_get, _thostmduserapi.CThostFtdcReqQueryAccountField_AccountID_set, doc=r"""投资者帐号""")
    Password: "TThostFtdcPasswordType" = property(_thostmduserapi.CThostFtdcReqQueryAccountField_Password_get, _thostmduserapi.CThostFtdcReqQueryAccountField_Password_set, doc=r"""期货密码""")
    FutureSerial: "TThostFtdcFutureSerialType" = property(_thostmduserapi.CThostFtdcReqQueryAccountField_FutureSerial_get, _thostmduserapi.CThostFtdcReqQueryAccountField_FutureSerial_set, doc=r"""期货公司流水号""")
    InstallID: "TThostFtdcInstallIDType" = property(_thostmduserapi.CThostFtdcReqQueryAccountField_InstallID_get, _thostmduserapi.CThostFtdcReqQueryAccountField_InstallID_set, doc=r"""安装编号""")
    UserID: "TThostFtdcUserIDType" = property(_thostmduserapi.CThostFtdcReqQueryAccountField_UserID_get, _thostmduserapi.CThostFtdcReqQueryAccountField_UserID_set, doc=r"""用户标识""")
    VerifyCertNoFlag: "TThostFtdcYesNoIndicatorType" = property(_thostmduserapi.CThostFtdcReqQueryAccountField_VerifyCertNoFlag_get, _thostmduserapi.CThostFtdcReqQueryAccountField_VerifyCertNoFlag_set, doc=r"""验证客户证件号码标志""")
    CurrencyID: "TThostFtdcCurrencyIDType" = property(_thostmduserapi.CThostFtdcReqQueryAccountField_CurrencyID_get, _thostmduserapi.CThostFtdcReqQueryAccountField_CurrencyID_set, doc=r"""币种代码""")
    Digest: "TThostFtdcDigestType" = property(_thostmduserapi.CThostFtdcReqQueryAccountField_Digest_get, _thostmduserapi.CThostFtdcReqQueryAccountField_Digest_set, doc=r"""摘要""")
    BankAccType: "TThostFtdcBankAccTypeType" = property(_thostmduserapi.CThostFtdcReqQueryAccountField_BankAccType_get, _thostmduserapi.CThostFtdcReqQueryAccountField_BankAccType_set, doc=r"""银行帐号类型""")
    DeviceID: "TThostFtdcDeviceIDType" = property(_thostmduserapi.CThostFtdcReqQueryAccountField_DeviceID_get, _thostmduserapi.CThostFtdcReqQueryAccountField_DeviceID_set, doc=r"""渠道标志""")
    BankSecuAccType: "TThostFtdcBankAccTypeType" = property(_thostmduserapi.CThostFtdcReqQueryAccountField_BankSecuAccType_get, _thostmduserapi.CThostFtdcReqQueryAccountField_BankSecuAccType_set, doc=r"""期货单位帐号类型""")
    BrokerIDByBank: "TThostFtdcBankCodingForFutureType" = property(_thostmduserapi.CThostFtdcReqQueryAccountField_BrokerIDByBank_get, _thostmduserapi.CThostFtdcReqQueryAccountField_BrokerIDByBank_set, doc=r"""期货公司银行编码""")
    BankSecuAcc: "TThostFtdcBankAccountType" = property(_thostmduserapi.CThostFtdcReqQueryAccountField_BankSecuAcc_get, _thostmduserapi.CThostFtdcReqQueryAccountField_BankSecuAcc_set, doc=r"""期货单位帐号""")
    BankPwdFlag: "TThostFtdcPwdFlagType" = property(_thostmduserapi.CThostFtdcReqQueryAccountField_BankPwdFlag_get, _thostmduserapi.CThostFtdcReqQueryAccountField_BankPwdFlag_set, doc=r"""银行密码标志""")
    SecuPwdFlag: "TThostFtdcPwdFlagType" = property(_thostmduserapi.CThostFtdcReqQueryAccountField_SecuPwdFlag_get, _thostmduserapi.CThostFtdcReqQueryAccountField_SecuPwdFlag_set, doc=r"""期货资金密码核对标志""")
    OperNo: "TThostFtdcOperNoType" = property(_thostmduserapi.CThostFtdcReqQueryAccountField_OperNo_get, _thostmduserapi.CThostFtdcReqQueryAccountField_OperNo_set, doc=r"""交易柜员""")
    RequestID: "TThostFtdcRequestIDType" = property(_thostmduserapi.CThostFtdcReqQueryAccountField_RequestID_get, _thostmduserapi.CThostFtdcReqQueryAccountField_RequestID_set, doc=r"""请求编号""")
    TID: "TThostFtdcTIDType" = property(_thostmduserapi.CThostFtdcReqQueryAccountField_TID_get, _thostmduserapi.CThostFtdcReqQueryAccountField_TID_set, doc=r"""交易ID""")
    LongCustomerName: "TThostFtdcLongIndividualNameType" = property(_thostmduserapi.CThostFtdcReqQueryAccountField_LongCustomerName_get, _thostmduserapi.CThostFtdcReqQueryAccountField_LongCustomerName_set, doc=r"""长客户姓名""")

    def __init__(self):
        _thostmduserapi.CThostFtdcReqQueryAccountField_swiginit(self, _thostmduserapi.new_CThostFtdcReqQueryAccountField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcReqQueryAccountField

# Register CThostFtdcReqQueryAccountField in _thostmduserapi:
_thostmduserapi.CThostFtdcReqQueryAccountField_swigregister(CThostFtdcReqQueryAccountField)
class CThostFtdcRspQueryAccountField(object):
    r"""查询账户信息响应"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    TradeCode: "TThostFtdcTradeCodeType" = property(_thostmduserapi.CThostFtdcRspQueryAccountField_TradeCode_get, _thostmduserapi.CThostFtdcRspQueryAccountField_TradeCode_set, doc=r"""业务功能码""")
    BankID: "TThostFtdcBankIDType" = property(_thostmduserapi.CThostFtdcRspQueryAccountField_BankID_get, _thostmduserapi.CThostFtdcRspQueryAccountField_BankID_set, doc=r"""银行代码""")
    BankBranchID: "TThostFtdcBankBrchIDType" = property(_thostmduserapi.CThostFtdcRspQueryAccountField_BankBranchID_get, _thostmduserapi.CThostFtdcRspQueryAccountField_BankBranchID_set, doc=r"""银行分支机构代码""")
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcRspQueryAccountField_BrokerID_get, _thostmduserapi.CThostFtdcRspQueryAccountField_BrokerID_set, doc=r"""期商代码""")
    BrokerBranchID: "TThostFtdcFutureBranchIDType" = property(_thostmduserapi.CThostFtdcRspQueryAccountField_BrokerBranchID_get, _thostmduserapi.CThostFtdcRspQueryAccountField_BrokerBranchID_set, doc=r"""期商分支机构代码""")
    TradeDate: "TThostFtdcTradeDateType" = property(_thostmduserapi.CThostFtdcRspQueryAccountField_TradeDate_get, _thostmduserapi.CThostFtdcRspQueryAccountField_TradeDate_set, doc=r"""交易日期""")
    TradeTime: "TThostFtdcTradeTimeType" = property(_thostmduserapi.CThostFtdcRspQueryAccountField_TradeTime_get, _thostmduserapi.CThostFtdcRspQueryAccountField_TradeTime_set, doc=r"""交易时间""")
    BankSerial: "TThostFtdcBankSerialType" = property(_thostmduserapi.CThostFtdcRspQueryAccountField_BankSerial_get, _thostmduserapi.CThostFtdcRspQueryAccountField_BankSerial_set, doc=r"""银行流水号""")
    TradingDay: "TThostFtdcTradeDateType" = property(_thostmduserapi.CThostFtdcRspQueryAccountField_TradingDay_get, _thostmduserapi.CThostFtdcRspQueryAccountField_TradingDay_set, doc=r"""交易系统日期""")
    PlateSerial: "TThostFtdcSerialType" = property(_thostmduserapi.CThostFtdcRspQueryAccountField_PlateSerial_get, _thostmduserapi.CThostFtdcRspQueryAccountField_PlateSerial_set, doc=r"""银期平台消息流水号""")
    LastFragment: "TThostFtdcLastFragmentType" = property(_thostmduserapi.CThostFtdcRspQueryAccountField_LastFragment_get, _thostmduserapi.CThostFtdcRspQueryAccountField_LastFragment_set, doc=r"""最后分片标志""")
    SessionID: "TThostFtdcSessionIDType" = property(_thostmduserapi.CThostFtdcRspQueryAccountField_SessionID_get, _thostmduserapi.CThostFtdcRspQueryAccountField_SessionID_set, doc=r"""会话号""")
    CustomerName: "TThostFtdcIndividualNameType" = property(_thostmduserapi.CThostFtdcRspQueryAccountField_CustomerName_get, _thostmduserapi.CThostFtdcRspQueryAccountField_CustomerName_set, doc=r"""客户姓名""")
    IdCardType: "TThostFtdcIdCardTypeType" = property(_thostmduserapi.CThostFtdcRspQueryAccountField_IdCardType_get, _thostmduserapi.CThostFtdcRspQueryAccountField_IdCardType_set, doc=r"""证件类型""")
    IdentifiedCardNo: "TThostFtdcIdentifiedCardNoType" = property(_thostmduserapi.CThostFtdcRspQueryAccountField_IdentifiedCardNo_get, _thostmduserapi.CThostFtdcRspQueryAccountField_IdentifiedCardNo_set, doc=r"""证件号码""")
    CustType: "TThostFtdcCustTypeType" = property(_thostmduserapi.CThostFtdcRspQueryAccountField_CustType_get, _thostmduserapi.CThostFtdcRspQueryAccountField_CustType_set, doc=r"""客户类型""")
    BankAccount: "TThostFtdcBankAccountType" = property(_thostmduserapi.CThostFtdcRspQueryAccountField_BankAccount_get, _thostmduserapi.CThostFtdcRspQueryAccountField_BankAccount_set, doc=r"""银行帐号""")
    BankPassWord: "TThostFtdcPasswordType" = property(_thostmduserapi.CThostFtdcRspQueryAccountField_BankPassWord_get, _thostmduserapi.CThostFtdcRspQueryAccountField_BankPassWord_set, doc=r"""银行密码""")
    AccountID: "TThostFtdcAccountIDType" = property(_thostmduserapi.CThostFtdcRspQueryAccountField_AccountID_get, _thostmduserapi.CThostFtdcRspQueryAccountField_AccountID_set, doc=r"""投资者帐号""")
    Password: "TThostFtdcPasswordType" = property(_thostmduserapi.CThostFtdcRspQueryAccountField_Password_get, _thostmduserapi.CThostFtdcRspQueryAccountField_Password_set, doc=r"""期货密码""")
    FutureSerial: "TThostFtdcFutureSerialType" = property(_thostmduserapi.CThostFtdcRspQueryAccountField_FutureSerial_get, _thostmduserapi.CThostFtdcRspQueryAccountField_FutureSerial_set, doc=r"""期货公司流水号""")
    InstallID: "TThostFtdcInstallIDType" = property(_thostmduserapi.CThostFtdcRspQueryAccountField_InstallID_get, _thostmduserapi.CThostFtdcRspQueryAccountField_InstallID_set, doc=r"""安装编号""")
    UserID: "TThostFtdcUserIDType" = property(_thostmduserapi.CThostFtdcRspQueryAccountField_UserID_get, _thostmduserapi.CThostFtdcRspQueryAccountField_UserID_set, doc=r"""用户标识""")
    VerifyCertNoFlag: "TThostFtdcYesNoIndicatorType" = property(_thostmduserapi.CThostFtdcRspQueryAccountField_VerifyCertNoFlag_get, _thostmduserapi.CThostFtdcRspQueryAccountField_VerifyCertNoFlag_set, doc=r"""验证客户证件号码标志""")
    CurrencyID: "TThostFtdcCurrencyIDType" = property(_thostmduserapi.CThostFtdcRspQueryAccountField_CurrencyID_get, _thostmduserapi.CThostFtdcRspQueryAccountField_CurrencyID_set, doc=r"""币种代码""")
    Digest: "TThostFtdcDigestType" = property(_thostmduserapi.CThostFtdcRspQueryAccountField_Digest_get, _thostmduserapi.CThostFtdcRspQueryAccountField_Digest_set, doc=r"""摘要""")
    BankAccType: "TThostFtdcBankAccTypeType" = property(_thostmduserapi.CThostFtdcRspQueryAccountField_BankAccType_get, _thostmduserapi.CThostFtdcRspQueryAccountField_BankAccType_set, doc=r"""银行帐号类型""")
    DeviceID: "TThostFtdcDeviceIDType" = property(_thostmduserapi.CThostFtdcRspQueryAccountField_DeviceID_get, _thostmduserapi.CThostFtdcRspQueryAccountField_DeviceID_set, doc=r"""渠道标志""")
    BankSecuAccType: "TThostFtdcBankAccTypeType" = property(_thostmduserapi.CThostFtdcRspQueryAccountField_BankSecuAccType_get, _thostmduserapi.CThostFtdcRspQueryAccountField_BankSecuAccType_set, doc=r"""期货单位帐号类型""")
    BrokerIDByBank: "TThostFtdcBankCodingForFutureType" = property(_thostmduserapi.CThostFtdcRspQueryAccountField_BrokerIDByBank_get, _thostmduserapi.CThostFtdcRspQueryAccountField_BrokerIDByBank_set, doc=r"""期货公司银行编码""")
    BankSecuAcc: "TThostFtdcBankAccountType" = property(_thostmduserapi.CThostFtdcRspQueryAccountField_BankSecuAcc_get, _thostmduserapi.CThostFtdcRspQueryAccountField_BankSecuAcc_set, doc=r"""期货单位帐号""")
    BankPwdFlag: "TThostFtdcPwdFlagType" = property(_thostmduserapi.CThostFtdcRspQueryAccountField_BankPwdFlag_get, _thostmduserapi.CThostFtdcRspQueryAccountField_BankPwdFlag_set, doc=r"""银行密码标志""")
    SecuPwdFlag: "TThostFtdcPwdFlagType" = property(_thostmduserapi.CThostFtdcRspQueryAccountField_SecuPwdFlag_get, _thostmduserapi.CThostFtdcRspQueryAccountField_SecuPwdFlag_set, doc=r"""期货资金密码核对标志""")
    OperNo: "TThostFtdcOperNoType" = property(_thostmduserapi.CThostFtdcRspQueryAccountField_OperNo_get, _thostmduserapi.CThostFtdcRspQueryAccountField_OperNo_set, doc=r"""交易柜员""")
    RequestID: "TThostFtdcRequestIDType" = property(_thostmduserapi.CThostFtdcRspQueryAccountField_RequestID_get, _thostmduserapi.CThostFtdcRspQueryAccountField_RequestID_set, doc=r"""请求编号""")
    TID: "TThostFtdcTIDType" = property(_thostmduserapi.CThostFtdcRspQueryAccountField_TID_get, _thostmduserapi.CThostFtdcRspQueryAccountField_TID_set, doc=r"""交易ID""")
    BankUseAmount: "TThostFtdcTradeAmountType" = property(_thostmduserapi.CThostFtdcRspQueryAccountField_BankUseAmount_get, _thostmduserapi.CThostFtdcRspQueryAccountField_BankUseAmount_set, doc=r"""银行可用金额""")
    BankFetchAmount: "TThostFtdcTradeAmountType" = property(_thostmduserapi.CThostFtdcRspQueryAccountField_BankFetchAmount_get, _thostmduserapi.CThostFtdcRspQueryAccountField_BankFetchAmount_set, doc=r"""银行可取金额""")
    LongCustomerName: "TThostFtdcLongIndividualNameType" = property(_thostmduserapi.CThostFtdcRspQueryAccountField_LongCustomerName_get, _thostmduserapi.CThostFtdcRspQueryAccountField_LongCustomerName_set, doc=r"""长客户姓名""")

    def __init__(self):
        _thostmduserapi.CThostFtdcRspQueryAccountField_swiginit(self, _thostmduserapi.new_CThostFtdcRspQueryAccountField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcRspQueryAccountField

# Register CThostFtdcRspQueryAccountField in _thostmduserapi:
_thostmduserapi.CThostFtdcRspQueryAccountField_swigregister(CThostFtdcRspQueryAccountField)
class CThostFtdcFutureSignIOField(object):
    r"""期商签到签退"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    TradeCode: "TThostFtdcTradeCodeType" = property(_thostmduserapi.CThostFtdcFutureSignIOField_TradeCode_get, _thostmduserapi.CThostFtdcFutureSignIOField_TradeCode_set, doc=r"""业务功能码""")
    BankID: "TThostFtdcBankIDType" = property(_thostmduserapi.CThostFtdcFutureSignIOField_BankID_get, _thostmduserapi.CThostFtdcFutureSignIOField_BankID_set, doc=r"""银行代码""")
    BankBranchID: "TThostFtdcBankBrchIDType" = property(_thostmduserapi.CThostFtdcFutureSignIOField_BankBranchID_get, _thostmduserapi.CThostFtdcFutureSignIOField_BankBranchID_set, doc=r"""银行分支机构代码""")
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcFutureSignIOField_BrokerID_get, _thostmduserapi.CThostFtdcFutureSignIOField_BrokerID_set, doc=r"""期商代码""")
    BrokerBranchID: "TThostFtdcFutureBranchIDType" = property(_thostmduserapi.CThostFtdcFutureSignIOField_BrokerBranchID_get, _thostmduserapi.CThostFtdcFutureSignIOField_BrokerBranchID_set, doc=r"""期商分支机构代码""")
    TradeDate: "TThostFtdcTradeDateType" = property(_thostmduserapi.CThostFtdcFutureSignIOField_TradeDate_get, _thostmduserapi.CThostFtdcFutureSignIOField_TradeDate_set, doc=r"""交易日期""")
    TradeTime: "TThostFtdcTradeTimeType" = property(_thostmduserapi.CThostFtdcFutureSignIOField_TradeTime_get, _thostmduserapi.CThostFtdcFutureSignIOField_TradeTime_set, doc=r"""交易时间""")
    BankSerial: "TThostFtdcBankSerialType" = property(_thostmduserapi.CThostFtdcFutureSignIOField_BankSerial_get, _thostmduserapi.CThostFtdcFutureSignIOField_BankSerial_set, doc=r"""银行流水号""")
    TradingDay: "TThostFtdcTradeDateType" = property(_thostmduserapi.CThostFtdcFutureSignIOField_TradingDay_get, _thostmduserapi.CThostFtdcFutureSignIOField_TradingDay_set, doc=r"""交易系统日期""")
    PlateSerial: "TThostFtdcSerialType" = property(_thostmduserapi.CThostFtdcFutureSignIOField_PlateSerial_get, _thostmduserapi.CThostFtdcFutureSignIOField_PlateSerial_set, doc=r"""银期平台消息流水号""")
    LastFragment: "TThostFtdcLastFragmentType" = property(_thostmduserapi.CThostFtdcFutureSignIOField_LastFragment_get, _thostmduserapi.CThostFtdcFutureSignIOField_LastFragment_set, doc=r"""最后分片标志""")
    SessionID: "TThostFtdcSessionIDType" = property(_thostmduserapi.CThostFtdcFutureSignIOField_SessionID_get, _thostmduserapi.CThostFtdcFutureSignIOField_SessionID_set, doc=r"""会话号""")
    InstallID: "TThostFtdcInstallIDType" = property(_thostmduserapi.CThostFtdcFutureSignIOField_InstallID_get, _thostmduserapi.CThostFtdcFutureSignIOField_InstallID_set, doc=r"""安装编号""")
    UserID: "TThostFtdcUserIDType" = property(_thostmduserapi.CThostFtdcFutureSignIOField_UserID_get, _thostmduserapi.CThostFtdcFutureSignIOField_UserID_set, doc=r"""用户标识""")
    Digest: "TThostFtdcDigestType" = property(_thostmduserapi.CThostFtdcFutureSignIOField_Digest_get, _thostmduserapi.CThostFtdcFutureSignIOField_Digest_set, doc=r"""摘要""")
    CurrencyID: "TThostFtdcCurrencyIDType" = property(_thostmduserapi.CThostFtdcFutureSignIOField_CurrencyID_get, _thostmduserapi.CThostFtdcFutureSignIOField_CurrencyID_set, doc=r"""币种代码""")
    DeviceID: "TThostFtdcDeviceIDType" = property(_thostmduserapi.CThostFtdcFutureSignIOField_DeviceID_get, _thostmduserapi.CThostFtdcFutureSignIOField_DeviceID_set, doc=r"""渠道标志""")
    BrokerIDByBank: "TThostFtdcBankCodingForFutureType" = property(_thostmduserapi.CThostFtdcFutureSignIOField_BrokerIDByBank_get, _thostmduserapi.CThostFtdcFutureSignIOField_BrokerIDByBank_set, doc=r"""期货公司银行编码""")
    OperNo: "TThostFtdcOperNoType" = property(_thostmduserapi.CThostFtdcFutureSignIOField_OperNo_get, _thostmduserapi.CThostFtdcFutureSignIOField_OperNo_set, doc=r"""交易柜员""")
    RequestID: "TThostFtdcRequestIDType" = property(_thostmduserapi.CThostFtdcFutureSignIOField_RequestID_get, _thostmduserapi.CThostFtdcFutureSignIOField_RequestID_set, doc=r"""请求编号""")
    TID: "TThostFtdcTIDType" = property(_thostmduserapi.CThostFtdcFutureSignIOField_TID_get, _thostmduserapi.CThostFtdcFutureSignIOField_TID_set, doc=r"""交易ID""")

    def __init__(self):
        _thostmduserapi.CThostFtdcFutureSignIOField_swiginit(self, _thostmduserapi.new_CThostFtdcFutureSignIOField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcFutureSignIOField

# Register CThostFtdcFutureSignIOField in _thostmduserapi:
_thostmduserapi.CThostFtdcFutureSignIOField_swigregister(CThostFtdcFutureSignIOField)
class CThostFtdcRspFutureSignInField(object):
    r"""期商签到响应"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    TradeCode: "TThostFtdcTradeCodeType" = property(_thostmduserapi.CThostFtdcRspFutureSignInField_TradeCode_get, _thostmduserapi.CThostFtdcRspFutureSignInField_TradeCode_set, doc=r"""业务功能码""")
    BankID: "TThostFtdcBankIDType" = property(_thostmduserapi.CThostFtdcRspFutureSignInField_BankID_get, _thostmduserapi.CThostFtdcRspFutureSignInField_BankID_set, doc=r"""银行代码""")
    BankBranchID: "TThostFtdcBankBrchIDType" = property(_thostmduserapi.CThostFtdcRspFutureSignInField_BankBranchID_get, _thostmduserapi.CThostFtdcRspFutureSignInField_BankBranchID_set, doc=r"""银行分支机构代码""")
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcRspFutureSignInField_BrokerID_get, _thostmduserapi.CThostFtdcRspFutureSignInField_BrokerID_set, doc=r"""期商代码""")
    BrokerBranchID: "TThostFtdcFutureBranchIDType" = property(_thostmduserapi.CThostFtdcRspFutureSignInField_BrokerBranchID_get, _thostmduserapi.CThostFtdcRspFutureSignInField_BrokerBranchID_set, doc=r"""期商分支机构代码""")
    TradeDate: "TThostFtdcTradeDateType" = property(_thostmduserapi.CThostFtdcRspFutureSignInField_TradeDate_get, _thostmduserapi.CThostFtdcRspFutureSignInField_TradeDate_set, doc=r"""交易日期""")
    TradeTime: "TThostFtdcTradeTimeType" = property(_thostmduserapi.CThostFtdcRspFutureSignInField_TradeTime_get, _thostmduserapi.CThostFtdcRspFutureSignInField_TradeTime_set, doc=r"""交易时间""")
    BankSerial: "TThostFtdcBankSerialType" = property(_thostmduserapi.CThostFtdcRspFutureSignInField_BankSerial_get, _thostmduserapi.CThostFtdcRspFutureSignInField_BankSerial_set, doc=r"""银行流水号""")
    TradingDay: "TThostFtdcTradeDateType" = property(_thostmduserapi.CThostFtdcRspFutureSignInField_TradingDay_get, _thostmduserapi.CThostFtdcRspFutureSignInField_TradingDay_set, doc=r"""交易系统日期""")
    PlateSerial: "TThostFtdcSerialType" = property(_thostmduserapi.CThostFtdcRspFutureSignInField_PlateSerial_get, _thostmduserapi.CThostFtdcRspFutureSignInField_PlateSerial_set, doc=r"""银期平台消息流水号""")
    LastFragment: "TThostFtdcLastFragmentType" = property(_thostmduserapi.CThostFtdcRspFutureSignInField_LastFragment_get, _thostmduserapi.CThostFtdcRspFutureSignInField_LastFragment_set, doc=r"""最后分片标志""")
    SessionID: "TThostFtdcSessionIDType" = property(_thostmduserapi.CThostFtdcRspFutureSignInField_SessionID_get, _thostmduserapi.CThostFtdcRspFutureSignInField_SessionID_set, doc=r"""会话号""")
    InstallID: "TThostFtdcInstallIDType" = property(_thostmduserapi.CThostFtdcRspFutureSignInField_InstallID_get, _thostmduserapi.CThostFtdcRspFutureSignInField_InstallID_set, doc=r"""安装编号""")
    UserID: "TThostFtdcUserIDType" = property(_thostmduserapi.CThostFtdcRspFutureSignInField_UserID_get, _thostmduserapi.CThostFtdcRspFutureSignInField_UserID_set, doc=r"""用户标识""")
    Digest: "TThostFtdcDigestType" = property(_thostmduserapi.CThostFtdcRspFutureSignInField_Digest_get, _thostmduserapi.CThostFtdcRspFutureSignInField_Digest_set, doc=r"""摘要""")
    CurrencyID: "TThostFtdcCurrencyIDType" = property(_thostmduserapi.CThostFtdcRspFutureSignInField_CurrencyID_get, _thostmduserapi.CThostFtdcRspFutureSignInField_CurrencyID_set, doc=r"""币种代码""")
    DeviceID: "TThostFtdcDeviceIDType" = property(_thostmduserapi.CThostFtdcRspFutureSignInField_DeviceID_get, _thostmduserapi.CThostFtdcRspFutureSignInField_DeviceID_set, doc=r"""渠道标志""")
    BrokerIDByBank: "TThostFtdcBankCodingForFutureType" = property(_thostmduserapi.CThostFtdcRspFutureSignInField_BrokerIDByBank_get, _thostmduserapi.CThostFtdcRspFutureSignInField_BrokerIDByBank_set, doc=r"""期货公司银行编码""")
    OperNo: "TThostFtdcOperNoType" = property(_thostmduserapi.CThostFtdcRspFutureSignInField_OperNo_get, _thostmduserapi.CThostFtdcRspFutureSignInField_OperNo_set, doc=r"""交易柜员""")
    RequestID: "TThostFtdcRequestIDType" = property(_thostmduserapi.CThostFtdcRspFutureSignInField_RequestID_get, _thostmduserapi.CThostFtdcRspFutureSignInField_RequestID_set, doc=r"""请求编号""")
    TID: "TThostFtdcTIDType" = property(_thostmduserapi.CThostFtdcRspFutureSignInField_TID_get, _thostmduserapi.CThostFtdcRspFutureSignInField_TID_set, doc=r"""交易ID""")
    ErrorID: "TThostFtdcErrorIDType" = property(_thostmduserapi.CThostFtdcRspFutureSignInField_ErrorID_get, _thostmduserapi.CThostFtdcRspFutureSignInField_ErrorID_set, doc=r"""错误代码""")
    ErrorMsg: "TThostFtdcErrorMsgType" = property(_thostmduserapi.CThostFtdcRspFutureSignInField_ErrorMsg_get, _thostmduserapi.CThostFtdcRspFutureSignInField_ErrorMsg_set, doc=r"""错误信息""")
    PinKey: "TThostFtdcPasswordKeyType" = property(_thostmduserapi.CThostFtdcRspFutureSignInField_PinKey_get, _thostmduserapi.CThostFtdcRspFutureSignInField_PinKey_set, doc=r"""PIN密钥""")
    MacKey: "TThostFtdcPasswordKeyType" = property(_thostmduserapi.CThostFtdcRspFutureSignInField_MacKey_get, _thostmduserapi.CThostFtdcRspFutureSignInField_MacKey_set, doc=r"""MAC密钥""")

    def __init__(self):
        _thostmduserapi.CThostFtdcRspFutureSignInField_swiginit(self, _thostmduserapi.new_CThostFtdcRspFutureSignInField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcRspFutureSignInField

# Register CThostFtdcRspFutureSignInField in _thostmduserapi:
_thostmduserapi.CThostFtdcRspFutureSignInField_swigregister(CThostFtdcRspFutureSignInField)
class CThostFtdcReqFutureSignOutField(object):
    r"""期商签退请求"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    TradeCode: "TThostFtdcTradeCodeType" = property(_thostmduserapi.CThostFtdcReqFutureSignOutField_TradeCode_get, _thostmduserapi.CThostFtdcReqFutureSignOutField_TradeCode_set, doc=r"""业务功能码""")
    BankID: "TThostFtdcBankIDType" = property(_thostmduserapi.CThostFtdcReqFutureSignOutField_BankID_get, _thostmduserapi.CThostFtdcReqFutureSignOutField_BankID_set, doc=r"""银行代码""")
    BankBranchID: "TThostFtdcBankBrchIDType" = property(_thostmduserapi.CThostFtdcReqFutureSignOutField_BankBranchID_get, _thostmduserapi.CThostFtdcReqFutureSignOutField_BankBranchID_set, doc=r"""银行分支机构代码""")
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcReqFutureSignOutField_BrokerID_get, _thostmduserapi.CThostFtdcReqFutureSignOutField_BrokerID_set, doc=r"""期商代码""")
    BrokerBranchID: "TThostFtdcFutureBranchIDType" = property(_thostmduserapi.CThostFtdcReqFutureSignOutField_BrokerBranchID_get, _thostmduserapi.CThostFtdcReqFutureSignOutField_BrokerBranchID_set, doc=r"""期商分支机构代码""")
    TradeDate: "TThostFtdcTradeDateType" = property(_thostmduserapi.CThostFtdcReqFutureSignOutField_TradeDate_get, _thostmduserapi.CThostFtdcReqFutureSignOutField_TradeDate_set, doc=r"""交易日期""")
    TradeTime: "TThostFtdcTradeTimeType" = property(_thostmduserapi.CThostFtdcReqFutureSignOutField_TradeTime_get, _thostmduserapi.CThostFtdcReqFutureSignOutField_TradeTime_set, doc=r"""交易时间""")
    BankSerial: "TThostFtdcBankSerialType" = property(_thostmduserapi.CThostFtdcReqFutureSignOutField_BankSerial_get, _thostmduserapi.CThostFtdcReqFutureSignOutField_BankSerial_set, doc=r"""银行流水号""")
    TradingDay: "TThostFtdcTradeDateType" = property(_thostmduserapi.CThostFtdcReqFutureSignOutField_TradingDay_get, _thostmduserapi.CThostFtdcReqFutureSignOutField_TradingDay_set, doc=r"""交易系统日期""")
    PlateSerial: "TThostFtdcSerialType" = property(_thostmduserapi.CThostFtdcReqFutureSignOutField_PlateSerial_get, _thostmduserapi.CThostFtdcReqFutureSignOutField_PlateSerial_set, doc=r"""银期平台消息流水号""")
    LastFragment: "TThostFtdcLastFragmentType" = property(_thostmduserapi.CThostFtdcReqFutureSignOutField_LastFragment_get, _thostmduserapi.CThostFtdcReqFutureSignOutField_LastFragment_set, doc=r"""最后分片标志""")
    SessionID: "TThostFtdcSessionIDType" = property(_thostmduserapi.CThostFtdcReqFutureSignOutField_SessionID_get, _thostmduserapi.CThostFtdcReqFutureSignOutField_SessionID_set, doc=r"""会话号""")
    InstallID: "TThostFtdcInstallIDType" = property(_thostmduserapi.CThostFtdcReqFutureSignOutField_InstallID_get, _thostmduserapi.CThostFtdcReqFutureSignOutField_InstallID_set, doc=r"""安装编号""")
    UserID: "TThostFtdcUserIDType" = property(_thostmduserapi.CThostFtdcReqFutureSignOutField_UserID_get, _thostmduserapi.CThostFtdcReqFutureSignOutField_UserID_set, doc=r"""用户标识""")
    Digest: "TThostFtdcDigestType" = property(_thostmduserapi.CThostFtdcReqFutureSignOutField_Digest_get, _thostmduserapi.CThostFtdcReqFutureSignOutField_Digest_set, doc=r"""摘要""")
    CurrencyID: "TThostFtdcCurrencyIDType" = property(_thostmduserapi.CThostFtdcReqFutureSignOutField_CurrencyID_get, _thostmduserapi.CThostFtdcReqFutureSignOutField_CurrencyID_set, doc=r"""币种代码""")
    DeviceID: "TThostFtdcDeviceIDType" = property(_thostmduserapi.CThostFtdcReqFutureSignOutField_DeviceID_get, _thostmduserapi.CThostFtdcReqFutureSignOutField_DeviceID_set, doc=r"""渠道标志""")
    BrokerIDByBank: "TThostFtdcBankCodingForFutureType" = property(_thostmduserapi.CThostFtdcReqFutureSignOutField_BrokerIDByBank_get, _thostmduserapi.CThostFtdcReqFutureSignOutField_BrokerIDByBank_set, doc=r"""期货公司银行编码""")
    OperNo: "TThostFtdcOperNoType" = property(_thostmduserapi.CThostFtdcReqFutureSignOutField_OperNo_get, _thostmduserapi.CThostFtdcReqFutureSignOutField_OperNo_set, doc=r"""交易柜员""")
    RequestID: "TThostFtdcRequestIDType" = property(_thostmduserapi.CThostFtdcReqFutureSignOutField_RequestID_get, _thostmduserapi.CThostFtdcReqFutureSignOutField_RequestID_set, doc=r"""请求编号""")
    TID: "TThostFtdcTIDType" = property(_thostmduserapi.CThostFtdcReqFutureSignOutField_TID_get, _thostmduserapi.CThostFtdcReqFutureSignOutField_TID_set, doc=r"""交易ID""")

    def __init__(self):
        _thostmduserapi.CThostFtdcReqFutureSignOutField_swiginit(self, _thostmduserapi.new_CThostFtdcReqFutureSignOutField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcReqFutureSignOutField

# Register CThostFtdcReqFutureSignOutField in _thostmduserapi:
_thostmduserapi.CThostFtdcReqFutureSignOutField_swigregister(CThostFtdcReqFutureSignOutField)
class CThostFtdcRspFutureSignOutField(object):
    r"""期商签退响应"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    TradeCode: "TThostFtdcTradeCodeType" = property(_thostmduserapi.CThostFtdcRspFutureSignOutField_TradeCode_get, _thostmduserapi.CThostFtdcRspFutureSignOutField_TradeCode_set, doc=r"""业务功能码""")
    BankID: "TThostFtdcBankIDType" = property(_thostmduserapi.CThostFtdcRspFutureSignOutField_BankID_get, _thostmduserapi.CThostFtdcRspFutureSignOutField_BankID_set, doc=r"""银行代码""")
    BankBranchID: "TThostFtdcBankBrchIDType" = property(_thostmduserapi.CThostFtdcRspFutureSignOutField_BankBranchID_get, _thostmduserapi.CThostFtdcRspFutureSignOutField_BankBranchID_set, doc=r"""银行分支机构代码""")
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcRspFutureSignOutField_BrokerID_get, _thostmduserapi.CThostFtdcRspFutureSignOutField_BrokerID_set, doc=r"""期商代码""")
    BrokerBranchID: "TThostFtdcFutureBranchIDType" = property(_thostmduserapi.CThostFtdcRspFutureSignOutField_BrokerBranchID_get, _thostmduserapi.CThostFtdcRspFutureSignOutField_BrokerBranchID_set, doc=r"""期商分支机构代码""")
    TradeDate: "TThostFtdcTradeDateType" = property(_thostmduserapi.CThostFtdcRspFutureSignOutField_TradeDate_get, _thostmduserapi.CThostFtdcRspFutureSignOutField_TradeDate_set, doc=r"""交易日期""")
    TradeTime: "TThostFtdcTradeTimeType" = property(_thostmduserapi.CThostFtdcRspFutureSignOutField_TradeTime_get, _thostmduserapi.CThostFtdcRspFutureSignOutField_TradeTime_set, doc=r"""交易时间""")
    BankSerial: "TThostFtdcBankSerialType" = property(_thostmduserapi.CThostFtdcRspFutureSignOutField_BankSerial_get, _thostmduserapi.CThostFtdcRspFutureSignOutField_BankSerial_set, doc=r"""银行流水号""")
    TradingDay: "TThostFtdcTradeDateType" = property(_thostmduserapi.CThostFtdcRspFutureSignOutField_TradingDay_get, _thostmduserapi.CThostFtdcRspFutureSignOutField_TradingDay_set, doc=r"""交易系统日期""")
    PlateSerial: "TThostFtdcSerialType" = property(_thostmduserapi.CThostFtdcRspFutureSignOutField_PlateSerial_get, _thostmduserapi.CThostFtdcRspFutureSignOutField_PlateSerial_set, doc=r"""银期平台消息流水号""")
    LastFragment: "TThostFtdcLastFragmentType" = property(_thostmduserapi.CThostFtdcRspFutureSignOutField_LastFragment_get, _thostmduserapi.CThostFtdcRspFutureSignOutField_LastFragment_set, doc=r"""最后分片标志""")
    SessionID: "TThostFtdcSessionIDType" = property(_thostmduserapi.CThostFtdcRspFutureSignOutField_SessionID_get, _thostmduserapi.CThostFtdcRspFutureSignOutField_SessionID_set, doc=r"""会话号""")
    InstallID: "TThostFtdcInstallIDType" = property(_thostmduserapi.CThostFtdcRspFutureSignOutField_InstallID_get, _thostmduserapi.CThostFtdcRspFutureSignOutField_InstallID_set, doc=r"""安装编号""")
    UserID: "TThostFtdcUserIDType" = property(_thostmduserapi.CThostFtdcRspFutureSignOutField_UserID_get, _thostmduserapi.CThostFtdcRspFutureSignOutField_UserID_set, doc=r"""用户标识""")
    Digest: "TThostFtdcDigestType" = property(_thostmduserapi.CThostFtdcRspFutureSignOutField_Digest_get, _thostmduserapi.CThostFtdcRspFutureSignOutField_Digest_set, doc=r"""摘要""")
    CurrencyID: "TThostFtdcCurrencyIDType" = property(_thostmduserapi.CThostFtdcRspFutureSignOutField_CurrencyID_get, _thostmduserapi.CThostFtdcRspFutureSignOutField_CurrencyID_set, doc=r"""币种代码""")
    DeviceID: "TThostFtdcDeviceIDType" = property(_thostmduserapi.CThostFtdcRspFutureSignOutField_DeviceID_get, _thostmduserapi.CThostFtdcRspFutureSignOutField_DeviceID_set, doc=r"""渠道标志""")
    BrokerIDByBank: "TThostFtdcBankCodingForFutureType" = property(_thostmduserapi.CThostFtdcRspFutureSignOutField_BrokerIDByBank_get, _thostmduserapi.CThostFtdcRspFutureSignOutField_BrokerIDByBank_set, doc=r"""期货公司银行编码""")
    OperNo: "TThostFtdcOperNoType" = property(_thostmduserapi.CThostFtdcRspFutureSignOutField_OperNo_get, _thostmduserapi.CThostFtdcRspFutureSignOutField_OperNo_set, doc=r"""交易柜员""")
    RequestID: "TThostFtdcRequestIDType" = property(_thostmduserapi.CThostFtdcRspFutureSignOutField_RequestID_get, _thostmduserapi.CThostFtdcRspFutureSignOutField_RequestID_set, doc=r"""请求编号""")
    TID: "TThostFtdcTIDType" = property(_thostmduserapi.CThostFtdcRspFutureSignOutField_TID_get, _thostmduserapi.CThostFtdcRspFutureSignOutField_TID_set, doc=r"""交易ID""")
    ErrorID: "TThostFtdcErrorIDType" = property(_thostmduserapi.CThostFtdcRspFutureSignOutField_ErrorID_get, _thostmduserapi.CThostFtdcRspFutureSignOutField_ErrorID_set, doc=r"""错误代码""")
    ErrorMsg: "TThostFtdcErrorMsgType" = property(_thostmduserapi.CThostFtdcRspFutureSignOutField_ErrorMsg_get, _thostmduserapi.CThostFtdcRspFutureSignOutField_ErrorMsg_set, doc=r"""错误信息""")

    def __init__(self):
        _thostmduserapi.CThostFtdcRspFutureSignOutField_swiginit(self, _thostmduserapi.new_CThostFtdcRspFutureSignOutField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcRspFutureSignOutField

# Register CThostFtdcRspFutureSignOutField in _thostmduserapi:
_thostmduserapi.CThostFtdcRspFutureSignOutField_swigregister(CThostFtdcRspFutureSignOutField)
class CThostFtdcReqQueryTradeResultBySerialField(object):
    r"""查询指定流水号的交易结果请求"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    TradeCode: "TThostFtdcTradeCodeType" = property(_thostmduserapi.CThostFtdcReqQueryTradeResultBySerialField_TradeCode_get, _thostmduserapi.CThostFtdcReqQueryTradeResultBySerialField_TradeCode_set, doc=r"""业务功能码""")
    BankID: "TThostFtdcBankIDType" = property(_thostmduserapi.CThostFtdcReqQueryTradeResultBySerialField_BankID_get, _thostmduserapi.CThostFtdcReqQueryTradeResultBySerialField_BankID_set, doc=r"""银行代码""")
    BankBranchID: "TThostFtdcBankBrchIDType" = property(_thostmduserapi.CThostFtdcReqQueryTradeResultBySerialField_BankBranchID_get, _thostmduserapi.CThostFtdcReqQueryTradeResultBySerialField_BankBranchID_set, doc=r"""银行分支机构代码""")
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcReqQueryTradeResultBySerialField_BrokerID_get, _thostmduserapi.CThostFtdcReqQueryTradeResultBySerialField_BrokerID_set, doc=r"""期商代码""")
    BrokerBranchID: "TThostFtdcFutureBranchIDType" = property(_thostmduserapi.CThostFtdcReqQueryTradeResultBySerialField_BrokerBranchID_get, _thostmduserapi.CThostFtdcReqQueryTradeResultBySerialField_BrokerBranchID_set, doc=r"""期商分支机构代码""")
    TradeDate: "TThostFtdcTradeDateType" = property(_thostmduserapi.CThostFtdcReqQueryTradeResultBySerialField_TradeDate_get, _thostmduserapi.CThostFtdcReqQueryTradeResultBySerialField_TradeDate_set, doc=r"""交易日期""")
    TradeTime: "TThostFtdcTradeTimeType" = property(_thostmduserapi.CThostFtdcReqQueryTradeResultBySerialField_TradeTime_get, _thostmduserapi.CThostFtdcReqQueryTradeResultBySerialField_TradeTime_set, doc=r"""交易时间""")
    BankSerial: "TThostFtdcBankSerialType" = property(_thostmduserapi.CThostFtdcReqQueryTradeResultBySerialField_BankSerial_get, _thostmduserapi.CThostFtdcReqQueryTradeResultBySerialField_BankSerial_set, doc=r"""银行流水号""")
    TradingDay: "TThostFtdcTradeDateType" = property(_thostmduserapi.CThostFtdcReqQueryTradeResultBySerialField_TradingDay_get, _thostmduserapi.CThostFtdcReqQueryTradeResultBySerialField_TradingDay_set, doc=r"""交易系统日期""")
    PlateSerial: "TThostFtdcSerialType" = property(_thostmduserapi.CThostFtdcReqQueryTradeResultBySerialField_PlateSerial_get, _thostmduserapi.CThostFtdcReqQueryTradeResultBySerialField_PlateSerial_set, doc=r"""银期平台消息流水号""")
    LastFragment: "TThostFtdcLastFragmentType" = property(_thostmduserapi.CThostFtdcReqQueryTradeResultBySerialField_LastFragment_get, _thostmduserapi.CThostFtdcReqQueryTradeResultBySerialField_LastFragment_set, doc=r"""最后分片标志""")
    SessionID: "TThostFtdcSessionIDType" = property(_thostmduserapi.CThostFtdcReqQueryTradeResultBySerialField_SessionID_get, _thostmduserapi.CThostFtdcReqQueryTradeResultBySerialField_SessionID_set, doc=r"""会话号""")
    Reference: "TThostFtdcSerialType" = property(_thostmduserapi.CThostFtdcReqQueryTradeResultBySerialField_Reference_get, _thostmduserapi.CThostFtdcReqQueryTradeResultBySerialField_Reference_set, doc=r"""流水号""")
    RefrenceIssureType: "TThostFtdcInstitutionTypeType" = property(_thostmduserapi.CThostFtdcReqQueryTradeResultBySerialField_RefrenceIssureType_get, _thostmduserapi.CThostFtdcReqQueryTradeResultBySerialField_RefrenceIssureType_set, doc=r"""本流水号发布者的机构类型""")
    RefrenceIssure: "TThostFtdcOrganCodeType" = property(_thostmduserapi.CThostFtdcReqQueryTradeResultBySerialField_RefrenceIssure_get, _thostmduserapi.CThostFtdcReqQueryTradeResultBySerialField_RefrenceIssure_set, doc=r"""本流水号发布者机构编码""")
    CustomerName: "TThostFtdcIndividualNameType" = property(_thostmduserapi.CThostFtdcReqQueryTradeResultBySerialField_CustomerName_get, _thostmduserapi.CThostFtdcReqQueryTradeResultBySerialField_CustomerName_set, doc=r"""客户姓名""")
    IdCardType: "TThostFtdcIdCardTypeType" = property(_thostmduserapi.CThostFtdcReqQueryTradeResultBySerialField_IdCardType_get, _thostmduserapi.CThostFtdcReqQueryTradeResultBySerialField_IdCardType_set, doc=r"""证件类型""")
    IdentifiedCardNo: "TThostFtdcIdentifiedCardNoType" = property(_thostmduserapi.CThostFtdcReqQueryTradeResultBySerialField_IdentifiedCardNo_get, _thostmduserapi.CThostFtdcReqQueryTradeResultBySerialField_IdentifiedCardNo_set, doc=r"""证件号码""")
    CustType: "TThostFtdcCustTypeType" = property(_thostmduserapi.CThostFtdcReqQueryTradeResultBySerialField_CustType_get, _thostmduserapi.CThostFtdcReqQueryTradeResultBySerialField_CustType_set, doc=r"""客户类型""")
    BankAccount: "TThostFtdcBankAccountType" = property(_thostmduserapi.CThostFtdcReqQueryTradeResultBySerialField_BankAccount_get, _thostmduserapi.CThostFtdcReqQueryTradeResultBySerialField_BankAccount_set, doc=r"""银行帐号""")
    BankPassWord: "TThostFtdcPasswordType" = property(_thostmduserapi.CThostFtdcReqQueryTradeResultBySerialField_BankPassWord_get, _thostmduserapi.CThostFtdcReqQueryTradeResultBySerialField_BankPassWord_set, doc=r"""银行密码""")
    AccountID: "TThostFtdcAccountIDType" = property(_thostmduserapi.CThostFtdcReqQueryTradeResultBySerialField_AccountID_get, _thostmduserapi.CThostFtdcReqQueryTradeResultBySerialField_AccountID_set, doc=r"""投资者帐号""")
    Password: "TThostFtdcPasswordType" = property(_thostmduserapi.CThostFtdcReqQueryTradeResultBySerialField_Password_get, _thostmduserapi.CThostFtdcReqQueryTradeResultBySerialField_Password_set, doc=r"""期货密码""")
    CurrencyID: "TThostFtdcCurrencyIDType" = property(_thostmduserapi.CThostFtdcReqQueryTradeResultBySerialField_CurrencyID_get, _thostmduserapi.CThostFtdcReqQueryTradeResultBySerialField_CurrencyID_set, doc=r"""币种代码""")
    TradeAmount: "TThostFtdcTradeAmountType" = property(_thostmduserapi.CThostFtdcReqQueryTradeResultBySerialField_TradeAmount_get, _thostmduserapi.CThostFtdcReqQueryTradeResultBySerialField_TradeAmount_set, doc=r"""转帐金额""")
    Digest: "TThostFtdcDigestType" = property(_thostmduserapi.CThostFtdcReqQueryTradeResultBySerialField_Digest_get, _thostmduserapi.CThostFtdcReqQueryTradeResultBySerialField_Digest_set, doc=r"""摘要""")
    LongCustomerName: "TThostFtdcLongIndividualNameType" = property(_thostmduserapi.CThostFtdcReqQueryTradeResultBySerialField_LongCustomerName_get, _thostmduserapi.CThostFtdcReqQueryTradeResultBySerialField_LongCustomerName_set, doc=r"""长客户姓名""")

    def __init__(self):
        _thostmduserapi.CThostFtdcReqQueryTradeResultBySerialField_swiginit(self, _thostmduserapi.new_CThostFtdcReqQueryTradeResultBySerialField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcReqQueryTradeResultBySerialField

# Register CThostFtdcReqQueryTradeResultBySerialField in _thostmduserapi:
_thostmduserapi.CThostFtdcReqQueryTradeResultBySerialField_swigregister(CThostFtdcReqQueryTradeResultBySerialField)
class CThostFtdcRspQueryTradeResultBySerialField(object):
    r"""查询指定流水号的交易结果响应"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    TradeCode: "TThostFtdcTradeCodeType" = property(_thostmduserapi.CThostFtdcRspQueryTradeResultBySerialField_TradeCode_get, _thostmduserapi.CThostFtdcRspQueryTradeResultBySerialField_TradeCode_set, doc=r"""业务功能码""")
    BankID: "TThostFtdcBankIDType" = property(_thostmduserapi.CThostFtdcRspQueryTradeResultBySerialField_BankID_get, _thostmduserapi.CThostFtdcRspQueryTradeResultBySerialField_BankID_set, doc=r"""银行代码""")
    BankBranchID: "TThostFtdcBankBrchIDType" = property(_thostmduserapi.CThostFtdcRspQueryTradeResultBySerialField_BankBranchID_get, _thostmduserapi.CThostFtdcRspQueryTradeResultBySerialField_BankBranchID_set, doc=r"""银行分支机构代码""")
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcRspQueryTradeResultBySerialField_BrokerID_get, _thostmduserapi.CThostFtdcRspQueryTradeResultBySerialField_BrokerID_set, doc=r"""期商代码""")
    BrokerBranchID: "TThostFtdcFutureBranchIDType" = property(_thostmduserapi.CThostFtdcRspQueryTradeResultBySerialField_BrokerBranchID_get, _thostmduserapi.CThostFtdcRspQueryTradeResultBySerialField_BrokerBranchID_set, doc=r"""期商分支机构代码""")
    TradeDate: "TThostFtdcTradeDateType" = property(_thostmduserapi.CThostFtdcRspQueryTradeResultBySerialField_TradeDate_get, _thostmduserapi.CThostFtdcRspQueryTradeResultBySerialField_TradeDate_set, doc=r"""交易日期""")
    TradeTime: "TThostFtdcTradeTimeType" = property(_thostmduserapi.CThostFtdcRspQueryTradeResultBySerialField_TradeTime_get, _thostmduserapi.CThostFtdcRspQueryTradeResultBySerialField_TradeTime_set, doc=r"""交易时间""")
    BankSerial: "TThostFtdcBankSerialType" = property(_thostmduserapi.CThostFtdcRspQueryTradeResultBySerialField_BankSerial_get, _thostmduserapi.CThostFtdcRspQueryTradeResultBySerialField_BankSerial_set, doc=r"""银行流水号""")
    TradingDay: "TThostFtdcTradeDateType" = property(_thostmduserapi.CThostFtdcRspQueryTradeResultBySerialField_TradingDay_get, _thostmduserapi.CThostFtdcRspQueryTradeResultBySerialField_TradingDay_set, doc=r"""交易系统日期""")
    PlateSerial: "TThostFtdcSerialType" = property(_thostmduserapi.CThostFtdcRspQueryTradeResultBySerialField_PlateSerial_get, _thostmduserapi.CThostFtdcRspQueryTradeResultBySerialField_PlateSerial_set, doc=r"""银期平台消息流水号""")
    LastFragment: "TThostFtdcLastFragmentType" = property(_thostmduserapi.CThostFtdcRspQueryTradeResultBySerialField_LastFragment_get, _thostmduserapi.CThostFtdcRspQueryTradeResultBySerialField_LastFragment_set, doc=r"""最后分片标志""")
    SessionID: "TThostFtdcSessionIDType" = property(_thostmduserapi.CThostFtdcRspQueryTradeResultBySerialField_SessionID_get, _thostmduserapi.CThostFtdcRspQueryTradeResultBySerialField_SessionID_set, doc=r"""会话号""")
    ErrorID: "TThostFtdcErrorIDType" = property(_thostmduserapi.CThostFtdcRspQueryTradeResultBySerialField_ErrorID_get, _thostmduserapi.CThostFtdcRspQueryTradeResultBySerialField_ErrorID_set, doc=r"""错误代码""")
    ErrorMsg: "TThostFtdcErrorMsgType" = property(_thostmduserapi.CThostFtdcRspQueryTradeResultBySerialField_ErrorMsg_get, _thostmduserapi.CThostFtdcRspQueryTradeResultBySerialField_ErrorMsg_set, doc=r"""错误信息""")
    Reference: "TThostFtdcSerialType" = property(_thostmduserapi.CThostFtdcRspQueryTradeResultBySerialField_Reference_get, _thostmduserapi.CThostFtdcRspQueryTradeResultBySerialField_Reference_set, doc=r"""流水号""")
    RefrenceIssureType: "TThostFtdcInstitutionTypeType" = property(_thostmduserapi.CThostFtdcRspQueryTradeResultBySerialField_RefrenceIssureType_get, _thostmduserapi.CThostFtdcRspQueryTradeResultBySerialField_RefrenceIssureType_set, doc=r"""本流水号发布者的机构类型""")
    RefrenceIssure: "TThostFtdcOrganCodeType" = property(_thostmduserapi.CThostFtdcRspQueryTradeResultBySerialField_RefrenceIssure_get, _thostmduserapi.CThostFtdcRspQueryTradeResultBySerialField_RefrenceIssure_set, doc=r"""本流水号发布者机构编码""")
    OriginReturnCode: "TThostFtdcReturnCodeType" = property(_thostmduserapi.CThostFtdcRspQueryTradeResultBySerialField_OriginReturnCode_get, _thostmduserapi.CThostFtdcRspQueryTradeResultBySerialField_OriginReturnCode_set, doc=r"""原始返回代码""")
    OriginDescrInfoForReturnCode: "TThostFtdcDescrInfoForReturnCodeType" = property(_thostmduserapi.CThostFtdcRspQueryTradeResultBySerialField_OriginDescrInfoForReturnCode_get, _thostmduserapi.CThostFtdcRspQueryTradeResultBySerialField_OriginDescrInfoForReturnCode_set, doc=r"""原始返回码描述""")
    BankAccount: "TThostFtdcBankAccountType" = property(_thostmduserapi.CThostFtdcRspQueryTradeResultBySerialField_BankAccount_get, _thostmduserapi.CThostFtdcRspQueryTradeResultBySerialField_BankAccount_set, doc=r"""银行帐号""")
    BankPassWord: "TThostFtdcPasswordType" = property(_thostmduserapi.CThostFtdcRspQueryTradeResultBySerialField_BankPassWord_get, _thostmduserapi.CThostFtdcRspQueryTradeResultBySerialField_BankPassWord_set, doc=r"""银行密码""")
    AccountID: "TThostFtdcAccountIDType" = property(_thostmduserapi.CThostFtdcRspQueryTradeResultBySerialField_AccountID_get, _thostmduserapi.CThostFtdcRspQueryTradeResultBySerialField_AccountID_set, doc=r"""投资者帐号""")
    Password: "TThostFtdcPasswordType" = property(_thostmduserapi.CThostFtdcRspQueryTradeResultBySerialField_Password_get, _thostmduserapi.CThostFtdcRspQueryTradeResultBySerialField_Password_set, doc=r"""期货密码""")
    CurrencyID: "TThostFtdcCurrencyIDType" = property(_thostmduserapi.CThostFtdcRspQueryTradeResultBySerialField_CurrencyID_get, _thostmduserapi.CThostFtdcRspQueryTradeResultBySerialField_CurrencyID_set, doc=r"""币种代码""")
    TradeAmount: "TThostFtdcTradeAmountType" = property(_thostmduserapi.CThostFtdcRspQueryTradeResultBySerialField_TradeAmount_get, _thostmduserapi.CThostFtdcRspQueryTradeResultBySerialField_TradeAmount_set, doc=r"""转帐金额""")
    Digest: "TThostFtdcDigestType" = property(_thostmduserapi.CThostFtdcRspQueryTradeResultBySerialField_Digest_get, _thostmduserapi.CThostFtdcRspQueryTradeResultBySerialField_Digest_set, doc=r"""摘要""")

    def __init__(self):
        _thostmduserapi.CThostFtdcRspQueryTradeResultBySerialField_swiginit(self, _thostmduserapi.new_CThostFtdcRspQueryTradeResultBySerialField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcRspQueryTradeResultBySerialField

# Register CThostFtdcRspQueryTradeResultBySerialField in _thostmduserapi:
_thostmduserapi.CThostFtdcRspQueryTradeResultBySerialField_swigregister(CThostFtdcRspQueryTradeResultBySerialField)
class CThostFtdcReqDayEndFileReadyField(object):
    r"""日终文件就绪请求"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    TradeCode: "TThostFtdcTradeCodeType" = property(_thostmduserapi.CThostFtdcReqDayEndFileReadyField_TradeCode_get, _thostmduserapi.CThostFtdcReqDayEndFileReadyField_TradeCode_set, doc=r"""业务功能码""")
    BankID: "TThostFtdcBankIDType" = property(_thostmduserapi.CThostFtdcReqDayEndFileReadyField_BankID_get, _thostmduserapi.CThostFtdcReqDayEndFileReadyField_BankID_set, doc=r"""银行代码""")
    BankBranchID: "TThostFtdcBankBrchIDType" = property(_thostmduserapi.CThostFtdcReqDayEndFileReadyField_BankBranchID_get, _thostmduserapi.CThostFtdcReqDayEndFileReadyField_BankBranchID_set, doc=r"""银行分支机构代码""")
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcReqDayEndFileReadyField_BrokerID_get, _thostmduserapi.CThostFtdcReqDayEndFileReadyField_BrokerID_set, doc=r"""期商代码""")
    BrokerBranchID: "TThostFtdcFutureBranchIDType" = property(_thostmduserapi.CThostFtdcReqDayEndFileReadyField_BrokerBranchID_get, _thostmduserapi.CThostFtdcReqDayEndFileReadyField_BrokerBranchID_set, doc=r"""期商分支机构代码""")
    TradeDate: "TThostFtdcTradeDateType" = property(_thostmduserapi.CThostFtdcReqDayEndFileReadyField_TradeDate_get, _thostmduserapi.CThostFtdcReqDayEndFileReadyField_TradeDate_set, doc=r"""交易日期""")
    TradeTime: "TThostFtdcTradeTimeType" = property(_thostmduserapi.CThostFtdcReqDayEndFileReadyField_TradeTime_get, _thostmduserapi.CThostFtdcReqDayEndFileReadyField_TradeTime_set, doc=r"""交易时间""")
    BankSerial: "TThostFtdcBankSerialType" = property(_thostmduserapi.CThostFtdcReqDayEndFileReadyField_BankSerial_get, _thostmduserapi.CThostFtdcReqDayEndFileReadyField_BankSerial_set, doc=r"""银行流水号""")
    TradingDay: "TThostFtdcTradeDateType" = property(_thostmduserapi.CThostFtdcReqDayEndFileReadyField_TradingDay_get, _thostmduserapi.CThostFtdcReqDayEndFileReadyField_TradingDay_set, doc=r"""交易系统日期""")
    PlateSerial: "TThostFtdcSerialType" = property(_thostmduserapi.CThostFtdcReqDayEndFileReadyField_PlateSerial_get, _thostmduserapi.CThostFtdcReqDayEndFileReadyField_PlateSerial_set, doc=r"""银期平台消息流水号""")
    LastFragment: "TThostFtdcLastFragmentType" = property(_thostmduserapi.CThostFtdcReqDayEndFileReadyField_LastFragment_get, _thostmduserapi.CThostFtdcReqDayEndFileReadyField_LastFragment_set, doc=r"""最后分片标志""")
    SessionID: "TThostFtdcSessionIDType" = property(_thostmduserapi.CThostFtdcReqDayEndFileReadyField_SessionID_get, _thostmduserapi.CThostFtdcReqDayEndFileReadyField_SessionID_set, doc=r"""会话号""")
    FileBusinessCode: "TThostFtdcFileBusinessCodeType" = property(_thostmduserapi.CThostFtdcReqDayEndFileReadyField_FileBusinessCode_get, _thostmduserapi.CThostFtdcReqDayEndFileReadyField_FileBusinessCode_set, doc=r"""文件业务功能""")
    Digest: "TThostFtdcDigestType" = property(_thostmduserapi.CThostFtdcReqDayEndFileReadyField_Digest_get, _thostmduserapi.CThostFtdcReqDayEndFileReadyField_Digest_set, doc=r"""摘要""")

    def __init__(self):
        _thostmduserapi.CThostFtdcReqDayEndFileReadyField_swiginit(self, _thostmduserapi.new_CThostFtdcReqDayEndFileReadyField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcReqDayEndFileReadyField

# Register CThostFtdcReqDayEndFileReadyField in _thostmduserapi:
_thostmduserapi.CThostFtdcReqDayEndFileReadyField_swigregister(CThostFtdcReqDayEndFileReadyField)
class CThostFtdcReturnResultField(object):
    r"""返回结果"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ReturnCode: "TThostFtdcReturnCodeType" = property(_thostmduserapi.CThostFtdcReturnResultField_ReturnCode_get, _thostmduserapi.CThostFtdcReturnResultField_ReturnCode_set, doc=r"""返回代码""")
    DescrInfoForReturnCode: "TThostFtdcDescrInfoForReturnCodeType" = property(_thostmduserapi.CThostFtdcReturnResultField_DescrInfoForReturnCode_get, _thostmduserapi.CThostFtdcReturnResultField_DescrInfoForReturnCode_set, doc=r"""返回码描述""")

    def __init__(self):
        _thostmduserapi.CThostFtdcReturnResultField_swiginit(self, _thostmduserapi.new_CThostFtdcReturnResultField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcReturnResultField

# Register CThostFtdcReturnResultField in _thostmduserapi:
_thostmduserapi.CThostFtdcReturnResultField_swigregister(CThostFtdcReturnResultField)
class CThostFtdcVerifyFuturePasswordField(object):
    r"""验证期货资金密码"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    TradeCode: "TThostFtdcTradeCodeType" = property(_thostmduserapi.CThostFtdcVerifyFuturePasswordField_TradeCode_get, _thostmduserapi.CThostFtdcVerifyFuturePasswordField_TradeCode_set, doc=r"""业务功能码""")
    BankID: "TThostFtdcBankIDType" = property(_thostmduserapi.CThostFtdcVerifyFuturePasswordField_BankID_get, _thostmduserapi.CThostFtdcVerifyFuturePasswordField_BankID_set, doc=r"""银行代码""")
    BankBranchID: "TThostFtdcBankBrchIDType" = property(_thostmduserapi.CThostFtdcVerifyFuturePasswordField_BankBranchID_get, _thostmduserapi.CThostFtdcVerifyFuturePasswordField_BankBranchID_set, doc=r"""银行分支机构代码""")
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcVerifyFuturePasswordField_BrokerID_get, _thostmduserapi.CThostFtdcVerifyFuturePasswordField_BrokerID_set, doc=r"""期商代码""")
    BrokerBranchID: "TThostFtdcFutureBranchIDType" = property(_thostmduserapi.CThostFtdcVerifyFuturePasswordField_BrokerBranchID_get, _thostmduserapi.CThostFtdcVerifyFuturePasswordField_BrokerBranchID_set, doc=r"""期商分支机构代码""")
    TradeDate: "TThostFtdcTradeDateType" = property(_thostmduserapi.CThostFtdcVerifyFuturePasswordField_TradeDate_get, _thostmduserapi.CThostFtdcVerifyFuturePasswordField_TradeDate_set, doc=r"""交易日期""")
    TradeTime: "TThostFtdcTradeTimeType" = property(_thostmduserapi.CThostFtdcVerifyFuturePasswordField_TradeTime_get, _thostmduserapi.CThostFtdcVerifyFuturePasswordField_TradeTime_set, doc=r"""交易时间""")
    BankSerial: "TThostFtdcBankSerialType" = property(_thostmduserapi.CThostFtdcVerifyFuturePasswordField_BankSerial_get, _thostmduserapi.CThostFtdcVerifyFuturePasswordField_BankSerial_set, doc=r"""银行流水号""")
    TradingDay: "TThostFtdcTradeDateType" = property(_thostmduserapi.CThostFtdcVerifyFuturePasswordField_TradingDay_get, _thostmduserapi.CThostFtdcVerifyFuturePasswordField_TradingDay_set, doc=r"""交易系统日期""")
    PlateSerial: "TThostFtdcSerialType" = property(_thostmduserapi.CThostFtdcVerifyFuturePasswordField_PlateSerial_get, _thostmduserapi.CThostFtdcVerifyFuturePasswordField_PlateSerial_set, doc=r"""银期平台消息流水号""")
    LastFragment: "TThostFtdcLastFragmentType" = property(_thostmduserapi.CThostFtdcVerifyFuturePasswordField_LastFragment_get, _thostmduserapi.CThostFtdcVerifyFuturePasswordField_LastFragment_set, doc=r"""最后分片标志""")
    SessionID: "TThostFtdcSessionIDType" = property(_thostmduserapi.CThostFtdcVerifyFuturePasswordField_SessionID_get, _thostmduserapi.CThostFtdcVerifyFuturePasswordField_SessionID_set, doc=r"""会话号""")
    AccountID: "TThostFtdcAccountIDType" = property(_thostmduserapi.CThostFtdcVerifyFuturePasswordField_AccountID_get, _thostmduserapi.CThostFtdcVerifyFuturePasswordField_AccountID_set, doc=r"""投资者帐号""")
    Password: "TThostFtdcPasswordType" = property(_thostmduserapi.CThostFtdcVerifyFuturePasswordField_Password_get, _thostmduserapi.CThostFtdcVerifyFuturePasswordField_Password_set, doc=r"""期货密码""")
    BankAccount: "TThostFtdcBankAccountType" = property(_thostmduserapi.CThostFtdcVerifyFuturePasswordField_BankAccount_get, _thostmduserapi.CThostFtdcVerifyFuturePasswordField_BankAccount_set, doc=r"""银行帐号""")
    BankPassWord: "TThostFtdcPasswordType" = property(_thostmduserapi.CThostFtdcVerifyFuturePasswordField_BankPassWord_get, _thostmduserapi.CThostFtdcVerifyFuturePasswordField_BankPassWord_set, doc=r"""银行密码""")
    InstallID: "TThostFtdcInstallIDType" = property(_thostmduserapi.CThostFtdcVerifyFuturePasswordField_InstallID_get, _thostmduserapi.CThostFtdcVerifyFuturePasswordField_InstallID_set, doc=r"""安装编号""")
    TID: "TThostFtdcTIDType" = property(_thostmduserapi.CThostFtdcVerifyFuturePasswordField_TID_get, _thostmduserapi.CThostFtdcVerifyFuturePasswordField_TID_set, doc=r"""交易ID""")
    CurrencyID: "TThostFtdcCurrencyIDType" = property(_thostmduserapi.CThostFtdcVerifyFuturePasswordField_CurrencyID_get, _thostmduserapi.CThostFtdcVerifyFuturePasswordField_CurrencyID_set, doc=r"""币种代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcVerifyFuturePasswordField_swiginit(self, _thostmduserapi.new_CThostFtdcVerifyFuturePasswordField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcVerifyFuturePasswordField

# Register CThostFtdcVerifyFuturePasswordField in _thostmduserapi:
_thostmduserapi.CThostFtdcVerifyFuturePasswordField_swigregister(CThostFtdcVerifyFuturePasswordField)
class CThostFtdcVerifyCustInfoField(object):
    r"""验证客户信息"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    CustomerName: "TThostFtdcIndividualNameType" = property(_thostmduserapi.CThostFtdcVerifyCustInfoField_CustomerName_get, _thostmduserapi.CThostFtdcVerifyCustInfoField_CustomerName_set, doc=r"""客户姓名""")
    IdCardType: "TThostFtdcIdCardTypeType" = property(_thostmduserapi.CThostFtdcVerifyCustInfoField_IdCardType_get, _thostmduserapi.CThostFtdcVerifyCustInfoField_IdCardType_set, doc=r"""证件类型""")
    IdentifiedCardNo: "TThostFtdcIdentifiedCardNoType" = property(_thostmduserapi.CThostFtdcVerifyCustInfoField_IdentifiedCardNo_get, _thostmduserapi.CThostFtdcVerifyCustInfoField_IdentifiedCardNo_set, doc=r"""证件号码""")
    CustType: "TThostFtdcCustTypeType" = property(_thostmduserapi.CThostFtdcVerifyCustInfoField_CustType_get, _thostmduserapi.CThostFtdcVerifyCustInfoField_CustType_set, doc=r"""客户类型""")
    LongCustomerName: "TThostFtdcLongIndividualNameType" = property(_thostmduserapi.CThostFtdcVerifyCustInfoField_LongCustomerName_get, _thostmduserapi.CThostFtdcVerifyCustInfoField_LongCustomerName_set, doc=r"""长客户姓名""")

    def __init__(self):
        _thostmduserapi.CThostFtdcVerifyCustInfoField_swiginit(self, _thostmduserapi.new_CThostFtdcVerifyCustInfoField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcVerifyCustInfoField

# Register CThostFtdcVerifyCustInfoField in _thostmduserapi:
_thostmduserapi.CThostFtdcVerifyCustInfoField_swigregister(CThostFtdcVerifyCustInfoField)
class CThostFtdcVerifyFuturePasswordAndCustInfoField(object):
    r"""验证期货资金密码和客户信息"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    CustomerName: "TThostFtdcIndividualNameType" = property(_thostmduserapi.CThostFtdcVerifyFuturePasswordAndCustInfoField_CustomerName_get, _thostmduserapi.CThostFtdcVerifyFuturePasswordAndCustInfoField_CustomerName_set, doc=r"""客户姓名""")
    IdCardType: "TThostFtdcIdCardTypeType" = property(_thostmduserapi.CThostFtdcVerifyFuturePasswordAndCustInfoField_IdCardType_get, _thostmduserapi.CThostFtdcVerifyFuturePasswordAndCustInfoField_IdCardType_set, doc=r"""证件类型""")
    IdentifiedCardNo: "TThostFtdcIdentifiedCardNoType" = property(_thostmduserapi.CThostFtdcVerifyFuturePasswordAndCustInfoField_IdentifiedCardNo_get, _thostmduserapi.CThostFtdcVerifyFuturePasswordAndCustInfoField_IdentifiedCardNo_set, doc=r"""证件号码""")
    CustType: "TThostFtdcCustTypeType" = property(_thostmduserapi.CThostFtdcVerifyFuturePasswordAndCustInfoField_CustType_get, _thostmduserapi.CThostFtdcVerifyFuturePasswordAndCustInfoField_CustType_set, doc=r"""客户类型""")
    AccountID: "TThostFtdcAccountIDType" = property(_thostmduserapi.CThostFtdcVerifyFuturePasswordAndCustInfoField_AccountID_get, _thostmduserapi.CThostFtdcVerifyFuturePasswordAndCustInfoField_AccountID_set, doc=r"""投资者帐号""")
    Password: "TThostFtdcPasswordType" = property(_thostmduserapi.CThostFtdcVerifyFuturePasswordAndCustInfoField_Password_get, _thostmduserapi.CThostFtdcVerifyFuturePasswordAndCustInfoField_Password_set, doc=r"""期货密码""")
    CurrencyID: "TThostFtdcCurrencyIDType" = property(_thostmduserapi.CThostFtdcVerifyFuturePasswordAndCustInfoField_CurrencyID_get, _thostmduserapi.CThostFtdcVerifyFuturePasswordAndCustInfoField_CurrencyID_set, doc=r"""币种代码""")
    LongCustomerName: "TThostFtdcLongIndividualNameType" = property(_thostmduserapi.CThostFtdcVerifyFuturePasswordAndCustInfoField_LongCustomerName_get, _thostmduserapi.CThostFtdcVerifyFuturePasswordAndCustInfoField_LongCustomerName_set, doc=r"""长客户姓名""")

    def __init__(self):
        _thostmduserapi.CThostFtdcVerifyFuturePasswordAndCustInfoField_swiginit(self, _thostmduserapi.new_CThostFtdcVerifyFuturePasswordAndCustInfoField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcVerifyFuturePasswordAndCustInfoField

# Register CThostFtdcVerifyFuturePasswordAndCustInfoField in _thostmduserapi:
_thostmduserapi.CThostFtdcVerifyFuturePasswordAndCustInfoField_swigregister(CThostFtdcVerifyFuturePasswordAndCustInfoField)
class CThostFtdcDepositResultInformField(object):
    r"""验证期货资金密码和客户信息"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    DepositSeqNo: "TThostFtdcDepositSeqNoType" = property(_thostmduserapi.CThostFtdcDepositResultInformField_DepositSeqNo_get, _thostmduserapi.CThostFtdcDepositResultInformField_DepositSeqNo_set, doc=r"""出入金流水号，该流水号为银期报盘返回的流水号""")
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcDepositResultInformField_BrokerID_get, _thostmduserapi.CThostFtdcDepositResultInformField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "TThostFtdcInvestorIDType" = property(_thostmduserapi.CThostFtdcDepositResultInformField_InvestorID_get, _thostmduserapi.CThostFtdcDepositResultInformField_InvestorID_set, doc=r"""投资者代码""")
    Deposit: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcDepositResultInformField_Deposit_get, _thostmduserapi.CThostFtdcDepositResultInformField_Deposit_set, doc=r"""入金金额""")
    RequestID: "TThostFtdcRequestIDType" = property(_thostmduserapi.CThostFtdcDepositResultInformField_RequestID_get, _thostmduserapi.CThostFtdcDepositResultInformField_RequestID_set, doc=r"""请求编号""")
    ReturnCode: "TThostFtdcReturnCodeType" = property(_thostmduserapi.CThostFtdcDepositResultInformField_ReturnCode_get, _thostmduserapi.CThostFtdcDepositResultInformField_ReturnCode_set, doc=r"""返回代码""")
    DescrInfoForReturnCode: "TThostFtdcDescrInfoForReturnCodeType" = property(_thostmduserapi.CThostFtdcDepositResultInformField_DescrInfoForReturnCode_get, _thostmduserapi.CThostFtdcDepositResultInformField_DescrInfoForReturnCode_set, doc=r"""返回码描述""")

    def __init__(self):
        _thostmduserapi.CThostFtdcDepositResultInformField_swiginit(self, _thostmduserapi.new_CThostFtdcDepositResultInformField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcDepositResultInformField

# Register CThostFtdcDepositResultInformField in _thostmduserapi:
_thostmduserapi.CThostFtdcDepositResultInformField_swigregister(CThostFtdcDepositResultInformField)
class CThostFtdcReqSyncKeyField(object):
    r"""交易核心向银期报盘发出密钥同步请求"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    TradeCode: "TThostFtdcTradeCodeType" = property(_thostmduserapi.CThostFtdcReqSyncKeyField_TradeCode_get, _thostmduserapi.CThostFtdcReqSyncKeyField_TradeCode_set, doc=r"""业务功能码""")
    BankID: "TThostFtdcBankIDType" = property(_thostmduserapi.CThostFtdcReqSyncKeyField_BankID_get, _thostmduserapi.CThostFtdcReqSyncKeyField_BankID_set, doc=r"""银行代码""")
    BankBranchID: "TThostFtdcBankBrchIDType" = property(_thostmduserapi.CThostFtdcReqSyncKeyField_BankBranchID_get, _thostmduserapi.CThostFtdcReqSyncKeyField_BankBranchID_set, doc=r"""银行分支机构代码""")
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcReqSyncKeyField_BrokerID_get, _thostmduserapi.CThostFtdcReqSyncKeyField_BrokerID_set, doc=r"""期商代码""")
    BrokerBranchID: "TThostFtdcFutureBranchIDType" = property(_thostmduserapi.CThostFtdcReqSyncKeyField_BrokerBranchID_get, _thostmduserapi.CThostFtdcReqSyncKeyField_BrokerBranchID_set, doc=r"""期商分支机构代码""")
    TradeDate: "TThostFtdcTradeDateType" = property(_thostmduserapi.CThostFtdcReqSyncKeyField_TradeDate_get, _thostmduserapi.CThostFtdcReqSyncKeyField_TradeDate_set, doc=r"""交易日期""")
    TradeTime: "TThostFtdcTradeTimeType" = property(_thostmduserapi.CThostFtdcReqSyncKeyField_TradeTime_get, _thostmduserapi.CThostFtdcReqSyncKeyField_TradeTime_set, doc=r"""交易时间""")
    BankSerial: "TThostFtdcBankSerialType" = property(_thostmduserapi.CThostFtdcReqSyncKeyField_BankSerial_get, _thostmduserapi.CThostFtdcReqSyncKeyField_BankSerial_set, doc=r"""银行流水号""")
    TradingDay: "TThostFtdcTradeDateType" = property(_thostmduserapi.CThostFtdcReqSyncKeyField_TradingDay_get, _thostmduserapi.CThostFtdcReqSyncKeyField_TradingDay_set, doc=r"""交易系统日期""")
    PlateSerial: "TThostFtdcSerialType" = property(_thostmduserapi.CThostFtdcReqSyncKeyField_PlateSerial_get, _thostmduserapi.CThostFtdcReqSyncKeyField_PlateSerial_set, doc=r"""银期平台消息流水号""")
    LastFragment: "TThostFtdcLastFragmentType" = property(_thostmduserapi.CThostFtdcReqSyncKeyField_LastFragment_get, _thostmduserapi.CThostFtdcReqSyncKeyField_LastFragment_set, doc=r"""最后分片标志""")
    SessionID: "TThostFtdcSessionIDType" = property(_thostmduserapi.CThostFtdcReqSyncKeyField_SessionID_get, _thostmduserapi.CThostFtdcReqSyncKeyField_SessionID_set, doc=r"""会话号""")
    InstallID: "TThostFtdcInstallIDType" = property(_thostmduserapi.CThostFtdcReqSyncKeyField_InstallID_get, _thostmduserapi.CThostFtdcReqSyncKeyField_InstallID_set, doc=r"""安装编号""")
    UserID: "TThostFtdcUserIDType" = property(_thostmduserapi.CThostFtdcReqSyncKeyField_UserID_get, _thostmduserapi.CThostFtdcReqSyncKeyField_UserID_set, doc=r"""用户标识""")
    Message: "TThostFtdcAddInfoType" = property(_thostmduserapi.CThostFtdcReqSyncKeyField_Message_get, _thostmduserapi.CThostFtdcReqSyncKeyField_Message_set, doc=r"""交易核心给银期报盘的消息""")
    DeviceID: "TThostFtdcDeviceIDType" = property(_thostmduserapi.CThostFtdcReqSyncKeyField_DeviceID_get, _thostmduserapi.CThostFtdcReqSyncKeyField_DeviceID_set, doc=r"""渠道标志""")
    BrokerIDByBank: "TThostFtdcBankCodingForFutureType" = property(_thostmduserapi.CThostFtdcReqSyncKeyField_BrokerIDByBank_get, _thostmduserapi.CThostFtdcReqSyncKeyField_BrokerIDByBank_set, doc=r"""期货公司银行编码""")
    OperNo: "TThostFtdcOperNoType" = property(_thostmduserapi.CThostFtdcReqSyncKeyField_OperNo_get, _thostmduserapi.CThostFtdcReqSyncKeyField_OperNo_set, doc=r"""交易柜员""")
    RequestID: "TThostFtdcRequestIDType" = property(_thostmduserapi.CThostFtdcReqSyncKeyField_RequestID_get, _thostmduserapi.CThostFtdcReqSyncKeyField_RequestID_set, doc=r"""请求编号""")
    TID: "TThostFtdcTIDType" = property(_thostmduserapi.CThostFtdcReqSyncKeyField_TID_get, _thostmduserapi.CThostFtdcReqSyncKeyField_TID_set, doc=r"""交易ID""")

    def __init__(self):
        _thostmduserapi.CThostFtdcReqSyncKeyField_swiginit(self, _thostmduserapi.new_CThostFtdcReqSyncKeyField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcReqSyncKeyField

# Register CThostFtdcReqSyncKeyField in _thostmduserapi:
_thostmduserapi.CThostFtdcReqSyncKeyField_swigregister(CThostFtdcReqSyncKeyField)
class CThostFtdcRspSyncKeyField(object):
    r"""交易核心向银期报盘发出密钥同步响应"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    TradeCode: "TThostFtdcTradeCodeType" = property(_thostmduserapi.CThostFtdcRspSyncKeyField_TradeCode_get, _thostmduserapi.CThostFtdcRspSyncKeyField_TradeCode_set, doc=r"""业务功能码""")
    BankID: "TThostFtdcBankIDType" = property(_thostmduserapi.CThostFtdcRspSyncKeyField_BankID_get, _thostmduserapi.CThostFtdcRspSyncKeyField_BankID_set, doc=r"""银行代码""")
    BankBranchID: "TThostFtdcBankBrchIDType" = property(_thostmduserapi.CThostFtdcRspSyncKeyField_BankBranchID_get, _thostmduserapi.CThostFtdcRspSyncKeyField_BankBranchID_set, doc=r"""银行分支机构代码""")
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcRspSyncKeyField_BrokerID_get, _thostmduserapi.CThostFtdcRspSyncKeyField_BrokerID_set, doc=r"""期商代码""")
    BrokerBranchID: "TThostFtdcFutureBranchIDType" = property(_thostmduserapi.CThostFtdcRspSyncKeyField_BrokerBranchID_get, _thostmduserapi.CThostFtdcRspSyncKeyField_BrokerBranchID_set, doc=r"""期商分支机构代码""")
    TradeDate: "TThostFtdcTradeDateType" = property(_thostmduserapi.CThostFtdcRspSyncKeyField_TradeDate_get, _thostmduserapi.CThostFtdcRspSyncKeyField_TradeDate_set, doc=r"""交易日期""")
    TradeTime: "TThostFtdcTradeTimeType" = property(_thostmduserapi.CThostFtdcRspSyncKeyField_TradeTime_get, _thostmduserapi.CThostFtdcRspSyncKeyField_TradeTime_set, doc=r"""交易时间""")
    BankSerial: "TThostFtdcBankSerialType" = property(_thostmduserapi.CThostFtdcRspSyncKeyField_BankSerial_get, _thostmduserapi.CThostFtdcRspSyncKeyField_BankSerial_set, doc=r"""银行流水号""")
    TradingDay: "TThostFtdcTradeDateType" = property(_thostmduserapi.CThostFtdcRspSyncKeyField_TradingDay_get, _thostmduserapi.CThostFtdcRspSyncKeyField_TradingDay_set, doc=r"""交易系统日期""")
    PlateSerial: "TThostFtdcSerialType" = property(_thostmduserapi.CThostFtdcRspSyncKeyField_PlateSerial_get, _thostmduserapi.CThostFtdcRspSyncKeyField_PlateSerial_set, doc=r"""银期平台消息流水号""")
    LastFragment: "TThostFtdcLastFragmentType" = property(_thostmduserapi.CThostFtdcRspSyncKeyField_LastFragment_get, _thostmduserapi.CThostFtdcRspSyncKeyField_LastFragment_set, doc=r"""最后分片标志""")
    SessionID: "TThostFtdcSessionIDType" = property(_thostmduserapi.CThostFtdcRspSyncKeyField_SessionID_get, _thostmduserapi.CThostFtdcRspSyncKeyField_SessionID_set, doc=r"""会话号""")
    InstallID: "TThostFtdcInstallIDType" = property(_thostmduserapi.CThostFtdcRspSyncKeyField_InstallID_get, _thostmduserapi.CThostFtdcRspSyncKeyField_InstallID_set, doc=r"""安装编号""")
    UserID: "TThostFtdcUserIDType" = property(_thostmduserapi.CThostFtdcRspSyncKeyField_UserID_get, _thostmduserapi.CThostFtdcRspSyncKeyField_UserID_set, doc=r"""用户标识""")
    Message: "TThostFtdcAddInfoType" = property(_thostmduserapi.CThostFtdcRspSyncKeyField_Message_get, _thostmduserapi.CThostFtdcRspSyncKeyField_Message_set, doc=r"""交易核心给银期报盘的消息""")
    DeviceID: "TThostFtdcDeviceIDType" = property(_thostmduserapi.CThostFtdcRspSyncKeyField_DeviceID_get, _thostmduserapi.CThostFtdcRspSyncKeyField_DeviceID_set, doc=r"""渠道标志""")
    BrokerIDByBank: "TThostFtdcBankCodingForFutureType" = property(_thostmduserapi.CThostFtdcRspSyncKeyField_BrokerIDByBank_get, _thostmduserapi.CThostFtdcRspSyncKeyField_BrokerIDByBank_set, doc=r"""期货公司银行编码""")
    OperNo: "TThostFtdcOperNoType" = property(_thostmduserapi.CThostFtdcRspSyncKeyField_OperNo_get, _thostmduserapi.CThostFtdcRspSyncKeyField_OperNo_set, doc=r"""交易柜员""")
    RequestID: "TThostFtdcRequestIDType" = property(_thostmduserapi.CThostFtdcRspSyncKeyField_RequestID_get, _thostmduserapi.CThostFtdcRspSyncKeyField_RequestID_set, doc=r"""请求编号""")
    TID: "TThostFtdcTIDType" = property(_thostmduserapi.CThostFtdcRspSyncKeyField_TID_get, _thostmduserapi.CThostFtdcRspSyncKeyField_TID_set, doc=r"""交易ID""")
    ErrorID: "TThostFtdcErrorIDType" = property(_thostmduserapi.CThostFtdcRspSyncKeyField_ErrorID_get, _thostmduserapi.CThostFtdcRspSyncKeyField_ErrorID_set, doc=r"""错误代码""")
    ErrorMsg: "TThostFtdcErrorMsgType" = property(_thostmduserapi.CThostFtdcRspSyncKeyField_ErrorMsg_get, _thostmduserapi.CThostFtdcRspSyncKeyField_ErrorMsg_set, doc=r"""错误信息""")

    def __init__(self):
        _thostmduserapi.CThostFtdcRspSyncKeyField_swiginit(self, _thostmduserapi.new_CThostFtdcRspSyncKeyField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcRspSyncKeyField

# Register CThostFtdcRspSyncKeyField in _thostmduserapi:
_thostmduserapi.CThostFtdcRspSyncKeyField_swigregister(CThostFtdcRspSyncKeyField)
class CThostFtdcNotifyQueryAccountField(object):
    r"""查询账户信息通知"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    TradeCode: "TThostFtdcTradeCodeType" = property(_thostmduserapi.CThostFtdcNotifyQueryAccountField_TradeCode_get, _thostmduserapi.CThostFtdcNotifyQueryAccountField_TradeCode_set, doc=r"""业务功能码""")
    BankID: "TThostFtdcBankIDType" = property(_thostmduserapi.CThostFtdcNotifyQueryAccountField_BankID_get, _thostmduserapi.CThostFtdcNotifyQueryAccountField_BankID_set, doc=r"""银行代码""")
    BankBranchID: "TThostFtdcBankBrchIDType" = property(_thostmduserapi.CThostFtdcNotifyQueryAccountField_BankBranchID_get, _thostmduserapi.CThostFtdcNotifyQueryAccountField_BankBranchID_set, doc=r"""银行分支机构代码""")
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcNotifyQueryAccountField_BrokerID_get, _thostmduserapi.CThostFtdcNotifyQueryAccountField_BrokerID_set, doc=r"""期商代码""")
    BrokerBranchID: "TThostFtdcFutureBranchIDType" = property(_thostmduserapi.CThostFtdcNotifyQueryAccountField_BrokerBranchID_get, _thostmduserapi.CThostFtdcNotifyQueryAccountField_BrokerBranchID_set, doc=r"""期商分支机构代码""")
    TradeDate: "TThostFtdcTradeDateType" = property(_thostmduserapi.CThostFtdcNotifyQueryAccountField_TradeDate_get, _thostmduserapi.CThostFtdcNotifyQueryAccountField_TradeDate_set, doc=r"""交易日期""")
    TradeTime: "TThostFtdcTradeTimeType" = property(_thostmduserapi.CThostFtdcNotifyQueryAccountField_TradeTime_get, _thostmduserapi.CThostFtdcNotifyQueryAccountField_TradeTime_set, doc=r"""交易时间""")
    BankSerial: "TThostFtdcBankSerialType" = property(_thostmduserapi.CThostFtdcNotifyQueryAccountField_BankSerial_get, _thostmduserapi.CThostFtdcNotifyQueryAccountField_BankSerial_set, doc=r"""银行流水号""")
    TradingDay: "TThostFtdcTradeDateType" = property(_thostmduserapi.CThostFtdcNotifyQueryAccountField_TradingDay_get, _thostmduserapi.CThostFtdcNotifyQueryAccountField_TradingDay_set, doc=r"""交易系统日期""")
    PlateSerial: "TThostFtdcSerialType" = property(_thostmduserapi.CThostFtdcNotifyQueryAccountField_PlateSerial_get, _thostmduserapi.CThostFtdcNotifyQueryAccountField_PlateSerial_set, doc=r"""银期平台消息流水号""")
    LastFragment: "TThostFtdcLastFragmentType" = property(_thostmduserapi.CThostFtdcNotifyQueryAccountField_LastFragment_get, _thostmduserapi.CThostFtdcNotifyQueryAccountField_LastFragment_set, doc=r"""最后分片标志""")
    SessionID: "TThostFtdcSessionIDType" = property(_thostmduserapi.CThostFtdcNotifyQueryAccountField_SessionID_get, _thostmduserapi.CThostFtdcNotifyQueryAccountField_SessionID_set, doc=r"""会话号""")
    CustomerName: "TThostFtdcIndividualNameType" = property(_thostmduserapi.CThostFtdcNotifyQueryAccountField_CustomerName_get, _thostmduserapi.CThostFtdcNotifyQueryAccountField_CustomerName_set, doc=r"""客户姓名""")
    IdCardType: "TThostFtdcIdCardTypeType" = property(_thostmduserapi.CThostFtdcNotifyQueryAccountField_IdCardType_get, _thostmduserapi.CThostFtdcNotifyQueryAccountField_IdCardType_set, doc=r"""证件类型""")
    IdentifiedCardNo: "TThostFtdcIdentifiedCardNoType" = property(_thostmduserapi.CThostFtdcNotifyQueryAccountField_IdentifiedCardNo_get, _thostmduserapi.CThostFtdcNotifyQueryAccountField_IdentifiedCardNo_set, doc=r"""证件号码""")
    CustType: "TThostFtdcCustTypeType" = property(_thostmduserapi.CThostFtdcNotifyQueryAccountField_CustType_get, _thostmduserapi.CThostFtdcNotifyQueryAccountField_CustType_set, doc=r"""客户类型""")
    BankAccount: "TThostFtdcBankAccountType" = property(_thostmduserapi.CThostFtdcNotifyQueryAccountField_BankAccount_get, _thostmduserapi.CThostFtdcNotifyQueryAccountField_BankAccount_set, doc=r"""银行帐号""")
    BankPassWord: "TThostFtdcPasswordType" = property(_thostmduserapi.CThostFtdcNotifyQueryAccountField_BankPassWord_get, _thostmduserapi.CThostFtdcNotifyQueryAccountField_BankPassWord_set, doc=r"""银行密码""")
    AccountID: "TThostFtdcAccountIDType" = property(_thostmduserapi.CThostFtdcNotifyQueryAccountField_AccountID_get, _thostmduserapi.CThostFtdcNotifyQueryAccountField_AccountID_set, doc=r"""投资者帐号""")
    Password: "TThostFtdcPasswordType" = property(_thostmduserapi.CThostFtdcNotifyQueryAccountField_Password_get, _thostmduserapi.CThostFtdcNotifyQueryAccountField_Password_set, doc=r"""期货密码""")
    FutureSerial: "TThostFtdcFutureSerialType" = property(_thostmduserapi.CThostFtdcNotifyQueryAccountField_FutureSerial_get, _thostmduserapi.CThostFtdcNotifyQueryAccountField_FutureSerial_set, doc=r"""期货公司流水号""")
    InstallID: "TThostFtdcInstallIDType" = property(_thostmduserapi.CThostFtdcNotifyQueryAccountField_InstallID_get, _thostmduserapi.CThostFtdcNotifyQueryAccountField_InstallID_set, doc=r"""安装编号""")
    UserID: "TThostFtdcUserIDType" = property(_thostmduserapi.CThostFtdcNotifyQueryAccountField_UserID_get, _thostmduserapi.CThostFtdcNotifyQueryAccountField_UserID_set, doc=r"""用户标识""")
    VerifyCertNoFlag: "TThostFtdcYesNoIndicatorType" = property(_thostmduserapi.CThostFtdcNotifyQueryAccountField_VerifyCertNoFlag_get, _thostmduserapi.CThostFtdcNotifyQueryAccountField_VerifyCertNoFlag_set, doc=r"""验证客户证件号码标志""")
    CurrencyID: "TThostFtdcCurrencyIDType" = property(_thostmduserapi.CThostFtdcNotifyQueryAccountField_CurrencyID_get, _thostmduserapi.CThostFtdcNotifyQueryAccountField_CurrencyID_set, doc=r"""币种代码""")
    Digest: "TThostFtdcDigestType" = property(_thostmduserapi.CThostFtdcNotifyQueryAccountField_Digest_get, _thostmduserapi.CThostFtdcNotifyQueryAccountField_Digest_set, doc=r"""摘要""")
    BankAccType: "TThostFtdcBankAccTypeType" = property(_thostmduserapi.CThostFtdcNotifyQueryAccountField_BankAccType_get, _thostmduserapi.CThostFtdcNotifyQueryAccountField_BankAccType_set, doc=r"""银行帐号类型""")
    DeviceID: "TThostFtdcDeviceIDType" = property(_thostmduserapi.CThostFtdcNotifyQueryAccountField_DeviceID_get, _thostmduserapi.CThostFtdcNotifyQueryAccountField_DeviceID_set, doc=r"""渠道标志""")
    BankSecuAccType: "TThostFtdcBankAccTypeType" = property(_thostmduserapi.CThostFtdcNotifyQueryAccountField_BankSecuAccType_get, _thostmduserapi.CThostFtdcNotifyQueryAccountField_BankSecuAccType_set, doc=r"""期货单位帐号类型""")
    BrokerIDByBank: "TThostFtdcBankCodingForFutureType" = property(_thostmduserapi.CThostFtdcNotifyQueryAccountField_BrokerIDByBank_get, _thostmduserapi.CThostFtdcNotifyQueryAccountField_BrokerIDByBank_set, doc=r"""期货公司银行编码""")
    BankSecuAcc: "TThostFtdcBankAccountType" = property(_thostmduserapi.CThostFtdcNotifyQueryAccountField_BankSecuAcc_get, _thostmduserapi.CThostFtdcNotifyQueryAccountField_BankSecuAcc_set, doc=r"""期货单位帐号""")
    BankPwdFlag: "TThostFtdcPwdFlagType" = property(_thostmduserapi.CThostFtdcNotifyQueryAccountField_BankPwdFlag_get, _thostmduserapi.CThostFtdcNotifyQueryAccountField_BankPwdFlag_set, doc=r"""银行密码标志""")
    SecuPwdFlag: "TThostFtdcPwdFlagType" = property(_thostmduserapi.CThostFtdcNotifyQueryAccountField_SecuPwdFlag_get, _thostmduserapi.CThostFtdcNotifyQueryAccountField_SecuPwdFlag_set, doc=r"""期货资金密码核对标志""")
    OperNo: "TThostFtdcOperNoType" = property(_thostmduserapi.CThostFtdcNotifyQueryAccountField_OperNo_get, _thostmduserapi.CThostFtdcNotifyQueryAccountField_OperNo_set, doc=r"""交易柜员""")
    RequestID: "TThostFtdcRequestIDType" = property(_thostmduserapi.CThostFtdcNotifyQueryAccountField_RequestID_get, _thostmduserapi.CThostFtdcNotifyQueryAccountField_RequestID_set, doc=r"""请求编号""")
    TID: "TThostFtdcTIDType" = property(_thostmduserapi.CThostFtdcNotifyQueryAccountField_TID_get, _thostmduserapi.CThostFtdcNotifyQueryAccountField_TID_set, doc=r"""交易ID""")
    BankUseAmount: "TThostFtdcTradeAmountType" = property(_thostmduserapi.CThostFtdcNotifyQueryAccountField_BankUseAmount_get, _thostmduserapi.CThostFtdcNotifyQueryAccountField_BankUseAmount_set, doc=r"""银行可用金额""")
    BankFetchAmount: "TThostFtdcTradeAmountType" = property(_thostmduserapi.CThostFtdcNotifyQueryAccountField_BankFetchAmount_get, _thostmduserapi.CThostFtdcNotifyQueryAccountField_BankFetchAmount_set, doc=r"""银行可取金额""")
    ErrorID: "TThostFtdcErrorIDType" = property(_thostmduserapi.CThostFtdcNotifyQueryAccountField_ErrorID_get, _thostmduserapi.CThostFtdcNotifyQueryAccountField_ErrorID_set, doc=r"""错误代码""")
    ErrorMsg: "TThostFtdcErrorMsgType" = property(_thostmduserapi.CThostFtdcNotifyQueryAccountField_ErrorMsg_get, _thostmduserapi.CThostFtdcNotifyQueryAccountField_ErrorMsg_set, doc=r"""错误信息""")
    LongCustomerName: "TThostFtdcLongIndividualNameType" = property(_thostmduserapi.CThostFtdcNotifyQueryAccountField_LongCustomerName_get, _thostmduserapi.CThostFtdcNotifyQueryAccountField_LongCustomerName_set, doc=r"""长客户姓名""")

    def __init__(self):
        _thostmduserapi.CThostFtdcNotifyQueryAccountField_swiginit(self, _thostmduserapi.new_CThostFtdcNotifyQueryAccountField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcNotifyQueryAccountField

# Register CThostFtdcNotifyQueryAccountField in _thostmduserapi:
_thostmduserapi.CThostFtdcNotifyQueryAccountField_swigregister(CThostFtdcNotifyQueryAccountField)
class CThostFtdcTransferSerialField(object):
    r"""银期转账交易流水表"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    PlateSerial: "TThostFtdcPlateSerialType" = property(_thostmduserapi.CThostFtdcTransferSerialField_PlateSerial_get, _thostmduserapi.CThostFtdcTransferSerialField_PlateSerial_set, doc=r"""平台流水号""")
    TradeDate: "TThostFtdcTradeDateType" = property(_thostmduserapi.CThostFtdcTransferSerialField_TradeDate_get, _thostmduserapi.CThostFtdcTransferSerialField_TradeDate_set, doc=r"""交易发起方日期""")
    TradingDay: "TThostFtdcDateType" = property(_thostmduserapi.CThostFtdcTransferSerialField_TradingDay_get, _thostmduserapi.CThostFtdcTransferSerialField_TradingDay_set, doc=r"""交易日期""")
    TradeTime: "TThostFtdcTradeTimeType" = property(_thostmduserapi.CThostFtdcTransferSerialField_TradeTime_get, _thostmduserapi.CThostFtdcTransferSerialField_TradeTime_set, doc=r"""交易时间""")
    TradeCode: "TThostFtdcTradeCodeType" = property(_thostmduserapi.CThostFtdcTransferSerialField_TradeCode_get, _thostmduserapi.CThostFtdcTransferSerialField_TradeCode_set, doc=r"""交易代码""")
    SessionID: "TThostFtdcSessionIDType" = property(_thostmduserapi.CThostFtdcTransferSerialField_SessionID_get, _thostmduserapi.CThostFtdcTransferSerialField_SessionID_set, doc=r"""会话编号""")
    BankID: "TThostFtdcBankIDType" = property(_thostmduserapi.CThostFtdcTransferSerialField_BankID_get, _thostmduserapi.CThostFtdcTransferSerialField_BankID_set, doc=r"""银行编码""")
    BankBranchID: "TThostFtdcBankBrchIDType" = property(_thostmduserapi.CThostFtdcTransferSerialField_BankBranchID_get, _thostmduserapi.CThostFtdcTransferSerialField_BankBranchID_set, doc=r"""银行分支机构编码""")
    BankAccType: "TThostFtdcBankAccTypeType" = property(_thostmduserapi.CThostFtdcTransferSerialField_BankAccType_get, _thostmduserapi.CThostFtdcTransferSerialField_BankAccType_set, doc=r"""银行帐号类型""")
    BankAccount: "TThostFtdcBankAccountType" = property(_thostmduserapi.CThostFtdcTransferSerialField_BankAccount_get, _thostmduserapi.CThostFtdcTransferSerialField_BankAccount_set, doc=r"""银行帐号""")
    BankSerial: "TThostFtdcBankSerialType" = property(_thostmduserapi.CThostFtdcTransferSerialField_BankSerial_get, _thostmduserapi.CThostFtdcTransferSerialField_BankSerial_set, doc=r"""银行流水号""")
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcTransferSerialField_BrokerID_get, _thostmduserapi.CThostFtdcTransferSerialField_BrokerID_set, doc=r"""期货公司编码""")
    BrokerBranchID: "TThostFtdcFutureBranchIDType" = property(_thostmduserapi.CThostFtdcTransferSerialField_BrokerBranchID_get, _thostmduserapi.CThostFtdcTransferSerialField_BrokerBranchID_set, doc=r"""期商分支机构代码""")
    FutureAccType: "TThostFtdcFutureAccTypeType" = property(_thostmduserapi.CThostFtdcTransferSerialField_FutureAccType_get, _thostmduserapi.CThostFtdcTransferSerialField_FutureAccType_set, doc=r"""期货公司帐号类型""")
    AccountID: "TThostFtdcAccountIDType" = property(_thostmduserapi.CThostFtdcTransferSerialField_AccountID_get, _thostmduserapi.CThostFtdcTransferSerialField_AccountID_set, doc=r"""投资者帐号""")
    InvestorID: "TThostFtdcInvestorIDType" = property(_thostmduserapi.CThostFtdcTransferSerialField_InvestorID_get, _thostmduserapi.CThostFtdcTransferSerialField_InvestorID_set, doc=r"""投资者代码""")
    FutureSerial: "TThostFtdcFutureSerialType" = property(_thostmduserapi.CThostFtdcTransferSerialField_FutureSerial_get, _thostmduserapi.CThostFtdcTransferSerialField_FutureSerial_set, doc=r"""期货公司流水号""")
    IdCardType: "TThostFtdcIdCardTypeType" = property(_thostmduserapi.CThostFtdcTransferSerialField_IdCardType_get, _thostmduserapi.CThostFtdcTransferSerialField_IdCardType_set, doc=r"""证件类型""")
    IdentifiedCardNo: "TThostFtdcIdentifiedCardNoType" = property(_thostmduserapi.CThostFtdcTransferSerialField_IdentifiedCardNo_get, _thostmduserapi.CThostFtdcTransferSerialField_IdentifiedCardNo_set, doc=r"""证件号码""")
    CurrencyID: "TThostFtdcCurrencyIDType" = property(_thostmduserapi.CThostFtdcTransferSerialField_CurrencyID_get, _thostmduserapi.CThostFtdcTransferSerialField_CurrencyID_set, doc=r"""币种代码""")
    TradeAmount: "TThostFtdcTradeAmountType" = property(_thostmduserapi.CThostFtdcTransferSerialField_TradeAmount_get, _thostmduserapi.CThostFtdcTransferSerialField_TradeAmount_set, doc=r"""交易金额""")
    CustFee: "TThostFtdcCustFeeType" = property(_thostmduserapi.CThostFtdcTransferSerialField_CustFee_get, _thostmduserapi.CThostFtdcTransferSerialField_CustFee_set, doc=r"""应收客户费用""")
    BrokerFee: "TThostFtdcFutureFeeType" = property(_thostmduserapi.CThostFtdcTransferSerialField_BrokerFee_get, _thostmduserapi.CThostFtdcTransferSerialField_BrokerFee_set, doc=r"""应收期货公司费用""")
    AvailabilityFlag: "TThostFtdcAvailabilityFlagType" = property(_thostmduserapi.CThostFtdcTransferSerialField_AvailabilityFlag_get, _thostmduserapi.CThostFtdcTransferSerialField_AvailabilityFlag_set, doc=r"""有效标志""")
    OperatorCode: "TThostFtdcOperatorCodeType" = property(_thostmduserapi.CThostFtdcTransferSerialField_OperatorCode_get, _thostmduserapi.CThostFtdcTransferSerialField_OperatorCode_set, doc=r"""操作员""")
    BankNewAccount: "TThostFtdcBankAccountType" = property(_thostmduserapi.CThostFtdcTransferSerialField_BankNewAccount_get, _thostmduserapi.CThostFtdcTransferSerialField_BankNewAccount_set, doc=r"""新银行帐号""")
    ErrorID: "TThostFtdcErrorIDType" = property(_thostmduserapi.CThostFtdcTransferSerialField_ErrorID_get, _thostmduserapi.CThostFtdcTransferSerialField_ErrorID_set, doc=r"""错误代码""")
    ErrorMsg: "TThostFtdcErrorMsgType" = property(_thostmduserapi.CThostFtdcTransferSerialField_ErrorMsg_get, _thostmduserapi.CThostFtdcTransferSerialField_ErrorMsg_set, doc=r"""错误信息""")

    def __init__(self):
        _thostmduserapi.CThostFtdcTransferSerialField_swiginit(self, _thostmduserapi.new_CThostFtdcTransferSerialField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcTransferSerialField

# Register CThostFtdcTransferSerialField in _thostmduserapi:
_thostmduserapi.CThostFtdcTransferSerialField_swigregister(CThostFtdcTransferSerialField)
class CThostFtdcQryTransferSerialField(object):
    r"""请求查询转帐流水"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcQryTransferSerialField_BrokerID_get, _thostmduserapi.CThostFtdcQryTransferSerialField_BrokerID_set, doc=r"""经纪公司代码""")
    AccountID: "TThostFtdcAccountIDType" = property(_thostmduserapi.CThostFtdcQryTransferSerialField_AccountID_get, _thostmduserapi.CThostFtdcQryTransferSerialField_AccountID_set, doc=r"""投资者帐号""")
    BankID: "TThostFtdcBankIDType" = property(_thostmduserapi.CThostFtdcQryTransferSerialField_BankID_get, _thostmduserapi.CThostFtdcQryTransferSerialField_BankID_set, doc=r"""银行编码""")
    CurrencyID: "TThostFtdcCurrencyIDType" = property(_thostmduserapi.CThostFtdcQryTransferSerialField_CurrencyID_get, _thostmduserapi.CThostFtdcQryTransferSerialField_CurrencyID_set, doc=r"""币种代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcQryTransferSerialField_swiginit(self, _thostmduserapi.new_CThostFtdcQryTransferSerialField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcQryTransferSerialField

# Register CThostFtdcQryTransferSerialField in _thostmduserapi:
_thostmduserapi.CThostFtdcQryTransferSerialField_swigregister(CThostFtdcQryTransferSerialField)
class CThostFtdcNotifyFutureSignInField(object):
    r"""期商签到通知"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    TradeCode: "TThostFtdcTradeCodeType" = property(_thostmduserapi.CThostFtdcNotifyFutureSignInField_TradeCode_get, _thostmduserapi.CThostFtdcNotifyFutureSignInField_TradeCode_set, doc=r"""业务功能码""")
    BankID: "TThostFtdcBankIDType" = property(_thostmduserapi.CThostFtdcNotifyFutureSignInField_BankID_get, _thostmduserapi.CThostFtdcNotifyFutureSignInField_BankID_set, doc=r"""银行代码""")
    BankBranchID: "TThostFtdcBankBrchIDType" = property(_thostmduserapi.CThostFtdcNotifyFutureSignInField_BankBranchID_get, _thostmduserapi.CThostFtdcNotifyFutureSignInField_BankBranchID_set, doc=r"""银行分支机构代码""")
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcNotifyFutureSignInField_BrokerID_get, _thostmduserapi.CThostFtdcNotifyFutureSignInField_BrokerID_set, doc=r"""期商代码""")
    BrokerBranchID: "TThostFtdcFutureBranchIDType" = property(_thostmduserapi.CThostFtdcNotifyFutureSignInField_BrokerBranchID_get, _thostmduserapi.CThostFtdcNotifyFutureSignInField_BrokerBranchID_set, doc=r"""期商分支机构代码""")
    TradeDate: "TThostFtdcTradeDateType" = property(_thostmduserapi.CThostFtdcNotifyFutureSignInField_TradeDate_get, _thostmduserapi.CThostFtdcNotifyFutureSignInField_TradeDate_set, doc=r"""交易日期""")
    TradeTime: "TThostFtdcTradeTimeType" = property(_thostmduserapi.CThostFtdcNotifyFutureSignInField_TradeTime_get, _thostmduserapi.CThostFtdcNotifyFutureSignInField_TradeTime_set, doc=r"""交易时间""")
    BankSerial: "TThostFtdcBankSerialType" = property(_thostmduserapi.CThostFtdcNotifyFutureSignInField_BankSerial_get, _thostmduserapi.CThostFtdcNotifyFutureSignInField_BankSerial_set, doc=r"""银行流水号""")
    TradingDay: "TThostFtdcTradeDateType" = property(_thostmduserapi.CThostFtdcNotifyFutureSignInField_TradingDay_get, _thostmduserapi.CThostFtdcNotifyFutureSignInField_TradingDay_set, doc=r"""交易系统日期""")
    PlateSerial: "TThostFtdcSerialType" = property(_thostmduserapi.CThostFtdcNotifyFutureSignInField_PlateSerial_get, _thostmduserapi.CThostFtdcNotifyFutureSignInField_PlateSerial_set, doc=r"""银期平台消息流水号""")
    LastFragment: "TThostFtdcLastFragmentType" = property(_thostmduserapi.CThostFtdcNotifyFutureSignInField_LastFragment_get, _thostmduserapi.CThostFtdcNotifyFutureSignInField_LastFragment_set, doc=r"""最后分片标志""")
    SessionID: "TThostFtdcSessionIDType" = property(_thostmduserapi.CThostFtdcNotifyFutureSignInField_SessionID_get, _thostmduserapi.CThostFtdcNotifyFutureSignInField_SessionID_set, doc=r"""会话号""")
    InstallID: "TThostFtdcInstallIDType" = property(_thostmduserapi.CThostFtdcNotifyFutureSignInField_InstallID_get, _thostmduserapi.CThostFtdcNotifyFutureSignInField_InstallID_set, doc=r"""安装编号""")
    UserID: "TThostFtdcUserIDType" = property(_thostmduserapi.CThostFtdcNotifyFutureSignInField_UserID_get, _thostmduserapi.CThostFtdcNotifyFutureSignInField_UserID_set, doc=r"""用户标识""")
    Digest: "TThostFtdcDigestType" = property(_thostmduserapi.CThostFtdcNotifyFutureSignInField_Digest_get, _thostmduserapi.CThostFtdcNotifyFutureSignInField_Digest_set, doc=r"""摘要""")
    CurrencyID: "TThostFtdcCurrencyIDType" = property(_thostmduserapi.CThostFtdcNotifyFutureSignInField_CurrencyID_get, _thostmduserapi.CThostFtdcNotifyFutureSignInField_CurrencyID_set, doc=r"""币种代码""")
    DeviceID: "TThostFtdcDeviceIDType" = property(_thostmduserapi.CThostFtdcNotifyFutureSignInField_DeviceID_get, _thostmduserapi.CThostFtdcNotifyFutureSignInField_DeviceID_set, doc=r"""渠道标志""")
    BrokerIDByBank: "TThostFtdcBankCodingForFutureType" = property(_thostmduserapi.CThostFtdcNotifyFutureSignInField_BrokerIDByBank_get, _thostmduserapi.CThostFtdcNotifyFutureSignInField_BrokerIDByBank_set, doc=r"""期货公司银行编码""")
    OperNo: "TThostFtdcOperNoType" = property(_thostmduserapi.CThostFtdcNotifyFutureSignInField_OperNo_get, _thostmduserapi.CThostFtdcNotifyFutureSignInField_OperNo_set, doc=r"""交易柜员""")
    RequestID: "TThostFtdcRequestIDType" = property(_thostmduserapi.CThostFtdcNotifyFutureSignInField_RequestID_get, _thostmduserapi.CThostFtdcNotifyFutureSignInField_RequestID_set, doc=r"""请求编号""")
    TID: "TThostFtdcTIDType" = property(_thostmduserapi.CThostFtdcNotifyFutureSignInField_TID_get, _thostmduserapi.CThostFtdcNotifyFutureSignInField_TID_set, doc=r"""交易ID""")
    ErrorID: "TThostFtdcErrorIDType" = property(_thostmduserapi.CThostFtdcNotifyFutureSignInField_ErrorID_get, _thostmduserapi.CThostFtdcNotifyFutureSignInField_ErrorID_set, doc=r"""错误代码""")
    ErrorMsg: "TThostFtdcErrorMsgType" = property(_thostmduserapi.CThostFtdcNotifyFutureSignInField_ErrorMsg_get, _thostmduserapi.CThostFtdcNotifyFutureSignInField_ErrorMsg_set, doc=r"""错误信息""")
    PinKey: "TThostFtdcPasswordKeyType" = property(_thostmduserapi.CThostFtdcNotifyFutureSignInField_PinKey_get, _thostmduserapi.CThostFtdcNotifyFutureSignInField_PinKey_set, doc=r"""PIN密钥""")
    MacKey: "TThostFtdcPasswordKeyType" = property(_thostmduserapi.CThostFtdcNotifyFutureSignInField_MacKey_get, _thostmduserapi.CThostFtdcNotifyFutureSignInField_MacKey_set, doc=r"""MAC密钥""")

    def __init__(self):
        _thostmduserapi.CThostFtdcNotifyFutureSignInField_swiginit(self, _thostmduserapi.new_CThostFtdcNotifyFutureSignInField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcNotifyFutureSignInField

# Register CThostFtdcNotifyFutureSignInField in _thostmduserapi:
_thostmduserapi.CThostFtdcNotifyFutureSignInField_swigregister(CThostFtdcNotifyFutureSignInField)
class CThostFtdcNotifyFutureSignOutField(object):
    r"""期商签退通知"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    TradeCode: "TThostFtdcTradeCodeType" = property(_thostmduserapi.CThostFtdcNotifyFutureSignOutField_TradeCode_get, _thostmduserapi.CThostFtdcNotifyFutureSignOutField_TradeCode_set, doc=r"""业务功能码""")
    BankID: "TThostFtdcBankIDType" = property(_thostmduserapi.CThostFtdcNotifyFutureSignOutField_BankID_get, _thostmduserapi.CThostFtdcNotifyFutureSignOutField_BankID_set, doc=r"""银行代码""")
    BankBranchID: "TThostFtdcBankBrchIDType" = property(_thostmduserapi.CThostFtdcNotifyFutureSignOutField_BankBranchID_get, _thostmduserapi.CThostFtdcNotifyFutureSignOutField_BankBranchID_set, doc=r"""银行分支机构代码""")
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcNotifyFutureSignOutField_BrokerID_get, _thostmduserapi.CThostFtdcNotifyFutureSignOutField_BrokerID_set, doc=r"""期商代码""")
    BrokerBranchID: "TThostFtdcFutureBranchIDType" = property(_thostmduserapi.CThostFtdcNotifyFutureSignOutField_BrokerBranchID_get, _thostmduserapi.CThostFtdcNotifyFutureSignOutField_BrokerBranchID_set, doc=r"""期商分支机构代码""")
    TradeDate: "TThostFtdcTradeDateType" = property(_thostmduserapi.CThostFtdcNotifyFutureSignOutField_TradeDate_get, _thostmduserapi.CThostFtdcNotifyFutureSignOutField_TradeDate_set, doc=r"""交易日期""")
    TradeTime: "TThostFtdcTradeTimeType" = property(_thostmduserapi.CThostFtdcNotifyFutureSignOutField_TradeTime_get, _thostmduserapi.CThostFtdcNotifyFutureSignOutField_TradeTime_set, doc=r"""交易时间""")
    BankSerial: "TThostFtdcBankSerialType" = property(_thostmduserapi.CThostFtdcNotifyFutureSignOutField_BankSerial_get, _thostmduserapi.CThostFtdcNotifyFutureSignOutField_BankSerial_set, doc=r"""银行流水号""")
    TradingDay: "TThostFtdcTradeDateType" = property(_thostmduserapi.CThostFtdcNotifyFutureSignOutField_TradingDay_get, _thostmduserapi.CThostFtdcNotifyFutureSignOutField_TradingDay_set, doc=r"""交易系统日期""")
    PlateSerial: "TThostFtdcSerialType" = property(_thostmduserapi.CThostFtdcNotifyFutureSignOutField_PlateSerial_get, _thostmduserapi.CThostFtdcNotifyFutureSignOutField_PlateSerial_set, doc=r"""银期平台消息流水号""")
    LastFragment: "TThostFtdcLastFragmentType" = property(_thostmduserapi.CThostFtdcNotifyFutureSignOutField_LastFragment_get, _thostmduserapi.CThostFtdcNotifyFutureSignOutField_LastFragment_set, doc=r"""最后分片标志""")
    SessionID: "TThostFtdcSessionIDType" = property(_thostmduserapi.CThostFtdcNotifyFutureSignOutField_SessionID_get, _thostmduserapi.CThostFtdcNotifyFutureSignOutField_SessionID_set, doc=r"""会话号""")
    InstallID: "TThostFtdcInstallIDType" = property(_thostmduserapi.CThostFtdcNotifyFutureSignOutField_InstallID_get, _thostmduserapi.CThostFtdcNotifyFutureSignOutField_InstallID_set, doc=r"""安装编号""")
    UserID: "TThostFtdcUserIDType" = property(_thostmduserapi.CThostFtdcNotifyFutureSignOutField_UserID_get, _thostmduserapi.CThostFtdcNotifyFutureSignOutField_UserID_set, doc=r"""用户标识""")
    Digest: "TThostFtdcDigestType" = property(_thostmduserapi.CThostFtdcNotifyFutureSignOutField_Digest_get, _thostmduserapi.CThostFtdcNotifyFutureSignOutField_Digest_set, doc=r"""摘要""")
    CurrencyID: "TThostFtdcCurrencyIDType" = property(_thostmduserapi.CThostFtdcNotifyFutureSignOutField_CurrencyID_get, _thostmduserapi.CThostFtdcNotifyFutureSignOutField_CurrencyID_set, doc=r"""币种代码""")
    DeviceID: "TThostFtdcDeviceIDType" = property(_thostmduserapi.CThostFtdcNotifyFutureSignOutField_DeviceID_get, _thostmduserapi.CThostFtdcNotifyFutureSignOutField_DeviceID_set, doc=r"""渠道标志""")
    BrokerIDByBank: "TThostFtdcBankCodingForFutureType" = property(_thostmduserapi.CThostFtdcNotifyFutureSignOutField_BrokerIDByBank_get, _thostmduserapi.CThostFtdcNotifyFutureSignOutField_BrokerIDByBank_set, doc=r"""期货公司银行编码""")
    OperNo: "TThostFtdcOperNoType" = property(_thostmduserapi.CThostFtdcNotifyFutureSignOutField_OperNo_get, _thostmduserapi.CThostFtdcNotifyFutureSignOutField_OperNo_set, doc=r"""交易柜员""")
    RequestID: "TThostFtdcRequestIDType" = property(_thostmduserapi.CThostFtdcNotifyFutureSignOutField_RequestID_get, _thostmduserapi.CThostFtdcNotifyFutureSignOutField_RequestID_set, doc=r"""请求编号""")
    TID: "TThostFtdcTIDType" = property(_thostmduserapi.CThostFtdcNotifyFutureSignOutField_TID_get, _thostmduserapi.CThostFtdcNotifyFutureSignOutField_TID_set, doc=r"""交易ID""")
    ErrorID: "TThostFtdcErrorIDType" = property(_thostmduserapi.CThostFtdcNotifyFutureSignOutField_ErrorID_get, _thostmduserapi.CThostFtdcNotifyFutureSignOutField_ErrorID_set, doc=r"""错误代码""")
    ErrorMsg: "TThostFtdcErrorMsgType" = property(_thostmduserapi.CThostFtdcNotifyFutureSignOutField_ErrorMsg_get, _thostmduserapi.CThostFtdcNotifyFutureSignOutField_ErrorMsg_set, doc=r"""错误信息""")

    def __init__(self):
        _thostmduserapi.CThostFtdcNotifyFutureSignOutField_swiginit(self, _thostmduserapi.new_CThostFtdcNotifyFutureSignOutField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcNotifyFutureSignOutField

# Register CThostFtdcNotifyFutureSignOutField in _thostmduserapi:
_thostmduserapi.CThostFtdcNotifyFutureSignOutField_swigregister(CThostFtdcNotifyFutureSignOutField)
class CThostFtdcNotifySyncKeyField(object):
    r"""交易核心向银期报盘发出密钥同步处理结果的通知"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    TradeCode: "TThostFtdcTradeCodeType" = property(_thostmduserapi.CThostFtdcNotifySyncKeyField_TradeCode_get, _thostmduserapi.CThostFtdcNotifySyncKeyField_TradeCode_set, doc=r"""业务功能码""")
    BankID: "TThostFtdcBankIDType" = property(_thostmduserapi.CThostFtdcNotifySyncKeyField_BankID_get, _thostmduserapi.CThostFtdcNotifySyncKeyField_BankID_set, doc=r"""银行代码""")
    BankBranchID: "TThostFtdcBankBrchIDType" = property(_thostmduserapi.CThostFtdcNotifySyncKeyField_BankBranchID_get, _thostmduserapi.CThostFtdcNotifySyncKeyField_BankBranchID_set, doc=r"""银行分支机构代码""")
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcNotifySyncKeyField_BrokerID_get, _thostmduserapi.CThostFtdcNotifySyncKeyField_BrokerID_set, doc=r"""期商代码""")
    BrokerBranchID: "TThostFtdcFutureBranchIDType" = property(_thostmduserapi.CThostFtdcNotifySyncKeyField_BrokerBranchID_get, _thostmduserapi.CThostFtdcNotifySyncKeyField_BrokerBranchID_set, doc=r"""期商分支机构代码""")
    TradeDate: "TThostFtdcTradeDateType" = property(_thostmduserapi.CThostFtdcNotifySyncKeyField_TradeDate_get, _thostmduserapi.CThostFtdcNotifySyncKeyField_TradeDate_set, doc=r"""交易日期""")
    TradeTime: "TThostFtdcTradeTimeType" = property(_thostmduserapi.CThostFtdcNotifySyncKeyField_TradeTime_get, _thostmduserapi.CThostFtdcNotifySyncKeyField_TradeTime_set, doc=r"""交易时间""")
    BankSerial: "TThostFtdcBankSerialType" = property(_thostmduserapi.CThostFtdcNotifySyncKeyField_BankSerial_get, _thostmduserapi.CThostFtdcNotifySyncKeyField_BankSerial_set, doc=r"""银行流水号""")
    TradingDay: "TThostFtdcTradeDateType" = property(_thostmduserapi.CThostFtdcNotifySyncKeyField_TradingDay_get, _thostmduserapi.CThostFtdcNotifySyncKeyField_TradingDay_set, doc=r"""交易系统日期""")
    PlateSerial: "TThostFtdcSerialType" = property(_thostmduserapi.CThostFtdcNotifySyncKeyField_PlateSerial_get, _thostmduserapi.CThostFtdcNotifySyncKeyField_PlateSerial_set, doc=r"""银期平台消息流水号""")
    LastFragment: "TThostFtdcLastFragmentType" = property(_thostmduserapi.CThostFtdcNotifySyncKeyField_LastFragment_get, _thostmduserapi.CThostFtdcNotifySyncKeyField_LastFragment_set, doc=r"""最后分片标志""")
    SessionID: "TThostFtdcSessionIDType" = property(_thostmduserapi.CThostFtdcNotifySyncKeyField_SessionID_get, _thostmduserapi.CThostFtdcNotifySyncKeyField_SessionID_set, doc=r"""会话号""")
    InstallID: "TThostFtdcInstallIDType" = property(_thostmduserapi.CThostFtdcNotifySyncKeyField_InstallID_get, _thostmduserapi.CThostFtdcNotifySyncKeyField_InstallID_set, doc=r"""安装编号""")
    UserID: "TThostFtdcUserIDType" = property(_thostmduserapi.CThostFtdcNotifySyncKeyField_UserID_get, _thostmduserapi.CThostFtdcNotifySyncKeyField_UserID_set, doc=r"""用户标识""")
    Message: "TThostFtdcAddInfoType" = property(_thostmduserapi.CThostFtdcNotifySyncKeyField_Message_get, _thostmduserapi.CThostFtdcNotifySyncKeyField_Message_set, doc=r"""交易核心给银期报盘的消息""")
    DeviceID: "TThostFtdcDeviceIDType" = property(_thostmduserapi.CThostFtdcNotifySyncKeyField_DeviceID_get, _thostmduserapi.CThostFtdcNotifySyncKeyField_DeviceID_set, doc=r"""渠道标志""")
    BrokerIDByBank: "TThostFtdcBankCodingForFutureType" = property(_thostmduserapi.CThostFtdcNotifySyncKeyField_BrokerIDByBank_get, _thostmduserapi.CThostFtdcNotifySyncKeyField_BrokerIDByBank_set, doc=r"""期货公司银行编码""")
    OperNo: "TThostFtdcOperNoType" = property(_thostmduserapi.CThostFtdcNotifySyncKeyField_OperNo_get, _thostmduserapi.CThostFtdcNotifySyncKeyField_OperNo_set, doc=r"""交易柜员""")
    RequestID: "TThostFtdcRequestIDType" = property(_thostmduserapi.CThostFtdcNotifySyncKeyField_RequestID_get, _thostmduserapi.CThostFtdcNotifySyncKeyField_RequestID_set, doc=r"""请求编号""")
    TID: "TThostFtdcTIDType" = property(_thostmduserapi.CThostFtdcNotifySyncKeyField_TID_get, _thostmduserapi.CThostFtdcNotifySyncKeyField_TID_set, doc=r"""交易ID""")
    ErrorID: "TThostFtdcErrorIDType" = property(_thostmduserapi.CThostFtdcNotifySyncKeyField_ErrorID_get, _thostmduserapi.CThostFtdcNotifySyncKeyField_ErrorID_set, doc=r"""错误代码""")
    ErrorMsg: "TThostFtdcErrorMsgType" = property(_thostmduserapi.CThostFtdcNotifySyncKeyField_ErrorMsg_get, _thostmduserapi.CThostFtdcNotifySyncKeyField_ErrorMsg_set, doc=r"""错误信息""")

    def __init__(self):
        _thostmduserapi.CThostFtdcNotifySyncKeyField_swiginit(self, _thostmduserapi.new_CThostFtdcNotifySyncKeyField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcNotifySyncKeyField

# Register CThostFtdcNotifySyncKeyField in _thostmduserapi:
_thostmduserapi.CThostFtdcNotifySyncKeyField_swigregister(CThostFtdcNotifySyncKeyField)
class CThostFtdcQryAccountregisterField(object):
    r"""请求查询银期签约关系"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcQryAccountregisterField_BrokerID_get, _thostmduserapi.CThostFtdcQryAccountregisterField_BrokerID_set, doc=r"""经纪公司代码""")
    AccountID: "TThostFtdcAccountIDType" = property(_thostmduserapi.CThostFtdcQryAccountregisterField_AccountID_get, _thostmduserapi.CThostFtdcQryAccountregisterField_AccountID_set, doc=r"""投资者帐号""")
    BankID: "TThostFtdcBankIDType" = property(_thostmduserapi.CThostFtdcQryAccountregisterField_BankID_get, _thostmduserapi.CThostFtdcQryAccountregisterField_BankID_set, doc=r"""银行编码""")
    BankBranchID: "TThostFtdcBankBrchIDType" = property(_thostmduserapi.CThostFtdcQryAccountregisterField_BankBranchID_get, _thostmduserapi.CThostFtdcQryAccountregisterField_BankBranchID_set, doc=r"""银行分支机构编码""")
    CurrencyID: "TThostFtdcCurrencyIDType" = property(_thostmduserapi.CThostFtdcQryAccountregisterField_CurrencyID_get, _thostmduserapi.CThostFtdcQryAccountregisterField_CurrencyID_set, doc=r"""币种代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcQryAccountregisterField_swiginit(self, _thostmduserapi.new_CThostFtdcQryAccountregisterField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcQryAccountregisterField

# Register CThostFtdcQryAccountregisterField in _thostmduserapi:
_thostmduserapi.CThostFtdcQryAccountregisterField_swigregister(CThostFtdcQryAccountregisterField)
class CThostFtdcAccountregisterField(object):
    r"""客户开销户信息表"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    TradeDay: "TThostFtdcTradeDateType" = property(_thostmduserapi.CThostFtdcAccountregisterField_TradeDay_get, _thostmduserapi.CThostFtdcAccountregisterField_TradeDay_set, doc=r"""交易日期""")
    BankID: "TThostFtdcBankIDType" = property(_thostmduserapi.CThostFtdcAccountregisterField_BankID_get, _thostmduserapi.CThostFtdcAccountregisterField_BankID_set, doc=r"""银行编码""")
    BankBranchID: "TThostFtdcBankBrchIDType" = property(_thostmduserapi.CThostFtdcAccountregisterField_BankBranchID_get, _thostmduserapi.CThostFtdcAccountregisterField_BankBranchID_set, doc=r"""银行分支机构编码""")
    BankAccount: "TThostFtdcBankAccountType" = property(_thostmduserapi.CThostFtdcAccountregisterField_BankAccount_get, _thostmduserapi.CThostFtdcAccountregisterField_BankAccount_set, doc=r"""银行帐号""")
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcAccountregisterField_BrokerID_get, _thostmduserapi.CThostFtdcAccountregisterField_BrokerID_set, doc=r"""期货公司编码""")
    BrokerBranchID: "TThostFtdcFutureBranchIDType" = property(_thostmduserapi.CThostFtdcAccountregisterField_BrokerBranchID_get, _thostmduserapi.CThostFtdcAccountregisterField_BrokerBranchID_set, doc=r"""期货公司分支机构编码""")
    AccountID: "TThostFtdcAccountIDType" = property(_thostmduserapi.CThostFtdcAccountregisterField_AccountID_get, _thostmduserapi.CThostFtdcAccountregisterField_AccountID_set, doc=r"""投资者帐号""")
    IdCardType: "TThostFtdcIdCardTypeType" = property(_thostmduserapi.CThostFtdcAccountregisterField_IdCardType_get, _thostmduserapi.CThostFtdcAccountregisterField_IdCardType_set, doc=r"""证件类型""")
    IdentifiedCardNo: "TThostFtdcIdentifiedCardNoType" = property(_thostmduserapi.CThostFtdcAccountregisterField_IdentifiedCardNo_get, _thostmduserapi.CThostFtdcAccountregisterField_IdentifiedCardNo_set, doc=r"""证件号码""")
    CustomerName: "TThostFtdcIndividualNameType" = property(_thostmduserapi.CThostFtdcAccountregisterField_CustomerName_get, _thostmduserapi.CThostFtdcAccountregisterField_CustomerName_set, doc=r"""客户姓名""")
    CurrencyID: "TThostFtdcCurrencyIDType" = property(_thostmduserapi.CThostFtdcAccountregisterField_CurrencyID_get, _thostmduserapi.CThostFtdcAccountregisterField_CurrencyID_set, doc=r"""币种代码""")
    OpenOrDestroy: "TThostFtdcOpenOrDestroyType" = property(_thostmduserapi.CThostFtdcAccountregisterField_OpenOrDestroy_get, _thostmduserapi.CThostFtdcAccountregisterField_OpenOrDestroy_set, doc=r"""开销户类别""")
    RegDate: "TThostFtdcTradeDateType" = property(_thostmduserapi.CThostFtdcAccountregisterField_RegDate_get, _thostmduserapi.CThostFtdcAccountregisterField_RegDate_set, doc=r"""签约日期""")
    OutDate: "TThostFtdcTradeDateType" = property(_thostmduserapi.CThostFtdcAccountregisterField_OutDate_get, _thostmduserapi.CThostFtdcAccountregisterField_OutDate_set, doc=r"""解约日期""")
    TID: "TThostFtdcTIDType" = property(_thostmduserapi.CThostFtdcAccountregisterField_TID_get, _thostmduserapi.CThostFtdcAccountregisterField_TID_set, doc=r"""交易ID""")
    CustType: "TThostFtdcCustTypeType" = property(_thostmduserapi.CThostFtdcAccountregisterField_CustType_get, _thostmduserapi.CThostFtdcAccountregisterField_CustType_set, doc=r"""客户类型""")
    BankAccType: "TThostFtdcBankAccTypeType" = property(_thostmduserapi.CThostFtdcAccountregisterField_BankAccType_get, _thostmduserapi.CThostFtdcAccountregisterField_BankAccType_set, doc=r"""银行帐号类型""")
    LongCustomerName: "TThostFtdcLongIndividualNameType" = property(_thostmduserapi.CThostFtdcAccountregisterField_LongCustomerName_get, _thostmduserapi.CThostFtdcAccountregisterField_LongCustomerName_set, doc=r"""长客户姓名""")

    def __init__(self):
        _thostmduserapi.CThostFtdcAccountregisterField_swiginit(self, _thostmduserapi.new_CThostFtdcAccountregisterField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcAccountregisterField

# Register CThostFtdcAccountregisterField in _thostmduserapi:
_thostmduserapi.CThostFtdcAccountregisterField_swigregister(CThostFtdcAccountregisterField)
class CThostFtdcOpenAccountField(object):
    r"""银期开户信息"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    TradeCode: "TThostFtdcTradeCodeType" = property(_thostmduserapi.CThostFtdcOpenAccountField_TradeCode_get, _thostmduserapi.CThostFtdcOpenAccountField_TradeCode_set, doc=r"""业务功能码""")
    BankID: "TThostFtdcBankIDType" = property(_thostmduserapi.CThostFtdcOpenAccountField_BankID_get, _thostmduserapi.CThostFtdcOpenAccountField_BankID_set, doc=r"""银行代码""")
    BankBranchID: "TThostFtdcBankBrchIDType" = property(_thostmduserapi.CThostFtdcOpenAccountField_BankBranchID_get, _thostmduserapi.CThostFtdcOpenAccountField_BankBranchID_set, doc=r"""银行分支机构代码""")
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcOpenAccountField_BrokerID_get, _thostmduserapi.CThostFtdcOpenAccountField_BrokerID_set, doc=r"""期商代码""")
    BrokerBranchID: "TThostFtdcFutureBranchIDType" = property(_thostmduserapi.CThostFtdcOpenAccountField_BrokerBranchID_get, _thostmduserapi.CThostFtdcOpenAccountField_BrokerBranchID_set, doc=r"""期商分支机构代码""")
    TradeDate: "TThostFtdcTradeDateType" = property(_thostmduserapi.CThostFtdcOpenAccountField_TradeDate_get, _thostmduserapi.CThostFtdcOpenAccountField_TradeDate_set, doc=r"""交易日期""")
    TradeTime: "TThostFtdcTradeTimeType" = property(_thostmduserapi.CThostFtdcOpenAccountField_TradeTime_get, _thostmduserapi.CThostFtdcOpenAccountField_TradeTime_set, doc=r"""交易时间""")
    BankSerial: "TThostFtdcBankSerialType" = property(_thostmduserapi.CThostFtdcOpenAccountField_BankSerial_get, _thostmduserapi.CThostFtdcOpenAccountField_BankSerial_set, doc=r"""银行流水号""")
    TradingDay: "TThostFtdcTradeDateType" = property(_thostmduserapi.CThostFtdcOpenAccountField_TradingDay_get, _thostmduserapi.CThostFtdcOpenAccountField_TradingDay_set, doc=r"""交易系统日期""")
    PlateSerial: "TThostFtdcSerialType" = property(_thostmduserapi.CThostFtdcOpenAccountField_PlateSerial_get, _thostmduserapi.CThostFtdcOpenAccountField_PlateSerial_set, doc=r"""银期平台消息流水号""")
    LastFragment: "TThostFtdcLastFragmentType" = property(_thostmduserapi.CThostFtdcOpenAccountField_LastFragment_get, _thostmduserapi.CThostFtdcOpenAccountField_LastFragment_set, doc=r"""最后分片标志""")
    SessionID: "TThostFtdcSessionIDType" = property(_thostmduserapi.CThostFtdcOpenAccountField_SessionID_get, _thostmduserapi.CThostFtdcOpenAccountField_SessionID_set, doc=r"""会话号""")
    CustomerName: "TThostFtdcIndividualNameType" = property(_thostmduserapi.CThostFtdcOpenAccountField_CustomerName_get, _thostmduserapi.CThostFtdcOpenAccountField_CustomerName_set, doc=r"""客户姓名""")
    IdCardType: "TThostFtdcIdCardTypeType" = property(_thostmduserapi.CThostFtdcOpenAccountField_IdCardType_get, _thostmduserapi.CThostFtdcOpenAccountField_IdCardType_set, doc=r"""证件类型""")
    IdentifiedCardNo: "TThostFtdcIdentifiedCardNoType" = property(_thostmduserapi.CThostFtdcOpenAccountField_IdentifiedCardNo_get, _thostmduserapi.CThostFtdcOpenAccountField_IdentifiedCardNo_set, doc=r"""证件号码""")
    Gender: "TThostFtdcGenderType" = property(_thostmduserapi.CThostFtdcOpenAccountField_Gender_get, _thostmduserapi.CThostFtdcOpenAccountField_Gender_set, doc=r"""性别""")
    CountryCode: "TThostFtdcCountryCodeType" = property(_thostmduserapi.CThostFtdcOpenAccountField_CountryCode_get, _thostmduserapi.CThostFtdcOpenAccountField_CountryCode_set, doc=r"""国家代码""")
    CustType: "TThostFtdcCustTypeType" = property(_thostmduserapi.CThostFtdcOpenAccountField_CustType_get, _thostmduserapi.CThostFtdcOpenAccountField_CustType_set, doc=r"""客户类型""")
    Address: "TThostFtdcAddressType" = property(_thostmduserapi.CThostFtdcOpenAccountField_Address_get, _thostmduserapi.CThostFtdcOpenAccountField_Address_set, doc=r"""地址""")
    ZipCode: "TThostFtdcZipCodeType" = property(_thostmduserapi.CThostFtdcOpenAccountField_ZipCode_get, _thostmduserapi.CThostFtdcOpenAccountField_ZipCode_set, doc=r"""邮编""")
    Telephone: "TThostFtdcTelephoneType" = property(_thostmduserapi.CThostFtdcOpenAccountField_Telephone_get, _thostmduserapi.CThostFtdcOpenAccountField_Telephone_set, doc=r"""电话号码""")
    MobilePhone: "TThostFtdcMobilePhoneType" = property(_thostmduserapi.CThostFtdcOpenAccountField_MobilePhone_get, _thostmduserapi.CThostFtdcOpenAccountField_MobilePhone_set, doc=r"""手机""")
    Fax: "TThostFtdcFaxType" = property(_thostmduserapi.CThostFtdcOpenAccountField_Fax_get, _thostmduserapi.CThostFtdcOpenAccountField_Fax_set, doc=r"""传真""")
    EMail: "TThostFtdcEMailType" = property(_thostmduserapi.CThostFtdcOpenAccountField_EMail_get, _thostmduserapi.CThostFtdcOpenAccountField_EMail_set, doc=r"""电子邮件""")
    MoneyAccountStatus: "TThostFtdcMoneyAccountStatusType" = property(_thostmduserapi.CThostFtdcOpenAccountField_MoneyAccountStatus_get, _thostmduserapi.CThostFtdcOpenAccountField_MoneyAccountStatus_set, doc=r"""资金账户状态""")
    BankAccount: "TThostFtdcBankAccountType" = property(_thostmduserapi.CThostFtdcOpenAccountField_BankAccount_get, _thostmduserapi.CThostFtdcOpenAccountField_BankAccount_set, doc=r"""银行帐号""")
    BankPassWord: "TThostFtdcPasswordType" = property(_thostmduserapi.CThostFtdcOpenAccountField_BankPassWord_get, _thostmduserapi.CThostFtdcOpenAccountField_BankPassWord_set, doc=r"""银行密码""")
    AccountID: "TThostFtdcAccountIDType" = property(_thostmduserapi.CThostFtdcOpenAccountField_AccountID_get, _thostmduserapi.CThostFtdcOpenAccountField_AccountID_set, doc=r"""投资者帐号""")
    Password: "TThostFtdcPasswordType" = property(_thostmduserapi.CThostFtdcOpenAccountField_Password_get, _thostmduserapi.CThostFtdcOpenAccountField_Password_set, doc=r"""期货密码""")
    InstallID: "TThostFtdcInstallIDType" = property(_thostmduserapi.CThostFtdcOpenAccountField_InstallID_get, _thostmduserapi.CThostFtdcOpenAccountField_InstallID_set, doc=r"""安装编号""")
    VerifyCertNoFlag: "TThostFtdcYesNoIndicatorType" = property(_thostmduserapi.CThostFtdcOpenAccountField_VerifyCertNoFlag_get, _thostmduserapi.CThostFtdcOpenAccountField_VerifyCertNoFlag_set, doc=r"""验证客户证件号码标志""")
    CurrencyID: "TThostFtdcCurrencyIDType" = property(_thostmduserapi.CThostFtdcOpenAccountField_CurrencyID_get, _thostmduserapi.CThostFtdcOpenAccountField_CurrencyID_set, doc=r"""币种代码""")
    CashExchangeCode: "TThostFtdcCashExchangeCodeType" = property(_thostmduserapi.CThostFtdcOpenAccountField_CashExchangeCode_get, _thostmduserapi.CThostFtdcOpenAccountField_CashExchangeCode_set, doc=r"""汇钞标志""")
    Digest: "TThostFtdcDigestType" = property(_thostmduserapi.CThostFtdcOpenAccountField_Digest_get, _thostmduserapi.CThostFtdcOpenAccountField_Digest_set, doc=r"""摘要""")
    BankAccType: "TThostFtdcBankAccTypeType" = property(_thostmduserapi.CThostFtdcOpenAccountField_BankAccType_get, _thostmduserapi.CThostFtdcOpenAccountField_BankAccType_set, doc=r"""银行帐号类型""")
    DeviceID: "TThostFtdcDeviceIDType" = property(_thostmduserapi.CThostFtdcOpenAccountField_DeviceID_get, _thostmduserapi.CThostFtdcOpenAccountField_DeviceID_set, doc=r"""渠道标志""")
    BankSecuAccType: "TThostFtdcBankAccTypeType" = property(_thostmduserapi.CThostFtdcOpenAccountField_BankSecuAccType_get, _thostmduserapi.CThostFtdcOpenAccountField_BankSecuAccType_set, doc=r"""期货单位帐号类型""")
    BrokerIDByBank: "TThostFtdcBankCodingForFutureType" = property(_thostmduserapi.CThostFtdcOpenAccountField_BrokerIDByBank_get, _thostmduserapi.CThostFtdcOpenAccountField_BrokerIDByBank_set, doc=r"""期货公司银行编码""")
    BankSecuAcc: "TThostFtdcBankAccountType" = property(_thostmduserapi.CThostFtdcOpenAccountField_BankSecuAcc_get, _thostmduserapi.CThostFtdcOpenAccountField_BankSecuAcc_set, doc=r"""期货单位帐号""")
    BankPwdFlag: "TThostFtdcPwdFlagType" = property(_thostmduserapi.CThostFtdcOpenAccountField_BankPwdFlag_get, _thostmduserapi.CThostFtdcOpenAccountField_BankPwdFlag_set, doc=r"""银行密码标志""")
    SecuPwdFlag: "TThostFtdcPwdFlagType" = property(_thostmduserapi.CThostFtdcOpenAccountField_SecuPwdFlag_get, _thostmduserapi.CThostFtdcOpenAccountField_SecuPwdFlag_set, doc=r"""期货资金密码核对标志""")
    OperNo: "TThostFtdcOperNoType" = property(_thostmduserapi.CThostFtdcOpenAccountField_OperNo_get, _thostmduserapi.CThostFtdcOpenAccountField_OperNo_set, doc=r"""交易柜员""")
    TID: "TThostFtdcTIDType" = property(_thostmduserapi.CThostFtdcOpenAccountField_TID_get, _thostmduserapi.CThostFtdcOpenAccountField_TID_set, doc=r"""交易ID""")
    UserID: "TThostFtdcUserIDType" = property(_thostmduserapi.CThostFtdcOpenAccountField_UserID_get, _thostmduserapi.CThostFtdcOpenAccountField_UserID_set, doc=r"""用户标识""")
    ErrorID: "TThostFtdcErrorIDType" = property(_thostmduserapi.CThostFtdcOpenAccountField_ErrorID_get, _thostmduserapi.CThostFtdcOpenAccountField_ErrorID_set, doc=r"""错误代码""")
    ErrorMsg: "TThostFtdcErrorMsgType" = property(_thostmduserapi.CThostFtdcOpenAccountField_ErrorMsg_get, _thostmduserapi.CThostFtdcOpenAccountField_ErrorMsg_set, doc=r"""错误信息""")
    LongCustomerName: "TThostFtdcLongIndividualNameType" = property(_thostmduserapi.CThostFtdcOpenAccountField_LongCustomerName_get, _thostmduserapi.CThostFtdcOpenAccountField_LongCustomerName_set, doc=r"""长客户姓名""")

    def __init__(self):
        _thostmduserapi.CThostFtdcOpenAccountField_swiginit(self, _thostmduserapi.new_CThostFtdcOpenAccountField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcOpenAccountField

# Register CThostFtdcOpenAccountField in _thostmduserapi:
_thostmduserapi.CThostFtdcOpenAccountField_swigregister(CThostFtdcOpenAccountField)
class CThostFtdcCancelAccountField(object):
    r"""银期销户信息"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    TradeCode: "TThostFtdcTradeCodeType" = property(_thostmduserapi.CThostFtdcCancelAccountField_TradeCode_get, _thostmduserapi.CThostFtdcCancelAccountField_TradeCode_set, doc=r"""业务功能码""")
    BankID: "TThostFtdcBankIDType" = property(_thostmduserapi.CThostFtdcCancelAccountField_BankID_get, _thostmduserapi.CThostFtdcCancelAccountField_BankID_set, doc=r"""银行代码""")
    BankBranchID: "TThostFtdcBankBrchIDType" = property(_thostmduserapi.CThostFtdcCancelAccountField_BankBranchID_get, _thostmduserapi.CThostFtdcCancelAccountField_BankBranchID_set, doc=r"""银行分支机构代码""")
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcCancelAccountField_BrokerID_get, _thostmduserapi.CThostFtdcCancelAccountField_BrokerID_set, doc=r"""期商代码""")
    BrokerBranchID: "TThostFtdcFutureBranchIDType" = property(_thostmduserapi.CThostFtdcCancelAccountField_BrokerBranchID_get, _thostmduserapi.CThostFtdcCancelAccountField_BrokerBranchID_set, doc=r"""期商分支机构代码""")
    TradeDate: "TThostFtdcTradeDateType" = property(_thostmduserapi.CThostFtdcCancelAccountField_TradeDate_get, _thostmduserapi.CThostFtdcCancelAccountField_TradeDate_set, doc=r"""交易日期""")
    TradeTime: "TThostFtdcTradeTimeType" = property(_thostmduserapi.CThostFtdcCancelAccountField_TradeTime_get, _thostmduserapi.CThostFtdcCancelAccountField_TradeTime_set, doc=r"""交易时间""")
    BankSerial: "TThostFtdcBankSerialType" = property(_thostmduserapi.CThostFtdcCancelAccountField_BankSerial_get, _thostmduserapi.CThostFtdcCancelAccountField_BankSerial_set, doc=r"""银行流水号""")
    TradingDay: "TThostFtdcTradeDateType" = property(_thostmduserapi.CThostFtdcCancelAccountField_TradingDay_get, _thostmduserapi.CThostFtdcCancelAccountField_TradingDay_set, doc=r"""交易系统日期""")
    PlateSerial: "TThostFtdcSerialType" = property(_thostmduserapi.CThostFtdcCancelAccountField_PlateSerial_get, _thostmduserapi.CThostFtdcCancelAccountField_PlateSerial_set, doc=r"""银期平台消息流水号""")
    LastFragment: "TThostFtdcLastFragmentType" = property(_thostmduserapi.CThostFtdcCancelAccountField_LastFragment_get, _thostmduserapi.CThostFtdcCancelAccountField_LastFragment_set, doc=r"""最后分片标志""")
    SessionID: "TThostFtdcSessionIDType" = property(_thostmduserapi.CThostFtdcCancelAccountField_SessionID_get, _thostmduserapi.CThostFtdcCancelAccountField_SessionID_set, doc=r"""会话号""")
    CustomerName: "TThostFtdcIndividualNameType" = property(_thostmduserapi.CThostFtdcCancelAccountField_CustomerName_get, _thostmduserapi.CThostFtdcCancelAccountField_CustomerName_set, doc=r"""客户姓名""")
    IdCardType: "TThostFtdcIdCardTypeType" = property(_thostmduserapi.CThostFtdcCancelAccountField_IdCardType_get, _thostmduserapi.CThostFtdcCancelAccountField_IdCardType_set, doc=r"""证件类型""")
    IdentifiedCardNo: "TThostFtdcIdentifiedCardNoType" = property(_thostmduserapi.CThostFtdcCancelAccountField_IdentifiedCardNo_get, _thostmduserapi.CThostFtdcCancelAccountField_IdentifiedCardNo_set, doc=r"""证件号码""")
    Gender: "TThostFtdcGenderType" = property(_thostmduserapi.CThostFtdcCancelAccountField_Gender_get, _thostmduserapi.CThostFtdcCancelAccountField_Gender_set, doc=r"""性别""")
    CountryCode: "TThostFtdcCountryCodeType" = property(_thostmduserapi.CThostFtdcCancelAccountField_CountryCode_get, _thostmduserapi.CThostFtdcCancelAccountField_CountryCode_set, doc=r"""国家代码""")
    CustType: "TThostFtdcCustTypeType" = property(_thostmduserapi.CThostFtdcCancelAccountField_CustType_get, _thostmduserapi.CThostFtdcCancelAccountField_CustType_set, doc=r"""客户类型""")
    Address: "TThostFtdcAddressType" = property(_thostmduserapi.CThostFtdcCancelAccountField_Address_get, _thostmduserapi.CThostFtdcCancelAccountField_Address_set, doc=r"""地址""")
    ZipCode: "TThostFtdcZipCodeType" = property(_thostmduserapi.CThostFtdcCancelAccountField_ZipCode_get, _thostmduserapi.CThostFtdcCancelAccountField_ZipCode_set, doc=r"""邮编""")
    Telephone: "TThostFtdcTelephoneType" = property(_thostmduserapi.CThostFtdcCancelAccountField_Telephone_get, _thostmduserapi.CThostFtdcCancelAccountField_Telephone_set, doc=r"""电话号码""")
    MobilePhone: "TThostFtdcMobilePhoneType" = property(_thostmduserapi.CThostFtdcCancelAccountField_MobilePhone_get, _thostmduserapi.CThostFtdcCancelAccountField_MobilePhone_set, doc=r"""手机""")
    Fax: "TThostFtdcFaxType" = property(_thostmduserapi.CThostFtdcCancelAccountField_Fax_get, _thostmduserapi.CThostFtdcCancelAccountField_Fax_set, doc=r"""传真""")
    EMail: "TThostFtdcEMailType" = property(_thostmduserapi.CThostFtdcCancelAccountField_EMail_get, _thostmduserapi.CThostFtdcCancelAccountField_EMail_set, doc=r"""电子邮件""")
    MoneyAccountStatus: "TThostFtdcMoneyAccountStatusType" = property(_thostmduserapi.CThostFtdcCancelAccountField_MoneyAccountStatus_get, _thostmduserapi.CThostFtdcCancelAccountField_MoneyAccountStatus_set, doc=r"""资金账户状态""")
    BankAccount: "TThostFtdcBankAccountType" = property(_thostmduserapi.CThostFtdcCancelAccountField_BankAccount_get, _thostmduserapi.CThostFtdcCancelAccountField_BankAccount_set, doc=r"""银行帐号""")
    BankPassWord: "TThostFtdcPasswordType" = property(_thostmduserapi.CThostFtdcCancelAccountField_BankPassWord_get, _thostmduserapi.CThostFtdcCancelAccountField_BankPassWord_set, doc=r"""银行密码""")
    AccountID: "TThostFtdcAccountIDType" = property(_thostmduserapi.CThostFtdcCancelAccountField_AccountID_get, _thostmduserapi.CThostFtdcCancelAccountField_AccountID_set, doc=r"""投资者帐号""")
    Password: "TThostFtdcPasswordType" = property(_thostmduserapi.CThostFtdcCancelAccountField_Password_get, _thostmduserapi.CThostFtdcCancelAccountField_Password_set, doc=r"""期货密码""")
    InstallID: "TThostFtdcInstallIDType" = property(_thostmduserapi.CThostFtdcCancelAccountField_InstallID_get, _thostmduserapi.CThostFtdcCancelAccountField_InstallID_set, doc=r"""安装编号""")
    VerifyCertNoFlag: "TThostFtdcYesNoIndicatorType" = property(_thostmduserapi.CThostFtdcCancelAccountField_VerifyCertNoFlag_get, _thostmduserapi.CThostFtdcCancelAccountField_VerifyCertNoFlag_set, doc=r"""验证客户证件号码标志""")
    CurrencyID: "TThostFtdcCurrencyIDType" = property(_thostmduserapi.CThostFtdcCancelAccountField_CurrencyID_get, _thostmduserapi.CThostFtdcCancelAccountField_CurrencyID_set, doc=r"""币种代码""")
    CashExchangeCode: "TThostFtdcCashExchangeCodeType" = property(_thostmduserapi.CThostFtdcCancelAccountField_CashExchangeCode_get, _thostmduserapi.CThostFtdcCancelAccountField_CashExchangeCode_set, doc=r"""汇钞标志""")
    Digest: "TThostFtdcDigestType" = property(_thostmduserapi.CThostFtdcCancelAccountField_Digest_get, _thostmduserapi.CThostFtdcCancelAccountField_Digest_set, doc=r"""摘要""")
    BankAccType: "TThostFtdcBankAccTypeType" = property(_thostmduserapi.CThostFtdcCancelAccountField_BankAccType_get, _thostmduserapi.CThostFtdcCancelAccountField_BankAccType_set, doc=r"""银行帐号类型""")
    DeviceID: "TThostFtdcDeviceIDType" = property(_thostmduserapi.CThostFtdcCancelAccountField_DeviceID_get, _thostmduserapi.CThostFtdcCancelAccountField_DeviceID_set, doc=r"""渠道标志""")
    BankSecuAccType: "TThostFtdcBankAccTypeType" = property(_thostmduserapi.CThostFtdcCancelAccountField_BankSecuAccType_get, _thostmduserapi.CThostFtdcCancelAccountField_BankSecuAccType_set, doc=r"""期货单位帐号类型""")
    BrokerIDByBank: "TThostFtdcBankCodingForFutureType" = property(_thostmduserapi.CThostFtdcCancelAccountField_BrokerIDByBank_get, _thostmduserapi.CThostFtdcCancelAccountField_BrokerIDByBank_set, doc=r"""期货公司银行编码""")
    BankSecuAcc: "TThostFtdcBankAccountType" = property(_thostmduserapi.CThostFtdcCancelAccountField_BankSecuAcc_get, _thostmduserapi.CThostFtdcCancelAccountField_BankSecuAcc_set, doc=r"""期货单位帐号""")
    BankPwdFlag: "TThostFtdcPwdFlagType" = property(_thostmduserapi.CThostFtdcCancelAccountField_BankPwdFlag_get, _thostmduserapi.CThostFtdcCancelAccountField_BankPwdFlag_set, doc=r"""银行密码标志""")
    SecuPwdFlag: "TThostFtdcPwdFlagType" = property(_thostmduserapi.CThostFtdcCancelAccountField_SecuPwdFlag_get, _thostmduserapi.CThostFtdcCancelAccountField_SecuPwdFlag_set, doc=r"""期货资金密码核对标志""")
    OperNo: "TThostFtdcOperNoType" = property(_thostmduserapi.CThostFtdcCancelAccountField_OperNo_get, _thostmduserapi.CThostFtdcCancelAccountField_OperNo_set, doc=r"""交易柜员""")
    TID: "TThostFtdcTIDType" = property(_thostmduserapi.CThostFtdcCancelAccountField_TID_get, _thostmduserapi.CThostFtdcCancelAccountField_TID_set, doc=r"""交易ID""")
    UserID: "TThostFtdcUserIDType" = property(_thostmduserapi.CThostFtdcCancelAccountField_UserID_get, _thostmduserapi.CThostFtdcCancelAccountField_UserID_set, doc=r"""用户标识""")
    ErrorID: "TThostFtdcErrorIDType" = property(_thostmduserapi.CThostFtdcCancelAccountField_ErrorID_get, _thostmduserapi.CThostFtdcCancelAccountField_ErrorID_set, doc=r"""错误代码""")
    ErrorMsg: "TThostFtdcErrorMsgType" = property(_thostmduserapi.CThostFtdcCancelAccountField_ErrorMsg_get, _thostmduserapi.CThostFtdcCancelAccountField_ErrorMsg_set, doc=r"""错误信息""")
    LongCustomerName: "TThostFtdcLongIndividualNameType" = property(_thostmduserapi.CThostFtdcCancelAccountField_LongCustomerName_get, _thostmduserapi.CThostFtdcCancelAccountField_LongCustomerName_set, doc=r"""长客户姓名""")

    def __init__(self):
        _thostmduserapi.CThostFtdcCancelAccountField_swiginit(self, _thostmduserapi.new_CThostFtdcCancelAccountField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcCancelAccountField

# Register CThostFtdcCancelAccountField in _thostmduserapi:
_thostmduserapi.CThostFtdcCancelAccountField_swigregister(CThostFtdcCancelAccountField)
class CThostFtdcChangeAccountField(object):
    r"""银期变更银行账号信息"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    TradeCode: "TThostFtdcTradeCodeType" = property(_thostmduserapi.CThostFtdcChangeAccountField_TradeCode_get, _thostmduserapi.CThostFtdcChangeAccountField_TradeCode_set, doc=r"""业务功能码""")
    BankID: "TThostFtdcBankIDType" = property(_thostmduserapi.CThostFtdcChangeAccountField_BankID_get, _thostmduserapi.CThostFtdcChangeAccountField_BankID_set, doc=r"""银行代码""")
    BankBranchID: "TThostFtdcBankBrchIDType" = property(_thostmduserapi.CThostFtdcChangeAccountField_BankBranchID_get, _thostmduserapi.CThostFtdcChangeAccountField_BankBranchID_set, doc=r"""银行分支机构代码""")
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcChangeAccountField_BrokerID_get, _thostmduserapi.CThostFtdcChangeAccountField_BrokerID_set, doc=r"""期商代码""")
    BrokerBranchID: "TThostFtdcFutureBranchIDType" = property(_thostmduserapi.CThostFtdcChangeAccountField_BrokerBranchID_get, _thostmduserapi.CThostFtdcChangeAccountField_BrokerBranchID_set, doc=r"""期商分支机构代码""")
    TradeDate: "TThostFtdcTradeDateType" = property(_thostmduserapi.CThostFtdcChangeAccountField_TradeDate_get, _thostmduserapi.CThostFtdcChangeAccountField_TradeDate_set, doc=r"""交易日期""")
    TradeTime: "TThostFtdcTradeTimeType" = property(_thostmduserapi.CThostFtdcChangeAccountField_TradeTime_get, _thostmduserapi.CThostFtdcChangeAccountField_TradeTime_set, doc=r"""交易时间""")
    BankSerial: "TThostFtdcBankSerialType" = property(_thostmduserapi.CThostFtdcChangeAccountField_BankSerial_get, _thostmduserapi.CThostFtdcChangeAccountField_BankSerial_set, doc=r"""银行流水号""")
    TradingDay: "TThostFtdcTradeDateType" = property(_thostmduserapi.CThostFtdcChangeAccountField_TradingDay_get, _thostmduserapi.CThostFtdcChangeAccountField_TradingDay_set, doc=r"""交易系统日期""")
    PlateSerial: "TThostFtdcSerialType" = property(_thostmduserapi.CThostFtdcChangeAccountField_PlateSerial_get, _thostmduserapi.CThostFtdcChangeAccountField_PlateSerial_set, doc=r"""银期平台消息流水号""")
    LastFragment: "TThostFtdcLastFragmentType" = property(_thostmduserapi.CThostFtdcChangeAccountField_LastFragment_get, _thostmduserapi.CThostFtdcChangeAccountField_LastFragment_set, doc=r"""最后分片标志""")
    SessionID: "TThostFtdcSessionIDType" = property(_thostmduserapi.CThostFtdcChangeAccountField_SessionID_get, _thostmduserapi.CThostFtdcChangeAccountField_SessionID_set, doc=r"""会话号""")
    CustomerName: "TThostFtdcIndividualNameType" = property(_thostmduserapi.CThostFtdcChangeAccountField_CustomerName_get, _thostmduserapi.CThostFtdcChangeAccountField_CustomerName_set, doc=r"""客户姓名""")
    IdCardType: "TThostFtdcIdCardTypeType" = property(_thostmduserapi.CThostFtdcChangeAccountField_IdCardType_get, _thostmduserapi.CThostFtdcChangeAccountField_IdCardType_set, doc=r"""证件类型""")
    IdentifiedCardNo: "TThostFtdcIdentifiedCardNoType" = property(_thostmduserapi.CThostFtdcChangeAccountField_IdentifiedCardNo_get, _thostmduserapi.CThostFtdcChangeAccountField_IdentifiedCardNo_set, doc=r"""证件号码""")
    Gender: "TThostFtdcGenderType" = property(_thostmduserapi.CThostFtdcChangeAccountField_Gender_get, _thostmduserapi.CThostFtdcChangeAccountField_Gender_set, doc=r"""性别""")
    CountryCode: "TThostFtdcCountryCodeType" = property(_thostmduserapi.CThostFtdcChangeAccountField_CountryCode_get, _thostmduserapi.CThostFtdcChangeAccountField_CountryCode_set, doc=r"""国家代码""")
    CustType: "TThostFtdcCustTypeType" = property(_thostmduserapi.CThostFtdcChangeAccountField_CustType_get, _thostmduserapi.CThostFtdcChangeAccountField_CustType_set, doc=r"""客户类型""")
    Address: "TThostFtdcAddressType" = property(_thostmduserapi.CThostFtdcChangeAccountField_Address_get, _thostmduserapi.CThostFtdcChangeAccountField_Address_set, doc=r"""地址""")
    ZipCode: "TThostFtdcZipCodeType" = property(_thostmduserapi.CThostFtdcChangeAccountField_ZipCode_get, _thostmduserapi.CThostFtdcChangeAccountField_ZipCode_set, doc=r"""邮编""")
    Telephone: "TThostFtdcTelephoneType" = property(_thostmduserapi.CThostFtdcChangeAccountField_Telephone_get, _thostmduserapi.CThostFtdcChangeAccountField_Telephone_set, doc=r"""电话号码""")
    MobilePhone: "TThostFtdcMobilePhoneType" = property(_thostmduserapi.CThostFtdcChangeAccountField_MobilePhone_get, _thostmduserapi.CThostFtdcChangeAccountField_MobilePhone_set, doc=r"""手机""")
    Fax: "TThostFtdcFaxType" = property(_thostmduserapi.CThostFtdcChangeAccountField_Fax_get, _thostmduserapi.CThostFtdcChangeAccountField_Fax_set, doc=r"""传真""")
    EMail: "TThostFtdcEMailType" = property(_thostmduserapi.CThostFtdcChangeAccountField_EMail_get, _thostmduserapi.CThostFtdcChangeAccountField_EMail_set, doc=r"""电子邮件""")
    MoneyAccountStatus: "TThostFtdcMoneyAccountStatusType" = property(_thostmduserapi.CThostFtdcChangeAccountField_MoneyAccountStatus_get, _thostmduserapi.CThostFtdcChangeAccountField_MoneyAccountStatus_set, doc=r"""资金账户状态""")
    BankAccount: "TThostFtdcBankAccountType" = property(_thostmduserapi.CThostFtdcChangeAccountField_BankAccount_get, _thostmduserapi.CThostFtdcChangeAccountField_BankAccount_set, doc=r"""银行帐号""")
    BankPassWord: "TThostFtdcPasswordType" = property(_thostmduserapi.CThostFtdcChangeAccountField_BankPassWord_get, _thostmduserapi.CThostFtdcChangeAccountField_BankPassWord_set, doc=r"""银行密码""")
    NewBankAccount: "TThostFtdcBankAccountType" = property(_thostmduserapi.CThostFtdcChangeAccountField_NewBankAccount_get, _thostmduserapi.CThostFtdcChangeAccountField_NewBankAccount_set, doc=r"""新银行帐号""")
    NewBankPassWord: "TThostFtdcPasswordType" = property(_thostmduserapi.CThostFtdcChangeAccountField_NewBankPassWord_get, _thostmduserapi.CThostFtdcChangeAccountField_NewBankPassWord_set, doc=r"""新银行密码""")
    AccountID: "TThostFtdcAccountIDType" = property(_thostmduserapi.CThostFtdcChangeAccountField_AccountID_get, _thostmduserapi.CThostFtdcChangeAccountField_AccountID_set, doc=r"""投资者帐号""")
    Password: "TThostFtdcPasswordType" = property(_thostmduserapi.CThostFtdcChangeAccountField_Password_get, _thostmduserapi.CThostFtdcChangeAccountField_Password_set, doc=r"""期货密码""")
    BankAccType: "TThostFtdcBankAccTypeType" = property(_thostmduserapi.CThostFtdcChangeAccountField_BankAccType_get, _thostmduserapi.CThostFtdcChangeAccountField_BankAccType_set, doc=r"""银行帐号类型""")
    InstallID: "TThostFtdcInstallIDType" = property(_thostmduserapi.CThostFtdcChangeAccountField_InstallID_get, _thostmduserapi.CThostFtdcChangeAccountField_InstallID_set, doc=r"""安装编号""")
    VerifyCertNoFlag: "TThostFtdcYesNoIndicatorType" = property(_thostmduserapi.CThostFtdcChangeAccountField_VerifyCertNoFlag_get, _thostmduserapi.CThostFtdcChangeAccountField_VerifyCertNoFlag_set, doc=r"""验证客户证件号码标志""")
    CurrencyID: "TThostFtdcCurrencyIDType" = property(_thostmduserapi.CThostFtdcChangeAccountField_CurrencyID_get, _thostmduserapi.CThostFtdcChangeAccountField_CurrencyID_set, doc=r"""币种代码""")
    BrokerIDByBank: "TThostFtdcBankCodingForFutureType" = property(_thostmduserapi.CThostFtdcChangeAccountField_BrokerIDByBank_get, _thostmduserapi.CThostFtdcChangeAccountField_BrokerIDByBank_set, doc=r"""期货公司银行编码""")
    BankPwdFlag: "TThostFtdcPwdFlagType" = property(_thostmduserapi.CThostFtdcChangeAccountField_BankPwdFlag_get, _thostmduserapi.CThostFtdcChangeAccountField_BankPwdFlag_set, doc=r"""银行密码标志""")
    SecuPwdFlag: "TThostFtdcPwdFlagType" = property(_thostmduserapi.CThostFtdcChangeAccountField_SecuPwdFlag_get, _thostmduserapi.CThostFtdcChangeAccountField_SecuPwdFlag_set, doc=r"""期货资金密码核对标志""")
    TID: "TThostFtdcTIDType" = property(_thostmduserapi.CThostFtdcChangeAccountField_TID_get, _thostmduserapi.CThostFtdcChangeAccountField_TID_set, doc=r"""交易ID""")
    Digest: "TThostFtdcDigestType" = property(_thostmduserapi.CThostFtdcChangeAccountField_Digest_get, _thostmduserapi.CThostFtdcChangeAccountField_Digest_set, doc=r"""摘要""")
    ErrorID: "TThostFtdcErrorIDType" = property(_thostmduserapi.CThostFtdcChangeAccountField_ErrorID_get, _thostmduserapi.CThostFtdcChangeAccountField_ErrorID_set, doc=r"""错误代码""")
    ErrorMsg: "TThostFtdcErrorMsgType" = property(_thostmduserapi.CThostFtdcChangeAccountField_ErrorMsg_get, _thostmduserapi.CThostFtdcChangeAccountField_ErrorMsg_set, doc=r"""错误信息""")
    LongCustomerName: "TThostFtdcLongIndividualNameType" = property(_thostmduserapi.CThostFtdcChangeAccountField_LongCustomerName_get, _thostmduserapi.CThostFtdcChangeAccountField_LongCustomerName_set, doc=r"""长客户姓名""")

    def __init__(self):
        _thostmduserapi.CThostFtdcChangeAccountField_swiginit(self, _thostmduserapi.new_CThostFtdcChangeAccountField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcChangeAccountField

# Register CThostFtdcChangeAccountField in _thostmduserapi:
_thostmduserapi.CThostFtdcChangeAccountField_swigregister(CThostFtdcChangeAccountField)
class CThostFtdcSecAgentACIDMapField(object):
    r"""二级代理操作员银期权限"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcSecAgentACIDMapField_BrokerID_get, _thostmduserapi.CThostFtdcSecAgentACIDMapField_BrokerID_set, doc=r"""经纪公司代码""")
    UserID: "TThostFtdcUserIDType" = property(_thostmduserapi.CThostFtdcSecAgentACIDMapField_UserID_get, _thostmduserapi.CThostFtdcSecAgentACIDMapField_UserID_set, doc=r"""用户代码""")
    AccountID: "TThostFtdcAccountIDType" = property(_thostmduserapi.CThostFtdcSecAgentACIDMapField_AccountID_get, _thostmduserapi.CThostFtdcSecAgentACIDMapField_AccountID_set, doc=r"""资金账户""")
    CurrencyID: "TThostFtdcCurrencyIDType" = property(_thostmduserapi.CThostFtdcSecAgentACIDMapField_CurrencyID_get, _thostmduserapi.CThostFtdcSecAgentACIDMapField_CurrencyID_set, doc=r"""币种""")
    BrokerSecAgentID: "TThostFtdcAccountIDType" = property(_thostmduserapi.CThostFtdcSecAgentACIDMapField_BrokerSecAgentID_get, _thostmduserapi.CThostFtdcSecAgentACIDMapField_BrokerSecAgentID_set, doc=r"""境外中介机构资金帐号""")

    def __init__(self):
        _thostmduserapi.CThostFtdcSecAgentACIDMapField_swiginit(self, _thostmduserapi.new_CThostFtdcSecAgentACIDMapField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcSecAgentACIDMapField

# Register CThostFtdcSecAgentACIDMapField in _thostmduserapi:
_thostmduserapi.CThostFtdcSecAgentACIDMapField_swigregister(CThostFtdcSecAgentACIDMapField)
class CThostFtdcQrySecAgentACIDMapField(object):
    r"""二级代理操作员银期权限查询"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcQrySecAgentACIDMapField_BrokerID_get, _thostmduserapi.CThostFtdcQrySecAgentACIDMapField_BrokerID_set, doc=r"""经纪公司代码""")
    UserID: "TThostFtdcUserIDType" = property(_thostmduserapi.CThostFtdcQrySecAgentACIDMapField_UserID_get, _thostmduserapi.CThostFtdcQrySecAgentACIDMapField_UserID_set, doc=r"""用户代码""")
    AccountID: "TThostFtdcAccountIDType" = property(_thostmduserapi.CThostFtdcQrySecAgentACIDMapField_AccountID_get, _thostmduserapi.CThostFtdcQrySecAgentACIDMapField_AccountID_set, doc=r"""资金账户""")
    CurrencyID: "TThostFtdcCurrencyIDType" = property(_thostmduserapi.CThostFtdcQrySecAgentACIDMapField_CurrencyID_get, _thostmduserapi.CThostFtdcQrySecAgentACIDMapField_CurrencyID_set, doc=r"""币种""")

    def __init__(self):
        _thostmduserapi.CThostFtdcQrySecAgentACIDMapField_swiginit(self, _thostmduserapi.new_CThostFtdcQrySecAgentACIDMapField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcQrySecAgentACIDMapField

# Register CThostFtdcQrySecAgentACIDMapField in _thostmduserapi:
_thostmduserapi.CThostFtdcQrySecAgentACIDMapField_swigregister(CThostFtdcQrySecAgentACIDMapField)
class CThostFtdcUserRightsAssignField(object):
    r"""灾备中心交易权限"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcUserRightsAssignField_BrokerID_get, _thostmduserapi.CThostFtdcUserRightsAssignField_BrokerID_set, doc=r"""应用单元代码""")
    UserID: "TThostFtdcUserIDType" = property(_thostmduserapi.CThostFtdcUserRightsAssignField_UserID_get, _thostmduserapi.CThostFtdcUserRightsAssignField_UserID_set, doc=r"""用户代码""")
    DRIdentityID: "TThostFtdcDRIdentityIDType" = property(_thostmduserapi.CThostFtdcUserRightsAssignField_DRIdentityID_get, _thostmduserapi.CThostFtdcUserRightsAssignField_DRIdentityID_set, doc=r"""交易中心代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcUserRightsAssignField_swiginit(self, _thostmduserapi.new_CThostFtdcUserRightsAssignField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcUserRightsAssignField

# Register CThostFtdcUserRightsAssignField in _thostmduserapi:
_thostmduserapi.CThostFtdcUserRightsAssignField_swigregister(CThostFtdcUserRightsAssignField)
class CThostFtdcBrokerUserRightAssignField(object):
    r"""经济公司是否有在本标示的交易权限"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcBrokerUserRightAssignField_BrokerID_get, _thostmduserapi.CThostFtdcBrokerUserRightAssignField_BrokerID_set, doc=r"""应用单元代码""")
    DRIdentityID: "TThostFtdcDRIdentityIDType" = property(_thostmduserapi.CThostFtdcBrokerUserRightAssignField_DRIdentityID_get, _thostmduserapi.CThostFtdcBrokerUserRightAssignField_DRIdentityID_set, doc=r"""交易中心代码""")
    Tradeable: "TThostFtdcBoolType" = property(_thostmduserapi.CThostFtdcBrokerUserRightAssignField_Tradeable_get, _thostmduserapi.CThostFtdcBrokerUserRightAssignField_Tradeable_set, doc=r"""能否交易""")

    def __init__(self):
        _thostmduserapi.CThostFtdcBrokerUserRightAssignField_swiginit(self, _thostmduserapi.new_CThostFtdcBrokerUserRightAssignField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcBrokerUserRightAssignField

# Register CThostFtdcBrokerUserRightAssignField in _thostmduserapi:
_thostmduserapi.CThostFtdcBrokerUserRightAssignField_swigregister(CThostFtdcBrokerUserRightAssignField)
class CThostFtdcDRTransferField(object):
    r"""灾备交易转换报文"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    OrigDRIdentityID: "TThostFtdcDRIdentityIDType" = property(_thostmduserapi.CThostFtdcDRTransferField_OrigDRIdentityID_get, _thostmduserapi.CThostFtdcDRTransferField_OrigDRIdentityID_set, doc=r"""原交易中心代码""")
    DestDRIdentityID: "TThostFtdcDRIdentityIDType" = property(_thostmduserapi.CThostFtdcDRTransferField_DestDRIdentityID_get, _thostmduserapi.CThostFtdcDRTransferField_DestDRIdentityID_set, doc=r"""目标交易中心代码""")
    OrigBrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcDRTransferField_OrigBrokerID_get, _thostmduserapi.CThostFtdcDRTransferField_OrigBrokerID_set, doc=r"""原应用单元代码""")
    DestBrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcDRTransferField_DestBrokerID_get, _thostmduserapi.CThostFtdcDRTransferField_DestBrokerID_set, doc=r"""目标易用单元代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcDRTransferField_swiginit(self, _thostmduserapi.new_CThostFtdcDRTransferField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcDRTransferField

# Register CThostFtdcDRTransferField in _thostmduserapi:
_thostmduserapi.CThostFtdcDRTransferField_swigregister(CThostFtdcDRTransferField)
class CThostFtdcFensUserInfoField(object):
    r"""Fens用户信息"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcFensUserInfoField_BrokerID_get, _thostmduserapi.CThostFtdcFensUserInfoField_BrokerID_set, doc=r"""经纪公司代码""")
    UserID: "TThostFtdcUserIDType" = property(_thostmduserapi.CThostFtdcFensUserInfoField_UserID_get, _thostmduserapi.CThostFtdcFensUserInfoField_UserID_set, doc=r"""用户代码""")
    LoginMode: "TThostFtdcLoginModeType" = property(_thostmduserapi.CThostFtdcFensUserInfoField_LoginMode_get, _thostmduserapi.CThostFtdcFensUserInfoField_LoginMode_set, doc=r"""登录模式""")

    def __init__(self):
        _thostmduserapi.CThostFtdcFensUserInfoField_swiginit(self, _thostmduserapi.new_CThostFtdcFensUserInfoField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcFensUserInfoField

# Register CThostFtdcFensUserInfoField in _thostmduserapi:
_thostmduserapi.CThostFtdcFensUserInfoField_swigregister(CThostFtdcFensUserInfoField)
class CThostFtdcCurrTransferIdentityField(object):
    r"""当前银期所属交易中心"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    IdentityID: "TThostFtdcDRIdentityIDType" = property(_thostmduserapi.CThostFtdcCurrTransferIdentityField_IdentityID_get, _thostmduserapi.CThostFtdcCurrTransferIdentityField_IdentityID_set, doc=r"""交易中心代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcCurrTransferIdentityField_swiginit(self, _thostmduserapi.new_CThostFtdcCurrTransferIdentityField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcCurrTransferIdentityField

# Register CThostFtdcCurrTransferIdentityField in _thostmduserapi:
_thostmduserapi.CThostFtdcCurrTransferIdentityField_swigregister(CThostFtdcCurrTransferIdentityField)
class CThostFtdcLoginForbiddenUserField(object):
    r"""禁止登录用户"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcLoginForbiddenUserField_BrokerID_get, _thostmduserapi.CThostFtdcLoginForbiddenUserField_BrokerID_set, doc=r"""经纪公司代码""")
    UserID: "TThostFtdcUserIDType" = property(_thostmduserapi.CThostFtdcLoginForbiddenUserField_UserID_get, _thostmduserapi.CThostFtdcLoginForbiddenUserField_UserID_set, doc=r"""用户代码""")
    reserve1: "TThostFtdcOldIPAddressType" = property(_thostmduserapi.CThostFtdcLoginForbiddenUserField_reserve1_get, _thostmduserapi.CThostFtdcLoginForbiddenUserField_reserve1_set, doc=r"""保留的无效字段""")
    IPAddress: "TThostFtdcIPAddressType" = property(_thostmduserapi.CThostFtdcLoginForbiddenUserField_IPAddress_get, _thostmduserapi.CThostFtdcLoginForbiddenUserField_IPAddress_set, doc=r"""IP地址""")

    def __init__(self):
        _thostmduserapi.CThostFtdcLoginForbiddenUserField_swiginit(self, _thostmduserapi.new_CThostFtdcLoginForbiddenUserField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcLoginForbiddenUserField

# Register CThostFtdcLoginForbiddenUserField in _thostmduserapi:
_thostmduserapi.CThostFtdcLoginForbiddenUserField_swigregister(CThostFtdcLoginForbiddenUserField)
class CThostFtdcQryLoginForbiddenUserField(object):
    r"""查询禁止登录用户"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcQryLoginForbiddenUserField_BrokerID_get, _thostmduserapi.CThostFtdcQryLoginForbiddenUserField_BrokerID_set, doc=r"""经纪公司代码""")
    UserID: "TThostFtdcUserIDType" = property(_thostmduserapi.CThostFtdcQryLoginForbiddenUserField_UserID_get, _thostmduserapi.CThostFtdcQryLoginForbiddenUserField_UserID_set, doc=r"""用户代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcQryLoginForbiddenUserField_swiginit(self, _thostmduserapi.new_CThostFtdcQryLoginForbiddenUserField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcQryLoginForbiddenUserField

# Register CThostFtdcQryLoginForbiddenUserField in _thostmduserapi:
_thostmduserapi.CThostFtdcQryLoginForbiddenUserField_swigregister(CThostFtdcQryLoginForbiddenUserField)
class CThostFtdcTradingAccountReserveField(object):
    r"""资金账户基本准备金"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcTradingAccountReserveField_BrokerID_get, _thostmduserapi.CThostFtdcTradingAccountReserveField_BrokerID_set, doc=r"""经纪公司代码""")
    AccountID: "TThostFtdcAccountIDType" = property(_thostmduserapi.CThostFtdcTradingAccountReserveField_AccountID_get, _thostmduserapi.CThostFtdcTradingAccountReserveField_AccountID_set, doc=r"""投资者帐号""")
    Reserve: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcTradingAccountReserveField_Reserve_get, _thostmduserapi.CThostFtdcTradingAccountReserveField_Reserve_set, doc=r"""基本准备金""")
    CurrencyID: "TThostFtdcCurrencyIDType" = property(_thostmduserapi.CThostFtdcTradingAccountReserveField_CurrencyID_get, _thostmduserapi.CThostFtdcTradingAccountReserveField_CurrencyID_set, doc=r"""币种代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcTradingAccountReserveField_swiginit(self, _thostmduserapi.new_CThostFtdcTradingAccountReserveField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcTradingAccountReserveField

# Register CThostFtdcTradingAccountReserveField in _thostmduserapi:
_thostmduserapi.CThostFtdcTradingAccountReserveField_swigregister(CThostFtdcTradingAccountReserveField)
class CThostFtdcQryLoginForbiddenIPField(object):
    r"""查询禁止登录IP"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    reserve1: "TThostFtdcOldIPAddressType" = property(_thostmduserapi.CThostFtdcQryLoginForbiddenIPField_reserve1_get, _thostmduserapi.CThostFtdcQryLoginForbiddenIPField_reserve1_set, doc=r"""保留的无效字段""")
    IPAddress: "TThostFtdcIPAddressType" = property(_thostmduserapi.CThostFtdcQryLoginForbiddenIPField_IPAddress_get, _thostmduserapi.CThostFtdcQryLoginForbiddenIPField_IPAddress_set, doc=r"""IP地址""")

    def __init__(self):
        _thostmduserapi.CThostFtdcQryLoginForbiddenIPField_swiginit(self, _thostmduserapi.new_CThostFtdcQryLoginForbiddenIPField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcQryLoginForbiddenIPField

# Register CThostFtdcQryLoginForbiddenIPField in _thostmduserapi:
_thostmduserapi.CThostFtdcQryLoginForbiddenIPField_swigregister(CThostFtdcQryLoginForbiddenIPField)
class CThostFtdcQryIPListField(object):
    r"""查询IP列表"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    reserve1: "TThostFtdcOldIPAddressType" = property(_thostmduserapi.CThostFtdcQryIPListField_reserve1_get, _thostmduserapi.CThostFtdcQryIPListField_reserve1_set, doc=r"""保留的无效字段""")
    IPAddress: "TThostFtdcIPAddressType" = property(_thostmduserapi.CThostFtdcQryIPListField_IPAddress_get, _thostmduserapi.CThostFtdcQryIPListField_IPAddress_set, doc=r"""IP地址""")

    def __init__(self):
        _thostmduserapi.CThostFtdcQryIPListField_swiginit(self, _thostmduserapi.new_CThostFtdcQryIPListField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcQryIPListField

# Register CThostFtdcQryIPListField in _thostmduserapi:
_thostmduserapi.CThostFtdcQryIPListField_swigregister(CThostFtdcQryIPListField)
class CThostFtdcQryUserRightsAssignField(object):
    r"""查询用户下单权限分配表"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcQryUserRightsAssignField_BrokerID_get, _thostmduserapi.CThostFtdcQryUserRightsAssignField_BrokerID_set, doc=r"""应用单元代码""")
    UserID: "TThostFtdcUserIDType" = property(_thostmduserapi.CThostFtdcQryUserRightsAssignField_UserID_get, _thostmduserapi.CThostFtdcQryUserRightsAssignField_UserID_set, doc=r"""用户代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcQryUserRightsAssignField_swiginit(self, _thostmduserapi.new_CThostFtdcQryUserRightsAssignField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcQryUserRightsAssignField

# Register CThostFtdcQryUserRightsAssignField in _thostmduserapi:
_thostmduserapi.CThostFtdcQryUserRightsAssignField_swigregister(CThostFtdcQryUserRightsAssignField)
class CThostFtdcReserveOpenAccountConfirmField(object):
    r"""银期预约开户确认请求"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    TradeCode: "TThostFtdcTradeCodeType" = property(_thostmduserapi.CThostFtdcReserveOpenAccountConfirmField_TradeCode_get, _thostmduserapi.CThostFtdcReserveOpenAccountConfirmField_TradeCode_set, doc=r"""业务功能码""")
    BankID: "TThostFtdcBankIDType" = property(_thostmduserapi.CThostFtdcReserveOpenAccountConfirmField_BankID_get, _thostmduserapi.CThostFtdcReserveOpenAccountConfirmField_BankID_set, doc=r"""银行代码""")
    BankBranchID: "TThostFtdcBankBrchIDType" = property(_thostmduserapi.CThostFtdcReserveOpenAccountConfirmField_BankBranchID_get, _thostmduserapi.CThostFtdcReserveOpenAccountConfirmField_BankBranchID_set, doc=r"""银行分支机构代码""")
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcReserveOpenAccountConfirmField_BrokerID_get, _thostmduserapi.CThostFtdcReserveOpenAccountConfirmField_BrokerID_set, doc=r"""期商代码""")
    BrokerBranchID: "TThostFtdcFutureBranchIDType" = property(_thostmduserapi.CThostFtdcReserveOpenAccountConfirmField_BrokerBranchID_get, _thostmduserapi.CThostFtdcReserveOpenAccountConfirmField_BrokerBranchID_set, doc=r"""期商分支机构代码""")
    TradeDate: "TThostFtdcTradeDateType" = property(_thostmduserapi.CThostFtdcReserveOpenAccountConfirmField_TradeDate_get, _thostmduserapi.CThostFtdcReserveOpenAccountConfirmField_TradeDate_set, doc=r"""交易日期""")
    TradeTime: "TThostFtdcTradeTimeType" = property(_thostmduserapi.CThostFtdcReserveOpenAccountConfirmField_TradeTime_get, _thostmduserapi.CThostFtdcReserveOpenAccountConfirmField_TradeTime_set, doc=r"""交易时间""")
    BankSerial: "TThostFtdcBankSerialType" = property(_thostmduserapi.CThostFtdcReserveOpenAccountConfirmField_BankSerial_get, _thostmduserapi.CThostFtdcReserveOpenAccountConfirmField_BankSerial_set, doc=r"""银行流水号""")
    TradingDay: "TThostFtdcTradeDateType" = property(_thostmduserapi.CThostFtdcReserveOpenAccountConfirmField_TradingDay_get, _thostmduserapi.CThostFtdcReserveOpenAccountConfirmField_TradingDay_set, doc=r"""交易系统日期""")
    PlateSerial: "TThostFtdcSerialType" = property(_thostmduserapi.CThostFtdcReserveOpenAccountConfirmField_PlateSerial_get, _thostmduserapi.CThostFtdcReserveOpenAccountConfirmField_PlateSerial_set, doc=r"""银期平台消息流水号""")
    LastFragment: "TThostFtdcLastFragmentType" = property(_thostmduserapi.CThostFtdcReserveOpenAccountConfirmField_LastFragment_get, _thostmduserapi.CThostFtdcReserveOpenAccountConfirmField_LastFragment_set, doc=r"""最后分片标志""")
    SessionID: "TThostFtdcSessionIDType" = property(_thostmduserapi.CThostFtdcReserveOpenAccountConfirmField_SessionID_get, _thostmduserapi.CThostFtdcReserveOpenAccountConfirmField_SessionID_set, doc=r"""会话号""")
    CustomerName: "TThostFtdcLongIndividualNameType" = property(_thostmduserapi.CThostFtdcReserveOpenAccountConfirmField_CustomerName_get, _thostmduserapi.CThostFtdcReserveOpenAccountConfirmField_CustomerName_set, doc=r"""客户姓名""")
    IdCardType: "TThostFtdcIdCardTypeType" = property(_thostmduserapi.CThostFtdcReserveOpenAccountConfirmField_IdCardType_get, _thostmduserapi.CThostFtdcReserveOpenAccountConfirmField_IdCardType_set, doc=r"""证件类型""")
    IdentifiedCardNo: "TThostFtdcIdentifiedCardNoType" = property(_thostmduserapi.CThostFtdcReserveOpenAccountConfirmField_IdentifiedCardNo_get, _thostmduserapi.CThostFtdcReserveOpenAccountConfirmField_IdentifiedCardNo_set, doc=r"""证件号码""")
    Gender: "TThostFtdcGenderType" = property(_thostmduserapi.CThostFtdcReserveOpenAccountConfirmField_Gender_get, _thostmduserapi.CThostFtdcReserveOpenAccountConfirmField_Gender_set, doc=r"""性别""")
    CountryCode: "TThostFtdcCountryCodeType" = property(_thostmduserapi.CThostFtdcReserveOpenAccountConfirmField_CountryCode_get, _thostmduserapi.CThostFtdcReserveOpenAccountConfirmField_CountryCode_set, doc=r"""国家代码""")
    CustType: "TThostFtdcCustTypeType" = property(_thostmduserapi.CThostFtdcReserveOpenAccountConfirmField_CustType_get, _thostmduserapi.CThostFtdcReserveOpenAccountConfirmField_CustType_set, doc=r"""客户类型""")
    Address: "TThostFtdcAddressType" = property(_thostmduserapi.CThostFtdcReserveOpenAccountConfirmField_Address_get, _thostmduserapi.CThostFtdcReserveOpenAccountConfirmField_Address_set, doc=r"""地址""")
    ZipCode: "TThostFtdcZipCodeType" = property(_thostmduserapi.CThostFtdcReserveOpenAccountConfirmField_ZipCode_get, _thostmduserapi.CThostFtdcReserveOpenAccountConfirmField_ZipCode_set, doc=r"""邮编""")
    Telephone: "TThostFtdcTelephoneType" = property(_thostmduserapi.CThostFtdcReserveOpenAccountConfirmField_Telephone_get, _thostmduserapi.CThostFtdcReserveOpenAccountConfirmField_Telephone_set, doc=r"""电话号码""")
    MobilePhone: "TThostFtdcMobilePhoneType" = property(_thostmduserapi.CThostFtdcReserveOpenAccountConfirmField_MobilePhone_get, _thostmduserapi.CThostFtdcReserveOpenAccountConfirmField_MobilePhone_set, doc=r"""手机""")
    Fax: "TThostFtdcFaxType" = property(_thostmduserapi.CThostFtdcReserveOpenAccountConfirmField_Fax_get, _thostmduserapi.CThostFtdcReserveOpenAccountConfirmField_Fax_set, doc=r"""传真""")
    EMail: "TThostFtdcEMailType" = property(_thostmduserapi.CThostFtdcReserveOpenAccountConfirmField_EMail_get, _thostmduserapi.CThostFtdcReserveOpenAccountConfirmField_EMail_set, doc=r"""电子邮件""")
    MoneyAccountStatus: "TThostFtdcMoneyAccountStatusType" = property(_thostmduserapi.CThostFtdcReserveOpenAccountConfirmField_MoneyAccountStatus_get, _thostmduserapi.CThostFtdcReserveOpenAccountConfirmField_MoneyAccountStatus_set, doc=r"""资金账户状态""")
    BankAccount: "TThostFtdcBankAccountType" = property(_thostmduserapi.CThostFtdcReserveOpenAccountConfirmField_BankAccount_get, _thostmduserapi.CThostFtdcReserveOpenAccountConfirmField_BankAccount_set, doc=r"""银行帐号""")
    BankPassWord: "TThostFtdcPasswordType" = property(_thostmduserapi.CThostFtdcReserveOpenAccountConfirmField_BankPassWord_get, _thostmduserapi.CThostFtdcReserveOpenAccountConfirmField_BankPassWord_set, doc=r"""银行密码""")
    InstallID: "TThostFtdcInstallIDType" = property(_thostmduserapi.CThostFtdcReserveOpenAccountConfirmField_InstallID_get, _thostmduserapi.CThostFtdcReserveOpenAccountConfirmField_InstallID_set, doc=r"""安装编号""")
    VerifyCertNoFlag: "TThostFtdcYesNoIndicatorType" = property(_thostmduserapi.CThostFtdcReserveOpenAccountConfirmField_VerifyCertNoFlag_get, _thostmduserapi.CThostFtdcReserveOpenAccountConfirmField_VerifyCertNoFlag_set, doc=r"""验证客户证件号码标志""")
    CurrencyID: "TThostFtdcCurrencyIDType" = property(_thostmduserapi.CThostFtdcReserveOpenAccountConfirmField_CurrencyID_get, _thostmduserapi.CThostFtdcReserveOpenAccountConfirmField_CurrencyID_set, doc=r"""币种代码""")
    Digest: "TThostFtdcDigestType" = property(_thostmduserapi.CThostFtdcReserveOpenAccountConfirmField_Digest_get, _thostmduserapi.CThostFtdcReserveOpenAccountConfirmField_Digest_set, doc=r"""摘要""")
    BankAccType: "TThostFtdcBankAccTypeType" = property(_thostmduserapi.CThostFtdcReserveOpenAccountConfirmField_BankAccType_get, _thostmduserapi.CThostFtdcReserveOpenAccountConfirmField_BankAccType_set, doc=r"""银行帐号类型""")
    BrokerIDByBank: "TThostFtdcBankCodingForFutureType" = property(_thostmduserapi.CThostFtdcReserveOpenAccountConfirmField_BrokerIDByBank_get, _thostmduserapi.CThostFtdcReserveOpenAccountConfirmField_BrokerIDByBank_set, doc=r"""期货公司银行编码""")
    TID: "TThostFtdcTIDType" = property(_thostmduserapi.CThostFtdcReserveOpenAccountConfirmField_TID_get, _thostmduserapi.CThostFtdcReserveOpenAccountConfirmField_TID_set, doc=r"""交易ID""")
    AccountID: "TThostFtdcAccountIDType" = property(_thostmduserapi.CThostFtdcReserveOpenAccountConfirmField_AccountID_get, _thostmduserapi.CThostFtdcReserveOpenAccountConfirmField_AccountID_set, doc=r"""投资者帐号""")
    Password: "TThostFtdcPasswordType" = property(_thostmduserapi.CThostFtdcReserveOpenAccountConfirmField_Password_get, _thostmduserapi.CThostFtdcReserveOpenAccountConfirmField_Password_set, doc=r"""期货密码""")
    BankReserveOpenSeq: "TThostFtdcBankSerialType" = property(_thostmduserapi.CThostFtdcReserveOpenAccountConfirmField_BankReserveOpenSeq_get, _thostmduserapi.CThostFtdcReserveOpenAccountConfirmField_BankReserveOpenSeq_set, doc=r"""预约开户银行流水号""")
    BookDate: "TThostFtdcTradeDateType" = property(_thostmduserapi.CThostFtdcReserveOpenAccountConfirmField_BookDate_get, _thostmduserapi.CThostFtdcReserveOpenAccountConfirmField_BookDate_set, doc=r"""预约开户日期""")
    BookPsw: "TThostFtdcPasswordType" = property(_thostmduserapi.CThostFtdcReserveOpenAccountConfirmField_BookPsw_get, _thostmduserapi.CThostFtdcReserveOpenAccountConfirmField_BookPsw_set, doc=r"""预约开户验证密码""")
    ErrorID: "TThostFtdcErrorIDType" = property(_thostmduserapi.CThostFtdcReserveOpenAccountConfirmField_ErrorID_get, _thostmduserapi.CThostFtdcReserveOpenAccountConfirmField_ErrorID_set, doc=r"""错误代码""")
    ErrorMsg: "TThostFtdcErrorMsgType" = property(_thostmduserapi.CThostFtdcReserveOpenAccountConfirmField_ErrorMsg_get, _thostmduserapi.CThostFtdcReserveOpenAccountConfirmField_ErrorMsg_set, doc=r"""错误信息""")

    def __init__(self):
        _thostmduserapi.CThostFtdcReserveOpenAccountConfirmField_swiginit(self, _thostmduserapi.new_CThostFtdcReserveOpenAccountConfirmField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcReserveOpenAccountConfirmField

# Register CThostFtdcReserveOpenAccountConfirmField in _thostmduserapi:
_thostmduserapi.CThostFtdcReserveOpenAccountConfirmField_swigregister(CThostFtdcReserveOpenAccountConfirmField)
class CThostFtdcReserveOpenAccountField(object):
    r"""银期预约开户"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    TradeCode: "TThostFtdcTradeCodeType" = property(_thostmduserapi.CThostFtdcReserveOpenAccountField_TradeCode_get, _thostmduserapi.CThostFtdcReserveOpenAccountField_TradeCode_set, doc=r"""业务功能码""")
    BankID: "TThostFtdcBankIDType" = property(_thostmduserapi.CThostFtdcReserveOpenAccountField_BankID_get, _thostmduserapi.CThostFtdcReserveOpenAccountField_BankID_set, doc=r"""银行代码""")
    BankBranchID: "TThostFtdcBankBrchIDType" = property(_thostmduserapi.CThostFtdcReserveOpenAccountField_BankBranchID_get, _thostmduserapi.CThostFtdcReserveOpenAccountField_BankBranchID_set, doc=r"""银行分支机构代码""")
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcReserveOpenAccountField_BrokerID_get, _thostmduserapi.CThostFtdcReserveOpenAccountField_BrokerID_set, doc=r"""期商代码""")
    BrokerBranchID: "TThostFtdcFutureBranchIDType" = property(_thostmduserapi.CThostFtdcReserveOpenAccountField_BrokerBranchID_get, _thostmduserapi.CThostFtdcReserveOpenAccountField_BrokerBranchID_set, doc=r"""期商分支机构代码""")
    TradeDate: "TThostFtdcTradeDateType" = property(_thostmduserapi.CThostFtdcReserveOpenAccountField_TradeDate_get, _thostmduserapi.CThostFtdcReserveOpenAccountField_TradeDate_set, doc=r"""交易日期""")
    TradeTime: "TThostFtdcTradeTimeType" = property(_thostmduserapi.CThostFtdcReserveOpenAccountField_TradeTime_get, _thostmduserapi.CThostFtdcReserveOpenAccountField_TradeTime_set, doc=r"""交易时间""")
    BankSerial: "TThostFtdcBankSerialType" = property(_thostmduserapi.CThostFtdcReserveOpenAccountField_BankSerial_get, _thostmduserapi.CThostFtdcReserveOpenAccountField_BankSerial_set, doc=r"""银行流水号""")
    TradingDay: "TThostFtdcTradeDateType" = property(_thostmduserapi.CThostFtdcReserveOpenAccountField_TradingDay_get, _thostmduserapi.CThostFtdcReserveOpenAccountField_TradingDay_set, doc=r"""交易系统日期""")
    PlateSerial: "TThostFtdcSerialType" = property(_thostmduserapi.CThostFtdcReserveOpenAccountField_PlateSerial_get, _thostmduserapi.CThostFtdcReserveOpenAccountField_PlateSerial_set, doc=r"""银期平台消息流水号""")
    LastFragment: "TThostFtdcLastFragmentType" = property(_thostmduserapi.CThostFtdcReserveOpenAccountField_LastFragment_get, _thostmduserapi.CThostFtdcReserveOpenAccountField_LastFragment_set, doc=r"""最后分片标志""")
    SessionID: "TThostFtdcSessionIDType" = property(_thostmduserapi.CThostFtdcReserveOpenAccountField_SessionID_get, _thostmduserapi.CThostFtdcReserveOpenAccountField_SessionID_set, doc=r"""会话号""")
    CustomerName: "TThostFtdcLongIndividualNameType" = property(_thostmduserapi.CThostFtdcReserveOpenAccountField_CustomerName_get, _thostmduserapi.CThostFtdcReserveOpenAccountField_CustomerName_set, doc=r"""客户姓名""")
    IdCardType: "TThostFtdcIdCardTypeType" = property(_thostmduserapi.CThostFtdcReserveOpenAccountField_IdCardType_get, _thostmduserapi.CThostFtdcReserveOpenAccountField_IdCardType_set, doc=r"""证件类型""")
    IdentifiedCardNo: "TThostFtdcIdentifiedCardNoType" = property(_thostmduserapi.CThostFtdcReserveOpenAccountField_IdentifiedCardNo_get, _thostmduserapi.CThostFtdcReserveOpenAccountField_IdentifiedCardNo_set, doc=r"""证件号码""")
    Gender: "TThostFtdcGenderType" = property(_thostmduserapi.CThostFtdcReserveOpenAccountField_Gender_get, _thostmduserapi.CThostFtdcReserveOpenAccountField_Gender_set, doc=r"""性别""")
    CountryCode: "TThostFtdcCountryCodeType" = property(_thostmduserapi.CThostFtdcReserveOpenAccountField_CountryCode_get, _thostmduserapi.CThostFtdcReserveOpenAccountField_CountryCode_set, doc=r"""国家代码""")
    CustType: "TThostFtdcCustTypeType" = property(_thostmduserapi.CThostFtdcReserveOpenAccountField_CustType_get, _thostmduserapi.CThostFtdcReserveOpenAccountField_CustType_set, doc=r"""客户类型""")
    Address: "TThostFtdcAddressType" = property(_thostmduserapi.CThostFtdcReserveOpenAccountField_Address_get, _thostmduserapi.CThostFtdcReserveOpenAccountField_Address_set, doc=r"""地址""")
    ZipCode: "TThostFtdcZipCodeType" = property(_thostmduserapi.CThostFtdcReserveOpenAccountField_ZipCode_get, _thostmduserapi.CThostFtdcReserveOpenAccountField_ZipCode_set, doc=r"""邮编""")
    Telephone: "TThostFtdcTelephoneType" = property(_thostmduserapi.CThostFtdcReserveOpenAccountField_Telephone_get, _thostmduserapi.CThostFtdcReserveOpenAccountField_Telephone_set, doc=r"""电话号码""")
    MobilePhone: "TThostFtdcMobilePhoneType" = property(_thostmduserapi.CThostFtdcReserveOpenAccountField_MobilePhone_get, _thostmduserapi.CThostFtdcReserveOpenAccountField_MobilePhone_set, doc=r"""手机""")
    Fax: "TThostFtdcFaxType" = property(_thostmduserapi.CThostFtdcReserveOpenAccountField_Fax_get, _thostmduserapi.CThostFtdcReserveOpenAccountField_Fax_set, doc=r"""传真""")
    EMail: "TThostFtdcEMailType" = property(_thostmduserapi.CThostFtdcReserveOpenAccountField_EMail_get, _thostmduserapi.CThostFtdcReserveOpenAccountField_EMail_set, doc=r"""电子邮件""")
    MoneyAccountStatus: "TThostFtdcMoneyAccountStatusType" = property(_thostmduserapi.CThostFtdcReserveOpenAccountField_MoneyAccountStatus_get, _thostmduserapi.CThostFtdcReserveOpenAccountField_MoneyAccountStatus_set, doc=r"""资金账户状态""")
    BankAccount: "TThostFtdcBankAccountType" = property(_thostmduserapi.CThostFtdcReserveOpenAccountField_BankAccount_get, _thostmduserapi.CThostFtdcReserveOpenAccountField_BankAccount_set, doc=r"""银行帐号""")
    BankPassWord: "TThostFtdcPasswordType" = property(_thostmduserapi.CThostFtdcReserveOpenAccountField_BankPassWord_get, _thostmduserapi.CThostFtdcReserveOpenAccountField_BankPassWord_set, doc=r"""银行密码""")
    InstallID: "TThostFtdcInstallIDType" = property(_thostmduserapi.CThostFtdcReserveOpenAccountField_InstallID_get, _thostmduserapi.CThostFtdcReserveOpenAccountField_InstallID_set, doc=r"""安装编号""")
    VerifyCertNoFlag: "TThostFtdcYesNoIndicatorType" = property(_thostmduserapi.CThostFtdcReserveOpenAccountField_VerifyCertNoFlag_get, _thostmduserapi.CThostFtdcReserveOpenAccountField_VerifyCertNoFlag_set, doc=r"""验证客户证件号码标志""")
    CurrencyID: "TThostFtdcCurrencyIDType" = property(_thostmduserapi.CThostFtdcReserveOpenAccountField_CurrencyID_get, _thostmduserapi.CThostFtdcReserveOpenAccountField_CurrencyID_set, doc=r"""币种代码""")
    Digest: "TThostFtdcDigestType" = property(_thostmduserapi.CThostFtdcReserveOpenAccountField_Digest_get, _thostmduserapi.CThostFtdcReserveOpenAccountField_Digest_set, doc=r"""摘要""")
    BankAccType: "TThostFtdcBankAccTypeType" = property(_thostmduserapi.CThostFtdcReserveOpenAccountField_BankAccType_get, _thostmduserapi.CThostFtdcReserveOpenAccountField_BankAccType_set, doc=r"""银行帐号类型""")
    BrokerIDByBank: "TThostFtdcBankCodingForFutureType" = property(_thostmduserapi.CThostFtdcReserveOpenAccountField_BrokerIDByBank_get, _thostmduserapi.CThostFtdcReserveOpenAccountField_BrokerIDByBank_set, doc=r"""期货公司银行编码""")
    TID: "TThostFtdcTIDType" = property(_thostmduserapi.CThostFtdcReserveOpenAccountField_TID_get, _thostmduserapi.CThostFtdcReserveOpenAccountField_TID_set, doc=r"""交易ID""")
    ReserveOpenAccStas: "TThostFtdcReserveOpenAccStasType" = property(_thostmduserapi.CThostFtdcReserveOpenAccountField_ReserveOpenAccStas_get, _thostmduserapi.CThostFtdcReserveOpenAccountField_ReserveOpenAccStas_set, doc=r"""预约开户状态""")
    ErrorID: "TThostFtdcErrorIDType" = property(_thostmduserapi.CThostFtdcReserveOpenAccountField_ErrorID_get, _thostmduserapi.CThostFtdcReserveOpenAccountField_ErrorID_set, doc=r"""错误代码""")
    ErrorMsg: "TThostFtdcErrorMsgType" = property(_thostmduserapi.CThostFtdcReserveOpenAccountField_ErrorMsg_get, _thostmduserapi.CThostFtdcReserveOpenAccountField_ErrorMsg_set, doc=r"""错误信息""")

    def __init__(self):
        _thostmduserapi.CThostFtdcReserveOpenAccountField_swiginit(self, _thostmduserapi.new_CThostFtdcReserveOpenAccountField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcReserveOpenAccountField

# Register CThostFtdcReserveOpenAccountField in _thostmduserapi:
_thostmduserapi.CThostFtdcReserveOpenAccountField_swigregister(CThostFtdcReserveOpenAccountField)
class CThostFtdcAccountPropertyField(object):
    r"""银行账户属性"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcAccountPropertyField_BrokerID_get, _thostmduserapi.CThostFtdcAccountPropertyField_BrokerID_set, doc=r"""经纪公司代码""")
    AccountID: "TThostFtdcAccountIDType" = property(_thostmduserapi.CThostFtdcAccountPropertyField_AccountID_get, _thostmduserapi.CThostFtdcAccountPropertyField_AccountID_set, doc=r"""投资者帐号""")
    BankID: "TThostFtdcBankIDType" = property(_thostmduserapi.CThostFtdcAccountPropertyField_BankID_get, _thostmduserapi.CThostFtdcAccountPropertyField_BankID_set, doc=r"""银行统一标识类型""")
    BankAccount: "TThostFtdcBankAccountType" = property(_thostmduserapi.CThostFtdcAccountPropertyField_BankAccount_get, _thostmduserapi.CThostFtdcAccountPropertyField_BankAccount_set, doc=r"""银行账户""")
    OpenName: "TThostFtdcInvestorFullNameType" = property(_thostmduserapi.CThostFtdcAccountPropertyField_OpenName_get, _thostmduserapi.CThostFtdcAccountPropertyField_OpenName_set, doc=r"""银行账户的开户人名称""")
    OpenBank: "TThostFtdcOpenBankType" = property(_thostmduserapi.CThostFtdcAccountPropertyField_OpenBank_get, _thostmduserapi.CThostFtdcAccountPropertyField_OpenBank_set, doc=r"""银行账户的开户行""")
    IsActive: "TThostFtdcBoolType" = property(_thostmduserapi.CThostFtdcAccountPropertyField_IsActive_get, _thostmduserapi.CThostFtdcAccountPropertyField_IsActive_set, doc=r"""是否活跃""")
    AccountSourceType: "TThostFtdcAccountSourceTypeType" = property(_thostmduserapi.CThostFtdcAccountPropertyField_AccountSourceType_get, _thostmduserapi.CThostFtdcAccountPropertyField_AccountSourceType_set, doc=r"""账户来源""")
    OpenDate: "TThostFtdcDateType" = property(_thostmduserapi.CThostFtdcAccountPropertyField_OpenDate_get, _thostmduserapi.CThostFtdcAccountPropertyField_OpenDate_set, doc=r"""开户日期""")
    CancelDate: "TThostFtdcDateType" = property(_thostmduserapi.CThostFtdcAccountPropertyField_CancelDate_get, _thostmduserapi.CThostFtdcAccountPropertyField_CancelDate_set, doc=r"""注销日期""")
    OperatorID: "TThostFtdcOperatorIDType" = property(_thostmduserapi.CThostFtdcAccountPropertyField_OperatorID_get, _thostmduserapi.CThostFtdcAccountPropertyField_OperatorID_set, doc=r"""录入员代码""")
    OperateDate: "TThostFtdcDateType" = property(_thostmduserapi.CThostFtdcAccountPropertyField_OperateDate_get, _thostmduserapi.CThostFtdcAccountPropertyField_OperateDate_set, doc=r"""录入日期""")
    OperateTime: "TThostFtdcTimeType" = property(_thostmduserapi.CThostFtdcAccountPropertyField_OperateTime_get, _thostmduserapi.CThostFtdcAccountPropertyField_OperateTime_set, doc=r"""录入时间""")
    CurrencyID: "TThostFtdcCurrencyIDType" = property(_thostmduserapi.CThostFtdcAccountPropertyField_CurrencyID_get, _thostmduserapi.CThostFtdcAccountPropertyField_CurrencyID_set, doc=r"""币种代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcAccountPropertyField_swiginit(self, _thostmduserapi.new_CThostFtdcAccountPropertyField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcAccountPropertyField

# Register CThostFtdcAccountPropertyField in _thostmduserapi:
_thostmduserapi.CThostFtdcAccountPropertyField_swigregister(CThostFtdcAccountPropertyField)
class CThostFtdcQryCurrDRIdentityField(object):
    r"""查询当前交易中心"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    DRIdentityID: "TThostFtdcDRIdentityIDType" = property(_thostmduserapi.CThostFtdcQryCurrDRIdentityField_DRIdentityID_get, _thostmduserapi.CThostFtdcQryCurrDRIdentityField_DRIdentityID_set, doc=r"""交易中心代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcQryCurrDRIdentityField_swiginit(self, _thostmduserapi.new_CThostFtdcQryCurrDRIdentityField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcQryCurrDRIdentityField

# Register CThostFtdcQryCurrDRIdentityField in _thostmduserapi:
_thostmduserapi.CThostFtdcQryCurrDRIdentityField_swigregister(CThostFtdcQryCurrDRIdentityField)
class CThostFtdcCurrDRIdentityField(object):
    r"""当前交易中心"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    DRIdentityID: "TThostFtdcDRIdentityIDType" = property(_thostmduserapi.CThostFtdcCurrDRIdentityField_DRIdentityID_get, _thostmduserapi.CThostFtdcCurrDRIdentityField_DRIdentityID_set, doc=r"""交易中心代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcCurrDRIdentityField_swiginit(self, _thostmduserapi.new_CThostFtdcCurrDRIdentityField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcCurrDRIdentityField

# Register CThostFtdcCurrDRIdentityField in _thostmduserapi:
_thostmduserapi.CThostFtdcCurrDRIdentityField_swigregister(CThostFtdcCurrDRIdentityField)
class CThostFtdcQrySecAgentCheckModeField(object):
    r"""查询二级代理商资金校验模式"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcQrySecAgentCheckModeField_BrokerID_get, _thostmduserapi.CThostFtdcQrySecAgentCheckModeField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "TThostFtdcInvestorIDType" = property(_thostmduserapi.CThostFtdcQrySecAgentCheckModeField_InvestorID_get, _thostmduserapi.CThostFtdcQrySecAgentCheckModeField_InvestorID_set, doc=r"""投资者代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcQrySecAgentCheckModeField_swiginit(self, _thostmduserapi.new_CThostFtdcQrySecAgentCheckModeField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcQrySecAgentCheckModeField

# Register CThostFtdcQrySecAgentCheckModeField in _thostmduserapi:
_thostmduserapi.CThostFtdcQrySecAgentCheckModeField_swigregister(CThostFtdcQrySecAgentCheckModeField)
class CThostFtdcQrySecAgentTradeInfoField(object):
    r"""查询二级代理商信息"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcQrySecAgentTradeInfoField_BrokerID_get, _thostmduserapi.CThostFtdcQrySecAgentTradeInfoField_BrokerID_set, doc=r"""经纪公司代码""")
    BrokerSecAgentID: "TThostFtdcAccountIDType" = property(_thostmduserapi.CThostFtdcQrySecAgentTradeInfoField_BrokerSecAgentID_get, _thostmduserapi.CThostFtdcQrySecAgentTradeInfoField_BrokerSecAgentID_set, doc=r"""境外中介机构资金帐号""")

    def __init__(self):
        _thostmduserapi.CThostFtdcQrySecAgentTradeInfoField_swiginit(self, _thostmduserapi.new_CThostFtdcQrySecAgentTradeInfoField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcQrySecAgentTradeInfoField

# Register CThostFtdcQrySecAgentTradeInfoField in _thostmduserapi:
_thostmduserapi.CThostFtdcQrySecAgentTradeInfoField_swigregister(CThostFtdcQrySecAgentTradeInfoField)
class CThostFtdcReqUserAuthMethodField(object):
    r"""用户发出获取安全安全登陆方法请求"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    TradingDay: "TThostFtdcDateType" = property(_thostmduserapi.CThostFtdcReqUserAuthMethodField_TradingDay_get, _thostmduserapi.CThostFtdcReqUserAuthMethodField_TradingDay_set, doc=r"""交易日""")
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcReqUserAuthMethodField_BrokerID_get, _thostmduserapi.CThostFtdcReqUserAuthMethodField_BrokerID_set, doc=r"""经纪公司代码""")
    UserID: "TThostFtdcUserIDType" = property(_thostmduserapi.CThostFtdcReqUserAuthMethodField_UserID_get, _thostmduserapi.CThostFtdcReqUserAuthMethodField_UserID_set, doc=r"""用户代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcReqUserAuthMethodField_swiginit(self, _thostmduserapi.new_CThostFtdcReqUserAuthMethodField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcReqUserAuthMethodField

# Register CThostFtdcReqUserAuthMethodField in _thostmduserapi:
_thostmduserapi.CThostFtdcReqUserAuthMethodField_swigregister(CThostFtdcReqUserAuthMethodField)
class CThostFtdcRspUserAuthMethodField(object):
    r"""用户发出获取安全安全登陆方法回复"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    UsableAuthMethod: "TThostFtdcCurrentAuthMethodType" = property(_thostmduserapi.CThostFtdcRspUserAuthMethodField_UsableAuthMethod_get, _thostmduserapi.CThostFtdcRspUserAuthMethodField_UsableAuthMethod_set, doc=r"""当前可以用的认证模式""")

    def __init__(self):
        _thostmduserapi.CThostFtdcRspUserAuthMethodField_swiginit(self, _thostmduserapi.new_CThostFtdcRspUserAuthMethodField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcRspUserAuthMethodField

# Register CThostFtdcRspUserAuthMethodField in _thostmduserapi:
_thostmduserapi.CThostFtdcRspUserAuthMethodField_swigregister(CThostFtdcRspUserAuthMethodField)
class CThostFtdcReqGenUserCaptchaField(object):
    r"""用户发出获取安全安全登陆方法请求"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    TradingDay: "TThostFtdcDateType" = property(_thostmduserapi.CThostFtdcReqGenUserCaptchaField_TradingDay_get, _thostmduserapi.CThostFtdcReqGenUserCaptchaField_TradingDay_set, doc=r"""交易日""")
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcReqGenUserCaptchaField_BrokerID_get, _thostmduserapi.CThostFtdcReqGenUserCaptchaField_BrokerID_set, doc=r"""经纪公司代码""")
    UserID: "TThostFtdcUserIDType" = property(_thostmduserapi.CThostFtdcReqGenUserCaptchaField_UserID_get, _thostmduserapi.CThostFtdcReqGenUserCaptchaField_UserID_set, doc=r"""用户代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcReqGenUserCaptchaField_swiginit(self, _thostmduserapi.new_CThostFtdcReqGenUserCaptchaField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcReqGenUserCaptchaField

# Register CThostFtdcReqGenUserCaptchaField in _thostmduserapi:
_thostmduserapi.CThostFtdcReqGenUserCaptchaField_swigregister(CThostFtdcReqGenUserCaptchaField)
class CThostFtdcRspGenUserCaptchaField(object):
    r"""生成的图片验证码信息"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcRspGenUserCaptchaField_BrokerID_get, _thostmduserapi.CThostFtdcRspGenUserCaptchaField_BrokerID_set, doc=r"""经纪公司代码""")
    UserID: "TThostFtdcUserIDType" = property(_thostmduserapi.CThostFtdcRspGenUserCaptchaField_UserID_get, _thostmduserapi.CThostFtdcRspGenUserCaptchaField_UserID_set, doc=r"""用户代码""")
    CaptchaInfoLen: "TThostFtdcCaptchaInfoLenType" = property(_thostmduserapi.CThostFtdcRspGenUserCaptchaField_CaptchaInfoLen_get, _thostmduserapi.CThostFtdcRspGenUserCaptchaField_CaptchaInfoLen_set, doc=r"""图片信息长度""")
    CaptchaInfo: "TThostFtdcCaptchaInfoType" = property(_thostmduserapi.CThostFtdcRspGenUserCaptchaField_CaptchaInfo_get, _thostmduserapi.CThostFtdcRspGenUserCaptchaField_CaptchaInfo_set, doc=r"""图片信息""")

    def __init__(self):
        _thostmduserapi.CThostFtdcRspGenUserCaptchaField_swiginit(self, _thostmduserapi.new_CThostFtdcRspGenUserCaptchaField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcRspGenUserCaptchaField

# Register CThostFtdcRspGenUserCaptchaField in _thostmduserapi:
_thostmduserapi.CThostFtdcRspGenUserCaptchaField_swigregister(CThostFtdcRspGenUserCaptchaField)
class CThostFtdcReqGenUserTextField(object):
    r"""用户发出获取安全安全登陆方法请求"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    TradingDay: "TThostFtdcDateType" = property(_thostmduserapi.CThostFtdcReqGenUserTextField_TradingDay_get, _thostmduserapi.CThostFtdcReqGenUserTextField_TradingDay_set, doc=r"""交易日""")
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcReqGenUserTextField_BrokerID_get, _thostmduserapi.CThostFtdcReqGenUserTextField_BrokerID_set, doc=r"""经纪公司代码""")
    UserID: "TThostFtdcUserIDType" = property(_thostmduserapi.CThostFtdcReqGenUserTextField_UserID_get, _thostmduserapi.CThostFtdcReqGenUserTextField_UserID_set, doc=r"""用户代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcReqGenUserTextField_swiginit(self, _thostmduserapi.new_CThostFtdcReqGenUserTextField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcReqGenUserTextField

# Register CThostFtdcReqGenUserTextField in _thostmduserapi:
_thostmduserapi.CThostFtdcReqGenUserTextField_swigregister(CThostFtdcReqGenUserTextField)
class CThostFtdcRspGenUserTextField(object):
    r"""短信验证码生成的回复"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    UserTextSeq: "TThostFtdcUserTextSeqType" = property(_thostmduserapi.CThostFtdcRspGenUserTextField_UserTextSeq_get, _thostmduserapi.CThostFtdcRspGenUserTextField_UserTextSeq_set, doc=r"""短信验证码序号""")

    def __init__(self):
        _thostmduserapi.CThostFtdcRspGenUserTextField_swiginit(self, _thostmduserapi.new_CThostFtdcRspGenUserTextField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcRspGenUserTextField

# Register CThostFtdcRspGenUserTextField in _thostmduserapi:
_thostmduserapi.CThostFtdcRspGenUserTextField_swigregister(CThostFtdcRspGenUserTextField)
class CThostFtdcReqUserLoginWithCaptchaField(object):
    r"""用户发出带图形验证码的登录请求请求"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    TradingDay: "TThostFtdcDateType" = property(_thostmduserapi.CThostFtdcReqUserLoginWithCaptchaField_TradingDay_get, _thostmduserapi.CThostFtdcReqUserLoginWithCaptchaField_TradingDay_set, doc=r"""交易日""")
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcReqUserLoginWithCaptchaField_BrokerID_get, _thostmduserapi.CThostFtdcReqUserLoginWithCaptchaField_BrokerID_set, doc=r"""经纪公司代码""")
    UserID: "TThostFtdcUserIDType" = property(_thostmduserapi.CThostFtdcReqUserLoginWithCaptchaField_UserID_get, _thostmduserapi.CThostFtdcReqUserLoginWithCaptchaField_UserID_set, doc=r"""用户代码""")
    Password: "TThostFtdcPasswordType" = property(_thostmduserapi.CThostFtdcReqUserLoginWithCaptchaField_Password_get, _thostmduserapi.CThostFtdcReqUserLoginWithCaptchaField_Password_set, doc=r"""密码""")
    UserProductInfo: "TThostFtdcProductInfoType" = property(_thostmduserapi.CThostFtdcReqUserLoginWithCaptchaField_UserProductInfo_get, _thostmduserapi.CThostFtdcReqUserLoginWithCaptchaField_UserProductInfo_set, doc=r"""用户端产品信息""")
    InterfaceProductInfo: "TThostFtdcProductInfoType" = property(_thostmduserapi.CThostFtdcReqUserLoginWithCaptchaField_InterfaceProductInfo_get, _thostmduserapi.CThostFtdcReqUserLoginWithCaptchaField_InterfaceProductInfo_set, doc=r"""接口端产品信息""")
    ProtocolInfo: "TThostFtdcProtocolInfoType" = property(_thostmduserapi.CThostFtdcReqUserLoginWithCaptchaField_ProtocolInfo_get, _thostmduserapi.CThostFtdcReqUserLoginWithCaptchaField_ProtocolInfo_set, doc=r"""协议信息""")
    MacAddress: "TThostFtdcMacAddressType" = property(_thostmduserapi.CThostFtdcReqUserLoginWithCaptchaField_MacAddress_get, _thostmduserapi.CThostFtdcReqUserLoginWithCaptchaField_MacAddress_set, doc=r"""Mac地址""")
    reserve1: "TThostFtdcOldIPAddressType" = property(_thostmduserapi.CThostFtdcReqUserLoginWithCaptchaField_reserve1_get, _thostmduserapi.CThostFtdcReqUserLoginWithCaptchaField_reserve1_set, doc=r"""保留的无效字段""")
    LoginRemark: "TThostFtdcLoginRemarkType" = property(_thostmduserapi.CThostFtdcReqUserLoginWithCaptchaField_LoginRemark_get, _thostmduserapi.CThostFtdcReqUserLoginWithCaptchaField_LoginRemark_set, doc=r"""登录备注""")
    Captcha: "TThostFtdcPasswordType" = property(_thostmduserapi.CThostFtdcReqUserLoginWithCaptchaField_Captcha_get, _thostmduserapi.CThostFtdcReqUserLoginWithCaptchaField_Captcha_set, doc=r"""图形验证码的文字内容""")
    ClientIPPort: "TThostFtdcIPPortType" = property(_thostmduserapi.CThostFtdcReqUserLoginWithCaptchaField_ClientIPPort_get, _thostmduserapi.CThostFtdcReqUserLoginWithCaptchaField_ClientIPPort_set, doc=r"""终端IP端口""")
    ClientIPAddress: "TThostFtdcIPAddressType" = property(_thostmduserapi.CThostFtdcReqUserLoginWithCaptchaField_ClientIPAddress_get, _thostmduserapi.CThostFtdcReqUserLoginWithCaptchaField_ClientIPAddress_set, doc=r"""终端IP地址""")

    def __init__(self):
        _thostmduserapi.CThostFtdcReqUserLoginWithCaptchaField_swiginit(self, _thostmduserapi.new_CThostFtdcReqUserLoginWithCaptchaField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcReqUserLoginWithCaptchaField

# Register CThostFtdcReqUserLoginWithCaptchaField in _thostmduserapi:
_thostmduserapi.CThostFtdcReqUserLoginWithCaptchaField_swigregister(CThostFtdcReqUserLoginWithCaptchaField)
class CThostFtdcReqUserLoginWithTextField(object):
    r"""用户发出带短信验证码的登录请求请求"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    TradingDay: "TThostFtdcDateType" = property(_thostmduserapi.CThostFtdcReqUserLoginWithTextField_TradingDay_get, _thostmduserapi.CThostFtdcReqUserLoginWithTextField_TradingDay_set, doc=r"""交易日""")
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcReqUserLoginWithTextField_BrokerID_get, _thostmduserapi.CThostFtdcReqUserLoginWithTextField_BrokerID_set, doc=r"""经纪公司代码""")
    UserID: "TThostFtdcUserIDType" = property(_thostmduserapi.CThostFtdcReqUserLoginWithTextField_UserID_get, _thostmduserapi.CThostFtdcReqUserLoginWithTextField_UserID_set, doc=r"""用户代码""")
    Password: "TThostFtdcPasswordType" = property(_thostmduserapi.CThostFtdcReqUserLoginWithTextField_Password_get, _thostmduserapi.CThostFtdcReqUserLoginWithTextField_Password_set, doc=r"""密码""")
    UserProductInfo: "TThostFtdcProductInfoType" = property(_thostmduserapi.CThostFtdcReqUserLoginWithTextField_UserProductInfo_get, _thostmduserapi.CThostFtdcReqUserLoginWithTextField_UserProductInfo_set, doc=r"""用户端产品信息""")
    InterfaceProductInfo: "TThostFtdcProductInfoType" = property(_thostmduserapi.CThostFtdcReqUserLoginWithTextField_InterfaceProductInfo_get, _thostmduserapi.CThostFtdcReqUserLoginWithTextField_InterfaceProductInfo_set, doc=r"""接口端产品信息""")
    ProtocolInfo: "TThostFtdcProtocolInfoType" = property(_thostmduserapi.CThostFtdcReqUserLoginWithTextField_ProtocolInfo_get, _thostmduserapi.CThostFtdcReqUserLoginWithTextField_ProtocolInfo_set, doc=r"""协议信息""")
    MacAddress: "TThostFtdcMacAddressType" = property(_thostmduserapi.CThostFtdcReqUserLoginWithTextField_MacAddress_get, _thostmduserapi.CThostFtdcReqUserLoginWithTextField_MacAddress_set, doc=r"""Mac地址""")
    reserve1: "TThostFtdcOldIPAddressType" = property(_thostmduserapi.CThostFtdcReqUserLoginWithTextField_reserve1_get, _thostmduserapi.CThostFtdcReqUserLoginWithTextField_reserve1_set, doc=r"""保留的无效字段""")
    LoginRemark: "TThostFtdcLoginRemarkType" = property(_thostmduserapi.CThostFtdcReqUserLoginWithTextField_LoginRemark_get, _thostmduserapi.CThostFtdcReqUserLoginWithTextField_LoginRemark_set, doc=r"""登录备注""")
    Text: "TThostFtdcPasswordType" = property(_thostmduserapi.CThostFtdcReqUserLoginWithTextField_Text_get, _thostmduserapi.CThostFtdcReqUserLoginWithTextField_Text_set, doc=r"""短信验证码文字内容""")
    ClientIPPort: "TThostFtdcIPPortType" = property(_thostmduserapi.CThostFtdcReqUserLoginWithTextField_ClientIPPort_get, _thostmduserapi.CThostFtdcReqUserLoginWithTextField_ClientIPPort_set, doc=r"""终端IP端口""")
    ClientIPAddress: "TThostFtdcIPAddressType" = property(_thostmduserapi.CThostFtdcReqUserLoginWithTextField_ClientIPAddress_get, _thostmduserapi.CThostFtdcReqUserLoginWithTextField_ClientIPAddress_set, doc=r"""终端IP地址""")

    def __init__(self):
        _thostmduserapi.CThostFtdcReqUserLoginWithTextField_swiginit(self, _thostmduserapi.new_CThostFtdcReqUserLoginWithTextField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcReqUserLoginWithTextField

# Register CThostFtdcReqUserLoginWithTextField in _thostmduserapi:
_thostmduserapi.CThostFtdcReqUserLoginWithTextField_swigregister(CThostFtdcReqUserLoginWithTextField)
class CThostFtdcReqUserLoginWithOTPField(object):
    r"""用户发出带动态验证码的登录请求请求"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    TradingDay: "TThostFtdcDateType" = property(_thostmduserapi.CThostFtdcReqUserLoginWithOTPField_TradingDay_get, _thostmduserapi.CThostFtdcReqUserLoginWithOTPField_TradingDay_set, doc=r"""交易日""")
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcReqUserLoginWithOTPField_BrokerID_get, _thostmduserapi.CThostFtdcReqUserLoginWithOTPField_BrokerID_set, doc=r"""经纪公司代码""")
    UserID: "TThostFtdcUserIDType" = property(_thostmduserapi.CThostFtdcReqUserLoginWithOTPField_UserID_get, _thostmduserapi.CThostFtdcReqUserLoginWithOTPField_UserID_set, doc=r"""用户代码""")
    Password: "TThostFtdcPasswordType" = property(_thostmduserapi.CThostFtdcReqUserLoginWithOTPField_Password_get, _thostmduserapi.CThostFtdcReqUserLoginWithOTPField_Password_set, doc=r"""密码""")
    UserProductInfo: "TThostFtdcProductInfoType" = property(_thostmduserapi.CThostFtdcReqUserLoginWithOTPField_UserProductInfo_get, _thostmduserapi.CThostFtdcReqUserLoginWithOTPField_UserProductInfo_set, doc=r"""用户端产品信息""")
    InterfaceProductInfo: "TThostFtdcProductInfoType" = property(_thostmduserapi.CThostFtdcReqUserLoginWithOTPField_InterfaceProductInfo_get, _thostmduserapi.CThostFtdcReqUserLoginWithOTPField_InterfaceProductInfo_set, doc=r"""接口端产品信息""")
    ProtocolInfo: "TThostFtdcProtocolInfoType" = property(_thostmduserapi.CThostFtdcReqUserLoginWithOTPField_ProtocolInfo_get, _thostmduserapi.CThostFtdcReqUserLoginWithOTPField_ProtocolInfo_set, doc=r"""协议信息""")
    MacAddress: "TThostFtdcMacAddressType" = property(_thostmduserapi.CThostFtdcReqUserLoginWithOTPField_MacAddress_get, _thostmduserapi.CThostFtdcReqUserLoginWithOTPField_MacAddress_set, doc=r"""Mac地址""")
    reserve1: "TThostFtdcOldIPAddressType" = property(_thostmduserapi.CThostFtdcReqUserLoginWithOTPField_reserve1_get, _thostmduserapi.CThostFtdcReqUserLoginWithOTPField_reserve1_set, doc=r"""保留的无效字段""")
    LoginRemark: "TThostFtdcLoginRemarkType" = property(_thostmduserapi.CThostFtdcReqUserLoginWithOTPField_LoginRemark_get, _thostmduserapi.CThostFtdcReqUserLoginWithOTPField_LoginRemark_set, doc=r"""登录备注""")
    OTPPassword: "TThostFtdcPasswordType" = property(_thostmduserapi.CThostFtdcReqUserLoginWithOTPField_OTPPassword_get, _thostmduserapi.CThostFtdcReqUserLoginWithOTPField_OTPPassword_set, doc=r"""OTP密码""")
    ClientIPPort: "TThostFtdcIPPortType" = property(_thostmduserapi.CThostFtdcReqUserLoginWithOTPField_ClientIPPort_get, _thostmduserapi.CThostFtdcReqUserLoginWithOTPField_ClientIPPort_set, doc=r"""终端IP端口""")
    ClientIPAddress: "TThostFtdcIPAddressType" = property(_thostmduserapi.CThostFtdcReqUserLoginWithOTPField_ClientIPAddress_get, _thostmduserapi.CThostFtdcReqUserLoginWithOTPField_ClientIPAddress_set, doc=r"""终端IP地址""")

    def __init__(self):
        _thostmduserapi.CThostFtdcReqUserLoginWithOTPField_swiginit(self, _thostmduserapi.new_CThostFtdcReqUserLoginWithOTPField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcReqUserLoginWithOTPField

# Register CThostFtdcReqUserLoginWithOTPField in _thostmduserapi:
_thostmduserapi.CThostFtdcReqUserLoginWithOTPField_swigregister(CThostFtdcReqUserLoginWithOTPField)
class CThostFtdcReqApiHandshakeField(object):
    r"""api握手请求"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    CryptoKeyVersion: "TThostFtdcCryptoKeyVersionType" = property(_thostmduserapi.CThostFtdcReqApiHandshakeField_CryptoKeyVersion_get, _thostmduserapi.CThostFtdcReqApiHandshakeField_CryptoKeyVersion_set, doc=r"""api与front通信密钥版本号""")

    def __init__(self):
        _thostmduserapi.CThostFtdcReqApiHandshakeField_swiginit(self, _thostmduserapi.new_CThostFtdcReqApiHandshakeField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcReqApiHandshakeField

# Register CThostFtdcReqApiHandshakeField in _thostmduserapi:
_thostmduserapi.CThostFtdcReqApiHandshakeField_swigregister(CThostFtdcReqApiHandshakeField)
class CThostFtdcRspApiHandshakeField(object):
    r"""front发给api的握手回复"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    FrontHandshakeDataLen: "TThostFtdcHandshakeDataLenType" = property(_thostmduserapi.CThostFtdcRspApiHandshakeField_FrontHandshakeDataLen_get, _thostmduserapi.CThostFtdcRspApiHandshakeField_FrontHandshakeDataLen_set, doc=r"""握手回复数据长度""")
    FrontHandshakeData: "TThostFtdcHandshakeDataType" = property(_thostmduserapi.CThostFtdcRspApiHandshakeField_FrontHandshakeData_get, _thostmduserapi.CThostFtdcRspApiHandshakeField_FrontHandshakeData_set, doc=r"""握手回复数据""")
    IsApiAuthEnabled: "TThostFtdcBoolType" = property(_thostmduserapi.CThostFtdcRspApiHandshakeField_IsApiAuthEnabled_get, _thostmduserapi.CThostFtdcRspApiHandshakeField_IsApiAuthEnabled_set, doc=r"""API认证是否开启""")

    def __init__(self):
        _thostmduserapi.CThostFtdcRspApiHandshakeField_swiginit(self, _thostmduserapi.new_CThostFtdcRspApiHandshakeField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcRspApiHandshakeField

# Register CThostFtdcRspApiHandshakeField in _thostmduserapi:
_thostmduserapi.CThostFtdcRspApiHandshakeField_swigregister(CThostFtdcRspApiHandshakeField)
class CThostFtdcReqVerifyApiKeyField(object):
    r"""api给front的验证key的请求"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ApiHandshakeDataLen: "TThostFtdcHandshakeDataLenType" = property(_thostmduserapi.CThostFtdcReqVerifyApiKeyField_ApiHandshakeDataLen_get, _thostmduserapi.CThostFtdcReqVerifyApiKeyField_ApiHandshakeDataLen_set, doc=r"""握手回复数据长度""")
    ApiHandshakeData: "TThostFtdcHandshakeDataType" = property(_thostmduserapi.CThostFtdcReqVerifyApiKeyField_ApiHandshakeData_get, _thostmduserapi.CThostFtdcReqVerifyApiKeyField_ApiHandshakeData_set, doc=r"""握手回复数据""")

    def __init__(self):
        _thostmduserapi.CThostFtdcReqVerifyApiKeyField_swiginit(self, _thostmduserapi.new_CThostFtdcReqVerifyApiKeyField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcReqVerifyApiKeyField

# Register CThostFtdcReqVerifyApiKeyField in _thostmduserapi:
_thostmduserapi.CThostFtdcReqVerifyApiKeyField_swigregister(CThostFtdcReqVerifyApiKeyField)
class CThostFtdcDepartmentUserField(object):
    r"""操作员组织架构关系"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcDepartmentUserField_BrokerID_get, _thostmduserapi.CThostFtdcDepartmentUserField_BrokerID_set, doc=r"""经纪公司代码""")
    UserID: "TThostFtdcUserIDType" = property(_thostmduserapi.CThostFtdcDepartmentUserField_UserID_get, _thostmduserapi.CThostFtdcDepartmentUserField_UserID_set, doc=r"""用户代码""")
    InvestorRange: "TThostFtdcDepartmentRangeType" = property(_thostmduserapi.CThostFtdcDepartmentUserField_InvestorRange_get, _thostmduserapi.CThostFtdcDepartmentUserField_InvestorRange_set, doc=r"""投资者范围""")
    InvestorID: "TThostFtdcInvestorIDType" = property(_thostmduserapi.CThostFtdcDepartmentUserField_InvestorID_get, _thostmduserapi.CThostFtdcDepartmentUserField_InvestorID_set, doc=r"""投资者代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcDepartmentUserField_swiginit(self, _thostmduserapi.new_CThostFtdcDepartmentUserField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcDepartmentUserField

# Register CThostFtdcDepartmentUserField in _thostmduserapi:
_thostmduserapi.CThostFtdcDepartmentUserField_swigregister(CThostFtdcDepartmentUserField)
class CThostFtdcQueryFreqField(object):
    r"""查询频率，每秒查询比数"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    QueryFreq: "TThostFtdcQueryFreqType" = property(_thostmduserapi.CThostFtdcQueryFreqField_QueryFreq_get, _thostmduserapi.CThostFtdcQueryFreqField_QueryFreq_set, doc=r"""查询频率""")

    def __init__(self):
        _thostmduserapi.CThostFtdcQueryFreqField_swiginit(self, _thostmduserapi.new_CThostFtdcQueryFreqField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcQueryFreqField

# Register CThostFtdcQueryFreqField in _thostmduserapi:
_thostmduserapi.CThostFtdcQueryFreqField_swigregister(CThostFtdcQueryFreqField)
class CThostFtdcAuthForbiddenIPField(object):
    r"""禁止认证IP"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    IPAddress: "TThostFtdcIPAddressType" = property(_thostmduserapi.CThostFtdcAuthForbiddenIPField_IPAddress_get, _thostmduserapi.CThostFtdcAuthForbiddenIPField_IPAddress_set, doc=r"""IP地址""")

    def __init__(self):
        _thostmduserapi.CThostFtdcAuthForbiddenIPField_swiginit(self, _thostmduserapi.new_CThostFtdcAuthForbiddenIPField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcAuthForbiddenIPField

# Register CThostFtdcAuthForbiddenIPField in _thostmduserapi:
_thostmduserapi.CThostFtdcAuthForbiddenIPField_swigregister(CThostFtdcAuthForbiddenIPField)
class CThostFtdcQryAuthForbiddenIPField(object):
    r"""查询禁止认证IP"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    IPAddress: "TThostFtdcIPAddressType" = property(_thostmduserapi.CThostFtdcQryAuthForbiddenIPField_IPAddress_get, _thostmduserapi.CThostFtdcQryAuthForbiddenIPField_IPAddress_set, doc=r"""IP地址""")

    def __init__(self):
        _thostmduserapi.CThostFtdcQryAuthForbiddenIPField_swiginit(self, _thostmduserapi.new_CThostFtdcQryAuthForbiddenIPField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcQryAuthForbiddenIPField

# Register CThostFtdcQryAuthForbiddenIPField in _thostmduserapi:
_thostmduserapi.CThostFtdcQryAuthForbiddenIPField_swigregister(CThostFtdcQryAuthForbiddenIPField)
class CThostFtdcSyncDelaySwapFrozenField(object):
    r"""换汇可提冻结"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    DelaySwapSeqNo: "TThostFtdcDepositSeqNoType" = property(_thostmduserapi.CThostFtdcSyncDelaySwapFrozenField_DelaySwapSeqNo_get, _thostmduserapi.CThostFtdcSyncDelaySwapFrozenField_DelaySwapSeqNo_set, doc=r"""换汇流水号""")
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcSyncDelaySwapFrozenField_BrokerID_get, _thostmduserapi.CThostFtdcSyncDelaySwapFrozenField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "TThostFtdcInvestorIDType" = property(_thostmduserapi.CThostFtdcSyncDelaySwapFrozenField_InvestorID_get, _thostmduserapi.CThostFtdcSyncDelaySwapFrozenField_InvestorID_set, doc=r"""投资者代码""")
    FromCurrencyID: "TThostFtdcCurrencyIDType" = property(_thostmduserapi.CThostFtdcSyncDelaySwapFrozenField_FromCurrencyID_get, _thostmduserapi.CThostFtdcSyncDelaySwapFrozenField_FromCurrencyID_set, doc=r"""源币种""")
    FromRemainSwap: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcSyncDelaySwapFrozenField_FromRemainSwap_get, _thostmduserapi.CThostFtdcSyncDelaySwapFrozenField_FromRemainSwap_set, doc=r"""源剩余换汇额度(可提冻结)""")
    IsManualSwap: "TThostFtdcBoolType" = property(_thostmduserapi.CThostFtdcSyncDelaySwapFrozenField_IsManualSwap_get, _thostmduserapi.CThostFtdcSyncDelaySwapFrozenField_IsManualSwap_set, doc=r"""是否手工换汇""")

    def __init__(self):
        _thostmduserapi.CThostFtdcSyncDelaySwapFrozenField_swiginit(self, _thostmduserapi.new_CThostFtdcSyncDelaySwapFrozenField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcSyncDelaySwapFrozenField

# Register CThostFtdcSyncDelaySwapFrozenField in _thostmduserapi:
_thostmduserapi.CThostFtdcSyncDelaySwapFrozenField_swigregister(CThostFtdcSyncDelaySwapFrozenField)
class CThostFtdcUserSystemInfoField(object):
    r"""用户系统信息"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcUserSystemInfoField_BrokerID_get, _thostmduserapi.CThostFtdcUserSystemInfoField_BrokerID_set, doc=r"""经纪公司代码""")
    UserID: "TThostFtdcUserIDType" = property(_thostmduserapi.CThostFtdcUserSystemInfoField_UserID_get, _thostmduserapi.CThostFtdcUserSystemInfoField_UserID_set, doc=r"""用户代码""")
    ClientSystemInfoLen: "TThostFtdcSystemInfoLenType" = property(_thostmduserapi.CThostFtdcUserSystemInfoField_ClientSystemInfoLen_get, _thostmduserapi.CThostFtdcUserSystemInfoField_ClientSystemInfoLen_set, doc=r"""用户端系统内部信息长度""")
    ClientSystemInfo: "TThostFtdcClientSystemInfoType" = property(_thostmduserapi.CThostFtdcUserSystemInfoField_ClientSystemInfo_get, _thostmduserapi.CThostFtdcUserSystemInfoField_ClientSystemInfo_set, doc=r"""用户端系统内部信息""")
    reserve1: "TThostFtdcOldIPAddressType" = property(_thostmduserapi.CThostFtdcUserSystemInfoField_reserve1_get, _thostmduserapi.CThostFtdcUserSystemInfoField_reserve1_set, doc=r"""保留的无效字段""")
    ClientIPPort: "TThostFtdcIPPortType" = property(_thostmduserapi.CThostFtdcUserSystemInfoField_ClientIPPort_get, _thostmduserapi.CThostFtdcUserSystemInfoField_ClientIPPort_set, doc=r"""终端IP端口""")
    ClientLoginTime: "TThostFtdcTimeType" = property(_thostmduserapi.CThostFtdcUserSystemInfoField_ClientLoginTime_get, _thostmduserapi.CThostFtdcUserSystemInfoField_ClientLoginTime_set, doc=r"""登录成功时间""")
    ClientAppID: "TThostFtdcAppIDType" = property(_thostmduserapi.CThostFtdcUserSystemInfoField_ClientAppID_get, _thostmduserapi.CThostFtdcUserSystemInfoField_ClientAppID_set, doc=r"""App代码""")
    ClientPublicIP: "TThostFtdcIPAddressType" = property(_thostmduserapi.CThostFtdcUserSystemInfoField_ClientPublicIP_get, _thostmduserapi.CThostFtdcUserSystemInfoField_ClientPublicIP_set, doc=r"""用户公网IP""")
    ClientLoginRemark: "TThostFtdcClientLoginRemarkType" = property(_thostmduserapi.CThostFtdcUserSystemInfoField_ClientLoginRemark_get, _thostmduserapi.CThostFtdcUserSystemInfoField_ClientLoginRemark_set, doc=r"""客户登录备注2""")

    def __init__(self):
        _thostmduserapi.CThostFtdcUserSystemInfoField_swiginit(self, _thostmduserapi.new_CThostFtdcUserSystemInfoField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcUserSystemInfoField

# Register CThostFtdcUserSystemInfoField in _thostmduserapi:
_thostmduserapi.CThostFtdcUserSystemInfoField_swigregister(CThostFtdcUserSystemInfoField)
class CThostFtdcAuthUserIDField(object):
    r"""终端用户绑定信息"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcAuthUserIDField_BrokerID_get, _thostmduserapi.CThostFtdcAuthUserIDField_BrokerID_set, doc=r"""经纪公司代码""")
    AppID: "TThostFtdcAppIDType" = property(_thostmduserapi.CThostFtdcAuthUserIDField_AppID_get, _thostmduserapi.CThostFtdcAuthUserIDField_AppID_set, doc=r"""App代码""")
    UserID: "TThostFtdcUserIDType" = property(_thostmduserapi.CThostFtdcAuthUserIDField_UserID_get, _thostmduserapi.CThostFtdcAuthUserIDField_UserID_set, doc=r"""用户代码""")
    AuthType: "TThostFtdcAuthTypeType" = property(_thostmduserapi.CThostFtdcAuthUserIDField_AuthType_get, _thostmduserapi.CThostFtdcAuthUserIDField_AuthType_set, doc=r"""校验类型""")

    def __init__(self):
        _thostmduserapi.CThostFtdcAuthUserIDField_swiginit(self, _thostmduserapi.new_CThostFtdcAuthUserIDField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcAuthUserIDField

# Register CThostFtdcAuthUserIDField in _thostmduserapi:
_thostmduserapi.CThostFtdcAuthUserIDField_swigregister(CThostFtdcAuthUserIDField)
class CThostFtdcAuthIPField(object):
    r"""用户IP绑定信息"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcAuthIPField_BrokerID_get, _thostmduserapi.CThostFtdcAuthIPField_BrokerID_set, doc=r"""经纪公司代码""")
    AppID: "TThostFtdcAppIDType" = property(_thostmduserapi.CThostFtdcAuthIPField_AppID_get, _thostmduserapi.CThostFtdcAuthIPField_AppID_set, doc=r"""App代码""")
    IPAddress: "TThostFtdcIPAddressType" = property(_thostmduserapi.CThostFtdcAuthIPField_IPAddress_get, _thostmduserapi.CThostFtdcAuthIPField_IPAddress_set, doc=r"""用户代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcAuthIPField_swiginit(self, _thostmduserapi.new_CThostFtdcAuthIPField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcAuthIPField

# Register CThostFtdcAuthIPField in _thostmduserapi:
_thostmduserapi.CThostFtdcAuthIPField_swigregister(CThostFtdcAuthIPField)
class CThostFtdcQryClassifiedInstrumentField(object):
    r"""查询分类合约"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    InstrumentID: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcQryClassifiedInstrumentField_InstrumentID_get, _thostmduserapi.CThostFtdcQryClassifiedInstrumentField_InstrumentID_set, doc=r"""合约代码""")
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcQryClassifiedInstrumentField_ExchangeID_get, _thostmduserapi.CThostFtdcQryClassifiedInstrumentField_ExchangeID_set, doc=r"""交易所代码""")
    ExchangeInstID: "TThostFtdcExchangeInstIDType" = property(_thostmduserapi.CThostFtdcQryClassifiedInstrumentField_ExchangeInstID_get, _thostmduserapi.CThostFtdcQryClassifiedInstrumentField_ExchangeInstID_set, doc=r"""合约在交易所的代码""")
    ProductID: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcQryClassifiedInstrumentField_ProductID_get, _thostmduserapi.CThostFtdcQryClassifiedInstrumentField_ProductID_set, doc=r"""产品代码""")
    TradingType: "TThostFtdcTradingTypeType" = property(_thostmduserapi.CThostFtdcQryClassifiedInstrumentField_TradingType_get, _thostmduserapi.CThostFtdcQryClassifiedInstrumentField_TradingType_set, doc=r"""合约交易状态""")
    ClassType: "TThostFtdcClassTypeType" = property(_thostmduserapi.CThostFtdcQryClassifiedInstrumentField_ClassType_get, _thostmduserapi.CThostFtdcQryClassifiedInstrumentField_ClassType_set, doc=r"""合约分类类型""")

    def __init__(self):
        _thostmduserapi.CThostFtdcQryClassifiedInstrumentField_swiginit(self, _thostmduserapi.new_CThostFtdcQryClassifiedInstrumentField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcQryClassifiedInstrumentField

# Register CThostFtdcQryClassifiedInstrumentField in _thostmduserapi:
_thostmduserapi.CThostFtdcQryClassifiedInstrumentField_swigregister(CThostFtdcQryClassifiedInstrumentField)
class CThostFtdcQryCombPromotionParamField(object):
    r"""查询组合优惠比例"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcQryCombPromotionParamField_ExchangeID_get, _thostmduserapi.CThostFtdcQryCombPromotionParamField_ExchangeID_set, doc=r"""交易所代码""")
    InstrumentID: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcQryCombPromotionParamField_InstrumentID_get, _thostmduserapi.CThostFtdcQryCombPromotionParamField_InstrumentID_set, doc=r"""合约代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcQryCombPromotionParamField_swiginit(self, _thostmduserapi.new_CThostFtdcQryCombPromotionParamField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcQryCombPromotionParamField

# Register CThostFtdcQryCombPromotionParamField in _thostmduserapi:
_thostmduserapi.CThostFtdcQryCombPromotionParamField_swigregister(CThostFtdcQryCombPromotionParamField)
class CThostFtdcCombPromotionParamField(object):
    r"""组合优惠比例"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcCombPromotionParamField_ExchangeID_get, _thostmduserapi.CThostFtdcCombPromotionParamField_ExchangeID_set, doc=r"""交易所代码""")
    InstrumentID: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcCombPromotionParamField_InstrumentID_get, _thostmduserapi.CThostFtdcCombPromotionParamField_InstrumentID_set, doc=r"""合约代码""")
    CombHedgeFlag: "TThostFtdcCombHedgeFlagType" = property(_thostmduserapi.CThostFtdcCombPromotionParamField_CombHedgeFlag_get, _thostmduserapi.CThostFtdcCombPromotionParamField_CombHedgeFlag_set, doc=r"""投机套保标志""")
    Xparameter: "TThostFtdcDiscountRatioType" = property(_thostmduserapi.CThostFtdcCombPromotionParamField_Xparameter_get, _thostmduserapi.CThostFtdcCombPromotionParamField_Xparameter_set, doc=r"""期权组合保证金比例""")

    def __init__(self):
        _thostmduserapi.CThostFtdcCombPromotionParamField_swiginit(self, _thostmduserapi.new_CThostFtdcCombPromotionParamField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcCombPromotionParamField

# Register CThostFtdcCombPromotionParamField in _thostmduserapi:
_thostmduserapi.CThostFtdcCombPromotionParamField_swigregister(CThostFtdcCombPromotionParamField)
class CThostFtdcReqUserLoginSCField(object):
    r"""国密用户登录请求"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    TradingDay: "TThostFtdcDateType" = property(_thostmduserapi.CThostFtdcReqUserLoginSCField_TradingDay_get, _thostmduserapi.CThostFtdcReqUserLoginSCField_TradingDay_set, doc=r"""交易日""")
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcReqUserLoginSCField_BrokerID_get, _thostmduserapi.CThostFtdcReqUserLoginSCField_BrokerID_set, doc=r"""经纪公司代码""")
    UserID: "TThostFtdcUserIDType" = property(_thostmduserapi.CThostFtdcReqUserLoginSCField_UserID_get, _thostmduserapi.CThostFtdcReqUserLoginSCField_UserID_set, doc=r"""用户代码""")
    Password: "TThostFtdcPasswordType" = property(_thostmduserapi.CThostFtdcReqUserLoginSCField_Password_get, _thostmduserapi.CThostFtdcReqUserLoginSCField_Password_set, doc=r"""密码""")
    UserProductInfo: "TThostFtdcProductInfoType" = property(_thostmduserapi.CThostFtdcReqUserLoginSCField_UserProductInfo_get, _thostmduserapi.CThostFtdcReqUserLoginSCField_UserProductInfo_set, doc=r"""用户端产品信息""")
    InterfaceProductInfo: "TThostFtdcProductInfoType" = property(_thostmduserapi.CThostFtdcReqUserLoginSCField_InterfaceProductInfo_get, _thostmduserapi.CThostFtdcReqUserLoginSCField_InterfaceProductInfo_set, doc=r"""接口端产品信息""")
    ProtocolInfo: "TThostFtdcProtocolInfoType" = property(_thostmduserapi.CThostFtdcReqUserLoginSCField_ProtocolInfo_get, _thostmduserapi.CThostFtdcReqUserLoginSCField_ProtocolInfo_set, doc=r"""协议信息""")
    MacAddress: "TThostFtdcMacAddressType" = property(_thostmduserapi.CThostFtdcReqUserLoginSCField_MacAddress_get, _thostmduserapi.CThostFtdcReqUserLoginSCField_MacAddress_set, doc=r"""Mac地址""")
    OneTimePassword: "TThostFtdcPasswordType" = property(_thostmduserapi.CThostFtdcReqUserLoginSCField_OneTimePassword_get, _thostmduserapi.CThostFtdcReqUserLoginSCField_OneTimePassword_set, doc=r"""动态密码""")
    ClientIPAddress: "TThostFtdcIPAddressType" = property(_thostmduserapi.CThostFtdcReqUserLoginSCField_ClientIPAddress_get, _thostmduserapi.CThostFtdcReqUserLoginSCField_ClientIPAddress_set, doc=r"""终端IP地址""")
    LoginRemark: "TThostFtdcLoginRemarkType" = property(_thostmduserapi.CThostFtdcReqUserLoginSCField_LoginRemark_get, _thostmduserapi.CThostFtdcReqUserLoginSCField_LoginRemark_set, doc=r"""登录备注""")
    ClientIPPort: "TThostFtdcIPPortType" = property(_thostmduserapi.CThostFtdcReqUserLoginSCField_ClientIPPort_get, _thostmduserapi.CThostFtdcReqUserLoginSCField_ClientIPPort_set, doc=r"""终端IP端口""")
    AuthCode: "TThostFtdcAuthCodeType" = property(_thostmduserapi.CThostFtdcReqUserLoginSCField_AuthCode_get, _thostmduserapi.CThostFtdcReqUserLoginSCField_AuthCode_set, doc=r"""认证码""")
    AppID: "TThostFtdcAppIDType" = property(_thostmduserapi.CThostFtdcReqUserLoginSCField_AppID_get, _thostmduserapi.CThostFtdcReqUserLoginSCField_AppID_set, doc=r"""App代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcReqUserLoginSCField_swiginit(self, _thostmduserapi.new_CThostFtdcReqUserLoginSCField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcReqUserLoginSCField

# Register CThostFtdcReqUserLoginSCField in _thostmduserapi:
_thostmduserapi.CThostFtdcReqUserLoginSCField_swigregister(CThostFtdcReqUserLoginSCField)
class CThostFtdcQryRiskSettleInvstPositionField(object):
    r"""投资者风险结算持仓查询"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcQryRiskSettleInvstPositionField_BrokerID_get, _thostmduserapi.CThostFtdcQryRiskSettleInvstPositionField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "TThostFtdcInvestorIDType" = property(_thostmduserapi.CThostFtdcQryRiskSettleInvstPositionField_InvestorID_get, _thostmduserapi.CThostFtdcQryRiskSettleInvstPositionField_InvestorID_set, doc=r"""投资者代码""")
    InstrumentID: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcQryRiskSettleInvstPositionField_InstrumentID_get, _thostmduserapi.CThostFtdcQryRiskSettleInvstPositionField_InstrumentID_set, doc=r"""合约代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcQryRiskSettleInvstPositionField_swiginit(self, _thostmduserapi.new_CThostFtdcQryRiskSettleInvstPositionField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcQryRiskSettleInvstPositionField

# Register CThostFtdcQryRiskSettleInvstPositionField in _thostmduserapi:
_thostmduserapi.CThostFtdcQryRiskSettleInvstPositionField_swigregister(CThostFtdcQryRiskSettleInvstPositionField)
class CThostFtdcQryRiskSettleProductStatusField(object):
    r"""风险结算产品查询"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ProductID: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcQryRiskSettleProductStatusField_ProductID_get, _thostmduserapi.CThostFtdcQryRiskSettleProductStatusField_ProductID_set, doc=r"""产品代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcQryRiskSettleProductStatusField_swiginit(self, _thostmduserapi.new_CThostFtdcQryRiskSettleProductStatusField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcQryRiskSettleProductStatusField

# Register CThostFtdcQryRiskSettleProductStatusField in _thostmduserapi:
_thostmduserapi.CThostFtdcQryRiskSettleProductStatusField_swigregister(CThostFtdcQryRiskSettleProductStatusField)
class CThostFtdcRiskSettleInvstPositionField(object):
    r"""投资者风险结算持仓"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    InstrumentID: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcRiskSettleInvstPositionField_InstrumentID_get, _thostmduserapi.CThostFtdcRiskSettleInvstPositionField_InstrumentID_set, doc=r"""合约代码""")
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcRiskSettleInvstPositionField_BrokerID_get, _thostmduserapi.CThostFtdcRiskSettleInvstPositionField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "TThostFtdcInvestorIDType" = property(_thostmduserapi.CThostFtdcRiskSettleInvstPositionField_InvestorID_get, _thostmduserapi.CThostFtdcRiskSettleInvstPositionField_InvestorID_set, doc=r"""投资者代码""")
    PosiDirection: "TThostFtdcPosiDirectionType" = property(_thostmduserapi.CThostFtdcRiskSettleInvstPositionField_PosiDirection_get, _thostmduserapi.CThostFtdcRiskSettleInvstPositionField_PosiDirection_set, doc=r"""持仓多空方向""")
    HedgeFlag: "TThostFtdcHedgeFlagType" = property(_thostmduserapi.CThostFtdcRiskSettleInvstPositionField_HedgeFlag_get, _thostmduserapi.CThostFtdcRiskSettleInvstPositionField_HedgeFlag_set, doc=r"""投机套保标志""")
    PositionDate: "TThostFtdcPositionDateType" = property(_thostmduserapi.CThostFtdcRiskSettleInvstPositionField_PositionDate_get, _thostmduserapi.CThostFtdcRiskSettleInvstPositionField_PositionDate_set, doc=r"""持仓日期""")
    YdPosition: "TThostFtdcVolumeType" = property(_thostmduserapi.CThostFtdcRiskSettleInvstPositionField_YdPosition_get, _thostmduserapi.CThostFtdcRiskSettleInvstPositionField_YdPosition_set, doc=r"""上日持仓""")
    Position: "TThostFtdcVolumeType" = property(_thostmduserapi.CThostFtdcRiskSettleInvstPositionField_Position_get, _thostmduserapi.CThostFtdcRiskSettleInvstPositionField_Position_set, doc=r"""今日持仓""")
    LongFrozen: "TThostFtdcVolumeType" = property(_thostmduserapi.CThostFtdcRiskSettleInvstPositionField_LongFrozen_get, _thostmduserapi.CThostFtdcRiskSettleInvstPositionField_LongFrozen_set, doc=r"""多头冻结""")
    ShortFrozen: "TThostFtdcVolumeType" = property(_thostmduserapi.CThostFtdcRiskSettleInvstPositionField_ShortFrozen_get, _thostmduserapi.CThostFtdcRiskSettleInvstPositionField_ShortFrozen_set, doc=r"""空头冻结""")
    LongFrozenAmount: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcRiskSettleInvstPositionField_LongFrozenAmount_get, _thostmduserapi.CThostFtdcRiskSettleInvstPositionField_LongFrozenAmount_set, doc=r"""开仓冻结金额""")
    ShortFrozenAmount: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcRiskSettleInvstPositionField_ShortFrozenAmount_get, _thostmduserapi.CThostFtdcRiskSettleInvstPositionField_ShortFrozenAmount_set, doc=r"""开仓冻结金额""")
    OpenVolume: "TThostFtdcVolumeType" = property(_thostmduserapi.CThostFtdcRiskSettleInvstPositionField_OpenVolume_get, _thostmduserapi.CThostFtdcRiskSettleInvstPositionField_OpenVolume_set, doc=r"""开仓量""")
    CloseVolume: "TThostFtdcVolumeType" = property(_thostmduserapi.CThostFtdcRiskSettleInvstPositionField_CloseVolume_get, _thostmduserapi.CThostFtdcRiskSettleInvstPositionField_CloseVolume_set, doc=r"""平仓量""")
    OpenAmount: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcRiskSettleInvstPositionField_OpenAmount_get, _thostmduserapi.CThostFtdcRiskSettleInvstPositionField_OpenAmount_set, doc=r"""开仓金额""")
    CloseAmount: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcRiskSettleInvstPositionField_CloseAmount_get, _thostmduserapi.CThostFtdcRiskSettleInvstPositionField_CloseAmount_set, doc=r"""平仓金额""")
    PositionCost: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcRiskSettleInvstPositionField_PositionCost_get, _thostmduserapi.CThostFtdcRiskSettleInvstPositionField_PositionCost_set, doc=r"""持仓成本""")
    PreMargin: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcRiskSettleInvstPositionField_PreMargin_get, _thostmduserapi.CThostFtdcRiskSettleInvstPositionField_PreMargin_set, doc=r"""上次占用的保证金""")
    UseMargin: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcRiskSettleInvstPositionField_UseMargin_get, _thostmduserapi.CThostFtdcRiskSettleInvstPositionField_UseMargin_set, doc=r"""占用的保证金""")
    FrozenMargin: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcRiskSettleInvstPositionField_FrozenMargin_get, _thostmduserapi.CThostFtdcRiskSettleInvstPositionField_FrozenMargin_set, doc=r"""冻结的保证金""")
    FrozenCash: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcRiskSettleInvstPositionField_FrozenCash_get, _thostmduserapi.CThostFtdcRiskSettleInvstPositionField_FrozenCash_set, doc=r"""冻结的资金""")
    FrozenCommission: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcRiskSettleInvstPositionField_FrozenCommission_get, _thostmduserapi.CThostFtdcRiskSettleInvstPositionField_FrozenCommission_set, doc=r"""冻结的手续费""")
    CashIn: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcRiskSettleInvstPositionField_CashIn_get, _thostmduserapi.CThostFtdcRiskSettleInvstPositionField_CashIn_set, doc=r"""资金差额""")
    Commission: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcRiskSettleInvstPositionField_Commission_get, _thostmduserapi.CThostFtdcRiskSettleInvstPositionField_Commission_set, doc=r"""手续费""")
    CloseProfit: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcRiskSettleInvstPositionField_CloseProfit_get, _thostmduserapi.CThostFtdcRiskSettleInvstPositionField_CloseProfit_set, doc=r"""平仓盈亏""")
    PositionProfit: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcRiskSettleInvstPositionField_PositionProfit_get, _thostmduserapi.CThostFtdcRiskSettleInvstPositionField_PositionProfit_set, doc=r"""持仓盈亏""")
    PreSettlementPrice: "TThostFtdcPriceType" = property(_thostmduserapi.CThostFtdcRiskSettleInvstPositionField_PreSettlementPrice_get, _thostmduserapi.CThostFtdcRiskSettleInvstPositionField_PreSettlementPrice_set, doc=r"""上次结算价""")
    SettlementPrice: "TThostFtdcPriceType" = property(_thostmduserapi.CThostFtdcRiskSettleInvstPositionField_SettlementPrice_get, _thostmduserapi.CThostFtdcRiskSettleInvstPositionField_SettlementPrice_set, doc=r"""本次结算价""")
    TradingDay: "TThostFtdcDateType" = property(_thostmduserapi.CThostFtdcRiskSettleInvstPositionField_TradingDay_get, _thostmduserapi.CThostFtdcRiskSettleInvstPositionField_TradingDay_set, doc=r"""交易日""")
    SettlementID: "TThostFtdcSettlementIDType" = property(_thostmduserapi.CThostFtdcRiskSettleInvstPositionField_SettlementID_get, _thostmduserapi.CThostFtdcRiskSettleInvstPositionField_SettlementID_set, doc=r"""结算编号""")
    OpenCost: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcRiskSettleInvstPositionField_OpenCost_get, _thostmduserapi.CThostFtdcRiskSettleInvstPositionField_OpenCost_set, doc=r"""开仓成本""")
    ExchangeMargin: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcRiskSettleInvstPositionField_ExchangeMargin_get, _thostmduserapi.CThostFtdcRiskSettleInvstPositionField_ExchangeMargin_set, doc=r"""交易所保证金""")
    CombPosition: "TThostFtdcVolumeType" = property(_thostmduserapi.CThostFtdcRiskSettleInvstPositionField_CombPosition_get, _thostmduserapi.CThostFtdcRiskSettleInvstPositionField_CombPosition_set, doc=r"""组合成交形成的持仓""")
    CombLongFrozen: "TThostFtdcVolumeType" = property(_thostmduserapi.CThostFtdcRiskSettleInvstPositionField_CombLongFrozen_get, _thostmduserapi.CThostFtdcRiskSettleInvstPositionField_CombLongFrozen_set, doc=r"""组合多头冻结""")
    CombShortFrozen: "TThostFtdcVolumeType" = property(_thostmduserapi.CThostFtdcRiskSettleInvstPositionField_CombShortFrozen_get, _thostmduserapi.CThostFtdcRiskSettleInvstPositionField_CombShortFrozen_set, doc=r"""组合空头冻结""")
    CloseProfitByDate: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcRiskSettleInvstPositionField_CloseProfitByDate_get, _thostmduserapi.CThostFtdcRiskSettleInvstPositionField_CloseProfitByDate_set, doc=r"""逐日盯市平仓盈亏""")
    CloseProfitByTrade: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcRiskSettleInvstPositionField_CloseProfitByTrade_get, _thostmduserapi.CThostFtdcRiskSettleInvstPositionField_CloseProfitByTrade_set, doc=r"""逐笔对冲平仓盈亏""")
    TodayPosition: "TThostFtdcVolumeType" = property(_thostmduserapi.CThostFtdcRiskSettleInvstPositionField_TodayPosition_get, _thostmduserapi.CThostFtdcRiskSettleInvstPositionField_TodayPosition_set, doc=r"""今日持仓""")
    MarginRateByMoney: "TThostFtdcRatioType" = property(_thostmduserapi.CThostFtdcRiskSettleInvstPositionField_MarginRateByMoney_get, _thostmduserapi.CThostFtdcRiskSettleInvstPositionField_MarginRateByMoney_set, doc=r"""保证金率""")
    MarginRateByVolume: "TThostFtdcRatioType" = property(_thostmduserapi.CThostFtdcRiskSettleInvstPositionField_MarginRateByVolume_get, _thostmduserapi.CThostFtdcRiskSettleInvstPositionField_MarginRateByVolume_set, doc=r"""保证金率(按手数)""")
    StrikeFrozen: "TThostFtdcVolumeType" = property(_thostmduserapi.CThostFtdcRiskSettleInvstPositionField_StrikeFrozen_get, _thostmduserapi.CThostFtdcRiskSettleInvstPositionField_StrikeFrozen_set, doc=r"""执行冻结""")
    StrikeFrozenAmount: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcRiskSettleInvstPositionField_StrikeFrozenAmount_get, _thostmduserapi.CThostFtdcRiskSettleInvstPositionField_StrikeFrozenAmount_set, doc=r"""执行冻结金额""")
    AbandonFrozen: "TThostFtdcVolumeType" = property(_thostmduserapi.CThostFtdcRiskSettleInvstPositionField_AbandonFrozen_get, _thostmduserapi.CThostFtdcRiskSettleInvstPositionField_AbandonFrozen_set, doc=r"""放弃执行冻结""")
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcRiskSettleInvstPositionField_ExchangeID_get, _thostmduserapi.CThostFtdcRiskSettleInvstPositionField_ExchangeID_set, doc=r"""交易所代码""")
    YdStrikeFrozen: "TThostFtdcVolumeType" = property(_thostmduserapi.CThostFtdcRiskSettleInvstPositionField_YdStrikeFrozen_get, _thostmduserapi.CThostFtdcRiskSettleInvstPositionField_YdStrikeFrozen_set, doc=r"""执行冻结的昨仓""")
    InvestUnitID: "TThostFtdcInvestUnitIDType" = property(_thostmduserapi.CThostFtdcRiskSettleInvstPositionField_InvestUnitID_get, _thostmduserapi.CThostFtdcRiskSettleInvstPositionField_InvestUnitID_set, doc=r"""投资单元代码""")
    PositionCostOffset: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcRiskSettleInvstPositionField_PositionCostOffset_get, _thostmduserapi.CThostFtdcRiskSettleInvstPositionField_PositionCostOffset_set, doc=r"""持仓成本差值""")
    TasPosition: "TThostFtdcVolumeType" = property(_thostmduserapi.CThostFtdcRiskSettleInvstPositionField_TasPosition_get, _thostmduserapi.CThostFtdcRiskSettleInvstPositionField_TasPosition_set, doc=r"""tas持仓手数""")
    TasPositionCost: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcRiskSettleInvstPositionField_TasPositionCost_get, _thostmduserapi.CThostFtdcRiskSettleInvstPositionField_TasPositionCost_set, doc=r"""tas持仓成本""")

    def __init__(self):
        _thostmduserapi.CThostFtdcRiskSettleInvstPositionField_swiginit(self, _thostmduserapi.new_CThostFtdcRiskSettleInvstPositionField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcRiskSettleInvstPositionField

# Register CThostFtdcRiskSettleInvstPositionField in _thostmduserapi:
_thostmduserapi.CThostFtdcRiskSettleInvstPositionField_swigregister(CThostFtdcRiskSettleInvstPositionField)
class CThostFtdcRiskSettleProductStatusField(object):
    r"""风险品种"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcRiskSettleProductStatusField_ExchangeID_get, _thostmduserapi.CThostFtdcRiskSettleProductStatusField_ExchangeID_set, doc=r"""交易所代码""")
    ProductID: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcRiskSettleProductStatusField_ProductID_get, _thostmduserapi.CThostFtdcRiskSettleProductStatusField_ProductID_set, doc=r"""产品编号""")
    ProductStatus: "TThostFtdcProductStatusType" = property(_thostmduserapi.CThostFtdcRiskSettleProductStatusField_ProductStatus_get, _thostmduserapi.CThostFtdcRiskSettleProductStatusField_ProductStatus_set, doc=r"""产品结算状态""")

    def __init__(self):
        _thostmduserapi.CThostFtdcRiskSettleProductStatusField_swiginit(self, _thostmduserapi.new_CThostFtdcRiskSettleProductStatusField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcRiskSettleProductStatusField

# Register CThostFtdcRiskSettleProductStatusField in _thostmduserapi:
_thostmduserapi.CThostFtdcRiskSettleProductStatusField_swigregister(CThostFtdcRiskSettleProductStatusField)
class CThostFtdcSyncDeltaInfoField(object):
    r"""风险结算追平信息"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    SyncDeltaSequenceNo: "TThostFtdcSequenceNoType" = property(_thostmduserapi.CThostFtdcSyncDeltaInfoField_SyncDeltaSequenceNo_get, _thostmduserapi.CThostFtdcSyncDeltaInfoField_SyncDeltaSequenceNo_set, doc=r"""追平序号""")
    SyncDeltaStatus: "TThostFtdcSyncDeltaStatusType" = property(_thostmduserapi.CThostFtdcSyncDeltaInfoField_SyncDeltaStatus_get, _thostmduserapi.CThostFtdcSyncDeltaInfoField_SyncDeltaStatus_set, doc=r"""追平状态""")
    SyncDescription: "TThostFtdcSyncDescriptionType" = property(_thostmduserapi.CThostFtdcSyncDeltaInfoField_SyncDescription_get, _thostmduserapi.CThostFtdcSyncDeltaInfoField_SyncDescription_set, doc=r"""追平描述""")
    IsOnlyTrdDelta: "TThostFtdcBoolType" = property(_thostmduserapi.CThostFtdcSyncDeltaInfoField_IsOnlyTrdDelta_get, _thostmduserapi.CThostFtdcSyncDeltaInfoField_IsOnlyTrdDelta_set, doc=r"""是否只有资金追平""")

    def __init__(self):
        _thostmduserapi.CThostFtdcSyncDeltaInfoField_swiginit(self, _thostmduserapi.new_CThostFtdcSyncDeltaInfoField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcSyncDeltaInfoField

# Register CThostFtdcSyncDeltaInfoField in _thostmduserapi:
_thostmduserapi.CThostFtdcSyncDeltaInfoField_swigregister(CThostFtdcSyncDeltaInfoField)
class CThostFtdcSyncDeltaProductStatusField(object):
    r"""风险结算追平产品信息"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    SyncDeltaSequenceNo: "TThostFtdcSequenceNoType" = property(_thostmduserapi.CThostFtdcSyncDeltaProductStatusField_SyncDeltaSequenceNo_get, _thostmduserapi.CThostFtdcSyncDeltaProductStatusField_SyncDeltaSequenceNo_set, doc=r"""追平序号""")
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcSyncDeltaProductStatusField_ExchangeID_get, _thostmduserapi.CThostFtdcSyncDeltaProductStatusField_ExchangeID_set, doc=r"""交易所代码""")
    ProductID: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcSyncDeltaProductStatusField_ProductID_get, _thostmduserapi.CThostFtdcSyncDeltaProductStatusField_ProductID_set, doc=r"""产品代码""")
    ProductStatus: "TThostFtdcProductStatusType" = property(_thostmduserapi.CThostFtdcSyncDeltaProductStatusField_ProductStatus_get, _thostmduserapi.CThostFtdcSyncDeltaProductStatusField_ProductStatus_set, doc=r"""是否允许交易""")

    def __init__(self):
        _thostmduserapi.CThostFtdcSyncDeltaProductStatusField_swiginit(self, _thostmduserapi.new_CThostFtdcSyncDeltaProductStatusField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcSyncDeltaProductStatusField

# Register CThostFtdcSyncDeltaProductStatusField in _thostmduserapi:
_thostmduserapi.CThostFtdcSyncDeltaProductStatusField_swigregister(CThostFtdcSyncDeltaProductStatusField)
class CThostFtdcSyncDeltaInvstPosDtlField(object):
    r"""风险结算追平持仓明细"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    InstrumentID: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcSyncDeltaInvstPosDtlField_InstrumentID_get, _thostmduserapi.CThostFtdcSyncDeltaInvstPosDtlField_InstrumentID_set, doc=r"""合约代码""")
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcSyncDeltaInvstPosDtlField_BrokerID_get, _thostmduserapi.CThostFtdcSyncDeltaInvstPosDtlField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "TThostFtdcInvestorIDType" = property(_thostmduserapi.CThostFtdcSyncDeltaInvstPosDtlField_InvestorID_get, _thostmduserapi.CThostFtdcSyncDeltaInvstPosDtlField_InvestorID_set, doc=r"""投资者代码""")
    HedgeFlag: "TThostFtdcHedgeFlagType" = property(_thostmduserapi.CThostFtdcSyncDeltaInvstPosDtlField_HedgeFlag_get, _thostmduserapi.CThostFtdcSyncDeltaInvstPosDtlField_HedgeFlag_set, doc=r"""投机套保标志""")
    Direction: "TThostFtdcDirectionType" = property(_thostmduserapi.CThostFtdcSyncDeltaInvstPosDtlField_Direction_get, _thostmduserapi.CThostFtdcSyncDeltaInvstPosDtlField_Direction_set, doc=r"""买卖""")
    OpenDate: "TThostFtdcDateType" = property(_thostmduserapi.CThostFtdcSyncDeltaInvstPosDtlField_OpenDate_get, _thostmduserapi.CThostFtdcSyncDeltaInvstPosDtlField_OpenDate_set, doc=r"""开仓日期""")
    TradeID: "TThostFtdcTradeIDType" = property(_thostmduserapi.CThostFtdcSyncDeltaInvstPosDtlField_TradeID_get, _thostmduserapi.CThostFtdcSyncDeltaInvstPosDtlField_TradeID_set, doc=r"""成交编号""")
    Volume: "TThostFtdcVolumeType" = property(_thostmduserapi.CThostFtdcSyncDeltaInvstPosDtlField_Volume_get, _thostmduserapi.CThostFtdcSyncDeltaInvstPosDtlField_Volume_set, doc=r"""数量""")
    OpenPrice: "TThostFtdcPriceType" = property(_thostmduserapi.CThostFtdcSyncDeltaInvstPosDtlField_OpenPrice_get, _thostmduserapi.CThostFtdcSyncDeltaInvstPosDtlField_OpenPrice_set, doc=r"""开仓价""")
    TradingDay: "TThostFtdcDateType" = property(_thostmduserapi.CThostFtdcSyncDeltaInvstPosDtlField_TradingDay_get, _thostmduserapi.CThostFtdcSyncDeltaInvstPosDtlField_TradingDay_set, doc=r"""交易日""")
    SettlementID: "TThostFtdcSettlementIDType" = property(_thostmduserapi.CThostFtdcSyncDeltaInvstPosDtlField_SettlementID_get, _thostmduserapi.CThostFtdcSyncDeltaInvstPosDtlField_SettlementID_set, doc=r"""结算编号""")
    TradeType: "TThostFtdcTradeTypeType" = property(_thostmduserapi.CThostFtdcSyncDeltaInvstPosDtlField_TradeType_get, _thostmduserapi.CThostFtdcSyncDeltaInvstPosDtlField_TradeType_set, doc=r"""成交类型""")
    CombInstrumentID: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcSyncDeltaInvstPosDtlField_CombInstrumentID_get, _thostmduserapi.CThostFtdcSyncDeltaInvstPosDtlField_CombInstrumentID_set, doc=r"""组合合约代码""")
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcSyncDeltaInvstPosDtlField_ExchangeID_get, _thostmduserapi.CThostFtdcSyncDeltaInvstPosDtlField_ExchangeID_set, doc=r"""交易所代码""")
    CloseProfitByDate: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcSyncDeltaInvstPosDtlField_CloseProfitByDate_get, _thostmduserapi.CThostFtdcSyncDeltaInvstPosDtlField_CloseProfitByDate_set, doc=r"""逐日盯市平仓盈亏""")
    CloseProfitByTrade: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcSyncDeltaInvstPosDtlField_CloseProfitByTrade_get, _thostmduserapi.CThostFtdcSyncDeltaInvstPosDtlField_CloseProfitByTrade_set, doc=r"""逐笔对冲平仓盈亏""")
    PositionProfitByDate: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcSyncDeltaInvstPosDtlField_PositionProfitByDate_get, _thostmduserapi.CThostFtdcSyncDeltaInvstPosDtlField_PositionProfitByDate_set, doc=r"""逐日盯市持仓盈亏""")
    PositionProfitByTrade: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcSyncDeltaInvstPosDtlField_PositionProfitByTrade_get, _thostmduserapi.CThostFtdcSyncDeltaInvstPosDtlField_PositionProfitByTrade_set, doc=r"""逐笔对冲持仓盈亏""")
    Margin: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcSyncDeltaInvstPosDtlField_Margin_get, _thostmduserapi.CThostFtdcSyncDeltaInvstPosDtlField_Margin_set, doc=r"""投资者保证金""")
    ExchMargin: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcSyncDeltaInvstPosDtlField_ExchMargin_get, _thostmduserapi.CThostFtdcSyncDeltaInvstPosDtlField_ExchMargin_set, doc=r"""交易所保证金""")
    MarginRateByMoney: "TThostFtdcRatioType" = property(_thostmduserapi.CThostFtdcSyncDeltaInvstPosDtlField_MarginRateByMoney_get, _thostmduserapi.CThostFtdcSyncDeltaInvstPosDtlField_MarginRateByMoney_set, doc=r"""保证金率""")
    MarginRateByVolume: "TThostFtdcRatioType" = property(_thostmduserapi.CThostFtdcSyncDeltaInvstPosDtlField_MarginRateByVolume_get, _thostmduserapi.CThostFtdcSyncDeltaInvstPosDtlField_MarginRateByVolume_set, doc=r"""保证金率(按手数)""")
    LastSettlementPrice: "TThostFtdcPriceType" = property(_thostmduserapi.CThostFtdcSyncDeltaInvstPosDtlField_LastSettlementPrice_get, _thostmduserapi.CThostFtdcSyncDeltaInvstPosDtlField_LastSettlementPrice_set, doc=r"""昨结算价""")
    SettlementPrice: "TThostFtdcPriceType" = property(_thostmduserapi.CThostFtdcSyncDeltaInvstPosDtlField_SettlementPrice_get, _thostmduserapi.CThostFtdcSyncDeltaInvstPosDtlField_SettlementPrice_set, doc=r"""结算价""")
    CloseVolume: "TThostFtdcVolumeType" = property(_thostmduserapi.CThostFtdcSyncDeltaInvstPosDtlField_CloseVolume_get, _thostmduserapi.CThostFtdcSyncDeltaInvstPosDtlField_CloseVolume_set, doc=r"""平仓量""")
    CloseAmount: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcSyncDeltaInvstPosDtlField_CloseAmount_get, _thostmduserapi.CThostFtdcSyncDeltaInvstPosDtlField_CloseAmount_set, doc=r"""平仓金额""")
    TimeFirstVolume: "TThostFtdcVolumeType" = property(_thostmduserapi.CThostFtdcSyncDeltaInvstPosDtlField_TimeFirstVolume_get, _thostmduserapi.CThostFtdcSyncDeltaInvstPosDtlField_TimeFirstVolume_set, doc=r"""先开先平剩余数量""")
    SpecPosiType: "TThostFtdcSpecPosiTypeType" = property(_thostmduserapi.CThostFtdcSyncDeltaInvstPosDtlField_SpecPosiType_get, _thostmduserapi.CThostFtdcSyncDeltaInvstPosDtlField_SpecPosiType_set, doc=r"""特殊持仓标志""")
    ActionDirection: "TThostFtdcActionDirectionType" = property(_thostmduserapi.CThostFtdcSyncDeltaInvstPosDtlField_ActionDirection_get, _thostmduserapi.CThostFtdcSyncDeltaInvstPosDtlField_ActionDirection_set, doc=r"""操作标志""")
    SyncDeltaSequenceNo: "TThostFtdcSequenceNoType" = property(_thostmduserapi.CThostFtdcSyncDeltaInvstPosDtlField_SyncDeltaSequenceNo_get, _thostmduserapi.CThostFtdcSyncDeltaInvstPosDtlField_SyncDeltaSequenceNo_set, doc=r"""追平序号""")

    def __init__(self):
        _thostmduserapi.CThostFtdcSyncDeltaInvstPosDtlField_swiginit(self, _thostmduserapi.new_CThostFtdcSyncDeltaInvstPosDtlField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcSyncDeltaInvstPosDtlField

# Register CThostFtdcSyncDeltaInvstPosDtlField in _thostmduserapi:
_thostmduserapi.CThostFtdcSyncDeltaInvstPosDtlField_swigregister(CThostFtdcSyncDeltaInvstPosDtlField)
class CThostFtdcSyncDeltaInvstPosCombDtlField(object):
    r"""风险结算追平组合持仓明细"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    TradingDay: "TThostFtdcDateType" = property(_thostmduserapi.CThostFtdcSyncDeltaInvstPosCombDtlField_TradingDay_get, _thostmduserapi.CThostFtdcSyncDeltaInvstPosCombDtlField_TradingDay_set, doc=r"""交易日""")
    OpenDate: "TThostFtdcDateType" = property(_thostmduserapi.CThostFtdcSyncDeltaInvstPosCombDtlField_OpenDate_get, _thostmduserapi.CThostFtdcSyncDeltaInvstPosCombDtlField_OpenDate_set, doc=r"""开仓日期""")
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcSyncDeltaInvstPosCombDtlField_ExchangeID_get, _thostmduserapi.CThostFtdcSyncDeltaInvstPosCombDtlField_ExchangeID_set, doc=r"""交易所代码""")
    SettlementID: "TThostFtdcSettlementIDType" = property(_thostmduserapi.CThostFtdcSyncDeltaInvstPosCombDtlField_SettlementID_get, _thostmduserapi.CThostFtdcSyncDeltaInvstPosCombDtlField_SettlementID_set, doc=r"""结算编号""")
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcSyncDeltaInvstPosCombDtlField_BrokerID_get, _thostmduserapi.CThostFtdcSyncDeltaInvstPosCombDtlField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "TThostFtdcInvestorIDType" = property(_thostmduserapi.CThostFtdcSyncDeltaInvstPosCombDtlField_InvestorID_get, _thostmduserapi.CThostFtdcSyncDeltaInvstPosCombDtlField_InvestorID_set, doc=r"""投资者代码""")
    ComTradeID: "TThostFtdcTradeIDType" = property(_thostmduserapi.CThostFtdcSyncDeltaInvstPosCombDtlField_ComTradeID_get, _thostmduserapi.CThostFtdcSyncDeltaInvstPosCombDtlField_ComTradeID_set, doc=r"""组合编号""")
    TradeID: "TThostFtdcTradeIDType" = property(_thostmduserapi.CThostFtdcSyncDeltaInvstPosCombDtlField_TradeID_get, _thostmduserapi.CThostFtdcSyncDeltaInvstPosCombDtlField_TradeID_set, doc=r"""撮合编号""")
    InstrumentID: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcSyncDeltaInvstPosCombDtlField_InstrumentID_get, _thostmduserapi.CThostFtdcSyncDeltaInvstPosCombDtlField_InstrumentID_set, doc=r"""合约代码""")
    HedgeFlag: "TThostFtdcHedgeFlagType" = property(_thostmduserapi.CThostFtdcSyncDeltaInvstPosCombDtlField_HedgeFlag_get, _thostmduserapi.CThostFtdcSyncDeltaInvstPosCombDtlField_HedgeFlag_set, doc=r"""投机套保标志""")
    Direction: "TThostFtdcDirectionType" = property(_thostmduserapi.CThostFtdcSyncDeltaInvstPosCombDtlField_Direction_get, _thostmduserapi.CThostFtdcSyncDeltaInvstPosCombDtlField_Direction_set, doc=r"""买卖""")
    TotalAmt: "TThostFtdcVolumeType" = property(_thostmduserapi.CThostFtdcSyncDeltaInvstPosCombDtlField_TotalAmt_get, _thostmduserapi.CThostFtdcSyncDeltaInvstPosCombDtlField_TotalAmt_set, doc=r"""持仓量""")
    Margin: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcSyncDeltaInvstPosCombDtlField_Margin_get, _thostmduserapi.CThostFtdcSyncDeltaInvstPosCombDtlField_Margin_set, doc=r"""投资者保证金""")
    ExchMargin: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcSyncDeltaInvstPosCombDtlField_ExchMargin_get, _thostmduserapi.CThostFtdcSyncDeltaInvstPosCombDtlField_ExchMargin_set, doc=r"""交易所保证金""")
    MarginRateByMoney: "TThostFtdcRatioType" = property(_thostmduserapi.CThostFtdcSyncDeltaInvstPosCombDtlField_MarginRateByMoney_get, _thostmduserapi.CThostFtdcSyncDeltaInvstPosCombDtlField_MarginRateByMoney_set, doc=r"""保证金率""")
    MarginRateByVolume: "TThostFtdcRatioType" = property(_thostmduserapi.CThostFtdcSyncDeltaInvstPosCombDtlField_MarginRateByVolume_get, _thostmduserapi.CThostFtdcSyncDeltaInvstPosCombDtlField_MarginRateByVolume_set, doc=r"""保证金率(按手数)""")
    LegID: "TThostFtdcLegIDType" = property(_thostmduserapi.CThostFtdcSyncDeltaInvstPosCombDtlField_LegID_get, _thostmduserapi.CThostFtdcSyncDeltaInvstPosCombDtlField_LegID_set, doc=r"""单腿编号""")
    LegMultiple: "TThostFtdcLegMultipleType" = property(_thostmduserapi.CThostFtdcSyncDeltaInvstPosCombDtlField_LegMultiple_get, _thostmduserapi.CThostFtdcSyncDeltaInvstPosCombDtlField_LegMultiple_set, doc=r"""单腿乘数""")
    TradeGroupID: "TThostFtdcTradeGroupIDType" = property(_thostmduserapi.CThostFtdcSyncDeltaInvstPosCombDtlField_TradeGroupID_get, _thostmduserapi.CThostFtdcSyncDeltaInvstPosCombDtlField_TradeGroupID_set, doc=r"""成交组号""")
    ActionDirection: "TThostFtdcActionDirectionType" = property(_thostmduserapi.CThostFtdcSyncDeltaInvstPosCombDtlField_ActionDirection_get, _thostmduserapi.CThostFtdcSyncDeltaInvstPosCombDtlField_ActionDirection_set, doc=r"""操作标志""")
    SyncDeltaSequenceNo: "TThostFtdcSequenceNoType" = property(_thostmduserapi.CThostFtdcSyncDeltaInvstPosCombDtlField_SyncDeltaSequenceNo_get, _thostmduserapi.CThostFtdcSyncDeltaInvstPosCombDtlField_SyncDeltaSequenceNo_set, doc=r"""追平序号""")

    def __init__(self):
        _thostmduserapi.CThostFtdcSyncDeltaInvstPosCombDtlField_swiginit(self, _thostmduserapi.new_CThostFtdcSyncDeltaInvstPosCombDtlField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcSyncDeltaInvstPosCombDtlField

# Register CThostFtdcSyncDeltaInvstPosCombDtlField in _thostmduserapi:
_thostmduserapi.CThostFtdcSyncDeltaInvstPosCombDtlField_swigregister(CThostFtdcSyncDeltaInvstPosCombDtlField)
class CThostFtdcSyncDeltaTradingAccountField(object):
    r"""风险结算追平资金"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcSyncDeltaTradingAccountField_BrokerID_get, _thostmduserapi.CThostFtdcSyncDeltaTradingAccountField_BrokerID_set, doc=r"""经纪公司代码""")
    AccountID: "TThostFtdcAccountIDType" = property(_thostmduserapi.CThostFtdcSyncDeltaTradingAccountField_AccountID_get, _thostmduserapi.CThostFtdcSyncDeltaTradingAccountField_AccountID_set, doc=r"""投资者帐号""")
    PreMortgage: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcSyncDeltaTradingAccountField_PreMortgage_get, _thostmduserapi.CThostFtdcSyncDeltaTradingAccountField_PreMortgage_set, doc=r"""上次质押金额""")
    PreCredit: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcSyncDeltaTradingAccountField_PreCredit_get, _thostmduserapi.CThostFtdcSyncDeltaTradingAccountField_PreCredit_set, doc=r"""上次信用额度""")
    PreDeposit: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcSyncDeltaTradingAccountField_PreDeposit_get, _thostmduserapi.CThostFtdcSyncDeltaTradingAccountField_PreDeposit_set, doc=r"""上次存款额""")
    PreBalance: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcSyncDeltaTradingAccountField_PreBalance_get, _thostmduserapi.CThostFtdcSyncDeltaTradingAccountField_PreBalance_set, doc=r"""上次结算准备金""")
    PreMargin: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcSyncDeltaTradingAccountField_PreMargin_get, _thostmduserapi.CThostFtdcSyncDeltaTradingAccountField_PreMargin_set, doc=r"""上次占用的保证金""")
    InterestBase: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcSyncDeltaTradingAccountField_InterestBase_get, _thostmduserapi.CThostFtdcSyncDeltaTradingAccountField_InterestBase_set, doc=r"""利息基数""")
    Interest: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcSyncDeltaTradingAccountField_Interest_get, _thostmduserapi.CThostFtdcSyncDeltaTradingAccountField_Interest_set, doc=r"""利息收入""")
    Deposit: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcSyncDeltaTradingAccountField_Deposit_get, _thostmduserapi.CThostFtdcSyncDeltaTradingAccountField_Deposit_set, doc=r"""入金金额""")
    Withdraw: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcSyncDeltaTradingAccountField_Withdraw_get, _thostmduserapi.CThostFtdcSyncDeltaTradingAccountField_Withdraw_set, doc=r"""出金金额""")
    FrozenMargin: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcSyncDeltaTradingAccountField_FrozenMargin_get, _thostmduserapi.CThostFtdcSyncDeltaTradingAccountField_FrozenMargin_set, doc=r"""冻结的保证金""")
    FrozenCash: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcSyncDeltaTradingAccountField_FrozenCash_get, _thostmduserapi.CThostFtdcSyncDeltaTradingAccountField_FrozenCash_set, doc=r"""冻结的资金""")
    FrozenCommission: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcSyncDeltaTradingAccountField_FrozenCommission_get, _thostmduserapi.CThostFtdcSyncDeltaTradingAccountField_FrozenCommission_set, doc=r"""冻结的手续费""")
    CurrMargin: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcSyncDeltaTradingAccountField_CurrMargin_get, _thostmduserapi.CThostFtdcSyncDeltaTradingAccountField_CurrMargin_set, doc=r"""当前保证金总额""")
    CashIn: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcSyncDeltaTradingAccountField_CashIn_get, _thostmduserapi.CThostFtdcSyncDeltaTradingAccountField_CashIn_set, doc=r"""资金差额""")
    Commission: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcSyncDeltaTradingAccountField_Commission_get, _thostmduserapi.CThostFtdcSyncDeltaTradingAccountField_Commission_set, doc=r"""手续费""")
    CloseProfit: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcSyncDeltaTradingAccountField_CloseProfit_get, _thostmduserapi.CThostFtdcSyncDeltaTradingAccountField_CloseProfit_set, doc=r"""平仓盈亏""")
    PositionProfit: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcSyncDeltaTradingAccountField_PositionProfit_get, _thostmduserapi.CThostFtdcSyncDeltaTradingAccountField_PositionProfit_set, doc=r"""持仓盈亏""")
    Balance: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcSyncDeltaTradingAccountField_Balance_get, _thostmduserapi.CThostFtdcSyncDeltaTradingAccountField_Balance_set, doc=r"""期货结算准备金""")
    Available: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcSyncDeltaTradingAccountField_Available_get, _thostmduserapi.CThostFtdcSyncDeltaTradingAccountField_Available_set, doc=r"""可用资金""")
    WithdrawQuota: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcSyncDeltaTradingAccountField_WithdrawQuota_get, _thostmduserapi.CThostFtdcSyncDeltaTradingAccountField_WithdrawQuota_set, doc=r"""可取资金""")
    Reserve: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcSyncDeltaTradingAccountField_Reserve_get, _thostmduserapi.CThostFtdcSyncDeltaTradingAccountField_Reserve_set, doc=r"""基本准备金""")
    TradingDay: "TThostFtdcDateType" = property(_thostmduserapi.CThostFtdcSyncDeltaTradingAccountField_TradingDay_get, _thostmduserapi.CThostFtdcSyncDeltaTradingAccountField_TradingDay_set, doc=r"""交易日""")
    SettlementID: "TThostFtdcSettlementIDType" = property(_thostmduserapi.CThostFtdcSyncDeltaTradingAccountField_SettlementID_get, _thostmduserapi.CThostFtdcSyncDeltaTradingAccountField_SettlementID_set, doc=r"""结算编号""")
    Credit: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcSyncDeltaTradingAccountField_Credit_get, _thostmduserapi.CThostFtdcSyncDeltaTradingAccountField_Credit_set, doc=r"""信用额度""")
    Mortgage: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcSyncDeltaTradingAccountField_Mortgage_get, _thostmduserapi.CThostFtdcSyncDeltaTradingAccountField_Mortgage_set, doc=r"""质押金额""")
    ExchangeMargin: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcSyncDeltaTradingAccountField_ExchangeMargin_get, _thostmduserapi.CThostFtdcSyncDeltaTradingAccountField_ExchangeMargin_set, doc=r"""交易所保证金""")
    DeliveryMargin: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcSyncDeltaTradingAccountField_DeliveryMargin_get, _thostmduserapi.CThostFtdcSyncDeltaTradingAccountField_DeliveryMargin_set, doc=r"""投资者交割保证金""")
    ExchangeDeliveryMargin: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcSyncDeltaTradingAccountField_ExchangeDeliveryMargin_get, _thostmduserapi.CThostFtdcSyncDeltaTradingAccountField_ExchangeDeliveryMargin_set, doc=r"""交易所交割保证金""")
    ReserveBalance: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcSyncDeltaTradingAccountField_ReserveBalance_get, _thostmduserapi.CThostFtdcSyncDeltaTradingAccountField_ReserveBalance_set, doc=r"""保底期货结算准备金""")
    CurrencyID: "TThostFtdcCurrencyIDType" = property(_thostmduserapi.CThostFtdcSyncDeltaTradingAccountField_CurrencyID_get, _thostmduserapi.CThostFtdcSyncDeltaTradingAccountField_CurrencyID_set, doc=r"""币种代码""")
    PreFundMortgageIn: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcSyncDeltaTradingAccountField_PreFundMortgageIn_get, _thostmduserapi.CThostFtdcSyncDeltaTradingAccountField_PreFundMortgageIn_set, doc=r"""上次货币质入金额""")
    PreFundMortgageOut: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcSyncDeltaTradingAccountField_PreFundMortgageOut_get, _thostmduserapi.CThostFtdcSyncDeltaTradingAccountField_PreFundMortgageOut_set, doc=r"""上次货币质出金额""")
    FundMortgageIn: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcSyncDeltaTradingAccountField_FundMortgageIn_get, _thostmduserapi.CThostFtdcSyncDeltaTradingAccountField_FundMortgageIn_set, doc=r"""货币质入金额""")
    FundMortgageOut: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcSyncDeltaTradingAccountField_FundMortgageOut_get, _thostmduserapi.CThostFtdcSyncDeltaTradingAccountField_FundMortgageOut_set, doc=r"""货币质出金额""")
    FundMortgageAvailable: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcSyncDeltaTradingAccountField_FundMortgageAvailable_get, _thostmduserapi.CThostFtdcSyncDeltaTradingAccountField_FundMortgageAvailable_set, doc=r"""货币质押余额""")
    MortgageableFund: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcSyncDeltaTradingAccountField_MortgageableFund_get, _thostmduserapi.CThostFtdcSyncDeltaTradingAccountField_MortgageableFund_set, doc=r"""可质押货币金额""")
    SpecProductMargin: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcSyncDeltaTradingAccountField_SpecProductMargin_get, _thostmduserapi.CThostFtdcSyncDeltaTradingAccountField_SpecProductMargin_set, doc=r"""特殊产品占用保证金""")
    SpecProductFrozenMargin: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcSyncDeltaTradingAccountField_SpecProductFrozenMargin_get, _thostmduserapi.CThostFtdcSyncDeltaTradingAccountField_SpecProductFrozenMargin_set, doc=r"""特殊产品冻结保证金""")
    SpecProductCommission: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcSyncDeltaTradingAccountField_SpecProductCommission_get, _thostmduserapi.CThostFtdcSyncDeltaTradingAccountField_SpecProductCommission_set, doc=r"""特殊产品手续费""")
    SpecProductFrozenCommission: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcSyncDeltaTradingAccountField_SpecProductFrozenCommission_get, _thostmduserapi.CThostFtdcSyncDeltaTradingAccountField_SpecProductFrozenCommission_set, doc=r"""特殊产品冻结手续费""")
    SpecProductPositionProfit: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcSyncDeltaTradingAccountField_SpecProductPositionProfit_get, _thostmduserapi.CThostFtdcSyncDeltaTradingAccountField_SpecProductPositionProfit_set, doc=r"""特殊产品持仓盈亏""")
    SpecProductCloseProfit: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcSyncDeltaTradingAccountField_SpecProductCloseProfit_get, _thostmduserapi.CThostFtdcSyncDeltaTradingAccountField_SpecProductCloseProfit_set, doc=r"""特殊产品平仓盈亏""")
    SpecProductPositionProfitByAlg: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcSyncDeltaTradingAccountField_SpecProductPositionProfitByAlg_get, _thostmduserapi.CThostFtdcSyncDeltaTradingAccountField_SpecProductPositionProfitByAlg_set, doc=r"""根据持仓盈亏算法计算的特殊产品持仓盈亏""")
    SpecProductExchangeMargin: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcSyncDeltaTradingAccountField_SpecProductExchangeMargin_get, _thostmduserapi.CThostFtdcSyncDeltaTradingAccountField_SpecProductExchangeMargin_set, doc=r"""特殊产品交易所保证金""")
    FrozenSwap: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcSyncDeltaTradingAccountField_FrozenSwap_get, _thostmduserapi.CThostFtdcSyncDeltaTradingAccountField_FrozenSwap_set, doc=r"""延时换汇冻结金额""")
    RemainSwap: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcSyncDeltaTradingAccountField_RemainSwap_get, _thostmduserapi.CThostFtdcSyncDeltaTradingAccountField_RemainSwap_set, doc=r"""剩余换汇额度""")
    SyncDeltaSequenceNo: "TThostFtdcSequenceNoType" = property(_thostmduserapi.CThostFtdcSyncDeltaTradingAccountField_SyncDeltaSequenceNo_get, _thostmduserapi.CThostFtdcSyncDeltaTradingAccountField_SyncDeltaSequenceNo_set, doc=r"""追平序号""")

    def __init__(self):
        _thostmduserapi.CThostFtdcSyncDeltaTradingAccountField_swiginit(self, _thostmduserapi.new_CThostFtdcSyncDeltaTradingAccountField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcSyncDeltaTradingAccountField

# Register CThostFtdcSyncDeltaTradingAccountField in _thostmduserapi:
_thostmduserapi.CThostFtdcSyncDeltaTradingAccountField_swigregister(CThostFtdcSyncDeltaTradingAccountField)
class CThostFtdcSyncDeltaInitInvstMarginField(object):
    r"""投资者风险结算总保证金"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcSyncDeltaInitInvstMarginField_BrokerID_get, _thostmduserapi.CThostFtdcSyncDeltaInitInvstMarginField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "TThostFtdcInvestorIDType" = property(_thostmduserapi.CThostFtdcSyncDeltaInitInvstMarginField_InvestorID_get, _thostmduserapi.CThostFtdcSyncDeltaInitInvstMarginField_InvestorID_set, doc=r"""投资者代码""")
    LastRiskTotalInvstMargin: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcSyncDeltaInitInvstMarginField_LastRiskTotalInvstMargin_get, _thostmduserapi.CThostFtdcSyncDeltaInitInvstMarginField_LastRiskTotalInvstMargin_set, doc=r"""追平前总风险保证金""")
    LastRiskTotalExchMargin: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcSyncDeltaInitInvstMarginField_LastRiskTotalExchMargin_get, _thostmduserapi.CThostFtdcSyncDeltaInitInvstMarginField_LastRiskTotalExchMargin_set, doc=r"""追平前交易所总风险保证金""")
    ThisSyncInvstMargin: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcSyncDeltaInitInvstMarginField_ThisSyncInvstMargin_get, _thostmduserapi.CThostFtdcSyncDeltaInitInvstMarginField_ThisSyncInvstMargin_set, doc=r"""本次追平品种总保证金""")
    ThisSyncExchMargin: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcSyncDeltaInitInvstMarginField_ThisSyncExchMargin_get, _thostmduserapi.CThostFtdcSyncDeltaInitInvstMarginField_ThisSyncExchMargin_set, doc=r"""本次追平品种交易所总保证金""")
    RemainRiskInvstMargin: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcSyncDeltaInitInvstMarginField_RemainRiskInvstMargin_get, _thostmduserapi.CThostFtdcSyncDeltaInitInvstMarginField_RemainRiskInvstMargin_set, doc=r"""本次未追平品种总保证金""")
    RemainRiskExchMargin: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcSyncDeltaInitInvstMarginField_RemainRiskExchMargin_get, _thostmduserapi.CThostFtdcSyncDeltaInitInvstMarginField_RemainRiskExchMargin_set, doc=r"""本次未追平品种交易所总保证金""")
    LastRiskSpecTotalInvstMargin: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcSyncDeltaInitInvstMarginField_LastRiskSpecTotalInvstMargin_get, _thostmduserapi.CThostFtdcSyncDeltaInitInvstMarginField_LastRiskSpecTotalInvstMargin_set, doc=r"""追平前总特殊产品风险保证金""")
    LastRiskSpecTotalExchMargin: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcSyncDeltaInitInvstMarginField_LastRiskSpecTotalExchMargin_get, _thostmduserapi.CThostFtdcSyncDeltaInitInvstMarginField_LastRiskSpecTotalExchMargin_set, doc=r"""追平前总特殊产品交易所风险保证金""")
    ThisSyncSpecInvstMargin: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcSyncDeltaInitInvstMarginField_ThisSyncSpecInvstMargin_get, _thostmduserapi.CThostFtdcSyncDeltaInitInvstMarginField_ThisSyncSpecInvstMargin_set, doc=r"""本次追平品种特殊产品总保证金""")
    ThisSyncSpecExchMargin: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcSyncDeltaInitInvstMarginField_ThisSyncSpecExchMargin_get, _thostmduserapi.CThostFtdcSyncDeltaInitInvstMarginField_ThisSyncSpecExchMargin_set, doc=r"""本次追平品种特殊产品交易所总保证金""")
    RemainRiskSpecInvstMargin: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcSyncDeltaInitInvstMarginField_RemainRiskSpecInvstMargin_get, _thostmduserapi.CThostFtdcSyncDeltaInitInvstMarginField_RemainRiskSpecInvstMargin_set, doc=r"""本次未追平品种特殊产品总保证金""")
    RemainRiskSpecExchMargin: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcSyncDeltaInitInvstMarginField_RemainRiskSpecExchMargin_get, _thostmduserapi.CThostFtdcSyncDeltaInitInvstMarginField_RemainRiskSpecExchMargin_set, doc=r"""本次未追平品种特殊产品交易所总保证金""")
    SyncDeltaSequenceNo: "TThostFtdcSequenceNoType" = property(_thostmduserapi.CThostFtdcSyncDeltaInitInvstMarginField_SyncDeltaSequenceNo_get, _thostmduserapi.CThostFtdcSyncDeltaInitInvstMarginField_SyncDeltaSequenceNo_set, doc=r"""追平序号""")

    def __init__(self):
        _thostmduserapi.CThostFtdcSyncDeltaInitInvstMarginField_swiginit(self, _thostmduserapi.new_CThostFtdcSyncDeltaInitInvstMarginField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcSyncDeltaInitInvstMarginField

# Register CThostFtdcSyncDeltaInitInvstMarginField in _thostmduserapi:
_thostmduserapi.CThostFtdcSyncDeltaInitInvstMarginField_swigregister(CThostFtdcSyncDeltaInitInvstMarginField)
class CThostFtdcSyncDeltaDceCombInstrumentField(object):
    r"""风险结算追平组合优先级"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    CombInstrumentID: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcSyncDeltaDceCombInstrumentField_CombInstrumentID_get, _thostmduserapi.CThostFtdcSyncDeltaDceCombInstrumentField_CombInstrumentID_set, doc=r"""合约代码""")
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcSyncDeltaDceCombInstrumentField_ExchangeID_get, _thostmduserapi.CThostFtdcSyncDeltaDceCombInstrumentField_ExchangeID_set, doc=r"""交易所代码""")
    ExchangeInstID: "TThostFtdcExchangeInstIDType" = property(_thostmduserapi.CThostFtdcSyncDeltaDceCombInstrumentField_ExchangeInstID_get, _thostmduserapi.CThostFtdcSyncDeltaDceCombInstrumentField_ExchangeInstID_set, doc=r"""合约在交易所的代码""")
    TradeGroupID: "TThostFtdcTradeGroupIDType" = property(_thostmduserapi.CThostFtdcSyncDeltaDceCombInstrumentField_TradeGroupID_get, _thostmduserapi.CThostFtdcSyncDeltaDceCombInstrumentField_TradeGroupID_set, doc=r"""成交组号""")
    CombHedgeFlag: "TThostFtdcHedgeFlagType" = property(_thostmduserapi.CThostFtdcSyncDeltaDceCombInstrumentField_CombHedgeFlag_get, _thostmduserapi.CThostFtdcSyncDeltaDceCombInstrumentField_CombHedgeFlag_set, doc=r"""投机套保标志""")
    CombinationType: "TThostFtdcDceCombinationTypeType" = property(_thostmduserapi.CThostFtdcSyncDeltaDceCombInstrumentField_CombinationType_get, _thostmduserapi.CThostFtdcSyncDeltaDceCombInstrumentField_CombinationType_set, doc=r"""组合类型""")
    Direction: "TThostFtdcDirectionType" = property(_thostmduserapi.CThostFtdcSyncDeltaDceCombInstrumentField_Direction_get, _thostmduserapi.CThostFtdcSyncDeltaDceCombInstrumentField_Direction_set, doc=r"""买卖""")
    ProductID: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcSyncDeltaDceCombInstrumentField_ProductID_get, _thostmduserapi.CThostFtdcSyncDeltaDceCombInstrumentField_ProductID_set, doc=r"""产品代码""")
    Xparameter: "TThostFtdcDiscountRatioType" = property(_thostmduserapi.CThostFtdcSyncDeltaDceCombInstrumentField_Xparameter_get, _thostmduserapi.CThostFtdcSyncDeltaDceCombInstrumentField_Xparameter_set, doc=r"""期权组合保证金比例""")
    ActionDirection: "TThostFtdcActionDirectionType" = property(_thostmduserapi.CThostFtdcSyncDeltaDceCombInstrumentField_ActionDirection_get, _thostmduserapi.CThostFtdcSyncDeltaDceCombInstrumentField_ActionDirection_set, doc=r"""操作标志""")
    SyncDeltaSequenceNo: "TThostFtdcSequenceNoType" = property(_thostmduserapi.CThostFtdcSyncDeltaDceCombInstrumentField_SyncDeltaSequenceNo_get, _thostmduserapi.CThostFtdcSyncDeltaDceCombInstrumentField_SyncDeltaSequenceNo_set, doc=r"""追平序号""")

    def __init__(self):
        _thostmduserapi.CThostFtdcSyncDeltaDceCombInstrumentField_swiginit(self, _thostmduserapi.new_CThostFtdcSyncDeltaDceCombInstrumentField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcSyncDeltaDceCombInstrumentField

# Register CThostFtdcSyncDeltaDceCombInstrumentField in _thostmduserapi:
_thostmduserapi.CThostFtdcSyncDeltaDceCombInstrumentField_swigregister(CThostFtdcSyncDeltaDceCombInstrumentField)
class CThostFtdcSyncDeltaInvstMarginRateField(object):
    r"""风险结算追平投资者期货保证金率"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    InstrumentID: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcSyncDeltaInvstMarginRateField_InstrumentID_get, _thostmduserapi.CThostFtdcSyncDeltaInvstMarginRateField_InstrumentID_set, doc=r"""合约代码""")
    InvestorRange: "TThostFtdcInvestorRangeType" = property(_thostmduserapi.CThostFtdcSyncDeltaInvstMarginRateField_InvestorRange_get, _thostmduserapi.CThostFtdcSyncDeltaInvstMarginRateField_InvestorRange_set, doc=r"""投资者范围""")
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcSyncDeltaInvstMarginRateField_BrokerID_get, _thostmduserapi.CThostFtdcSyncDeltaInvstMarginRateField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "TThostFtdcInvestorIDType" = property(_thostmduserapi.CThostFtdcSyncDeltaInvstMarginRateField_InvestorID_get, _thostmduserapi.CThostFtdcSyncDeltaInvstMarginRateField_InvestorID_set, doc=r"""投资者代码""")
    HedgeFlag: "TThostFtdcHedgeFlagType" = property(_thostmduserapi.CThostFtdcSyncDeltaInvstMarginRateField_HedgeFlag_get, _thostmduserapi.CThostFtdcSyncDeltaInvstMarginRateField_HedgeFlag_set, doc=r"""投机套保标志""")
    LongMarginRatioByMoney: "TThostFtdcRatioType" = property(_thostmduserapi.CThostFtdcSyncDeltaInvstMarginRateField_LongMarginRatioByMoney_get, _thostmduserapi.CThostFtdcSyncDeltaInvstMarginRateField_LongMarginRatioByMoney_set, doc=r"""多头保证金率""")
    LongMarginRatioByVolume: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcSyncDeltaInvstMarginRateField_LongMarginRatioByVolume_get, _thostmduserapi.CThostFtdcSyncDeltaInvstMarginRateField_LongMarginRatioByVolume_set, doc=r"""多头保证金费""")
    ShortMarginRatioByMoney: "TThostFtdcRatioType" = property(_thostmduserapi.CThostFtdcSyncDeltaInvstMarginRateField_ShortMarginRatioByMoney_get, _thostmduserapi.CThostFtdcSyncDeltaInvstMarginRateField_ShortMarginRatioByMoney_set, doc=r"""空头保证金率""")
    ShortMarginRatioByVolume: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcSyncDeltaInvstMarginRateField_ShortMarginRatioByVolume_get, _thostmduserapi.CThostFtdcSyncDeltaInvstMarginRateField_ShortMarginRatioByVolume_set, doc=r"""空头保证金费""")
    IsRelative: "TThostFtdcBoolType" = property(_thostmduserapi.CThostFtdcSyncDeltaInvstMarginRateField_IsRelative_get, _thostmduserapi.CThostFtdcSyncDeltaInvstMarginRateField_IsRelative_set, doc=r"""是否相对交易所收取""")
    ActionDirection: "TThostFtdcActionDirectionType" = property(_thostmduserapi.CThostFtdcSyncDeltaInvstMarginRateField_ActionDirection_get, _thostmduserapi.CThostFtdcSyncDeltaInvstMarginRateField_ActionDirection_set, doc=r"""操作标志""")
    SyncDeltaSequenceNo: "TThostFtdcSequenceNoType" = property(_thostmduserapi.CThostFtdcSyncDeltaInvstMarginRateField_SyncDeltaSequenceNo_get, _thostmduserapi.CThostFtdcSyncDeltaInvstMarginRateField_SyncDeltaSequenceNo_set, doc=r"""追平序号""")

    def __init__(self):
        _thostmduserapi.CThostFtdcSyncDeltaInvstMarginRateField_swiginit(self, _thostmduserapi.new_CThostFtdcSyncDeltaInvstMarginRateField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcSyncDeltaInvstMarginRateField

# Register CThostFtdcSyncDeltaInvstMarginRateField in _thostmduserapi:
_thostmduserapi.CThostFtdcSyncDeltaInvstMarginRateField_swigregister(CThostFtdcSyncDeltaInvstMarginRateField)
class CThostFtdcSyncDeltaExchMarginRateField(object):
    r"""风险结算追平交易所期货保证金率"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcSyncDeltaExchMarginRateField_BrokerID_get, _thostmduserapi.CThostFtdcSyncDeltaExchMarginRateField_BrokerID_set, doc=r"""经纪公司代码""")
    InstrumentID: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcSyncDeltaExchMarginRateField_InstrumentID_get, _thostmduserapi.CThostFtdcSyncDeltaExchMarginRateField_InstrumentID_set, doc=r"""合约代码""")
    HedgeFlag: "TThostFtdcHedgeFlagType" = property(_thostmduserapi.CThostFtdcSyncDeltaExchMarginRateField_HedgeFlag_get, _thostmduserapi.CThostFtdcSyncDeltaExchMarginRateField_HedgeFlag_set, doc=r"""投机套保标志""")
    LongMarginRatioByMoney: "TThostFtdcRatioType" = property(_thostmduserapi.CThostFtdcSyncDeltaExchMarginRateField_LongMarginRatioByMoney_get, _thostmduserapi.CThostFtdcSyncDeltaExchMarginRateField_LongMarginRatioByMoney_set, doc=r"""多头保证金率""")
    LongMarginRatioByVolume: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcSyncDeltaExchMarginRateField_LongMarginRatioByVolume_get, _thostmduserapi.CThostFtdcSyncDeltaExchMarginRateField_LongMarginRatioByVolume_set, doc=r"""多头保证金费""")
    ShortMarginRatioByMoney: "TThostFtdcRatioType" = property(_thostmduserapi.CThostFtdcSyncDeltaExchMarginRateField_ShortMarginRatioByMoney_get, _thostmduserapi.CThostFtdcSyncDeltaExchMarginRateField_ShortMarginRatioByMoney_set, doc=r"""空头保证金率""")
    ShortMarginRatioByVolume: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcSyncDeltaExchMarginRateField_ShortMarginRatioByVolume_get, _thostmduserapi.CThostFtdcSyncDeltaExchMarginRateField_ShortMarginRatioByVolume_set, doc=r"""空头保证金费""")
    ActionDirection: "TThostFtdcActionDirectionType" = property(_thostmduserapi.CThostFtdcSyncDeltaExchMarginRateField_ActionDirection_get, _thostmduserapi.CThostFtdcSyncDeltaExchMarginRateField_ActionDirection_set, doc=r"""操作标志""")
    SyncDeltaSequenceNo: "TThostFtdcSequenceNoType" = property(_thostmduserapi.CThostFtdcSyncDeltaExchMarginRateField_SyncDeltaSequenceNo_get, _thostmduserapi.CThostFtdcSyncDeltaExchMarginRateField_SyncDeltaSequenceNo_set, doc=r"""追平序号""")

    def __init__(self):
        _thostmduserapi.CThostFtdcSyncDeltaExchMarginRateField_swiginit(self, _thostmduserapi.new_CThostFtdcSyncDeltaExchMarginRateField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcSyncDeltaExchMarginRateField

# Register CThostFtdcSyncDeltaExchMarginRateField in _thostmduserapi:
_thostmduserapi.CThostFtdcSyncDeltaExchMarginRateField_swigregister(CThostFtdcSyncDeltaExchMarginRateField)
class CThostFtdcSyncDeltaOptExchMarginField(object):
    r"""风险结算追平中金现货期权交易所保证金率"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcSyncDeltaOptExchMarginField_BrokerID_get, _thostmduserapi.CThostFtdcSyncDeltaOptExchMarginField_BrokerID_set, doc=r"""经纪公司代码""")
    InstrumentID: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcSyncDeltaOptExchMarginField_InstrumentID_get, _thostmduserapi.CThostFtdcSyncDeltaOptExchMarginField_InstrumentID_set, doc=r"""合约代码""")
    SShortMarginRatioByMoney: "TThostFtdcRatioType" = property(_thostmduserapi.CThostFtdcSyncDeltaOptExchMarginField_SShortMarginRatioByMoney_get, _thostmduserapi.CThostFtdcSyncDeltaOptExchMarginField_SShortMarginRatioByMoney_set, doc=r"""投机空头保证金调整系数""")
    SShortMarginRatioByVolume: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcSyncDeltaOptExchMarginField_SShortMarginRatioByVolume_get, _thostmduserapi.CThostFtdcSyncDeltaOptExchMarginField_SShortMarginRatioByVolume_set, doc=r"""投机空头保证金调整系数""")
    HShortMarginRatioByMoney: "TThostFtdcRatioType" = property(_thostmduserapi.CThostFtdcSyncDeltaOptExchMarginField_HShortMarginRatioByMoney_get, _thostmduserapi.CThostFtdcSyncDeltaOptExchMarginField_HShortMarginRatioByMoney_set, doc=r"""保值空头保证金调整系数""")
    HShortMarginRatioByVolume: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcSyncDeltaOptExchMarginField_HShortMarginRatioByVolume_get, _thostmduserapi.CThostFtdcSyncDeltaOptExchMarginField_HShortMarginRatioByVolume_set, doc=r"""保值空头保证金调整系数""")
    AShortMarginRatioByMoney: "TThostFtdcRatioType" = property(_thostmduserapi.CThostFtdcSyncDeltaOptExchMarginField_AShortMarginRatioByMoney_get, _thostmduserapi.CThostFtdcSyncDeltaOptExchMarginField_AShortMarginRatioByMoney_set, doc=r"""套利空头保证金调整系数""")
    AShortMarginRatioByVolume: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcSyncDeltaOptExchMarginField_AShortMarginRatioByVolume_get, _thostmduserapi.CThostFtdcSyncDeltaOptExchMarginField_AShortMarginRatioByVolume_set, doc=r"""套利空头保证金调整系数""")
    MShortMarginRatioByMoney: "TThostFtdcRatioType" = property(_thostmduserapi.CThostFtdcSyncDeltaOptExchMarginField_MShortMarginRatioByMoney_get, _thostmduserapi.CThostFtdcSyncDeltaOptExchMarginField_MShortMarginRatioByMoney_set, doc=r"""做市商空头保证金调整系数""")
    MShortMarginRatioByVolume: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcSyncDeltaOptExchMarginField_MShortMarginRatioByVolume_get, _thostmduserapi.CThostFtdcSyncDeltaOptExchMarginField_MShortMarginRatioByVolume_set, doc=r"""做市商空头保证金调整系数""")
    ActionDirection: "TThostFtdcActionDirectionType" = property(_thostmduserapi.CThostFtdcSyncDeltaOptExchMarginField_ActionDirection_get, _thostmduserapi.CThostFtdcSyncDeltaOptExchMarginField_ActionDirection_set, doc=r"""操作标志""")
    SyncDeltaSequenceNo: "TThostFtdcSequenceNoType" = property(_thostmduserapi.CThostFtdcSyncDeltaOptExchMarginField_SyncDeltaSequenceNo_get, _thostmduserapi.CThostFtdcSyncDeltaOptExchMarginField_SyncDeltaSequenceNo_set, doc=r"""追平序号""")

    def __init__(self):
        _thostmduserapi.CThostFtdcSyncDeltaOptExchMarginField_swiginit(self, _thostmduserapi.new_CThostFtdcSyncDeltaOptExchMarginField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcSyncDeltaOptExchMarginField

# Register CThostFtdcSyncDeltaOptExchMarginField in _thostmduserapi:
_thostmduserapi.CThostFtdcSyncDeltaOptExchMarginField_swigregister(CThostFtdcSyncDeltaOptExchMarginField)
class CThostFtdcSyncDeltaOptInvstMarginField(object):
    r"""风险结算追平中金现货期权投资者保证金率"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    InstrumentID: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcSyncDeltaOptInvstMarginField_InstrumentID_get, _thostmduserapi.CThostFtdcSyncDeltaOptInvstMarginField_InstrumentID_set, doc=r"""合约代码""")
    InvestorRange: "TThostFtdcInvestorRangeType" = property(_thostmduserapi.CThostFtdcSyncDeltaOptInvstMarginField_InvestorRange_get, _thostmduserapi.CThostFtdcSyncDeltaOptInvstMarginField_InvestorRange_set, doc=r"""投资者范围""")
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcSyncDeltaOptInvstMarginField_BrokerID_get, _thostmduserapi.CThostFtdcSyncDeltaOptInvstMarginField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "TThostFtdcInvestorIDType" = property(_thostmduserapi.CThostFtdcSyncDeltaOptInvstMarginField_InvestorID_get, _thostmduserapi.CThostFtdcSyncDeltaOptInvstMarginField_InvestorID_set, doc=r"""投资者代码""")
    SShortMarginRatioByMoney: "TThostFtdcRatioType" = property(_thostmduserapi.CThostFtdcSyncDeltaOptInvstMarginField_SShortMarginRatioByMoney_get, _thostmduserapi.CThostFtdcSyncDeltaOptInvstMarginField_SShortMarginRatioByMoney_set, doc=r"""投机空头保证金调整系数""")
    SShortMarginRatioByVolume: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcSyncDeltaOptInvstMarginField_SShortMarginRatioByVolume_get, _thostmduserapi.CThostFtdcSyncDeltaOptInvstMarginField_SShortMarginRatioByVolume_set, doc=r"""投机空头保证金调整系数""")
    HShortMarginRatioByMoney: "TThostFtdcRatioType" = property(_thostmduserapi.CThostFtdcSyncDeltaOptInvstMarginField_HShortMarginRatioByMoney_get, _thostmduserapi.CThostFtdcSyncDeltaOptInvstMarginField_HShortMarginRatioByMoney_set, doc=r"""保值空头保证金调整系数""")
    HShortMarginRatioByVolume: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcSyncDeltaOptInvstMarginField_HShortMarginRatioByVolume_get, _thostmduserapi.CThostFtdcSyncDeltaOptInvstMarginField_HShortMarginRatioByVolume_set, doc=r"""保值空头保证金调整系数""")
    AShortMarginRatioByMoney: "TThostFtdcRatioType" = property(_thostmduserapi.CThostFtdcSyncDeltaOptInvstMarginField_AShortMarginRatioByMoney_get, _thostmduserapi.CThostFtdcSyncDeltaOptInvstMarginField_AShortMarginRatioByMoney_set, doc=r"""套利空头保证金调整系数""")
    AShortMarginRatioByVolume: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcSyncDeltaOptInvstMarginField_AShortMarginRatioByVolume_get, _thostmduserapi.CThostFtdcSyncDeltaOptInvstMarginField_AShortMarginRatioByVolume_set, doc=r"""套利空头保证金调整系数""")
    IsRelative: "TThostFtdcBoolType" = property(_thostmduserapi.CThostFtdcSyncDeltaOptInvstMarginField_IsRelative_get, _thostmduserapi.CThostFtdcSyncDeltaOptInvstMarginField_IsRelative_set, doc=r"""是否跟随交易所收取""")
    MShortMarginRatioByMoney: "TThostFtdcRatioType" = property(_thostmduserapi.CThostFtdcSyncDeltaOptInvstMarginField_MShortMarginRatioByMoney_get, _thostmduserapi.CThostFtdcSyncDeltaOptInvstMarginField_MShortMarginRatioByMoney_set, doc=r"""做市商空头保证金调整系数""")
    MShortMarginRatioByVolume: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcSyncDeltaOptInvstMarginField_MShortMarginRatioByVolume_get, _thostmduserapi.CThostFtdcSyncDeltaOptInvstMarginField_MShortMarginRatioByVolume_set, doc=r"""做市商空头保证金调整系数""")
    ActionDirection: "TThostFtdcActionDirectionType" = property(_thostmduserapi.CThostFtdcSyncDeltaOptInvstMarginField_ActionDirection_get, _thostmduserapi.CThostFtdcSyncDeltaOptInvstMarginField_ActionDirection_set, doc=r"""操作标志""")
    SyncDeltaSequenceNo: "TThostFtdcSequenceNoType" = property(_thostmduserapi.CThostFtdcSyncDeltaOptInvstMarginField_SyncDeltaSequenceNo_get, _thostmduserapi.CThostFtdcSyncDeltaOptInvstMarginField_SyncDeltaSequenceNo_set, doc=r"""追平序号""")

    def __init__(self):
        _thostmduserapi.CThostFtdcSyncDeltaOptInvstMarginField_swiginit(self, _thostmduserapi.new_CThostFtdcSyncDeltaOptInvstMarginField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcSyncDeltaOptInvstMarginField

# Register CThostFtdcSyncDeltaOptInvstMarginField in _thostmduserapi:
_thostmduserapi.CThostFtdcSyncDeltaOptInvstMarginField_swigregister(CThostFtdcSyncDeltaOptInvstMarginField)
class CThostFtdcSyncDeltaInvstMarginRateULField(object):
    r"""风险结算追平期权标的调整保证金率"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    InstrumentID: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcSyncDeltaInvstMarginRateULField_InstrumentID_get, _thostmduserapi.CThostFtdcSyncDeltaInvstMarginRateULField_InstrumentID_set, doc=r"""合约代码""")
    InvestorRange: "TThostFtdcInvestorRangeType" = property(_thostmduserapi.CThostFtdcSyncDeltaInvstMarginRateULField_InvestorRange_get, _thostmduserapi.CThostFtdcSyncDeltaInvstMarginRateULField_InvestorRange_set, doc=r"""投资者范围""")
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcSyncDeltaInvstMarginRateULField_BrokerID_get, _thostmduserapi.CThostFtdcSyncDeltaInvstMarginRateULField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "TThostFtdcInvestorIDType" = property(_thostmduserapi.CThostFtdcSyncDeltaInvstMarginRateULField_InvestorID_get, _thostmduserapi.CThostFtdcSyncDeltaInvstMarginRateULField_InvestorID_set, doc=r"""投资者代码""")
    HedgeFlag: "TThostFtdcHedgeFlagType" = property(_thostmduserapi.CThostFtdcSyncDeltaInvstMarginRateULField_HedgeFlag_get, _thostmduserapi.CThostFtdcSyncDeltaInvstMarginRateULField_HedgeFlag_set, doc=r"""投机套保标志""")
    LongMarginRatioByMoney: "TThostFtdcRatioType" = property(_thostmduserapi.CThostFtdcSyncDeltaInvstMarginRateULField_LongMarginRatioByMoney_get, _thostmduserapi.CThostFtdcSyncDeltaInvstMarginRateULField_LongMarginRatioByMoney_set, doc=r"""多头保证金率""")
    LongMarginRatioByVolume: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcSyncDeltaInvstMarginRateULField_LongMarginRatioByVolume_get, _thostmduserapi.CThostFtdcSyncDeltaInvstMarginRateULField_LongMarginRatioByVolume_set, doc=r"""多头保证金费""")
    ShortMarginRatioByMoney: "TThostFtdcRatioType" = property(_thostmduserapi.CThostFtdcSyncDeltaInvstMarginRateULField_ShortMarginRatioByMoney_get, _thostmduserapi.CThostFtdcSyncDeltaInvstMarginRateULField_ShortMarginRatioByMoney_set, doc=r"""空头保证金率""")
    ShortMarginRatioByVolume: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcSyncDeltaInvstMarginRateULField_ShortMarginRatioByVolume_get, _thostmduserapi.CThostFtdcSyncDeltaInvstMarginRateULField_ShortMarginRatioByVolume_set, doc=r"""空头保证金费""")
    ActionDirection: "TThostFtdcActionDirectionType" = property(_thostmduserapi.CThostFtdcSyncDeltaInvstMarginRateULField_ActionDirection_get, _thostmduserapi.CThostFtdcSyncDeltaInvstMarginRateULField_ActionDirection_set, doc=r"""操作标志""")
    SyncDeltaSequenceNo: "TThostFtdcSequenceNoType" = property(_thostmduserapi.CThostFtdcSyncDeltaInvstMarginRateULField_SyncDeltaSequenceNo_get, _thostmduserapi.CThostFtdcSyncDeltaInvstMarginRateULField_SyncDeltaSequenceNo_set, doc=r"""追平序号""")

    def __init__(self):
        _thostmduserapi.CThostFtdcSyncDeltaInvstMarginRateULField_swiginit(self, _thostmduserapi.new_CThostFtdcSyncDeltaInvstMarginRateULField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcSyncDeltaInvstMarginRateULField

# Register CThostFtdcSyncDeltaInvstMarginRateULField in _thostmduserapi:
_thostmduserapi.CThostFtdcSyncDeltaInvstMarginRateULField_swigregister(CThostFtdcSyncDeltaInvstMarginRateULField)
class CThostFtdcSyncDeltaOptInvstCommRateField(object):
    r"""风险结算追平期权手续费率"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    InstrumentID: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcSyncDeltaOptInvstCommRateField_InstrumentID_get, _thostmduserapi.CThostFtdcSyncDeltaOptInvstCommRateField_InstrumentID_set, doc=r"""合约代码""")
    InvestorRange: "TThostFtdcInvestorRangeType" = property(_thostmduserapi.CThostFtdcSyncDeltaOptInvstCommRateField_InvestorRange_get, _thostmduserapi.CThostFtdcSyncDeltaOptInvstCommRateField_InvestorRange_set, doc=r"""投资者范围""")
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcSyncDeltaOptInvstCommRateField_BrokerID_get, _thostmduserapi.CThostFtdcSyncDeltaOptInvstCommRateField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "TThostFtdcInvestorIDType" = property(_thostmduserapi.CThostFtdcSyncDeltaOptInvstCommRateField_InvestorID_get, _thostmduserapi.CThostFtdcSyncDeltaOptInvstCommRateField_InvestorID_set, doc=r"""投资者代码""")
    OpenRatioByMoney: "TThostFtdcRatioType" = property(_thostmduserapi.CThostFtdcSyncDeltaOptInvstCommRateField_OpenRatioByMoney_get, _thostmduserapi.CThostFtdcSyncDeltaOptInvstCommRateField_OpenRatioByMoney_set, doc=r"""开仓手续费率""")
    OpenRatioByVolume: "TThostFtdcRatioType" = property(_thostmduserapi.CThostFtdcSyncDeltaOptInvstCommRateField_OpenRatioByVolume_get, _thostmduserapi.CThostFtdcSyncDeltaOptInvstCommRateField_OpenRatioByVolume_set, doc=r"""开仓手续费""")
    CloseRatioByMoney: "TThostFtdcRatioType" = property(_thostmduserapi.CThostFtdcSyncDeltaOptInvstCommRateField_CloseRatioByMoney_get, _thostmduserapi.CThostFtdcSyncDeltaOptInvstCommRateField_CloseRatioByMoney_set, doc=r"""平仓手续费率""")
    CloseRatioByVolume: "TThostFtdcRatioType" = property(_thostmduserapi.CThostFtdcSyncDeltaOptInvstCommRateField_CloseRatioByVolume_get, _thostmduserapi.CThostFtdcSyncDeltaOptInvstCommRateField_CloseRatioByVolume_set, doc=r"""平仓手续费""")
    CloseTodayRatioByMoney: "TThostFtdcRatioType" = property(_thostmduserapi.CThostFtdcSyncDeltaOptInvstCommRateField_CloseTodayRatioByMoney_get, _thostmduserapi.CThostFtdcSyncDeltaOptInvstCommRateField_CloseTodayRatioByMoney_set, doc=r"""平今手续费率""")
    CloseTodayRatioByVolume: "TThostFtdcRatioType" = property(_thostmduserapi.CThostFtdcSyncDeltaOptInvstCommRateField_CloseTodayRatioByVolume_get, _thostmduserapi.CThostFtdcSyncDeltaOptInvstCommRateField_CloseTodayRatioByVolume_set, doc=r"""平今手续费""")
    StrikeRatioByMoney: "TThostFtdcRatioType" = property(_thostmduserapi.CThostFtdcSyncDeltaOptInvstCommRateField_StrikeRatioByMoney_get, _thostmduserapi.CThostFtdcSyncDeltaOptInvstCommRateField_StrikeRatioByMoney_set, doc=r"""执行手续费率""")
    StrikeRatioByVolume: "TThostFtdcRatioType" = property(_thostmduserapi.CThostFtdcSyncDeltaOptInvstCommRateField_StrikeRatioByVolume_get, _thostmduserapi.CThostFtdcSyncDeltaOptInvstCommRateField_StrikeRatioByVolume_set, doc=r"""执行手续费""")
    ActionDirection: "TThostFtdcActionDirectionType" = property(_thostmduserapi.CThostFtdcSyncDeltaOptInvstCommRateField_ActionDirection_get, _thostmduserapi.CThostFtdcSyncDeltaOptInvstCommRateField_ActionDirection_set, doc=r"""操作标志""")
    SyncDeltaSequenceNo: "TThostFtdcSequenceNoType" = property(_thostmduserapi.CThostFtdcSyncDeltaOptInvstCommRateField_SyncDeltaSequenceNo_get, _thostmduserapi.CThostFtdcSyncDeltaOptInvstCommRateField_SyncDeltaSequenceNo_set, doc=r"""追平序号""")

    def __init__(self):
        _thostmduserapi.CThostFtdcSyncDeltaOptInvstCommRateField_swiginit(self, _thostmduserapi.new_CThostFtdcSyncDeltaOptInvstCommRateField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcSyncDeltaOptInvstCommRateField

# Register CThostFtdcSyncDeltaOptInvstCommRateField in _thostmduserapi:
_thostmduserapi.CThostFtdcSyncDeltaOptInvstCommRateField_swigregister(CThostFtdcSyncDeltaOptInvstCommRateField)
class CThostFtdcSyncDeltaInvstCommRateField(object):
    r"""风险结算追平期货手续费率"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    InstrumentID: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcSyncDeltaInvstCommRateField_InstrumentID_get, _thostmduserapi.CThostFtdcSyncDeltaInvstCommRateField_InstrumentID_set, doc=r"""合约代码""")
    InvestorRange: "TThostFtdcInvestorRangeType" = property(_thostmduserapi.CThostFtdcSyncDeltaInvstCommRateField_InvestorRange_get, _thostmduserapi.CThostFtdcSyncDeltaInvstCommRateField_InvestorRange_set, doc=r"""投资者范围""")
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcSyncDeltaInvstCommRateField_BrokerID_get, _thostmduserapi.CThostFtdcSyncDeltaInvstCommRateField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "TThostFtdcInvestorIDType" = property(_thostmduserapi.CThostFtdcSyncDeltaInvstCommRateField_InvestorID_get, _thostmduserapi.CThostFtdcSyncDeltaInvstCommRateField_InvestorID_set, doc=r"""投资者代码""")
    OpenRatioByMoney: "TThostFtdcRatioType" = property(_thostmduserapi.CThostFtdcSyncDeltaInvstCommRateField_OpenRatioByMoney_get, _thostmduserapi.CThostFtdcSyncDeltaInvstCommRateField_OpenRatioByMoney_set, doc=r"""开仓手续费率""")
    OpenRatioByVolume: "TThostFtdcRatioType" = property(_thostmduserapi.CThostFtdcSyncDeltaInvstCommRateField_OpenRatioByVolume_get, _thostmduserapi.CThostFtdcSyncDeltaInvstCommRateField_OpenRatioByVolume_set, doc=r"""开仓手续费""")
    CloseRatioByMoney: "TThostFtdcRatioType" = property(_thostmduserapi.CThostFtdcSyncDeltaInvstCommRateField_CloseRatioByMoney_get, _thostmduserapi.CThostFtdcSyncDeltaInvstCommRateField_CloseRatioByMoney_set, doc=r"""平仓手续费率""")
    CloseRatioByVolume: "TThostFtdcRatioType" = property(_thostmduserapi.CThostFtdcSyncDeltaInvstCommRateField_CloseRatioByVolume_get, _thostmduserapi.CThostFtdcSyncDeltaInvstCommRateField_CloseRatioByVolume_set, doc=r"""平仓手续费""")
    CloseTodayRatioByMoney: "TThostFtdcRatioType" = property(_thostmduserapi.CThostFtdcSyncDeltaInvstCommRateField_CloseTodayRatioByMoney_get, _thostmduserapi.CThostFtdcSyncDeltaInvstCommRateField_CloseTodayRatioByMoney_set, doc=r"""平今手续费率""")
    CloseTodayRatioByVolume: "TThostFtdcRatioType" = property(_thostmduserapi.CThostFtdcSyncDeltaInvstCommRateField_CloseTodayRatioByVolume_get, _thostmduserapi.CThostFtdcSyncDeltaInvstCommRateField_CloseTodayRatioByVolume_set, doc=r"""平今手续费""")
    ActionDirection: "TThostFtdcActionDirectionType" = property(_thostmduserapi.CThostFtdcSyncDeltaInvstCommRateField_ActionDirection_get, _thostmduserapi.CThostFtdcSyncDeltaInvstCommRateField_ActionDirection_set, doc=r"""操作标志""")
    SyncDeltaSequenceNo: "TThostFtdcSequenceNoType" = property(_thostmduserapi.CThostFtdcSyncDeltaInvstCommRateField_SyncDeltaSequenceNo_get, _thostmduserapi.CThostFtdcSyncDeltaInvstCommRateField_SyncDeltaSequenceNo_set, doc=r"""追平序号""")

    def __init__(self):
        _thostmduserapi.CThostFtdcSyncDeltaInvstCommRateField_swiginit(self, _thostmduserapi.new_CThostFtdcSyncDeltaInvstCommRateField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcSyncDeltaInvstCommRateField

# Register CThostFtdcSyncDeltaInvstCommRateField in _thostmduserapi:
_thostmduserapi.CThostFtdcSyncDeltaInvstCommRateField_swigregister(CThostFtdcSyncDeltaInvstCommRateField)
class CThostFtdcSyncDeltaProductExchRateField(object):
    r"""风险结算追平交叉汇率"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ProductID: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcSyncDeltaProductExchRateField_ProductID_get, _thostmduserapi.CThostFtdcSyncDeltaProductExchRateField_ProductID_set, doc=r"""产品代码""")
    QuoteCurrencyID: "TThostFtdcCurrencyIDType" = property(_thostmduserapi.CThostFtdcSyncDeltaProductExchRateField_QuoteCurrencyID_get, _thostmduserapi.CThostFtdcSyncDeltaProductExchRateField_QuoteCurrencyID_set, doc=r"""报价币种类型""")
    ExchangeRate: "TThostFtdcExchangeRateType" = property(_thostmduserapi.CThostFtdcSyncDeltaProductExchRateField_ExchangeRate_get, _thostmduserapi.CThostFtdcSyncDeltaProductExchRateField_ExchangeRate_set, doc=r"""汇率""")
    ActionDirection: "TThostFtdcActionDirectionType" = property(_thostmduserapi.CThostFtdcSyncDeltaProductExchRateField_ActionDirection_get, _thostmduserapi.CThostFtdcSyncDeltaProductExchRateField_ActionDirection_set, doc=r"""操作标志""")
    SyncDeltaSequenceNo: "TThostFtdcSequenceNoType" = property(_thostmduserapi.CThostFtdcSyncDeltaProductExchRateField_SyncDeltaSequenceNo_get, _thostmduserapi.CThostFtdcSyncDeltaProductExchRateField_SyncDeltaSequenceNo_set, doc=r"""追平序号""")

    def __init__(self):
        _thostmduserapi.CThostFtdcSyncDeltaProductExchRateField_swiginit(self, _thostmduserapi.new_CThostFtdcSyncDeltaProductExchRateField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcSyncDeltaProductExchRateField

# Register CThostFtdcSyncDeltaProductExchRateField in _thostmduserapi:
_thostmduserapi.CThostFtdcSyncDeltaProductExchRateField_swigregister(CThostFtdcSyncDeltaProductExchRateField)
class CThostFtdcSyncDeltaDepthMarketDataField(object):
    r"""风险结算追平行情"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    TradingDay: "TThostFtdcDateType" = property(_thostmduserapi.CThostFtdcSyncDeltaDepthMarketDataField_TradingDay_get, _thostmduserapi.CThostFtdcSyncDeltaDepthMarketDataField_TradingDay_set, doc=r"""交易日""")
    InstrumentID: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcSyncDeltaDepthMarketDataField_InstrumentID_get, _thostmduserapi.CThostFtdcSyncDeltaDepthMarketDataField_InstrumentID_set, doc=r"""合约代码""")
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcSyncDeltaDepthMarketDataField_ExchangeID_get, _thostmduserapi.CThostFtdcSyncDeltaDepthMarketDataField_ExchangeID_set, doc=r"""交易所代码""")
    ExchangeInstID: "TThostFtdcExchangeInstIDType" = property(_thostmduserapi.CThostFtdcSyncDeltaDepthMarketDataField_ExchangeInstID_get, _thostmduserapi.CThostFtdcSyncDeltaDepthMarketDataField_ExchangeInstID_set, doc=r"""合约在交易所的代码""")
    LastPrice: "TThostFtdcPriceType" = property(_thostmduserapi.CThostFtdcSyncDeltaDepthMarketDataField_LastPrice_get, _thostmduserapi.CThostFtdcSyncDeltaDepthMarketDataField_LastPrice_set, doc=r"""最新价""")
    PreSettlementPrice: "TThostFtdcPriceType" = property(_thostmduserapi.CThostFtdcSyncDeltaDepthMarketDataField_PreSettlementPrice_get, _thostmduserapi.CThostFtdcSyncDeltaDepthMarketDataField_PreSettlementPrice_set, doc=r"""上次结算价""")
    PreClosePrice: "TThostFtdcPriceType" = property(_thostmduserapi.CThostFtdcSyncDeltaDepthMarketDataField_PreClosePrice_get, _thostmduserapi.CThostFtdcSyncDeltaDepthMarketDataField_PreClosePrice_set, doc=r"""昨收盘""")
    PreOpenInterest: "TThostFtdcLargeVolumeType" = property(_thostmduserapi.CThostFtdcSyncDeltaDepthMarketDataField_PreOpenInterest_get, _thostmduserapi.CThostFtdcSyncDeltaDepthMarketDataField_PreOpenInterest_set, doc=r"""昨持仓量""")
    OpenPrice: "TThostFtdcPriceType" = property(_thostmduserapi.CThostFtdcSyncDeltaDepthMarketDataField_OpenPrice_get, _thostmduserapi.CThostFtdcSyncDeltaDepthMarketDataField_OpenPrice_set, doc=r"""今开盘""")
    HighestPrice: "TThostFtdcPriceType" = property(_thostmduserapi.CThostFtdcSyncDeltaDepthMarketDataField_HighestPrice_get, _thostmduserapi.CThostFtdcSyncDeltaDepthMarketDataField_HighestPrice_set, doc=r"""最高价""")
    LowestPrice: "TThostFtdcPriceType" = property(_thostmduserapi.CThostFtdcSyncDeltaDepthMarketDataField_LowestPrice_get, _thostmduserapi.CThostFtdcSyncDeltaDepthMarketDataField_LowestPrice_set, doc=r"""最低价""")
    Volume: "TThostFtdcVolumeType" = property(_thostmduserapi.CThostFtdcSyncDeltaDepthMarketDataField_Volume_get, _thostmduserapi.CThostFtdcSyncDeltaDepthMarketDataField_Volume_set, doc=r"""数量""")
    Turnover: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcSyncDeltaDepthMarketDataField_Turnover_get, _thostmduserapi.CThostFtdcSyncDeltaDepthMarketDataField_Turnover_set, doc=r"""成交金额""")
    OpenInterest: "TThostFtdcLargeVolumeType" = property(_thostmduserapi.CThostFtdcSyncDeltaDepthMarketDataField_OpenInterest_get, _thostmduserapi.CThostFtdcSyncDeltaDepthMarketDataField_OpenInterest_set, doc=r"""持仓量""")
    ClosePrice: "TThostFtdcPriceType" = property(_thostmduserapi.CThostFtdcSyncDeltaDepthMarketDataField_ClosePrice_get, _thostmduserapi.CThostFtdcSyncDeltaDepthMarketDataField_ClosePrice_set, doc=r"""今收盘""")
    SettlementPrice: "TThostFtdcPriceType" = property(_thostmduserapi.CThostFtdcSyncDeltaDepthMarketDataField_SettlementPrice_get, _thostmduserapi.CThostFtdcSyncDeltaDepthMarketDataField_SettlementPrice_set, doc=r"""本次结算价""")
    UpperLimitPrice: "TThostFtdcPriceType" = property(_thostmduserapi.CThostFtdcSyncDeltaDepthMarketDataField_UpperLimitPrice_get, _thostmduserapi.CThostFtdcSyncDeltaDepthMarketDataField_UpperLimitPrice_set, doc=r"""涨停板价""")
    LowerLimitPrice: "TThostFtdcPriceType" = property(_thostmduserapi.CThostFtdcSyncDeltaDepthMarketDataField_LowerLimitPrice_get, _thostmduserapi.CThostFtdcSyncDeltaDepthMarketDataField_LowerLimitPrice_set, doc=r"""跌停板价""")
    PreDelta: "TThostFtdcRatioType" = property(_thostmduserapi.CThostFtdcSyncDeltaDepthMarketDataField_PreDelta_get, _thostmduserapi.CThostFtdcSyncDeltaDepthMarketDataField_PreDelta_set, doc=r"""昨虚实度""")
    CurrDelta: "TThostFtdcRatioType" = property(_thostmduserapi.CThostFtdcSyncDeltaDepthMarketDataField_CurrDelta_get, _thostmduserapi.CThostFtdcSyncDeltaDepthMarketDataField_CurrDelta_set, doc=r"""今虚实度""")
    UpdateTime: "TThostFtdcTimeType" = property(_thostmduserapi.CThostFtdcSyncDeltaDepthMarketDataField_UpdateTime_get, _thostmduserapi.CThostFtdcSyncDeltaDepthMarketDataField_UpdateTime_set, doc=r"""最后修改时间""")
    UpdateMillisec: "TThostFtdcMillisecType" = property(_thostmduserapi.CThostFtdcSyncDeltaDepthMarketDataField_UpdateMillisec_get, _thostmduserapi.CThostFtdcSyncDeltaDepthMarketDataField_UpdateMillisec_set, doc=r"""最后修改毫秒""")
    BidPrice1: "TThostFtdcPriceType" = property(_thostmduserapi.CThostFtdcSyncDeltaDepthMarketDataField_BidPrice1_get, _thostmduserapi.CThostFtdcSyncDeltaDepthMarketDataField_BidPrice1_set, doc=r"""申买价一""")
    BidVolume1: "TThostFtdcVolumeType" = property(_thostmduserapi.CThostFtdcSyncDeltaDepthMarketDataField_BidVolume1_get, _thostmduserapi.CThostFtdcSyncDeltaDepthMarketDataField_BidVolume1_set, doc=r"""申买量一""")
    AskPrice1: "TThostFtdcPriceType" = property(_thostmduserapi.CThostFtdcSyncDeltaDepthMarketDataField_AskPrice1_get, _thostmduserapi.CThostFtdcSyncDeltaDepthMarketDataField_AskPrice1_set, doc=r"""申卖价一""")
    AskVolume1: "TThostFtdcVolumeType" = property(_thostmduserapi.CThostFtdcSyncDeltaDepthMarketDataField_AskVolume1_get, _thostmduserapi.CThostFtdcSyncDeltaDepthMarketDataField_AskVolume1_set, doc=r"""申卖量一""")
    BidPrice2: "TThostFtdcPriceType" = property(_thostmduserapi.CThostFtdcSyncDeltaDepthMarketDataField_BidPrice2_get, _thostmduserapi.CThostFtdcSyncDeltaDepthMarketDataField_BidPrice2_set, doc=r"""申买价二""")
    BidVolume2: "TThostFtdcVolumeType" = property(_thostmduserapi.CThostFtdcSyncDeltaDepthMarketDataField_BidVolume2_get, _thostmduserapi.CThostFtdcSyncDeltaDepthMarketDataField_BidVolume2_set, doc=r"""申买量二""")
    AskPrice2: "TThostFtdcPriceType" = property(_thostmduserapi.CThostFtdcSyncDeltaDepthMarketDataField_AskPrice2_get, _thostmduserapi.CThostFtdcSyncDeltaDepthMarketDataField_AskPrice2_set, doc=r"""申卖价二""")
    AskVolume2: "TThostFtdcVolumeType" = property(_thostmduserapi.CThostFtdcSyncDeltaDepthMarketDataField_AskVolume2_get, _thostmduserapi.CThostFtdcSyncDeltaDepthMarketDataField_AskVolume2_set, doc=r"""申卖量二""")
    BidPrice3: "TThostFtdcPriceType" = property(_thostmduserapi.CThostFtdcSyncDeltaDepthMarketDataField_BidPrice3_get, _thostmduserapi.CThostFtdcSyncDeltaDepthMarketDataField_BidPrice3_set, doc=r"""申买价三""")
    BidVolume3: "TThostFtdcVolumeType" = property(_thostmduserapi.CThostFtdcSyncDeltaDepthMarketDataField_BidVolume3_get, _thostmduserapi.CThostFtdcSyncDeltaDepthMarketDataField_BidVolume3_set, doc=r"""申买量三""")
    AskPrice3: "TThostFtdcPriceType" = property(_thostmduserapi.CThostFtdcSyncDeltaDepthMarketDataField_AskPrice3_get, _thostmduserapi.CThostFtdcSyncDeltaDepthMarketDataField_AskPrice3_set, doc=r"""申卖价三""")
    AskVolume3: "TThostFtdcVolumeType" = property(_thostmduserapi.CThostFtdcSyncDeltaDepthMarketDataField_AskVolume3_get, _thostmduserapi.CThostFtdcSyncDeltaDepthMarketDataField_AskVolume3_set, doc=r"""申卖量三""")
    BidPrice4: "TThostFtdcPriceType" = property(_thostmduserapi.CThostFtdcSyncDeltaDepthMarketDataField_BidPrice4_get, _thostmduserapi.CThostFtdcSyncDeltaDepthMarketDataField_BidPrice4_set, doc=r"""申买价四""")
    BidVolume4: "TThostFtdcVolumeType" = property(_thostmduserapi.CThostFtdcSyncDeltaDepthMarketDataField_BidVolume4_get, _thostmduserapi.CThostFtdcSyncDeltaDepthMarketDataField_BidVolume4_set, doc=r"""申买量四""")
    AskPrice4: "TThostFtdcPriceType" = property(_thostmduserapi.CThostFtdcSyncDeltaDepthMarketDataField_AskPrice4_get, _thostmduserapi.CThostFtdcSyncDeltaDepthMarketDataField_AskPrice4_set, doc=r"""申卖价四""")
    AskVolume4: "TThostFtdcVolumeType" = property(_thostmduserapi.CThostFtdcSyncDeltaDepthMarketDataField_AskVolume4_get, _thostmduserapi.CThostFtdcSyncDeltaDepthMarketDataField_AskVolume4_set, doc=r"""申卖量四""")
    BidPrice5: "TThostFtdcPriceType" = property(_thostmduserapi.CThostFtdcSyncDeltaDepthMarketDataField_BidPrice5_get, _thostmduserapi.CThostFtdcSyncDeltaDepthMarketDataField_BidPrice5_set, doc=r"""申买价五""")
    BidVolume5: "TThostFtdcVolumeType" = property(_thostmduserapi.CThostFtdcSyncDeltaDepthMarketDataField_BidVolume5_get, _thostmduserapi.CThostFtdcSyncDeltaDepthMarketDataField_BidVolume5_set, doc=r"""申买量五""")
    AskPrice5: "TThostFtdcPriceType" = property(_thostmduserapi.CThostFtdcSyncDeltaDepthMarketDataField_AskPrice5_get, _thostmduserapi.CThostFtdcSyncDeltaDepthMarketDataField_AskPrice5_set, doc=r"""申卖价五""")
    AskVolume5: "TThostFtdcVolumeType" = property(_thostmduserapi.CThostFtdcSyncDeltaDepthMarketDataField_AskVolume5_get, _thostmduserapi.CThostFtdcSyncDeltaDepthMarketDataField_AskVolume5_set, doc=r"""申卖量五""")
    AveragePrice: "TThostFtdcPriceType" = property(_thostmduserapi.CThostFtdcSyncDeltaDepthMarketDataField_AveragePrice_get, _thostmduserapi.CThostFtdcSyncDeltaDepthMarketDataField_AveragePrice_set, doc=r"""当日均价""")
    ActionDay: "TThostFtdcDateType" = property(_thostmduserapi.CThostFtdcSyncDeltaDepthMarketDataField_ActionDay_get, _thostmduserapi.CThostFtdcSyncDeltaDepthMarketDataField_ActionDay_set, doc=r"""业务日期""")
    BandingUpperPrice: "TThostFtdcPriceType" = property(_thostmduserapi.CThostFtdcSyncDeltaDepthMarketDataField_BandingUpperPrice_get, _thostmduserapi.CThostFtdcSyncDeltaDepthMarketDataField_BandingUpperPrice_set, doc=r"""上带价""")
    BandingLowerPrice: "TThostFtdcPriceType" = property(_thostmduserapi.CThostFtdcSyncDeltaDepthMarketDataField_BandingLowerPrice_get, _thostmduserapi.CThostFtdcSyncDeltaDepthMarketDataField_BandingLowerPrice_set, doc=r"""下带价""")
    ActionDirection: "TThostFtdcActionDirectionType" = property(_thostmduserapi.CThostFtdcSyncDeltaDepthMarketDataField_ActionDirection_get, _thostmduserapi.CThostFtdcSyncDeltaDepthMarketDataField_ActionDirection_set, doc=r"""操作标志""")
    SyncDeltaSequenceNo: "TThostFtdcSequenceNoType" = property(_thostmduserapi.CThostFtdcSyncDeltaDepthMarketDataField_SyncDeltaSequenceNo_get, _thostmduserapi.CThostFtdcSyncDeltaDepthMarketDataField_SyncDeltaSequenceNo_set, doc=r"""追平序号""")

    def __init__(self):
        _thostmduserapi.CThostFtdcSyncDeltaDepthMarketDataField_swiginit(self, _thostmduserapi.new_CThostFtdcSyncDeltaDepthMarketDataField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcSyncDeltaDepthMarketDataField

# Register CThostFtdcSyncDeltaDepthMarketDataField in _thostmduserapi:
_thostmduserapi.CThostFtdcSyncDeltaDepthMarketDataField_swigregister(CThostFtdcSyncDeltaDepthMarketDataField)
class CThostFtdcSyncDeltaIndexPriceField(object):
    r"""风险结算追平现货指数"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcSyncDeltaIndexPriceField_BrokerID_get, _thostmduserapi.CThostFtdcSyncDeltaIndexPriceField_BrokerID_set, doc=r"""经纪公司代码""")
    InstrumentID: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcSyncDeltaIndexPriceField_InstrumentID_get, _thostmduserapi.CThostFtdcSyncDeltaIndexPriceField_InstrumentID_set, doc=r"""合约代码""")
    ClosePrice: "TThostFtdcPriceType" = property(_thostmduserapi.CThostFtdcSyncDeltaIndexPriceField_ClosePrice_get, _thostmduserapi.CThostFtdcSyncDeltaIndexPriceField_ClosePrice_set, doc=r"""指数现货收盘价""")
    ActionDirection: "TThostFtdcActionDirectionType" = property(_thostmduserapi.CThostFtdcSyncDeltaIndexPriceField_ActionDirection_get, _thostmduserapi.CThostFtdcSyncDeltaIndexPriceField_ActionDirection_set, doc=r"""操作标志""")
    SyncDeltaSequenceNo: "TThostFtdcSequenceNoType" = property(_thostmduserapi.CThostFtdcSyncDeltaIndexPriceField_SyncDeltaSequenceNo_get, _thostmduserapi.CThostFtdcSyncDeltaIndexPriceField_SyncDeltaSequenceNo_set, doc=r"""追平序号""")

    def __init__(self):
        _thostmduserapi.CThostFtdcSyncDeltaIndexPriceField_swiginit(self, _thostmduserapi.new_CThostFtdcSyncDeltaIndexPriceField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcSyncDeltaIndexPriceField

# Register CThostFtdcSyncDeltaIndexPriceField in _thostmduserapi:
_thostmduserapi.CThostFtdcSyncDeltaIndexPriceField_swigregister(CThostFtdcSyncDeltaIndexPriceField)
class CThostFtdcSyncDeltaEWarrantOffsetField(object):
    r"""风险结算追平仓单折抵"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    TradingDay: "TThostFtdcTradeDateType" = property(_thostmduserapi.CThostFtdcSyncDeltaEWarrantOffsetField_TradingDay_get, _thostmduserapi.CThostFtdcSyncDeltaEWarrantOffsetField_TradingDay_set, doc=r"""交易日期""")
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcSyncDeltaEWarrantOffsetField_BrokerID_get, _thostmduserapi.CThostFtdcSyncDeltaEWarrantOffsetField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "TThostFtdcInvestorIDType" = property(_thostmduserapi.CThostFtdcSyncDeltaEWarrantOffsetField_InvestorID_get, _thostmduserapi.CThostFtdcSyncDeltaEWarrantOffsetField_InvestorID_set, doc=r"""投资者代码""")
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcSyncDeltaEWarrantOffsetField_ExchangeID_get, _thostmduserapi.CThostFtdcSyncDeltaEWarrantOffsetField_ExchangeID_set, doc=r"""交易所代码""")
    InstrumentID: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcSyncDeltaEWarrantOffsetField_InstrumentID_get, _thostmduserapi.CThostFtdcSyncDeltaEWarrantOffsetField_InstrumentID_set, doc=r"""合约代码""")
    Direction: "TThostFtdcDirectionType" = property(_thostmduserapi.CThostFtdcSyncDeltaEWarrantOffsetField_Direction_get, _thostmduserapi.CThostFtdcSyncDeltaEWarrantOffsetField_Direction_set, doc=r"""买卖方向""")
    HedgeFlag: "TThostFtdcHedgeFlagType" = property(_thostmduserapi.CThostFtdcSyncDeltaEWarrantOffsetField_HedgeFlag_get, _thostmduserapi.CThostFtdcSyncDeltaEWarrantOffsetField_HedgeFlag_set, doc=r"""投机套保标志""")
    Volume: "TThostFtdcVolumeType" = property(_thostmduserapi.CThostFtdcSyncDeltaEWarrantOffsetField_Volume_get, _thostmduserapi.CThostFtdcSyncDeltaEWarrantOffsetField_Volume_set, doc=r"""数量""")
    ActionDirection: "TThostFtdcActionDirectionType" = property(_thostmduserapi.CThostFtdcSyncDeltaEWarrantOffsetField_ActionDirection_get, _thostmduserapi.CThostFtdcSyncDeltaEWarrantOffsetField_ActionDirection_set, doc=r"""操作标志""")
    SyncDeltaSequenceNo: "TThostFtdcSequenceNoType" = property(_thostmduserapi.CThostFtdcSyncDeltaEWarrantOffsetField_SyncDeltaSequenceNo_get, _thostmduserapi.CThostFtdcSyncDeltaEWarrantOffsetField_SyncDeltaSequenceNo_set, doc=r"""追平序号""")

    def __init__(self):
        _thostmduserapi.CThostFtdcSyncDeltaEWarrantOffsetField_swiginit(self, _thostmduserapi.new_CThostFtdcSyncDeltaEWarrantOffsetField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcSyncDeltaEWarrantOffsetField

# Register CThostFtdcSyncDeltaEWarrantOffsetField in _thostmduserapi:
_thostmduserapi.CThostFtdcSyncDeltaEWarrantOffsetField_swigregister(CThostFtdcSyncDeltaEWarrantOffsetField)
class CThostFtdcSPBMFutureParameterField(object):
    r"""SPBM期货合约保证金参数"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    TradingDay: "TThostFtdcDateType" = property(_thostmduserapi.CThostFtdcSPBMFutureParameterField_TradingDay_get, _thostmduserapi.CThostFtdcSPBMFutureParameterField_TradingDay_set, doc=r"""交易日""")
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcSPBMFutureParameterField_ExchangeID_get, _thostmduserapi.CThostFtdcSPBMFutureParameterField_ExchangeID_set, doc=r"""交易所代码""")
    InstrumentID: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcSPBMFutureParameterField_InstrumentID_get, _thostmduserapi.CThostFtdcSPBMFutureParameterField_InstrumentID_set, doc=r"""合约代码""")
    ProdFamilyCode: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcSPBMFutureParameterField_ProdFamilyCode_get, _thostmduserapi.CThostFtdcSPBMFutureParameterField_ProdFamilyCode_set, doc=r"""品种代码""")
    Cvf: "TThostFtdcVolumeMultipleType" = property(_thostmduserapi.CThostFtdcSPBMFutureParameterField_Cvf_get, _thostmduserapi.CThostFtdcSPBMFutureParameterField_Cvf_set, doc=r"""期货合约因子""")
    TimeRange: "TThostFtdcTimeRangeType" = property(_thostmduserapi.CThostFtdcSPBMFutureParameterField_TimeRange_get, _thostmduserapi.CThostFtdcSPBMFutureParameterField_TimeRange_set, doc=r"""阶段标识""")
    MarginRate: "TThostFtdcRatioType" = property(_thostmduserapi.CThostFtdcSPBMFutureParameterField_MarginRate_get, _thostmduserapi.CThostFtdcSPBMFutureParameterField_MarginRate_set, doc=r"""品种保证金标准""")
    LockRateX: "TThostFtdcRatioType" = property(_thostmduserapi.CThostFtdcSPBMFutureParameterField_LockRateX_get, _thostmduserapi.CThostFtdcSPBMFutureParameterField_LockRateX_set, doc=r"""期货合约内部对锁仓费率折扣比例""")
    AddOnRate: "TThostFtdcRatioType" = property(_thostmduserapi.CThostFtdcSPBMFutureParameterField_AddOnRate_get, _thostmduserapi.CThostFtdcSPBMFutureParameterField_AddOnRate_set, doc=r"""提高保证金标准""")
    PreSettlementPrice: "TThostFtdcPriceType" = property(_thostmduserapi.CThostFtdcSPBMFutureParameterField_PreSettlementPrice_get, _thostmduserapi.CThostFtdcSPBMFutureParameterField_PreSettlementPrice_set, doc=r"""昨结算价""")
    AddOnLockRateX2: "TThostFtdcRatioType" = property(_thostmduserapi.CThostFtdcSPBMFutureParameterField_AddOnLockRateX2_get, _thostmduserapi.CThostFtdcSPBMFutureParameterField_AddOnLockRateX2_set, doc=r"""期货合约内部对锁仓附加费率折扣比例""")

    def __init__(self):
        _thostmduserapi.CThostFtdcSPBMFutureParameterField_swiginit(self, _thostmduserapi.new_CThostFtdcSPBMFutureParameterField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcSPBMFutureParameterField

# Register CThostFtdcSPBMFutureParameterField in _thostmduserapi:
_thostmduserapi.CThostFtdcSPBMFutureParameterField_swigregister(CThostFtdcSPBMFutureParameterField)
class CThostFtdcSPBMOptionParameterField(object):
    r"""SPBM期权合约保证金参数"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    TradingDay: "TThostFtdcDateType" = property(_thostmduserapi.CThostFtdcSPBMOptionParameterField_TradingDay_get, _thostmduserapi.CThostFtdcSPBMOptionParameterField_TradingDay_set, doc=r"""交易日""")
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcSPBMOptionParameterField_ExchangeID_get, _thostmduserapi.CThostFtdcSPBMOptionParameterField_ExchangeID_set, doc=r"""交易所代码""")
    InstrumentID: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcSPBMOptionParameterField_InstrumentID_get, _thostmduserapi.CThostFtdcSPBMOptionParameterField_InstrumentID_set, doc=r"""合约代码""")
    ProdFamilyCode: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcSPBMOptionParameterField_ProdFamilyCode_get, _thostmduserapi.CThostFtdcSPBMOptionParameterField_ProdFamilyCode_set, doc=r"""品种代码""")
    Cvf: "TThostFtdcVolumeMultipleType" = property(_thostmduserapi.CThostFtdcSPBMOptionParameterField_Cvf_get, _thostmduserapi.CThostFtdcSPBMOptionParameterField_Cvf_set, doc=r"""期权合约因子""")
    DownPrice: "TThostFtdcPriceType" = property(_thostmduserapi.CThostFtdcSPBMOptionParameterField_DownPrice_get, _thostmduserapi.CThostFtdcSPBMOptionParameterField_DownPrice_set, doc=r"""期权冲抵价格""")
    Delta: "TThostFtdcDeltaType" = property(_thostmduserapi.CThostFtdcSPBMOptionParameterField_Delta_get, _thostmduserapi.CThostFtdcSPBMOptionParameterField_Delta_set, doc=r"""Delta值""")
    SlimiDelta: "TThostFtdcDeltaType" = property(_thostmduserapi.CThostFtdcSPBMOptionParameterField_SlimiDelta_get, _thostmduserapi.CThostFtdcSPBMOptionParameterField_SlimiDelta_set, doc=r"""卖方期权风险转换最低值""")
    PreSettlementPrice: "TThostFtdcPriceType" = property(_thostmduserapi.CThostFtdcSPBMOptionParameterField_PreSettlementPrice_get, _thostmduserapi.CThostFtdcSPBMOptionParameterField_PreSettlementPrice_set, doc=r"""昨结算价""")

    def __init__(self):
        _thostmduserapi.CThostFtdcSPBMOptionParameterField_swiginit(self, _thostmduserapi.new_CThostFtdcSPBMOptionParameterField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcSPBMOptionParameterField

# Register CThostFtdcSPBMOptionParameterField in _thostmduserapi:
_thostmduserapi.CThostFtdcSPBMOptionParameterField_swigregister(CThostFtdcSPBMOptionParameterField)
class CThostFtdcSPBMIntraParameterField(object):
    r"""SPBM品种内对锁仓折扣参数"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    TradingDay: "TThostFtdcDateType" = property(_thostmduserapi.CThostFtdcSPBMIntraParameterField_TradingDay_get, _thostmduserapi.CThostFtdcSPBMIntraParameterField_TradingDay_set, doc=r"""交易日""")
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcSPBMIntraParameterField_ExchangeID_get, _thostmduserapi.CThostFtdcSPBMIntraParameterField_ExchangeID_set, doc=r"""交易所代码""")
    ProdFamilyCode: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcSPBMIntraParameterField_ProdFamilyCode_get, _thostmduserapi.CThostFtdcSPBMIntraParameterField_ProdFamilyCode_set, doc=r"""品种代码""")
    IntraRateY: "TThostFtdcRatioType" = property(_thostmduserapi.CThostFtdcSPBMIntraParameterField_IntraRateY_get, _thostmduserapi.CThostFtdcSPBMIntraParameterField_IntraRateY_set, doc=r"""品种内合约间对锁仓费率折扣比例""")
    AddOnIntraRateY2: "TThostFtdcRatioType" = property(_thostmduserapi.CThostFtdcSPBMIntraParameterField_AddOnIntraRateY2_get, _thostmduserapi.CThostFtdcSPBMIntraParameterField_AddOnIntraRateY2_set, doc=r"""品种内合约间对锁仓附加费率折扣比例""")

    def __init__(self):
        _thostmduserapi.CThostFtdcSPBMIntraParameterField_swiginit(self, _thostmduserapi.new_CThostFtdcSPBMIntraParameterField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcSPBMIntraParameterField

# Register CThostFtdcSPBMIntraParameterField in _thostmduserapi:
_thostmduserapi.CThostFtdcSPBMIntraParameterField_swigregister(CThostFtdcSPBMIntraParameterField)
class CThostFtdcSPBMInterParameterField(object):
    r"""SPBM跨品种抵扣参数"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    TradingDay: "TThostFtdcDateType" = property(_thostmduserapi.CThostFtdcSPBMInterParameterField_TradingDay_get, _thostmduserapi.CThostFtdcSPBMInterParameterField_TradingDay_set, doc=r"""交易日""")
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcSPBMInterParameterField_ExchangeID_get, _thostmduserapi.CThostFtdcSPBMInterParameterField_ExchangeID_set, doc=r"""交易所代码""")
    SpreadId: "TThostFtdcSpreadIdType" = property(_thostmduserapi.CThostFtdcSPBMInterParameterField_SpreadId_get, _thostmduserapi.CThostFtdcSPBMInterParameterField_SpreadId_set, doc=r"""优先级""")
    InterRateZ: "TThostFtdcRatioType" = property(_thostmduserapi.CThostFtdcSPBMInterParameterField_InterRateZ_get, _thostmduserapi.CThostFtdcSPBMInterParameterField_InterRateZ_set, doc=r"""品种间对锁仓费率折扣比例""")
    Leg1ProdFamilyCode: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcSPBMInterParameterField_Leg1ProdFamilyCode_get, _thostmduserapi.CThostFtdcSPBMInterParameterField_Leg1ProdFamilyCode_set, doc=r"""第一腿构成品种""")
    Leg2ProdFamilyCode: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcSPBMInterParameterField_Leg2ProdFamilyCode_get, _thostmduserapi.CThostFtdcSPBMInterParameterField_Leg2ProdFamilyCode_set, doc=r"""第二腿构成品种""")

    def __init__(self):
        _thostmduserapi.CThostFtdcSPBMInterParameterField_swiginit(self, _thostmduserapi.new_CThostFtdcSPBMInterParameterField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcSPBMInterParameterField

# Register CThostFtdcSPBMInterParameterField in _thostmduserapi:
_thostmduserapi.CThostFtdcSPBMInterParameterField_swigregister(CThostFtdcSPBMInterParameterField)
class CThostFtdcSyncSPBMParameterEndField(object):
    r"""同步SPBM参数结束"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    TradingDay: "TThostFtdcDateType" = property(_thostmduserapi.CThostFtdcSyncSPBMParameterEndField_TradingDay_get, _thostmduserapi.CThostFtdcSyncSPBMParameterEndField_TradingDay_set, doc=r"""交易日""")

    def __init__(self):
        _thostmduserapi.CThostFtdcSyncSPBMParameterEndField_swiginit(self, _thostmduserapi.new_CThostFtdcSyncSPBMParameterEndField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcSyncSPBMParameterEndField

# Register CThostFtdcSyncSPBMParameterEndField in _thostmduserapi:
_thostmduserapi.CThostFtdcSyncSPBMParameterEndField_swigregister(CThostFtdcSyncSPBMParameterEndField)
class CThostFtdcQrySPBMFutureParameterField(object):
    r"""SPBM期货合约保证金参数查询"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcQrySPBMFutureParameterField_ExchangeID_get, _thostmduserapi.CThostFtdcQrySPBMFutureParameterField_ExchangeID_set, doc=r"""交易所代码""")
    InstrumentID: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcQrySPBMFutureParameterField_InstrumentID_get, _thostmduserapi.CThostFtdcQrySPBMFutureParameterField_InstrumentID_set, doc=r"""合约代码""")
    ProdFamilyCode: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcQrySPBMFutureParameterField_ProdFamilyCode_get, _thostmduserapi.CThostFtdcQrySPBMFutureParameterField_ProdFamilyCode_set, doc=r"""品种代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcQrySPBMFutureParameterField_swiginit(self, _thostmduserapi.new_CThostFtdcQrySPBMFutureParameterField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcQrySPBMFutureParameterField

# Register CThostFtdcQrySPBMFutureParameterField in _thostmduserapi:
_thostmduserapi.CThostFtdcQrySPBMFutureParameterField_swigregister(CThostFtdcQrySPBMFutureParameterField)
class CThostFtdcQrySPBMOptionParameterField(object):
    r"""SPBM期权合约保证金参数查询"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcQrySPBMOptionParameterField_ExchangeID_get, _thostmduserapi.CThostFtdcQrySPBMOptionParameterField_ExchangeID_set, doc=r"""交易所代码""")
    InstrumentID: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcQrySPBMOptionParameterField_InstrumentID_get, _thostmduserapi.CThostFtdcQrySPBMOptionParameterField_InstrumentID_set, doc=r"""合约代码""")
    ProdFamilyCode: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcQrySPBMOptionParameterField_ProdFamilyCode_get, _thostmduserapi.CThostFtdcQrySPBMOptionParameterField_ProdFamilyCode_set, doc=r"""品种代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcQrySPBMOptionParameterField_swiginit(self, _thostmduserapi.new_CThostFtdcQrySPBMOptionParameterField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcQrySPBMOptionParameterField

# Register CThostFtdcQrySPBMOptionParameterField in _thostmduserapi:
_thostmduserapi.CThostFtdcQrySPBMOptionParameterField_swigregister(CThostFtdcQrySPBMOptionParameterField)
class CThostFtdcQrySPBMIntraParameterField(object):
    r"""SPBM品种内对锁仓折扣参数查询"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcQrySPBMIntraParameterField_ExchangeID_get, _thostmduserapi.CThostFtdcQrySPBMIntraParameterField_ExchangeID_set, doc=r"""交易所代码""")
    ProdFamilyCode: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcQrySPBMIntraParameterField_ProdFamilyCode_get, _thostmduserapi.CThostFtdcQrySPBMIntraParameterField_ProdFamilyCode_set, doc=r"""品种代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcQrySPBMIntraParameterField_swiginit(self, _thostmduserapi.new_CThostFtdcQrySPBMIntraParameterField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcQrySPBMIntraParameterField

# Register CThostFtdcQrySPBMIntraParameterField in _thostmduserapi:
_thostmduserapi.CThostFtdcQrySPBMIntraParameterField_swigregister(CThostFtdcQrySPBMIntraParameterField)
class CThostFtdcQrySPBMInterParameterField(object):
    r"""SPBM跨品种抵扣参数查询"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcQrySPBMInterParameterField_ExchangeID_get, _thostmduserapi.CThostFtdcQrySPBMInterParameterField_ExchangeID_set, doc=r"""交易所代码""")
    Leg1ProdFamilyCode: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcQrySPBMInterParameterField_Leg1ProdFamilyCode_get, _thostmduserapi.CThostFtdcQrySPBMInterParameterField_Leg1ProdFamilyCode_set, doc=r"""第一腿构成品种""")
    Leg2ProdFamilyCode: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcQrySPBMInterParameterField_Leg2ProdFamilyCode_get, _thostmduserapi.CThostFtdcQrySPBMInterParameterField_Leg2ProdFamilyCode_set, doc=r"""第二腿构成品种""")

    def __init__(self):
        _thostmduserapi.CThostFtdcQrySPBMInterParameterField_swiginit(self, _thostmduserapi.new_CThostFtdcQrySPBMInterParameterField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcQrySPBMInterParameterField

# Register CThostFtdcQrySPBMInterParameterField in _thostmduserapi:
_thostmduserapi.CThostFtdcQrySPBMInterParameterField_swigregister(CThostFtdcQrySPBMInterParameterField)
class CThostFtdcSPBMPortfDefinitionField(object):
    r"""组合保证金套餐"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcSPBMPortfDefinitionField_ExchangeID_get, _thostmduserapi.CThostFtdcSPBMPortfDefinitionField_ExchangeID_set, doc=r"""交易所代码""")
    PortfolioDefID: "TThostFtdcPortfolioDefIDType" = property(_thostmduserapi.CThostFtdcSPBMPortfDefinitionField_PortfolioDefID_get, _thostmduserapi.CThostFtdcSPBMPortfDefinitionField_PortfolioDefID_set, doc=r"""组合保证金套餐代码""")
    ProdFamilyCode: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcSPBMPortfDefinitionField_ProdFamilyCode_get, _thostmduserapi.CThostFtdcSPBMPortfDefinitionField_ProdFamilyCode_set, doc=r"""品种代码""")
    IsSPBM: "TThostFtdcBoolType" = property(_thostmduserapi.CThostFtdcSPBMPortfDefinitionField_IsSPBM_get, _thostmduserapi.CThostFtdcSPBMPortfDefinitionField_IsSPBM_set, doc=r"""是否启用SPBM""")

    def __init__(self):
        _thostmduserapi.CThostFtdcSPBMPortfDefinitionField_swiginit(self, _thostmduserapi.new_CThostFtdcSPBMPortfDefinitionField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcSPBMPortfDefinitionField

# Register CThostFtdcSPBMPortfDefinitionField in _thostmduserapi:
_thostmduserapi.CThostFtdcSPBMPortfDefinitionField_swigregister(CThostFtdcSPBMPortfDefinitionField)
class CThostFtdcSPBMInvestorPortfDefField(object):
    r"""投资者套餐选择"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcSPBMInvestorPortfDefField_ExchangeID_get, _thostmduserapi.CThostFtdcSPBMInvestorPortfDefField_ExchangeID_set, doc=r"""交易所代码""")
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcSPBMInvestorPortfDefField_BrokerID_get, _thostmduserapi.CThostFtdcSPBMInvestorPortfDefField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "TThostFtdcInvestorIDType" = property(_thostmduserapi.CThostFtdcSPBMInvestorPortfDefField_InvestorID_get, _thostmduserapi.CThostFtdcSPBMInvestorPortfDefField_InvestorID_set, doc=r"""投资者代码""")
    PortfolioDefID: "TThostFtdcPortfolioDefIDType" = property(_thostmduserapi.CThostFtdcSPBMInvestorPortfDefField_PortfolioDefID_get, _thostmduserapi.CThostFtdcSPBMInvestorPortfDefField_PortfolioDefID_set, doc=r"""组合保证金套餐代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcSPBMInvestorPortfDefField_swiginit(self, _thostmduserapi.new_CThostFtdcSPBMInvestorPortfDefField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcSPBMInvestorPortfDefField

# Register CThostFtdcSPBMInvestorPortfDefField in _thostmduserapi:
_thostmduserapi.CThostFtdcSPBMInvestorPortfDefField_swigregister(CThostFtdcSPBMInvestorPortfDefField)
class CThostFtdcInvestorPortfMarginRatioField(object):
    r"""投资者新型组合保证金系数"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    InvestorRange: "TThostFtdcInvestorRangeType" = property(_thostmduserapi.CThostFtdcInvestorPortfMarginRatioField_InvestorRange_get, _thostmduserapi.CThostFtdcInvestorPortfMarginRatioField_InvestorRange_set, doc=r"""投资者范围""")
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcInvestorPortfMarginRatioField_BrokerID_get, _thostmduserapi.CThostFtdcInvestorPortfMarginRatioField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "TThostFtdcInvestorIDType" = property(_thostmduserapi.CThostFtdcInvestorPortfMarginRatioField_InvestorID_get, _thostmduserapi.CThostFtdcInvestorPortfMarginRatioField_InvestorID_set, doc=r"""投资者代码""")
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcInvestorPortfMarginRatioField_ExchangeID_get, _thostmduserapi.CThostFtdcInvestorPortfMarginRatioField_ExchangeID_set, doc=r"""交易所代码""")
    MarginRatio: "TThostFtdcRatioType" = property(_thostmduserapi.CThostFtdcInvestorPortfMarginRatioField_MarginRatio_get, _thostmduserapi.CThostFtdcInvestorPortfMarginRatioField_MarginRatio_set, doc=r"""会员对投资者收取的保证金和交易所对投资者收取的保证金的比例""")

    def __init__(self):
        _thostmduserapi.CThostFtdcInvestorPortfMarginRatioField_swiginit(self, _thostmduserapi.new_CThostFtdcInvestorPortfMarginRatioField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcInvestorPortfMarginRatioField

# Register CThostFtdcInvestorPortfMarginRatioField in _thostmduserapi:
_thostmduserapi.CThostFtdcInvestorPortfMarginRatioField_swigregister(CThostFtdcInvestorPortfMarginRatioField)
class CThostFtdcQrySPBMPortfDefinitionField(object):
    r"""组合保证金套餐查询"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcQrySPBMPortfDefinitionField_ExchangeID_get, _thostmduserapi.CThostFtdcQrySPBMPortfDefinitionField_ExchangeID_set, doc=r"""交易所代码""")
    PortfolioDefID: "TThostFtdcPortfolioDefIDType" = property(_thostmduserapi.CThostFtdcQrySPBMPortfDefinitionField_PortfolioDefID_get, _thostmduserapi.CThostFtdcQrySPBMPortfDefinitionField_PortfolioDefID_set, doc=r"""组合保证金套餐代码""")
    ProdFamilyCode: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcQrySPBMPortfDefinitionField_ProdFamilyCode_get, _thostmduserapi.CThostFtdcQrySPBMPortfDefinitionField_ProdFamilyCode_set, doc=r"""品种代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcQrySPBMPortfDefinitionField_swiginit(self, _thostmduserapi.new_CThostFtdcQrySPBMPortfDefinitionField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcQrySPBMPortfDefinitionField

# Register CThostFtdcQrySPBMPortfDefinitionField in _thostmduserapi:
_thostmduserapi.CThostFtdcQrySPBMPortfDefinitionField_swigregister(CThostFtdcQrySPBMPortfDefinitionField)
class CThostFtdcQrySPBMInvestorPortfDefField(object):
    r"""投资者套餐选择查询"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcQrySPBMInvestorPortfDefField_ExchangeID_get, _thostmduserapi.CThostFtdcQrySPBMInvestorPortfDefField_ExchangeID_set, doc=r"""交易所代码""")
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcQrySPBMInvestorPortfDefField_BrokerID_get, _thostmduserapi.CThostFtdcQrySPBMInvestorPortfDefField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "TThostFtdcInvestorIDType" = property(_thostmduserapi.CThostFtdcQrySPBMInvestorPortfDefField_InvestorID_get, _thostmduserapi.CThostFtdcQrySPBMInvestorPortfDefField_InvestorID_set, doc=r"""投资者代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcQrySPBMInvestorPortfDefField_swiginit(self, _thostmduserapi.new_CThostFtdcQrySPBMInvestorPortfDefField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcQrySPBMInvestorPortfDefField

# Register CThostFtdcQrySPBMInvestorPortfDefField in _thostmduserapi:
_thostmduserapi.CThostFtdcQrySPBMInvestorPortfDefField_swigregister(CThostFtdcQrySPBMInvestorPortfDefField)
class CThostFtdcQryInvestorPortfMarginRatioField(object):
    r"""投资者新型组合保证金系数查询"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcQryInvestorPortfMarginRatioField_BrokerID_get, _thostmduserapi.CThostFtdcQryInvestorPortfMarginRatioField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "TThostFtdcInvestorIDType" = property(_thostmduserapi.CThostFtdcQryInvestorPortfMarginRatioField_InvestorID_get, _thostmduserapi.CThostFtdcQryInvestorPortfMarginRatioField_InvestorID_set, doc=r"""投资者代码""")
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcQryInvestorPortfMarginRatioField_ExchangeID_get, _thostmduserapi.CThostFtdcQryInvestorPortfMarginRatioField_ExchangeID_set, doc=r"""交易所代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcQryInvestorPortfMarginRatioField_swiginit(self, _thostmduserapi.new_CThostFtdcQryInvestorPortfMarginRatioField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcQryInvestorPortfMarginRatioField

# Register CThostFtdcQryInvestorPortfMarginRatioField in _thostmduserapi:
_thostmduserapi.CThostFtdcQryInvestorPortfMarginRatioField_swigregister(CThostFtdcQryInvestorPortfMarginRatioField)
class CThostFtdcInvestorProdSPBMDetailField(object):
    r"""投资者产品SPBM明细"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcInvestorProdSPBMDetailField_ExchangeID_get, _thostmduserapi.CThostFtdcInvestorProdSPBMDetailField_ExchangeID_set, doc=r"""交易所代码""")
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcInvestorProdSPBMDetailField_BrokerID_get, _thostmduserapi.CThostFtdcInvestorProdSPBMDetailField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "TThostFtdcInvestorIDType" = property(_thostmduserapi.CThostFtdcInvestorProdSPBMDetailField_InvestorID_get, _thostmduserapi.CThostFtdcInvestorProdSPBMDetailField_InvestorID_set, doc=r"""投资者代码""")
    ProdFamilyCode: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcInvestorProdSPBMDetailField_ProdFamilyCode_get, _thostmduserapi.CThostFtdcInvestorProdSPBMDetailField_ProdFamilyCode_set, doc=r"""品种代码""")
    IntraInstrMargin: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcInvestorProdSPBMDetailField_IntraInstrMargin_get, _thostmduserapi.CThostFtdcInvestorProdSPBMDetailField_IntraInstrMargin_set, doc=r"""合约内对锁保证金""")
    BCollectingMargin: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcInvestorProdSPBMDetailField_BCollectingMargin_get, _thostmduserapi.CThostFtdcInvestorProdSPBMDetailField_BCollectingMargin_set, doc=r"""买归集保证金""")
    SCollectingMargin: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcInvestorProdSPBMDetailField_SCollectingMargin_get, _thostmduserapi.CThostFtdcInvestorProdSPBMDetailField_SCollectingMargin_set, doc=r"""卖归集保证金""")
    IntraProdMargin: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcInvestorProdSPBMDetailField_IntraProdMargin_get, _thostmduserapi.CThostFtdcInvestorProdSPBMDetailField_IntraProdMargin_set, doc=r"""品种内合约间对锁保证金""")
    NetMargin: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcInvestorProdSPBMDetailField_NetMargin_get, _thostmduserapi.CThostFtdcInvestorProdSPBMDetailField_NetMargin_set, doc=r"""净保证金""")
    InterProdMargin: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcInvestorProdSPBMDetailField_InterProdMargin_get, _thostmduserapi.CThostFtdcInvestorProdSPBMDetailField_InterProdMargin_set, doc=r"""产品间对锁保证金""")
    SingleMargin: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcInvestorProdSPBMDetailField_SingleMargin_get, _thostmduserapi.CThostFtdcInvestorProdSPBMDetailField_SingleMargin_set, doc=r"""裸保证金""")
    AddOnMargin: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcInvestorProdSPBMDetailField_AddOnMargin_get, _thostmduserapi.CThostFtdcInvestorProdSPBMDetailField_AddOnMargin_set, doc=r"""附加保证金""")
    DeliveryMargin: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcInvestorProdSPBMDetailField_DeliveryMargin_get, _thostmduserapi.CThostFtdcInvestorProdSPBMDetailField_DeliveryMargin_set, doc=r"""交割月保证金""")
    CallOptionMinRisk: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcInvestorProdSPBMDetailField_CallOptionMinRisk_get, _thostmduserapi.CThostFtdcInvestorProdSPBMDetailField_CallOptionMinRisk_set, doc=r"""看涨期权最低风险""")
    PutOptionMinRisk: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcInvestorProdSPBMDetailField_PutOptionMinRisk_get, _thostmduserapi.CThostFtdcInvestorProdSPBMDetailField_PutOptionMinRisk_set, doc=r"""看跌期权最低风险""")
    OptionMinRisk: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcInvestorProdSPBMDetailField_OptionMinRisk_get, _thostmduserapi.CThostFtdcInvestorProdSPBMDetailField_OptionMinRisk_set, doc=r"""卖方期权最低风险""")
    OptionValueOffset: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcInvestorProdSPBMDetailField_OptionValueOffset_get, _thostmduserapi.CThostFtdcInvestorProdSPBMDetailField_OptionValueOffset_set, doc=r"""买方期权冲抵价值""")
    OptionRoyalty: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcInvestorProdSPBMDetailField_OptionRoyalty_get, _thostmduserapi.CThostFtdcInvestorProdSPBMDetailField_OptionRoyalty_set, doc=r"""卖方期权权利金""")
    RealOptionValueOffset: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcInvestorProdSPBMDetailField_RealOptionValueOffset_get, _thostmduserapi.CThostFtdcInvestorProdSPBMDetailField_RealOptionValueOffset_set, doc=r"""价值冲抵""")
    Margin: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcInvestorProdSPBMDetailField_Margin_get, _thostmduserapi.CThostFtdcInvestorProdSPBMDetailField_Margin_set, doc=r"""保证金""")
    ExchMargin: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcInvestorProdSPBMDetailField_ExchMargin_get, _thostmduserapi.CThostFtdcInvestorProdSPBMDetailField_ExchMargin_set, doc=r"""交易所保证金""")

    def __init__(self):
        _thostmduserapi.CThostFtdcInvestorProdSPBMDetailField_swiginit(self, _thostmduserapi.new_CThostFtdcInvestorProdSPBMDetailField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcInvestorProdSPBMDetailField

# Register CThostFtdcInvestorProdSPBMDetailField in _thostmduserapi:
_thostmduserapi.CThostFtdcInvestorProdSPBMDetailField_swigregister(CThostFtdcInvestorProdSPBMDetailField)
class CThostFtdcQryInvestorProdSPBMDetailField(object):
    r"""投资者产品SPBM明细查询"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcQryInvestorProdSPBMDetailField_ExchangeID_get, _thostmduserapi.CThostFtdcQryInvestorProdSPBMDetailField_ExchangeID_set, doc=r"""交易所代码""")
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcQryInvestorProdSPBMDetailField_BrokerID_get, _thostmduserapi.CThostFtdcQryInvestorProdSPBMDetailField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "TThostFtdcInvestorIDType" = property(_thostmduserapi.CThostFtdcQryInvestorProdSPBMDetailField_InvestorID_get, _thostmduserapi.CThostFtdcQryInvestorProdSPBMDetailField_InvestorID_set, doc=r"""投资者代码""")
    ProdFamilyCode: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcQryInvestorProdSPBMDetailField_ProdFamilyCode_get, _thostmduserapi.CThostFtdcQryInvestorProdSPBMDetailField_ProdFamilyCode_set, doc=r"""品种代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcQryInvestorProdSPBMDetailField_swiginit(self, _thostmduserapi.new_CThostFtdcQryInvestorProdSPBMDetailField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcQryInvestorProdSPBMDetailField

# Register CThostFtdcQryInvestorProdSPBMDetailField in _thostmduserapi:
_thostmduserapi.CThostFtdcQryInvestorProdSPBMDetailField_swigregister(CThostFtdcQryInvestorProdSPBMDetailField)
class CThostFtdcPortfTradeParamSettingField(object):
    r"""组保交易参数设置"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcPortfTradeParamSettingField_ExchangeID_get, _thostmduserapi.CThostFtdcPortfTradeParamSettingField_ExchangeID_set, doc=r"""交易所代码""")
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcPortfTradeParamSettingField_BrokerID_get, _thostmduserapi.CThostFtdcPortfTradeParamSettingField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "TThostFtdcInvestorIDType" = property(_thostmduserapi.CThostFtdcPortfTradeParamSettingField_InvestorID_get, _thostmduserapi.CThostFtdcPortfTradeParamSettingField_InvestorID_set, doc=r"""投资者代码""")
    Portfolio: "TThostFtdcPortfolioType" = property(_thostmduserapi.CThostFtdcPortfTradeParamSettingField_Portfolio_get, _thostmduserapi.CThostFtdcPortfTradeParamSettingField_Portfolio_set, doc=r"""新型组保算法""")
    IsActionVerify: "TThostFtdcBoolType" = property(_thostmduserapi.CThostFtdcPortfTradeParamSettingField_IsActionVerify_get, _thostmduserapi.CThostFtdcPortfTradeParamSettingField_IsActionVerify_set, doc=r"""撤单是否验资""")
    IsCloseVerify: "TThostFtdcBoolType" = property(_thostmduserapi.CThostFtdcPortfTradeParamSettingField_IsCloseVerify_get, _thostmduserapi.CThostFtdcPortfTradeParamSettingField_IsCloseVerify_set, doc=r"""平仓是否验资""")

    def __init__(self):
        _thostmduserapi.CThostFtdcPortfTradeParamSettingField_swiginit(self, _thostmduserapi.new_CThostFtdcPortfTradeParamSettingField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcPortfTradeParamSettingField

# Register CThostFtdcPortfTradeParamSettingField in _thostmduserapi:
_thostmduserapi.CThostFtdcPortfTradeParamSettingField_swigregister(CThostFtdcPortfTradeParamSettingField)
class CThostFtdcInvestorTradingRightField(object):
    r"""投资者交易权限设置"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcInvestorTradingRightField_BrokerID_get, _thostmduserapi.CThostFtdcInvestorTradingRightField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "TThostFtdcInvestorIDType" = property(_thostmduserapi.CThostFtdcInvestorTradingRightField_InvestorID_get, _thostmduserapi.CThostFtdcInvestorTradingRightField_InvestorID_set, doc=r"""投资者代码""")
    InvstTradingRight: "TThostFtdcInvstTradingRightType" = property(_thostmduserapi.CThostFtdcInvestorTradingRightField_InvstTradingRight_get, _thostmduserapi.CThostFtdcInvestorTradingRightField_InvstTradingRight_set, doc=r"""交易权限""")

    def __init__(self):
        _thostmduserapi.CThostFtdcInvestorTradingRightField_swiginit(self, _thostmduserapi.new_CThostFtdcInvestorTradingRightField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcInvestorTradingRightField

# Register CThostFtdcInvestorTradingRightField in _thostmduserapi:
_thostmduserapi.CThostFtdcInvestorTradingRightField_swigregister(CThostFtdcInvestorTradingRightField)
class CThostFtdcMortgageParamField(object):
    r"""质押配比参数"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcMortgageParamField_BrokerID_get, _thostmduserapi.CThostFtdcMortgageParamField_BrokerID_set, doc=r"""经纪公司代码""")
    AccountID: "TThostFtdcAccountIDType" = property(_thostmduserapi.CThostFtdcMortgageParamField_AccountID_get, _thostmduserapi.CThostFtdcMortgageParamField_AccountID_set, doc=r"""投资者帐号""")
    MortgageBalance: "TThostFtdcRatioType" = property(_thostmduserapi.CThostFtdcMortgageParamField_MortgageBalance_get, _thostmduserapi.CThostFtdcMortgageParamField_MortgageBalance_set, doc=r"""质押配比系数""")
    CheckMortgageRatio: "TThostFtdcBoolType" = property(_thostmduserapi.CThostFtdcMortgageParamField_CheckMortgageRatio_get, _thostmduserapi.CThostFtdcMortgageParamField_CheckMortgageRatio_set, doc=r"""开仓是否验证质押配比""")

    def __init__(self):
        _thostmduserapi.CThostFtdcMortgageParamField_swiginit(self, _thostmduserapi.new_CThostFtdcMortgageParamField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcMortgageParamField

# Register CThostFtdcMortgageParamField in _thostmduserapi:
_thostmduserapi.CThostFtdcMortgageParamField_swigregister(CThostFtdcMortgageParamField)
class CThostFtdcWithDrawParamField(object):
    r"""可提控制参数"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcWithDrawParamField_BrokerID_get, _thostmduserapi.CThostFtdcWithDrawParamField_BrokerID_set, doc=r"""经纪公司代码""")
    AccountID: "TThostFtdcAccountIDType" = property(_thostmduserapi.CThostFtdcWithDrawParamField_AccountID_get, _thostmduserapi.CThostFtdcWithDrawParamField_AccountID_set, doc=r"""投资者帐号""")
    WithDrawParamID: "TThostFtdcWithDrawParamIDType" = property(_thostmduserapi.CThostFtdcWithDrawParamField_WithDrawParamID_get, _thostmduserapi.CThostFtdcWithDrawParamField_WithDrawParamID_set, doc=r"""参数代码""")
    WithDrawParamValue: "TThostFtdcWithDrawParamValueType" = property(_thostmduserapi.CThostFtdcWithDrawParamField_WithDrawParamValue_get, _thostmduserapi.CThostFtdcWithDrawParamField_WithDrawParamValue_set, doc=r"""参数代码值""")

    def __init__(self):
        _thostmduserapi.CThostFtdcWithDrawParamField_swiginit(self, _thostmduserapi.new_CThostFtdcWithDrawParamField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcWithDrawParamField

# Register CThostFtdcWithDrawParamField in _thostmduserapi:
_thostmduserapi.CThostFtdcWithDrawParamField_swigregister(CThostFtdcWithDrawParamField)
class CThostFtdcThostUserFunctionField(object):
    r"""Thost终端用户功能权限"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcThostUserFunctionField_BrokerID_get, _thostmduserapi.CThostFtdcThostUserFunctionField_BrokerID_set, doc=r"""经纪公司代码""")
    UserID: "TThostFtdcUserIDType" = property(_thostmduserapi.CThostFtdcThostUserFunctionField_UserID_get, _thostmduserapi.CThostFtdcThostUserFunctionField_UserID_set, doc=r"""用户代码""")
    ThostFunctionCode: "TThostFtdcThostFunctionCodeType" = property(_thostmduserapi.CThostFtdcThostUserFunctionField_ThostFunctionCode_get, _thostmduserapi.CThostFtdcThostUserFunctionField_ThostFunctionCode_set, doc=r"""Thost终端功能代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcThostUserFunctionField_swiginit(self, _thostmduserapi.new_CThostFtdcThostUserFunctionField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcThostUserFunctionField

# Register CThostFtdcThostUserFunctionField in _thostmduserapi:
_thostmduserapi.CThostFtdcThostUserFunctionField_swigregister(CThostFtdcThostUserFunctionField)
class CThostFtdcQryThostUserFunctionField(object):
    r"""Thost终端用户功能权限查询"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcQryThostUserFunctionField_BrokerID_get, _thostmduserapi.CThostFtdcQryThostUserFunctionField_BrokerID_set, doc=r"""经纪公司代码""")
    UserID: "TThostFtdcUserIDType" = property(_thostmduserapi.CThostFtdcQryThostUserFunctionField_UserID_get, _thostmduserapi.CThostFtdcQryThostUserFunctionField_UserID_set, doc=r"""用户代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcQryThostUserFunctionField_swiginit(self, _thostmduserapi.new_CThostFtdcQryThostUserFunctionField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcQryThostUserFunctionField

# Register CThostFtdcQryThostUserFunctionField in _thostmduserapi:
_thostmduserapi.CThostFtdcQryThostUserFunctionField_swigregister(CThostFtdcQryThostUserFunctionField)
class CThostFtdcSPBMAddOnInterParameterField(object):
    r"""SPBM附加跨品种抵扣参数"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    TradingDay: "TThostFtdcDateType" = property(_thostmduserapi.CThostFtdcSPBMAddOnInterParameterField_TradingDay_get, _thostmduserapi.CThostFtdcSPBMAddOnInterParameterField_TradingDay_set, doc=r"""交易日""")
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcSPBMAddOnInterParameterField_ExchangeID_get, _thostmduserapi.CThostFtdcSPBMAddOnInterParameterField_ExchangeID_set, doc=r"""交易所代码""")
    SpreadId: "TThostFtdcSpreadIdType" = property(_thostmduserapi.CThostFtdcSPBMAddOnInterParameterField_SpreadId_get, _thostmduserapi.CThostFtdcSPBMAddOnInterParameterField_SpreadId_set, doc=r"""优先级""")
    AddOnInterRateZ2: "TThostFtdcRatioType" = property(_thostmduserapi.CThostFtdcSPBMAddOnInterParameterField_AddOnInterRateZ2_get, _thostmduserapi.CThostFtdcSPBMAddOnInterParameterField_AddOnInterRateZ2_set, doc=r"""品种间对锁仓附加费率折扣比例""")
    Leg1ProdFamilyCode: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcSPBMAddOnInterParameterField_Leg1ProdFamilyCode_get, _thostmduserapi.CThostFtdcSPBMAddOnInterParameterField_Leg1ProdFamilyCode_set, doc=r"""第一腿构成品种""")
    Leg2ProdFamilyCode: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcSPBMAddOnInterParameterField_Leg2ProdFamilyCode_get, _thostmduserapi.CThostFtdcSPBMAddOnInterParameterField_Leg2ProdFamilyCode_set, doc=r"""第二腿构成品种""")

    def __init__(self):
        _thostmduserapi.CThostFtdcSPBMAddOnInterParameterField_swiginit(self, _thostmduserapi.new_CThostFtdcSPBMAddOnInterParameterField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcSPBMAddOnInterParameterField

# Register CThostFtdcSPBMAddOnInterParameterField in _thostmduserapi:
_thostmduserapi.CThostFtdcSPBMAddOnInterParameterField_swigregister(CThostFtdcSPBMAddOnInterParameterField)
class CThostFtdcQrySPBMAddOnInterParameterField(object):
    r"""SPBM附加跨品种抵扣参数查询"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcQrySPBMAddOnInterParameterField_ExchangeID_get, _thostmduserapi.CThostFtdcQrySPBMAddOnInterParameterField_ExchangeID_set, doc=r"""交易所代码""")
    Leg1ProdFamilyCode: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcQrySPBMAddOnInterParameterField_Leg1ProdFamilyCode_get, _thostmduserapi.CThostFtdcQrySPBMAddOnInterParameterField_Leg1ProdFamilyCode_set, doc=r"""第一腿构成品种""")
    Leg2ProdFamilyCode: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcQrySPBMAddOnInterParameterField_Leg2ProdFamilyCode_get, _thostmduserapi.CThostFtdcQrySPBMAddOnInterParameterField_Leg2ProdFamilyCode_set, doc=r"""第二腿构成品种""")

    def __init__(self):
        _thostmduserapi.CThostFtdcQrySPBMAddOnInterParameterField_swiginit(self, _thostmduserapi.new_CThostFtdcQrySPBMAddOnInterParameterField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcQrySPBMAddOnInterParameterField

# Register CThostFtdcQrySPBMAddOnInterParameterField in _thostmduserapi:
_thostmduserapi.CThostFtdcQrySPBMAddOnInterParameterField_swigregister(CThostFtdcQrySPBMAddOnInterParameterField)
class CThostFtdcQryInvestorCommoditySPMMMarginField(object):
    r"""投资者商品组SPMM记录查询"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcQryInvestorCommoditySPMMMarginField_BrokerID_get, _thostmduserapi.CThostFtdcQryInvestorCommoditySPMMMarginField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "TThostFtdcInvestorIDType" = property(_thostmduserapi.CThostFtdcQryInvestorCommoditySPMMMarginField_InvestorID_get, _thostmduserapi.CThostFtdcQryInvestorCommoditySPMMMarginField_InvestorID_set, doc=r"""投资者代码""")
    CommodityID: "TThostFtdcSPMMProductIDType" = property(_thostmduserapi.CThostFtdcQryInvestorCommoditySPMMMarginField_CommodityID_get, _thostmduserapi.CThostFtdcQryInvestorCommoditySPMMMarginField_CommodityID_set, doc=r"""商品组代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcQryInvestorCommoditySPMMMarginField_swiginit(self, _thostmduserapi.new_CThostFtdcQryInvestorCommoditySPMMMarginField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcQryInvestorCommoditySPMMMarginField

# Register CThostFtdcQryInvestorCommoditySPMMMarginField in _thostmduserapi:
_thostmduserapi.CThostFtdcQryInvestorCommoditySPMMMarginField_swigregister(CThostFtdcQryInvestorCommoditySPMMMarginField)
class CThostFtdcQryInvestorCommodityGroupSPMMMarginField(object):
    r"""投资者商品群SPMM记录查询"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcQryInvestorCommodityGroupSPMMMarginField_BrokerID_get, _thostmduserapi.CThostFtdcQryInvestorCommodityGroupSPMMMarginField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "TThostFtdcInvestorIDType" = property(_thostmduserapi.CThostFtdcQryInvestorCommodityGroupSPMMMarginField_InvestorID_get, _thostmduserapi.CThostFtdcQryInvestorCommodityGroupSPMMMarginField_InvestorID_set, doc=r"""投资者代码""")
    CommodityGroupID: "TThostFtdcSPMMProductIDType" = property(_thostmduserapi.CThostFtdcQryInvestorCommodityGroupSPMMMarginField_CommodityGroupID_get, _thostmduserapi.CThostFtdcQryInvestorCommodityGroupSPMMMarginField_CommodityGroupID_set, doc=r"""商品群代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcQryInvestorCommodityGroupSPMMMarginField_swiginit(self, _thostmduserapi.new_CThostFtdcQryInvestorCommodityGroupSPMMMarginField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcQryInvestorCommodityGroupSPMMMarginField

# Register CThostFtdcQryInvestorCommodityGroupSPMMMarginField in _thostmduserapi:
_thostmduserapi.CThostFtdcQryInvestorCommodityGroupSPMMMarginField_swigregister(CThostFtdcQryInvestorCommodityGroupSPMMMarginField)
class CThostFtdcQrySPMMInstParamField(object):
    r"""SPMM合约参数查询"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    InstrumentID: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcQrySPMMInstParamField_InstrumentID_get, _thostmduserapi.CThostFtdcQrySPMMInstParamField_InstrumentID_set, doc=r"""合约代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcQrySPMMInstParamField_swiginit(self, _thostmduserapi.new_CThostFtdcQrySPMMInstParamField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcQrySPMMInstParamField

# Register CThostFtdcQrySPMMInstParamField in _thostmduserapi:
_thostmduserapi.CThostFtdcQrySPMMInstParamField_swigregister(CThostFtdcQrySPMMInstParamField)
class CThostFtdcQrySPMMProductParamField(object):
    r"""SPMM产品参数查询"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ProductID: "TThostFtdcSPMMProductIDType" = property(_thostmduserapi.CThostFtdcQrySPMMProductParamField_ProductID_get, _thostmduserapi.CThostFtdcQrySPMMProductParamField_ProductID_set, doc=r"""产品代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcQrySPMMProductParamField_swiginit(self, _thostmduserapi.new_CThostFtdcQrySPMMProductParamField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcQrySPMMProductParamField

# Register CThostFtdcQrySPMMProductParamField in _thostmduserapi:
_thostmduserapi.CThostFtdcQrySPMMProductParamField_swigregister(CThostFtdcQrySPMMProductParamField)
class CThostFtdcInvestorCommoditySPMMMarginField(object):
    r"""投资者商品组SPMM记录"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcInvestorCommoditySPMMMarginField_ExchangeID_get, _thostmduserapi.CThostFtdcInvestorCommoditySPMMMarginField_ExchangeID_set, doc=r"""交易所代码""")
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcInvestorCommoditySPMMMarginField_BrokerID_get, _thostmduserapi.CThostFtdcInvestorCommoditySPMMMarginField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "TThostFtdcInvestorIDType" = property(_thostmduserapi.CThostFtdcInvestorCommoditySPMMMarginField_InvestorID_get, _thostmduserapi.CThostFtdcInvestorCommoditySPMMMarginField_InvestorID_set, doc=r"""投资者代码""")
    CommodityID: "TThostFtdcSPMMProductIDType" = property(_thostmduserapi.CThostFtdcInvestorCommoditySPMMMarginField_CommodityID_get, _thostmduserapi.CThostFtdcInvestorCommoditySPMMMarginField_CommodityID_set, doc=r"""商品组代码""")
    MarginBeforeDiscount: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcInvestorCommoditySPMMMarginField_MarginBeforeDiscount_get, _thostmduserapi.CThostFtdcInvestorCommoditySPMMMarginField_MarginBeforeDiscount_set, doc=r"""优惠仓位应收保证金""")
    MarginNoDiscount: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcInvestorCommoditySPMMMarginField_MarginNoDiscount_get, _thostmduserapi.CThostFtdcInvestorCommoditySPMMMarginField_MarginNoDiscount_set, doc=r"""不优惠仓位应收保证金""")
    LongPosRisk: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcInvestorCommoditySPMMMarginField_LongPosRisk_get, _thostmduserapi.CThostFtdcInvestorCommoditySPMMMarginField_LongPosRisk_set, doc=r"""多头实仓风险""")
    LongOpenFrozenRisk: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcInvestorCommoditySPMMMarginField_LongOpenFrozenRisk_get, _thostmduserapi.CThostFtdcInvestorCommoditySPMMMarginField_LongOpenFrozenRisk_set, doc=r"""多头开仓冻结风险""")
    LongCloseFrozenRisk: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcInvestorCommoditySPMMMarginField_LongCloseFrozenRisk_get, _thostmduserapi.CThostFtdcInvestorCommoditySPMMMarginField_LongCloseFrozenRisk_set, doc=r"""多头被平冻结风险""")
    ShortPosRisk: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcInvestorCommoditySPMMMarginField_ShortPosRisk_get, _thostmduserapi.CThostFtdcInvestorCommoditySPMMMarginField_ShortPosRisk_set, doc=r"""空头实仓风险""")
    ShortOpenFrozenRisk: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcInvestorCommoditySPMMMarginField_ShortOpenFrozenRisk_get, _thostmduserapi.CThostFtdcInvestorCommoditySPMMMarginField_ShortOpenFrozenRisk_set, doc=r"""空头开仓冻结风险""")
    ShortCloseFrozenRisk: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcInvestorCommoditySPMMMarginField_ShortCloseFrozenRisk_get, _thostmduserapi.CThostFtdcInvestorCommoditySPMMMarginField_ShortCloseFrozenRisk_set, doc=r"""空头被平冻结风险""")
    IntraCommodityRate: "TThostFtdcSPMMDiscountRatioType" = property(_thostmduserapi.CThostFtdcInvestorCommoditySPMMMarginField_IntraCommodityRate_get, _thostmduserapi.CThostFtdcInvestorCommoditySPMMMarginField_IntraCommodityRate_set, doc=r"""SPMM品种内跨期优惠系数""")
    OptionDiscountRate: "TThostFtdcSPMMDiscountRatioType" = property(_thostmduserapi.CThostFtdcInvestorCommoditySPMMMarginField_OptionDiscountRate_get, _thostmduserapi.CThostFtdcInvestorCommoditySPMMMarginField_OptionDiscountRate_set, doc=r"""SPMM期权优惠系数""")
    PosDiscount: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcInvestorCommoditySPMMMarginField_PosDiscount_get, _thostmduserapi.CThostFtdcInvestorCommoditySPMMMarginField_PosDiscount_set, doc=r"""实仓对冲优惠金额""")
    OpenFrozenDiscount: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcInvestorCommoditySPMMMarginField_OpenFrozenDiscount_get, _thostmduserapi.CThostFtdcInvestorCommoditySPMMMarginField_OpenFrozenDiscount_set, doc=r"""开仓报单对冲优惠金额""")
    NetRisk: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcInvestorCommoditySPMMMarginField_NetRisk_get, _thostmduserapi.CThostFtdcInvestorCommoditySPMMMarginField_NetRisk_set, doc=r"""品种风险净头""")
    CloseFrozenMargin: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcInvestorCommoditySPMMMarginField_CloseFrozenMargin_get, _thostmduserapi.CThostFtdcInvestorCommoditySPMMMarginField_CloseFrozenMargin_set, doc=r"""平仓冻结保证金""")
    FrozenCommission: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcInvestorCommoditySPMMMarginField_FrozenCommission_get, _thostmduserapi.CThostFtdcInvestorCommoditySPMMMarginField_FrozenCommission_set, doc=r"""冻结的手续费""")
    Commission: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcInvestorCommoditySPMMMarginField_Commission_get, _thostmduserapi.CThostFtdcInvestorCommoditySPMMMarginField_Commission_set, doc=r"""手续费""")
    FrozenCash: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcInvestorCommoditySPMMMarginField_FrozenCash_get, _thostmduserapi.CThostFtdcInvestorCommoditySPMMMarginField_FrozenCash_set, doc=r"""冻结的资金""")
    CashIn: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcInvestorCommoditySPMMMarginField_CashIn_get, _thostmduserapi.CThostFtdcInvestorCommoditySPMMMarginField_CashIn_set, doc=r"""资金差额""")
    StrikeFrozenMargin: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcInvestorCommoditySPMMMarginField_StrikeFrozenMargin_get, _thostmduserapi.CThostFtdcInvestorCommoditySPMMMarginField_StrikeFrozenMargin_set, doc=r"""行权冻结资金""")

    def __init__(self):
        _thostmduserapi.CThostFtdcInvestorCommoditySPMMMarginField_swiginit(self, _thostmduserapi.new_CThostFtdcInvestorCommoditySPMMMarginField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcInvestorCommoditySPMMMarginField

# Register CThostFtdcInvestorCommoditySPMMMarginField in _thostmduserapi:
_thostmduserapi.CThostFtdcInvestorCommoditySPMMMarginField_swigregister(CThostFtdcInvestorCommoditySPMMMarginField)
class CThostFtdcInvestorCommodityGroupSPMMMarginField(object):
    r"""投资者商品群SPMM记录"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcInvestorCommodityGroupSPMMMarginField_ExchangeID_get, _thostmduserapi.CThostFtdcInvestorCommodityGroupSPMMMarginField_ExchangeID_set, doc=r"""交易所代码""")
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcInvestorCommodityGroupSPMMMarginField_BrokerID_get, _thostmduserapi.CThostFtdcInvestorCommodityGroupSPMMMarginField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "TThostFtdcInvestorIDType" = property(_thostmduserapi.CThostFtdcInvestorCommodityGroupSPMMMarginField_InvestorID_get, _thostmduserapi.CThostFtdcInvestorCommodityGroupSPMMMarginField_InvestorID_set, doc=r"""投资者代码""")
    CommodityGroupID: "TThostFtdcSPMMProductIDType" = property(_thostmduserapi.CThostFtdcInvestorCommodityGroupSPMMMarginField_CommodityGroupID_get, _thostmduserapi.CThostFtdcInvestorCommodityGroupSPMMMarginField_CommodityGroupID_set, doc=r"""商品群代码""")
    MarginBeforeDiscount: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcInvestorCommodityGroupSPMMMarginField_MarginBeforeDiscount_get, _thostmduserapi.CThostFtdcInvestorCommodityGroupSPMMMarginField_MarginBeforeDiscount_set, doc=r"""优惠仓位应收保证金""")
    MarginNoDiscount: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcInvestorCommodityGroupSPMMMarginField_MarginNoDiscount_get, _thostmduserapi.CThostFtdcInvestorCommodityGroupSPMMMarginField_MarginNoDiscount_set, doc=r"""不优惠仓位应收保证金""")
    LongRisk: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcInvestorCommodityGroupSPMMMarginField_LongRisk_get, _thostmduserapi.CThostFtdcInvestorCommodityGroupSPMMMarginField_LongRisk_set, doc=r"""多头风险""")
    ShortRisk: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcInvestorCommodityGroupSPMMMarginField_ShortRisk_get, _thostmduserapi.CThostFtdcInvestorCommodityGroupSPMMMarginField_ShortRisk_set, doc=r"""空头风险""")
    CloseFrozenMargin: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcInvestorCommodityGroupSPMMMarginField_CloseFrozenMargin_get, _thostmduserapi.CThostFtdcInvestorCommodityGroupSPMMMarginField_CloseFrozenMargin_set, doc=r"""商品群平仓冻结保证金""")
    InterCommodityRate: "TThostFtdcSPMMDiscountRatioType" = property(_thostmduserapi.CThostFtdcInvestorCommodityGroupSPMMMarginField_InterCommodityRate_get, _thostmduserapi.CThostFtdcInvestorCommodityGroupSPMMMarginField_InterCommodityRate_set, doc=r"""SPMM跨品种优惠系数""")
    MiniMarginRatio: "TThostFtdcSPMMDiscountRatioType" = property(_thostmduserapi.CThostFtdcInvestorCommodityGroupSPMMMarginField_MiniMarginRatio_get, _thostmduserapi.CThostFtdcInvestorCommodityGroupSPMMMarginField_MiniMarginRatio_set, doc=r"""商品群最小保证金比例""")
    AdjustRatio: "TThostFtdcRatioType" = property(_thostmduserapi.CThostFtdcInvestorCommodityGroupSPMMMarginField_AdjustRatio_get, _thostmduserapi.CThostFtdcInvestorCommodityGroupSPMMMarginField_AdjustRatio_set, doc=r"""投资者保证金和交易所保证金的比例""")
    IntraCommodityDiscount: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcInvestorCommodityGroupSPMMMarginField_IntraCommodityDiscount_get, _thostmduserapi.CThostFtdcInvestorCommodityGroupSPMMMarginField_IntraCommodityDiscount_set, doc=r"""SPMM品种内优惠汇总""")
    InterCommodityDiscount: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcInvestorCommodityGroupSPMMMarginField_InterCommodityDiscount_get, _thostmduserapi.CThostFtdcInvestorCommodityGroupSPMMMarginField_InterCommodityDiscount_set, doc=r"""SPMM跨品种优惠""")
    ExchMargin: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcInvestorCommodityGroupSPMMMarginField_ExchMargin_get, _thostmduserapi.CThostFtdcInvestorCommodityGroupSPMMMarginField_ExchMargin_set, doc=r"""交易所保证金""")
    InvestorMargin: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcInvestorCommodityGroupSPMMMarginField_InvestorMargin_get, _thostmduserapi.CThostFtdcInvestorCommodityGroupSPMMMarginField_InvestorMargin_set, doc=r"""投资者保证金""")
    FrozenCommission: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcInvestorCommodityGroupSPMMMarginField_FrozenCommission_get, _thostmduserapi.CThostFtdcInvestorCommodityGroupSPMMMarginField_FrozenCommission_set, doc=r"""冻结的手续费""")
    Commission: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcInvestorCommodityGroupSPMMMarginField_Commission_get, _thostmduserapi.CThostFtdcInvestorCommodityGroupSPMMMarginField_Commission_set, doc=r"""手续费""")
    FrozenCash: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcInvestorCommodityGroupSPMMMarginField_FrozenCash_get, _thostmduserapi.CThostFtdcInvestorCommodityGroupSPMMMarginField_FrozenCash_set, doc=r"""冻结的资金""")
    CashIn: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcInvestorCommodityGroupSPMMMarginField_CashIn_get, _thostmduserapi.CThostFtdcInvestorCommodityGroupSPMMMarginField_CashIn_set, doc=r"""资金差额""")
    StrikeFrozenMargin: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcInvestorCommodityGroupSPMMMarginField_StrikeFrozenMargin_get, _thostmduserapi.CThostFtdcInvestorCommodityGroupSPMMMarginField_StrikeFrozenMargin_set, doc=r"""行权冻结资金""")

    def __init__(self):
        _thostmduserapi.CThostFtdcInvestorCommodityGroupSPMMMarginField_swiginit(self, _thostmduserapi.new_CThostFtdcInvestorCommodityGroupSPMMMarginField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcInvestorCommodityGroupSPMMMarginField

# Register CThostFtdcInvestorCommodityGroupSPMMMarginField in _thostmduserapi:
_thostmduserapi.CThostFtdcInvestorCommodityGroupSPMMMarginField_swigregister(CThostFtdcInvestorCommodityGroupSPMMMarginField)
class CThostFtdcSPMMInstParamField(object):
    r"""SPMM合约参数"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcSPMMInstParamField_ExchangeID_get, _thostmduserapi.CThostFtdcSPMMInstParamField_ExchangeID_set, doc=r"""交易所代码""")
    InstrumentID: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcSPMMInstParamField_InstrumentID_get, _thostmduserapi.CThostFtdcSPMMInstParamField_InstrumentID_set, doc=r"""合约代码""")
    InstMarginCalID: "TThostFtdcInstMarginCalIDType" = property(_thostmduserapi.CThostFtdcSPMMInstParamField_InstMarginCalID_get, _thostmduserapi.CThostFtdcSPMMInstParamField_InstMarginCalID_set, doc=r"""SPMM合约保证金算法""")
    CommodityID: "TThostFtdcSPMMProductIDType" = property(_thostmduserapi.CThostFtdcSPMMInstParamField_CommodityID_get, _thostmduserapi.CThostFtdcSPMMInstParamField_CommodityID_set, doc=r"""商品组代码""")
    CommodityGroupID: "TThostFtdcSPMMProductIDType" = property(_thostmduserapi.CThostFtdcSPMMInstParamField_CommodityGroupID_get, _thostmduserapi.CThostFtdcSPMMInstParamField_CommodityGroupID_set, doc=r"""商品群代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcSPMMInstParamField_swiginit(self, _thostmduserapi.new_CThostFtdcSPMMInstParamField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcSPMMInstParamField

# Register CThostFtdcSPMMInstParamField in _thostmduserapi:
_thostmduserapi.CThostFtdcSPMMInstParamField_swigregister(CThostFtdcSPMMInstParamField)
class CThostFtdcSPMMProductParamField(object):
    r"""SPMM产品参数"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcSPMMProductParamField_ExchangeID_get, _thostmduserapi.CThostFtdcSPMMProductParamField_ExchangeID_set, doc=r"""交易所代码""")
    ProductID: "TThostFtdcSPMMProductIDType" = property(_thostmduserapi.CThostFtdcSPMMProductParamField_ProductID_get, _thostmduserapi.CThostFtdcSPMMProductParamField_ProductID_set, doc=r"""产品代码""")
    CommodityID: "TThostFtdcSPMMProductIDType" = property(_thostmduserapi.CThostFtdcSPMMProductParamField_CommodityID_get, _thostmduserapi.CThostFtdcSPMMProductParamField_CommodityID_set, doc=r"""商品组代码""")
    CommodityGroupID: "TThostFtdcSPMMProductIDType" = property(_thostmduserapi.CThostFtdcSPMMProductParamField_CommodityGroupID_get, _thostmduserapi.CThostFtdcSPMMProductParamField_CommodityGroupID_set, doc=r"""商品群代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcSPMMProductParamField_swiginit(self, _thostmduserapi.new_CThostFtdcSPMMProductParamField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcSPMMProductParamField

# Register CThostFtdcSPMMProductParamField in _thostmduserapi:
_thostmduserapi.CThostFtdcSPMMProductParamField_swigregister(CThostFtdcSPMMProductParamField)
class CThostFtdcQryTraderAssignField(object):
    r"""席位与交易中心对应关系维护查询"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    TraderID: "TThostFtdcTraderIDType" = property(_thostmduserapi.CThostFtdcQryTraderAssignField_TraderID_get, _thostmduserapi.CThostFtdcQryTraderAssignField_TraderID_set, doc=r"""交易员代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcQryTraderAssignField_swiginit(self, _thostmduserapi.new_CThostFtdcQryTraderAssignField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcQryTraderAssignField

# Register CThostFtdcQryTraderAssignField in _thostmduserapi:
_thostmduserapi.CThostFtdcQryTraderAssignField_swigregister(CThostFtdcQryTraderAssignField)
class CThostFtdcTraderAssignField(object):
    r"""席位与交易中心对应关系"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcTraderAssignField_BrokerID_get, _thostmduserapi.CThostFtdcTraderAssignField_BrokerID_set, doc=r"""应用单元代码""")
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcTraderAssignField_ExchangeID_get, _thostmduserapi.CThostFtdcTraderAssignField_ExchangeID_set, doc=r"""交易所代码""")
    TraderID: "TThostFtdcTraderIDType" = property(_thostmduserapi.CThostFtdcTraderAssignField_TraderID_get, _thostmduserapi.CThostFtdcTraderAssignField_TraderID_set, doc=r"""交易所交易员代码""")
    ParticipantID: "TThostFtdcParticipantIDType" = property(_thostmduserapi.CThostFtdcTraderAssignField_ParticipantID_get, _thostmduserapi.CThostFtdcTraderAssignField_ParticipantID_set, doc=r"""会员代码""")
    DRIdentityID: "TThostFtdcDRIdentityIDType" = property(_thostmduserapi.CThostFtdcTraderAssignField_DRIdentityID_get, _thostmduserapi.CThostFtdcTraderAssignField_DRIdentityID_set, doc=r"""交易中心代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcTraderAssignField_swiginit(self, _thostmduserapi.new_CThostFtdcTraderAssignField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcTraderAssignField

# Register CThostFtdcTraderAssignField in _thostmduserapi:
_thostmduserapi.CThostFtdcTraderAssignField_swigregister(CThostFtdcTraderAssignField)
class CThostFtdcInvestorInfoCntSettingField(object):
    r"""投资者申报费阶梯收取设置"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcInvestorInfoCntSettingField_ExchangeID_get, _thostmduserapi.CThostFtdcInvestorInfoCntSettingField_ExchangeID_set, doc=r"""交易所代码""")
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcInvestorInfoCntSettingField_BrokerID_get, _thostmduserapi.CThostFtdcInvestorInfoCntSettingField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "TThostFtdcInvestorIDType" = property(_thostmduserapi.CThostFtdcInvestorInfoCntSettingField_InvestorID_get, _thostmduserapi.CThostFtdcInvestorInfoCntSettingField_InvestorID_set, doc=r"""投资者代码""")
    ProductID: "TThostFtdcProductIDType" = property(_thostmduserapi.CThostFtdcInvestorInfoCntSettingField_ProductID_get, _thostmduserapi.CThostFtdcInvestorInfoCntSettingField_ProductID_set, doc=r"""商品代码""")
    IsCalInfoComm: "TThostFtdcBoolType" = property(_thostmduserapi.CThostFtdcInvestorInfoCntSettingField_IsCalInfoComm_get, _thostmduserapi.CThostFtdcInvestorInfoCntSettingField_IsCalInfoComm_set, doc=r"""是否收取申报费""")
    IsLimitInfoMax: "TThostFtdcBoolType" = property(_thostmduserapi.CThostFtdcInvestorInfoCntSettingField_IsLimitInfoMax_get, _thostmduserapi.CThostFtdcInvestorInfoCntSettingField_IsLimitInfoMax_set, doc=r"""是否限制信息量""")
    InfoMaxLimit: "TThostFtdcVolumeType" = property(_thostmduserapi.CThostFtdcInvestorInfoCntSettingField_InfoMaxLimit_get, _thostmduserapi.CThostFtdcInvestorInfoCntSettingField_InfoMaxLimit_set, doc=r"""信息量限制笔数""")

    def __init__(self):
        _thostmduserapi.CThostFtdcInvestorInfoCntSettingField_swiginit(self, _thostmduserapi.new_CThostFtdcInvestorInfoCntSettingField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcInvestorInfoCntSettingField

# Register CThostFtdcInvestorInfoCntSettingField in _thostmduserapi:
_thostmduserapi.CThostFtdcInvestorInfoCntSettingField_swigregister(CThostFtdcInvestorInfoCntSettingField)
class CThostFtdcRCAMSCombProductInfoField(object):
    r"""RCAMS产品组合信息"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    TradingDay: "TThostFtdcDateType" = property(_thostmduserapi.CThostFtdcRCAMSCombProductInfoField_TradingDay_get, _thostmduserapi.CThostFtdcRCAMSCombProductInfoField_TradingDay_set, doc=r"""交易日""")
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcRCAMSCombProductInfoField_ExchangeID_get, _thostmduserapi.CThostFtdcRCAMSCombProductInfoField_ExchangeID_set, doc=r"""交易所代码""")
    ProductID: "TThostFtdcProductIDType" = property(_thostmduserapi.CThostFtdcRCAMSCombProductInfoField_ProductID_get, _thostmduserapi.CThostFtdcRCAMSCombProductInfoField_ProductID_set, doc=r"""产品代码""")
    CombProductID: "TThostFtdcProductIDType" = property(_thostmduserapi.CThostFtdcRCAMSCombProductInfoField_CombProductID_get, _thostmduserapi.CThostFtdcRCAMSCombProductInfoField_CombProductID_set, doc=r"""商品组代码""")
    ProductGroupID: "TThostFtdcProductIDType" = property(_thostmduserapi.CThostFtdcRCAMSCombProductInfoField_ProductGroupID_get, _thostmduserapi.CThostFtdcRCAMSCombProductInfoField_ProductGroupID_set, doc=r"""商品群代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcRCAMSCombProductInfoField_swiginit(self, _thostmduserapi.new_CThostFtdcRCAMSCombProductInfoField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcRCAMSCombProductInfoField

# Register CThostFtdcRCAMSCombProductInfoField in _thostmduserapi:
_thostmduserapi.CThostFtdcRCAMSCombProductInfoField_swigregister(CThostFtdcRCAMSCombProductInfoField)
class CThostFtdcRCAMSInstrParameterField(object):
    r"""RCAMS同合约风险对冲参数"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    TradingDay: "TThostFtdcDateType" = property(_thostmduserapi.CThostFtdcRCAMSInstrParameterField_TradingDay_get, _thostmduserapi.CThostFtdcRCAMSInstrParameterField_TradingDay_set, doc=r"""交易日""")
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcRCAMSInstrParameterField_ExchangeID_get, _thostmduserapi.CThostFtdcRCAMSInstrParameterField_ExchangeID_set, doc=r"""交易所代码""")
    ProductID: "TThostFtdcProductIDType" = property(_thostmduserapi.CThostFtdcRCAMSInstrParameterField_ProductID_get, _thostmduserapi.CThostFtdcRCAMSInstrParameterField_ProductID_set, doc=r"""产品代码""")
    HedgeRate: "TThostFtdcHedgeRateType" = property(_thostmduserapi.CThostFtdcRCAMSInstrParameterField_HedgeRate_get, _thostmduserapi.CThostFtdcRCAMSInstrParameterField_HedgeRate_set, doc=r"""同合约风险对冲比率""")

    def __init__(self):
        _thostmduserapi.CThostFtdcRCAMSInstrParameterField_swiginit(self, _thostmduserapi.new_CThostFtdcRCAMSInstrParameterField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcRCAMSInstrParameterField

# Register CThostFtdcRCAMSInstrParameterField in _thostmduserapi:
_thostmduserapi.CThostFtdcRCAMSInstrParameterField_swigregister(CThostFtdcRCAMSInstrParameterField)
class CThostFtdcRCAMSIntraParameterField(object):
    r"""RCAMS品种内风险对冲参数"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    TradingDay: "TThostFtdcDateType" = property(_thostmduserapi.CThostFtdcRCAMSIntraParameterField_TradingDay_get, _thostmduserapi.CThostFtdcRCAMSIntraParameterField_TradingDay_set, doc=r"""交易日""")
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcRCAMSIntraParameterField_ExchangeID_get, _thostmduserapi.CThostFtdcRCAMSIntraParameterField_ExchangeID_set, doc=r"""交易所代码""")
    CombProductID: "TThostFtdcProductIDType" = property(_thostmduserapi.CThostFtdcRCAMSIntraParameterField_CombProductID_get, _thostmduserapi.CThostFtdcRCAMSIntraParameterField_CombProductID_set, doc=r"""产品组合代码""")
    HedgeRate: "TThostFtdcHedgeRateType" = property(_thostmduserapi.CThostFtdcRCAMSIntraParameterField_HedgeRate_get, _thostmduserapi.CThostFtdcRCAMSIntraParameterField_HedgeRate_set, doc=r"""品种内对冲比率""")

    def __init__(self):
        _thostmduserapi.CThostFtdcRCAMSIntraParameterField_swiginit(self, _thostmduserapi.new_CThostFtdcRCAMSIntraParameterField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcRCAMSIntraParameterField

# Register CThostFtdcRCAMSIntraParameterField in _thostmduserapi:
_thostmduserapi.CThostFtdcRCAMSIntraParameterField_swigregister(CThostFtdcRCAMSIntraParameterField)
class CThostFtdcRCAMSInterParameterField(object):
    r"""RCAMS跨品种风险折抵参数"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    TradingDay: "TThostFtdcDateType" = property(_thostmduserapi.CThostFtdcRCAMSInterParameterField_TradingDay_get, _thostmduserapi.CThostFtdcRCAMSInterParameterField_TradingDay_set, doc=r"""交易日""")
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcRCAMSInterParameterField_ExchangeID_get, _thostmduserapi.CThostFtdcRCAMSInterParameterField_ExchangeID_set, doc=r"""交易所代码""")
    ProductGroupID: "TThostFtdcProductIDType" = property(_thostmduserapi.CThostFtdcRCAMSInterParameterField_ProductGroupID_get, _thostmduserapi.CThostFtdcRCAMSInterParameterField_ProductGroupID_set, doc=r"""商品群代码""")
    Priority: "TThostFtdcRCAMSPriorityType" = property(_thostmduserapi.CThostFtdcRCAMSInterParameterField_Priority_get, _thostmduserapi.CThostFtdcRCAMSInterParameterField_Priority_set, doc=r"""优先级""")
    CreditRate: "TThostFtdcHedgeRateType" = property(_thostmduserapi.CThostFtdcRCAMSInterParameterField_CreditRate_get, _thostmduserapi.CThostFtdcRCAMSInterParameterField_CreditRate_set, doc=r"""折抵率""")
    CombProduct1: "TThostFtdcProductIDType" = property(_thostmduserapi.CThostFtdcRCAMSInterParameterField_CombProduct1_get, _thostmduserapi.CThostFtdcRCAMSInterParameterField_CombProduct1_set, doc=r"""产品组合代码1""")
    CombProduct2: "TThostFtdcProductIDType" = property(_thostmduserapi.CThostFtdcRCAMSInterParameterField_CombProduct2_get, _thostmduserapi.CThostFtdcRCAMSInterParameterField_CombProduct2_set, doc=r"""产品组合代码2""")

    def __init__(self):
        _thostmduserapi.CThostFtdcRCAMSInterParameterField_swiginit(self, _thostmduserapi.new_CThostFtdcRCAMSInterParameterField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcRCAMSInterParameterField

# Register CThostFtdcRCAMSInterParameterField in _thostmduserapi:
_thostmduserapi.CThostFtdcRCAMSInterParameterField_swigregister(CThostFtdcRCAMSInterParameterField)
class CThostFtdcRCAMSShortOptAdjustParamField(object):
    r"""RCAMS空头期权风险调整参数"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    TradingDay: "TThostFtdcDateType" = property(_thostmduserapi.CThostFtdcRCAMSShortOptAdjustParamField_TradingDay_get, _thostmduserapi.CThostFtdcRCAMSShortOptAdjustParamField_TradingDay_set, doc=r"""交易日""")
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcRCAMSShortOptAdjustParamField_ExchangeID_get, _thostmduserapi.CThostFtdcRCAMSShortOptAdjustParamField_ExchangeID_set, doc=r"""交易所代码""")
    CombProductID: "TThostFtdcProductIDType" = property(_thostmduserapi.CThostFtdcRCAMSShortOptAdjustParamField_CombProductID_get, _thostmduserapi.CThostFtdcRCAMSShortOptAdjustParamField_CombProductID_set, doc=r"""产品组合代码""")
    HedgeFlag: "TThostFtdcHedgeFlagType" = property(_thostmduserapi.CThostFtdcRCAMSShortOptAdjustParamField_HedgeFlag_get, _thostmduserapi.CThostFtdcRCAMSShortOptAdjustParamField_HedgeFlag_set, doc=r"""投套标志""")
    AdjustValue: "TThostFtdcAdjustValueType" = property(_thostmduserapi.CThostFtdcRCAMSShortOptAdjustParamField_AdjustValue_get, _thostmduserapi.CThostFtdcRCAMSShortOptAdjustParamField_AdjustValue_set, doc=r"""空头期权风险调整标准""")

    def __init__(self):
        _thostmduserapi.CThostFtdcRCAMSShortOptAdjustParamField_swiginit(self, _thostmduserapi.new_CThostFtdcRCAMSShortOptAdjustParamField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcRCAMSShortOptAdjustParamField

# Register CThostFtdcRCAMSShortOptAdjustParamField in _thostmduserapi:
_thostmduserapi.CThostFtdcRCAMSShortOptAdjustParamField_swigregister(CThostFtdcRCAMSShortOptAdjustParamField)
class CThostFtdcRCAMSInvestorCombPositionField(object):
    r"""RCAMS策略组合持仓"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcRCAMSInvestorCombPositionField_ExchangeID_get, _thostmduserapi.CThostFtdcRCAMSInvestorCombPositionField_ExchangeID_set, doc=r"""交易所代码""")
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcRCAMSInvestorCombPositionField_BrokerID_get, _thostmduserapi.CThostFtdcRCAMSInvestorCombPositionField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "TThostFtdcInvestorIDType" = property(_thostmduserapi.CThostFtdcRCAMSInvestorCombPositionField_InvestorID_get, _thostmduserapi.CThostFtdcRCAMSInvestorCombPositionField_InvestorID_set, doc=r"""投资者代码""")
    InstrumentID: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcRCAMSInvestorCombPositionField_InstrumentID_get, _thostmduserapi.CThostFtdcRCAMSInvestorCombPositionField_InstrumentID_set, doc=r"""合约代码""")
    HedgeFlag: "TThostFtdcHedgeFlagType" = property(_thostmduserapi.CThostFtdcRCAMSInvestorCombPositionField_HedgeFlag_get, _thostmduserapi.CThostFtdcRCAMSInvestorCombPositionField_HedgeFlag_set, doc=r"""投套标志""")
    PosiDirection: "TThostFtdcPosiDirectionType" = property(_thostmduserapi.CThostFtdcRCAMSInvestorCombPositionField_PosiDirection_get, _thostmduserapi.CThostFtdcRCAMSInvestorCombPositionField_PosiDirection_set, doc=r"""持仓多空方向""")
    CombInstrumentID: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcRCAMSInvestorCombPositionField_CombInstrumentID_get, _thostmduserapi.CThostFtdcRCAMSInvestorCombPositionField_CombInstrumentID_set, doc=r"""组合合约代码""")
    LegID: "TThostFtdcLegIDType" = property(_thostmduserapi.CThostFtdcRCAMSInvestorCombPositionField_LegID_get, _thostmduserapi.CThostFtdcRCAMSInvestorCombPositionField_LegID_set, doc=r"""单腿编号""")
    ExchangeInstID: "TThostFtdcExchangeInstIDType" = property(_thostmduserapi.CThostFtdcRCAMSInvestorCombPositionField_ExchangeInstID_get, _thostmduserapi.CThostFtdcRCAMSInvestorCombPositionField_ExchangeInstID_set, doc=r"""交易所组合合约代码""")
    TotalAmt: "TThostFtdcVolumeType" = property(_thostmduserapi.CThostFtdcRCAMSInvestorCombPositionField_TotalAmt_get, _thostmduserapi.CThostFtdcRCAMSInvestorCombPositionField_TotalAmt_set, doc=r"""持仓量""")
    ExchMargin: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcRCAMSInvestorCombPositionField_ExchMargin_get, _thostmduserapi.CThostFtdcRCAMSInvestorCombPositionField_ExchMargin_set, doc=r"""交易所保证金""")
    Margin: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcRCAMSInvestorCombPositionField_Margin_get, _thostmduserapi.CThostFtdcRCAMSInvestorCombPositionField_Margin_set, doc=r"""投资者保证金""")

    def __init__(self):
        _thostmduserapi.CThostFtdcRCAMSInvestorCombPositionField_swiginit(self, _thostmduserapi.new_CThostFtdcRCAMSInvestorCombPositionField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcRCAMSInvestorCombPositionField

# Register CThostFtdcRCAMSInvestorCombPositionField in _thostmduserapi:
_thostmduserapi.CThostFtdcRCAMSInvestorCombPositionField_swigregister(CThostFtdcRCAMSInvestorCombPositionField)
class CThostFtdcInvestorProdRCAMSMarginField(object):
    r"""投资者品种RCAMS保证金"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcInvestorProdRCAMSMarginField_ExchangeID_get, _thostmduserapi.CThostFtdcInvestorProdRCAMSMarginField_ExchangeID_set, doc=r"""交易所代码""")
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcInvestorProdRCAMSMarginField_BrokerID_get, _thostmduserapi.CThostFtdcInvestorProdRCAMSMarginField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "TThostFtdcInvestorIDType" = property(_thostmduserapi.CThostFtdcInvestorProdRCAMSMarginField_InvestorID_get, _thostmduserapi.CThostFtdcInvestorProdRCAMSMarginField_InvestorID_set, doc=r"""投资者代码""")
    CombProductID: "TThostFtdcProductIDType" = property(_thostmduserapi.CThostFtdcInvestorProdRCAMSMarginField_CombProductID_get, _thostmduserapi.CThostFtdcInvestorProdRCAMSMarginField_CombProductID_set, doc=r"""产品组合代码""")
    HedgeFlag: "TThostFtdcHedgeFlagType" = property(_thostmduserapi.CThostFtdcInvestorProdRCAMSMarginField_HedgeFlag_get, _thostmduserapi.CThostFtdcInvestorProdRCAMSMarginField_HedgeFlag_set, doc=r"""投套标志""")
    ProductGroupID: "TThostFtdcProductIDType" = property(_thostmduserapi.CThostFtdcInvestorProdRCAMSMarginField_ProductGroupID_get, _thostmduserapi.CThostFtdcInvestorProdRCAMSMarginField_ProductGroupID_set, doc=r"""商品群代码""")
    RiskBeforeDiscount: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcInvestorProdRCAMSMarginField_RiskBeforeDiscount_get, _thostmduserapi.CThostFtdcInvestorProdRCAMSMarginField_RiskBeforeDiscount_set, doc=r"""品种组合前风险""")
    IntraInstrRisk: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcInvestorProdRCAMSMarginField_IntraInstrRisk_get, _thostmduserapi.CThostFtdcInvestorProdRCAMSMarginField_IntraInstrRisk_set, doc=r"""同合约对冲风险""")
    BPosRisk: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcInvestorProdRCAMSMarginField_BPosRisk_get, _thostmduserapi.CThostFtdcInvestorProdRCAMSMarginField_BPosRisk_set, doc=r"""品种买持仓风险""")
    SPosRisk: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcInvestorProdRCAMSMarginField_SPosRisk_get, _thostmduserapi.CThostFtdcInvestorProdRCAMSMarginField_SPosRisk_set, doc=r"""品种卖持仓风险""")
    IntraProdRisk: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcInvestorProdRCAMSMarginField_IntraProdRisk_get, _thostmduserapi.CThostFtdcInvestorProdRCAMSMarginField_IntraProdRisk_set, doc=r"""品种内对冲风险""")
    NetRisk: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcInvestorProdRCAMSMarginField_NetRisk_get, _thostmduserapi.CThostFtdcInvestorProdRCAMSMarginField_NetRisk_set, doc=r"""品种净持仓风险""")
    InterProdRisk: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcInvestorProdRCAMSMarginField_InterProdRisk_get, _thostmduserapi.CThostFtdcInvestorProdRCAMSMarginField_InterProdRisk_set, doc=r"""品种间对冲风险""")
    ShortOptRiskAdj: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcInvestorProdRCAMSMarginField_ShortOptRiskAdj_get, _thostmduserapi.CThostFtdcInvestorProdRCAMSMarginField_ShortOptRiskAdj_set, doc=r"""空头期权风险调整""")
    OptionRoyalty: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcInvestorProdRCAMSMarginField_OptionRoyalty_get, _thostmduserapi.CThostFtdcInvestorProdRCAMSMarginField_OptionRoyalty_set, doc=r"""空头期权权利金""")
    MMSACloseFrozenMargin: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcInvestorProdRCAMSMarginField_MMSACloseFrozenMargin_get, _thostmduserapi.CThostFtdcInvestorProdRCAMSMarginField_MMSACloseFrozenMargin_set, doc=r"""大边组合平仓冻结保证金""")
    CloseCombFrozenMargin: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcInvestorProdRCAMSMarginField_CloseCombFrozenMargin_get, _thostmduserapi.CThostFtdcInvestorProdRCAMSMarginField_CloseCombFrozenMargin_set, doc=r"""平策略组合冻结保证金""")
    CloseFrozenMargin: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcInvestorProdRCAMSMarginField_CloseFrozenMargin_get, _thostmduserapi.CThostFtdcInvestorProdRCAMSMarginField_CloseFrozenMargin_set, doc=r"""平仓冻结保证金""")
    MMSAOpenFrozenMargin: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcInvestorProdRCAMSMarginField_MMSAOpenFrozenMargin_get, _thostmduserapi.CThostFtdcInvestorProdRCAMSMarginField_MMSAOpenFrozenMargin_set, doc=r"""大边组合开仓冻结保证金""")
    DeliveryOpenFrozenMargin: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcInvestorProdRCAMSMarginField_DeliveryOpenFrozenMargin_get, _thostmduserapi.CThostFtdcInvestorProdRCAMSMarginField_DeliveryOpenFrozenMargin_set, doc=r"""交割月期货开仓冻结保证金""")
    OpenFrozenMargin: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcInvestorProdRCAMSMarginField_OpenFrozenMargin_get, _thostmduserapi.CThostFtdcInvestorProdRCAMSMarginField_OpenFrozenMargin_set, doc=r"""开仓冻结保证金""")
    UseFrozenMargin: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcInvestorProdRCAMSMarginField_UseFrozenMargin_get, _thostmduserapi.CThostFtdcInvestorProdRCAMSMarginField_UseFrozenMargin_set, doc=r"""投资者冻结保证金""")
    MMSAExchMargin: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcInvestorProdRCAMSMarginField_MMSAExchMargin_get, _thostmduserapi.CThostFtdcInvestorProdRCAMSMarginField_MMSAExchMargin_set, doc=r"""大边组合交易所持仓保证金""")
    DeliveryExchMargin: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcInvestorProdRCAMSMarginField_DeliveryExchMargin_get, _thostmduserapi.CThostFtdcInvestorProdRCAMSMarginField_DeliveryExchMargin_set, doc=r"""交割月期货交易所持仓保证金""")
    CombExchMargin: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcInvestorProdRCAMSMarginField_CombExchMargin_get, _thostmduserapi.CThostFtdcInvestorProdRCAMSMarginField_CombExchMargin_set, doc=r"""策略组合交易所保证金""")
    ExchMargin: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcInvestorProdRCAMSMarginField_ExchMargin_get, _thostmduserapi.CThostFtdcInvestorProdRCAMSMarginField_ExchMargin_set, doc=r"""交易所持仓保证金""")
    UseMargin: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcInvestorProdRCAMSMarginField_UseMargin_get, _thostmduserapi.CThostFtdcInvestorProdRCAMSMarginField_UseMargin_set, doc=r"""投资者持仓保证金""")

    def __init__(self):
        _thostmduserapi.CThostFtdcInvestorProdRCAMSMarginField_swiginit(self, _thostmduserapi.new_CThostFtdcInvestorProdRCAMSMarginField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcInvestorProdRCAMSMarginField

# Register CThostFtdcInvestorProdRCAMSMarginField in _thostmduserapi:
_thostmduserapi.CThostFtdcInvestorProdRCAMSMarginField_swigregister(CThostFtdcInvestorProdRCAMSMarginField)
class CThostFtdcQryRCAMSCombProductInfoField(object):
    r"""RCAMS产品组合信息查询"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ProductID: "TThostFtdcProductIDType" = property(_thostmduserapi.CThostFtdcQryRCAMSCombProductInfoField_ProductID_get, _thostmduserapi.CThostFtdcQryRCAMSCombProductInfoField_ProductID_set, doc=r"""产品代码""")
    CombProductID: "TThostFtdcProductIDType" = property(_thostmduserapi.CThostFtdcQryRCAMSCombProductInfoField_CombProductID_get, _thostmduserapi.CThostFtdcQryRCAMSCombProductInfoField_CombProductID_set, doc=r"""商品组代码""")
    ProductGroupID: "TThostFtdcProductIDType" = property(_thostmduserapi.CThostFtdcQryRCAMSCombProductInfoField_ProductGroupID_get, _thostmduserapi.CThostFtdcQryRCAMSCombProductInfoField_ProductGroupID_set, doc=r"""商品群代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcQryRCAMSCombProductInfoField_swiginit(self, _thostmduserapi.new_CThostFtdcQryRCAMSCombProductInfoField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcQryRCAMSCombProductInfoField

# Register CThostFtdcQryRCAMSCombProductInfoField in _thostmduserapi:
_thostmduserapi.CThostFtdcQryRCAMSCombProductInfoField_swigregister(CThostFtdcQryRCAMSCombProductInfoField)
class CThostFtdcQryRCAMSInstrParameterField(object):
    r"""RCAMS同合约风险对冲参数查询"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ProductID: "TThostFtdcProductIDType" = property(_thostmduserapi.CThostFtdcQryRCAMSInstrParameterField_ProductID_get, _thostmduserapi.CThostFtdcQryRCAMSInstrParameterField_ProductID_set, doc=r"""产品代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcQryRCAMSInstrParameterField_swiginit(self, _thostmduserapi.new_CThostFtdcQryRCAMSInstrParameterField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcQryRCAMSInstrParameterField

# Register CThostFtdcQryRCAMSInstrParameterField in _thostmduserapi:
_thostmduserapi.CThostFtdcQryRCAMSInstrParameterField_swigregister(CThostFtdcQryRCAMSInstrParameterField)
class CThostFtdcQryRCAMSIntraParameterField(object):
    r"""RCAMS品种内风险对冲参数查询"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    CombProductID: "TThostFtdcProductIDType" = property(_thostmduserapi.CThostFtdcQryRCAMSIntraParameterField_CombProductID_get, _thostmduserapi.CThostFtdcQryRCAMSIntraParameterField_CombProductID_set, doc=r"""产品组合代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcQryRCAMSIntraParameterField_swiginit(self, _thostmduserapi.new_CThostFtdcQryRCAMSIntraParameterField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcQryRCAMSIntraParameterField

# Register CThostFtdcQryRCAMSIntraParameterField in _thostmduserapi:
_thostmduserapi.CThostFtdcQryRCAMSIntraParameterField_swigregister(CThostFtdcQryRCAMSIntraParameterField)
class CThostFtdcQryRCAMSInterParameterField(object):
    r"""RCAMS跨品种风险折抵参数查询"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ProductGroupID: "TThostFtdcProductIDType" = property(_thostmduserapi.CThostFtdcQryRCAMSInterParameterField_ProductGroupID_get, _thostmduserapi.CThostFtdcQryRCAMSInterParameterField_ProductGroupID_set, doc=r"""商品群代码""")
    CombProduct1: "TThostFtdcProductIDType" = property(_thostmduserapi.CThostFtdcQryRCAMSInterParameterField_CombProduct1_get, _thostmduserapi.CThostFtdcQryRCAMSInterParameterField_CombProduct1_set, doc=r"""产品组合代码1""")
    CombProduct2: "TThostFtdcProductIDType" = property(_thostmduserapi.CThostFtdcQryRCAMSInterParameterField_CombProduct2_get, _thostmduserapi.CThostFtdcQryRCAMSInterParameterField_CombProduct2_set, doc=r"""产品组合代码2""")

    def __init__(self):
        _thostmduserapi.CThostFtdcQryRCAMSInterParameterField_swiginit(self, _thostmduserapi.new_CThostFtdcQryRCAMSInterParameterField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcQryRCAMSInterParameterField

# Register CThostFtdcQryRCAMSInterParameterField in _thostmduserapi:
_thostmduserapi.CThostFtdcQryRCAMSInterParameterField_swigregister(CThostFtdcQryRCAMSInterParameterField)
class CThostFtdcQryRCAMSShortOptAdjustParamField(object):
    r"""RCAMS空头期权风险调整参数查询"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    CombProductID: "TThostFtdcProductIDType" = property(_thostmduserapi.CThostFtdcQryRCAMSShortOptAdjustParamField_CombProductID_get, _thostmduserapi.CThostFtdcQryRCAMSShortOptAdjustParamField_CombProductID_set, doc=r"""产品组合代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcQryRCAMSShortOptAdjustParamField_swiginit(self, _thostmduserapi.new_CThostFtdcQryRCAMSShortOptAdjustParamField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcQryRCAMSShortOptAdjustParamField

# Register CThostFtdcQryRCAMSShortOptAdjustParamField in _thostmduserapi:
_thostmduserapi.CThostFtdcQryRCAMSShortOptAdjustParamField_swigregister(CThostFtdcQryRCAMSShortOptAdjustParamField)
class CThostFtdcQryRCAMSInvestorCombPositionField(object):
    r"""RCAMS策略组合持仓查询"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcQryRCAMSInvestorCombPositionField_BrokerID_get, _thostmduserapi.CThostFtdcQryRCAMSInvestorCombPositionField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "TThostFtdcInvestorIDType" = property(_thostmduserapi.CThostFtdcQryRCAMSInvestorCombPositionField_InvestorID_get, _thostmduserapi.CThostFtdcQryRCAMSInvestorCombPositionField_InvestorID_set, doc=r"""投资者代码""")
    InstrumentID: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcQryRCAMSInvestorCombPositionField_InstrumentID_get, _thostmduserapi.CThostFtdcQryRCAMSInvestorCombPositionField_InstrumentID_set, doc=r"""合约代码""")
    CombInstrumentID: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcQryRCAMSInvestorCombPositionField_CombInstrumentID_get, _thostmduserapi.CThostFtdcQryRCAMSInvestorCombPositionField_CombInstrumentID_set, doc=r"""组合合约代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcQryRCAMSInvestorCombPositionField_swiginit(self, _thostmduserapi.new_CThostFtdcQryRCAMSInvestorCombPositionField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcQryRCAMSInvestorCombPositionField

# Register CThostFtdcQryRCAMSInvestorCombPositionField in _thostmduserapi:
_thostmduserapi.CThostFtdcQryRCAMSInvestorCombPositionField_swigregister(CThostFtdcQryRCAMSInvestorCombPositionField)
class CThostFtdcQryInvestorProdRCAMSMarginField(object):
    r"""投资者品种RCAMS保证金查询"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcQryInvestorProdRCAMSMarginField_BrokerID_get, _thostmduserapi.CThostFtdcQryInvestorProdRCAMSMarginField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "TThostFtdcInvestorIDType" = property(_thostmduserapi.CThostFtdcQryInvestorProdRCAMSMarginField_InvestorID_get, _thostmduserapi.CThostFtdcQryInvestorProdRCAMSMarginField_InvestorID_set, doc=r"""投资者代码""")
    CombProductID: "TThostFtdcProductIDType" = property(_thostmduserapi.CThostFtdcQryInvestorProdRCAMSMarginField_CombProductID_get, _thostmduserapi.CThostFtdcQryInvestorProdRCAMSMarginField_CombProductID_set, doc=r"""产品组合代码""")
    ProductGroupID: "TThostFtdcProductIDType" = property(_thostmduserapi.CThostFtdcQryInvestorProdRCAMSMarginField_ProductGroupID_get, _thostmduserapi.CThostFtdcQryInvestorProdRCAMSMarginField_ProductGroupID_set, doc=r"""商品群代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcQryInvestorProdRCAMSMarginField_swiginit(self, _thostmduserapi.new_CThostFtdcQryInvestorProdRCAMSMarginField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcQryInvestorProdRCAMSMarginField

# Register CThostFtdcQryInvestorProdRCAMSMarginField in _thostmduserapi:
_thostmduserapi.CThostFtdcQryInvestorProdRCAMSMarginField_swigregister(CThostFtdcQryInvestorProdRCAMSMarginField)
class CThostFtdcRULEInstrParameterField(object):
    r"""RULE合约保证金参数"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    TradingDay: "TThostFtdcDateType" = property(_thostmduserapi.CThostFtdcRULEInstrParameterField_TradingDay_get, _thostmduserapi.CThostFtdcRULEInstrParameterField_TradingDay_set, doc=r"""交易日""")
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcRULEInstrParameterField_ExchangeID_get, _thostmduserapi.CThostFtdcRULEInstrParameterField_ExchangeID_set, doc=r"""交易所代码""")
    InstrumentID: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcRULEInstrParameterField_InstrumentID_get, _thostmduserapi.CThostFtdcRULEInstrParameterField_InstrumentID_set, doc=r"""合约代码""")
    InstrumentClass: "TThostFtdcInstrumentClassType" = property(_thostmduserapi.CThostFtdcRULEInstrParameterField_InstrumentClass_get, _thostmduserapi.CThostFtdcRULEInstrParameterField_InstrumentClass_set, doc=r"""合约类型""")
    StdInstrumentID: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcRULEInstrParameterField_StdInstrumentID_get, _thostmduserapi.CThostFtdcRULEInstrParameterField_StdInstrumentID_set, doc=r"""标准合约""")
    BSpecRatio: "TThostFtdcRatioType" = property(_thostmduserapi.CThostFtdcRULEInstrParameterField_BSpecRatio_get, _thostmduserapi.CThostFtdcRULEInstrParameterField_BSpecRatio_set, doc=r"""投机买折算系数""")
    SSpecRatio: "TThostFtdcRatioType" = property(_thostmduserapi.CThostFtdcRULEInstrParameterField_SSpecRatio_get, _thostmduserapi.CThostFtdcRULEInstrParameterField_SSpecRatio_set, doc=r"""投机卖折算系数""")
    BHedgeRatio: "TThostFtdcRatioType" = property(_thostmduserapi.CThostFtdcRULEInstrParameterField_BHedgeRatio_get, _thostmduserapi.CThostFtdcRULEInstrParameterField_BHedgeRatio_set, doc=r"""套保买折算系数""")
    SHedgeRatio: "TThostFtdcRatioType" = property(_thostmduserapi.CThostFtdcRULEInstrParameterField_SHedgeRatio_get, _thostmduserapi.CThostFtdcRULEInstrParameterField_SHedgeRatio_set, doc=r"""套保卖折算系数""")
    BAddOnMargin: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcRULEInstrParameterField_BAddOnMargin_get, _thostmduserapi.CThostFtdcRULEInstrParameterField_BAddOnMargin_set, doc=r"""买附加风险保证金""")
    SAddOnMargin: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcRULEInstrParameterField_SAddOnMargin_get, _thostmduserapi.CThostFtdcRULEInstrParameterField_SAddOnMargin_set, doc=r"""卖附加风险保证金""")
    CommodityGroupID: "TThostFtdcCommodityGroupIDType" = property(_thostmduserapi.CThostFtdcRULEInstrParameterField_CommodityGroupID_get, _thostmduserapi.CThostFtdcRULEInstrParameterField_CommodityGroupID_set, doc=r"""商品群号""")

    def __init__(self):
        _thostmduserapi.CThostFtdcRULEInstrParameterField_swiginit(self, _thostmduserapi.new_CThostFtdcRULEInstrParameterField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcRULEInstrParameterField

# Register CThostFtdcRULEInstrParameterField in _thostmduserapi:
_thostmduserapi.CThostFtdcRULEInstrParameterField_swigregister(CThostFtdcRULEInstrParameterField)
class CThostFtdcRULEIntraParameterField(object):
    r"""RULE品种内对锁仓折扣参数"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    TradingDay: "TThostFtdcDateType" = property(_thostmduserapi.CThostFtdcRULEIntraParameterField_TradingDay_get, _thostmduserapi.CThostFtdcRULEIntraParameterField_TradingDay_set, doc=r"""交易日""")
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcRULEIntraParameterField_ExchangeID_get, _thostmduserapi.CThostFtdcRULEIntraParameterField_ExchangeID_set, doc=r"""交易所代码""")
    ProdFamilyCode: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcRULEIntraParameterField_ProdFamilyCode_get, _thostmduserapi.CThostFtdcRULEIntraParameterField_ProdFamilyCode_set, doc=r"""品种代码""")
    StdInstrumentID: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcRULEIntraParameterField_StdInstrumentID_get, _thostmduserapi.CThostFtdcRULEIntraParameterField_StdInstrumentID_set, doc=r"""标准合约""")
    StdInstrMargin: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcRULEIntraParameterField_StdInstrMargin_get, _thostmduserapi.CThostFtdcRULEIntraParameterField_StdInstrMargin_set, doc=r"""标准合约保证金""")
    UsualIntraRate: "TThostFtdcRatioType" = property(_thostmduserapi.CThostFtdcRULEIntraParameterField_UsualIntraRate_get, _thostmduserapi.CThostFtdcRULEIntraParameterField_UsualIntraRate_set, doc=r"""一般月份合约组合保证金系数""")
    DeliveryIntraRate: "TThostFtdcRatioType" = property(_thostmduserapi.CThostFtdcRULEIntraParameterField_DeliveryIntraRate_get, _thostmduserapi.CThostFtdcRULEIntraParameterField_DeliveryIntraRate_set, doc=r"""临近交割合约组合保证金系数""")

    def __init__(self):
        _thostmduserapi.CThostFtdcRULEIntraParameterField_swiginit(self, _thostmduserapi.new_CThostFtdcRULEIntraParameterField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcRULEIntraParameterField

# Register CThostFtdcRULEIntraParameterField in _thostmduserapi:
_thostmduserapi.CThostFtdcRULEIntraParameterField_swigregister(CThostFtdcRULEIntraParameterField)
class CThostFtdcRULEInterParameterField(object):
    r"""RULE跨品种抵扣参数"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    TradingDay: "TThostFtdcDateType" = property(_thostmduserapi.CThostFtdcRULEInterParameterField_TradingDay_get, _thostmduserapi.CThostFtdcRULEInterParameterField_TradingDay_set, doc=r"""交易日""")
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcRULEInterParameterField_ExchangeID_get, _thostmduserapi.CThostFtdcRULEInterParameterField_ExchangeID_set, doc=r"""交易所代码""")
    SpreadId: "TThostFtdcSpreadIdType" = property(_thostmduserapi.CThostFtdcRULEInterParameterField_SpreadId_get, _thostmduserapi.CThostFtdcRULEInterParameterField_SpreadId_set, doc=r"""优先级""")
    InterRate: "TThostFtdcRatioType" = property(_thostmduserapi.CThostFtdcRULEInterParameterField_InterRate_get, _thostmduserapi.CThostFtdcRULEInterParameterField_InterRate_set, doc=r"""品种间对锁仓费率折扣比例""")
    Leg1ProdFamilyCode: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcRULEInterParameterField_Leg1ProdFamilyCode_get, _thostmduserapi.CThostFtdcRULEInterParameterField_Leg1ProdFamilyCode_set, doc=r"""第一腿构成品种""")
    Leg2ProdFamilyCode: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcRULEInterParameterField_Leg2ProdFamilyCode_get, _thostmduserapi.CThostFtdcRULEInterParameterField_Leg2ProdFamilyCode_set, doc=r"""第二腿构成品种""")
    Leg1PropFactor: "TThostFtdcCommonIntType" = property(_thostmduserapi.CThostFtdcRULEInterParameterField_Leg1PropFactor_get, _thostmduserapi.CThostFtdcRULEInterParameterField_Leg1PropFactor_set, doc=r"""腿1比例系数""")
    Leg2PropFactor: "TThostFtdcCommonIntType" = property(_thostmduserapi.CThostFtdcRULEInterParameterField_Leg2PropFactor_get, _thostmduserapi.CThostFtdcRULEInterParameterField_Leg2PropFactor_set, doc=r"""腿2比例系数""")
    CommodityGroupID: "TThostFtdcCommodityGroupIDType" = property(_thostmduserapi.CThostFtdcRULEInterParameterField_CommodityGroupID_get, _thostmduserapi.CThostFtdcRULEInterParameterField_CommodityGroupID_set, doc=r"""商品群号""")
    CommodityGroupName: "TThostFtdcInstrumentNameType" = property(_thostmduserapi.CThostFtdcRULEInterParameterField_CommodityGroupName_get, _thostmduserapi.CThostFtdcRULEInterParameterField_CommodityGroupName_set, doc=r"""商品群名称""")

    def __init__(self):
        _thostmduserapi.CThostFtdcRULEInterParameterField_swiginit(self, _thostmduserapi.new_CThostFtdcRULEInterParameterField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcRULEInterParameterField

# Register CThostFtdcRULEInterParameterField in _thostmduserapi:
_thostmduserapi.CThostFtdcRULEInterParameterField_swigregister(CThostFtdcRULEInterParameterField)
class CThostFtdcQryRULEInstrParameterField(object):
    r"""RULE合约保证金参数查询"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcQryRULEInstrParameterField_ExchangeID_get, _thostmduserapi.CThostFtdcQryRULEInstrParameterField_ExchangeID_set, doc=r"""交易所代码""")
    InstrumentID: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcQryRULEInstrParameterField_InstrumentID_get, _thostmduserapi.CThostFtdcQryRULEInstrParameterField_InstrumentID_set, doc=r"""合约代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcQryRULEInstrParameterField_swiginit(self, _thostmduserapi.new_CThostFtdcQryRULEInstrParameterField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcQryRULEInstrParameterField

# Register CThostFtdcQryRULEInstrParameterField in _thostmduserapi:
_thostmduserapi.CThostFtdcQryRULEInstrParameterField_swigregister(CThostFtdcQryRULEInstrParameterField)
class CThostFtdcQryRULEIntraParameterField(object):
    r"""RULE品种内对锁仓折扣参数查询"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcQryRULEIntraParameterField_ExchangeID_get, _thostmduserapi.CThostFtdcQryRULEIntraParameterField_ExchangeID_set, doc=r"""交易所代码""")
    ProdFamilyCode: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcQryRULEIntraParameterField_ProdFamilyCode_get, _thostmduserapi.CThostFtdcQryRULEIntraParameterField_ProdFamilyCode_set, doc=r"""品种代码""")

    def __init__(self):
        _thostmduserapi.CThostFtdcQryRULEIntraParameterField_swiginit(self, _thostmduserapi.new_CThostFtdcQryRULEIntraParameterField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcQryRULEIntraParameterField

# Register CThostFtdcQryRULEIntraParameterField in _thostmduserapi:
_thostmduserapi.CThostFtdcQryRULEIntraParameterField_swigregister(CThostFtdcQryRULEIntraParameterField)
class CThostFtdcQryRULEInterParameterField(object):
    r"""RULE跨品种抵扣参数查询"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcQryRULEInterParameterField_ExchangeID_get, _thostmduserapi.CThostFtdcQryRULEInterParameterField_ExchangeID_set, doc=r"""交易所代码""")
    Leg1ProdFamilyCode: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcQryRULEInterParameterField_Leg1ProdFamilyCode_get, _thostmduserapi.CThostFtdcQryRULEInterParameterField_Leg1ProdFamilyCode_set, doc=r"""第一腿构成品种""")
    Leg2ProdFamilyCode: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcQryRULEInterParameterField_Leg2ProdFamilyCode_get, _thostmduserapi.CThostFtdcQryRULEInterParameterField_Leg2ProdFamilyCode_set, doc=r"""第二腿构成品种""")
    CommodityGroupID: "TThostFtdcCommodityGroupIDType" = property(_thostmduserapi.CThostFtdcQryRULEInterParameterField_CommodityGroupID_get, _thostmduserapi.CThostFtdcQryRULEInterParameterField_CommodityGroupID_set, doc=r"""商品群号""")

    def __init__(self):
        _thostmduserapi.CThostFtdcQryRULEInterParameterField_swiginit(self, _thostmduserapi.new_CThostFtdcQryRULEInterParameterField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcQryRULEInterParameterField

# Register CThostFtdcQryRULEInterParameterField in _thostmduserapi:
_thostmduserapi.CThostFtdcQryRULEInterParameterField_swigregister(CThostFtdcQryRULEInterParameterField)
class CThostFtdcInvestorProdRULEMarginField(object):
    r"""投资者产品RULE保证金"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcInvestorProdRULEMarginField_ExchangeID_get, _thostmduserapi.CThostFtdcInvestorProdRULEMarginField_ExchangeID_set, doc=r"""交易所代码""")
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcInvestorProdRULEMarginField_BrokerID_get, _thostmduserapi.CThostFtdcInvestorProdRULEMarginField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "TThostFtdcInvestorIDType" = property(_thostmduserapi.CThostFtdcInvestorProdRULEMarginField_InvestorID_get, _thostmduserapi.CThostFtdcInvestorProdRULEMarginField_InvestorID_set, doc=r"""投资者代码""")
    ProdFamilyCode: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcInvestorProdRULEMarginField_ProdFamilyCode_get, _thostmduserapi.CThostFtdcInvestorProdRULEMarginField_ProdFamilyCode_set, doc=r"""品种代码""")
    InstrumentClass: "TThostFtdcInstrumentClassType" = property(_thostmduserapi.CThostFtdcInvestorProdRULEMarginField_InstrumentClass_get, _thostmduserapi.CThostFtdcInvestorProdRULEMarginField_InstrumentClass_set, doc=r"""合约类型""")
    CommodityGroupID: "TThostFtdcCommodityGroupIDType" = property(_thostmduserapi.CThostFtdcInvestorProdRULEMarginField_CommodityGroupID_get, _thostmduserapi.CThostFtdcInvestorProdRULEMarginField_CommodityGroupID_set, doc=r"""商品群号""")
    BStdPosition: "TThostFtdcStdPositionType" = property(_thostmduserapi.CThostFtdcInvestorProdRULEMarginField_BStdPosition_get, _thostmduserapi.CThostFtdcInvestorProdRULEMarginField_BStdPosition_set, doc=r"""买标准持仓""")
    SStdPosition: "TThostFtdcStdPositionType" = property(_thostmduserapi.CThostFtdcInvestorProdRULEMarginField_SStdPosition_get, _thostmduserapi.CThostFtdcInvestorProdRULEMarginField_SStdPosition_set, doc=r"""卖标准持仓""")
    BStdOpenFrozen: "TThostFtdcStdPositionType" = property(_thostmduserapi.CThostFtdcInvestorProdRULEMarginField_BStdOpenFrozen_get, _thostmduserapi.CThostFtdcInvestorProdRULEMarginField_BStdOpenFrozen_set, doc=r"""买标准开仓冻结""")
    SStdOpenFrozen: "TThostFtdcStdPositionType" = property(_thostmduserapi.CThostFtdcInvestorProdRULEMarginField_SStdOpenFrozen_get, _thostmduserapi.CThostFtdcInvestorProdRULEMarginField_SStdOpenFrozen_set, doc=r"""卖标准开仓冻结""")
    BStdCloseFrozen: "TThostFtdcStdPositionType" = property(_thostmduserapi.CThostFtdcInvestorProdRULEMarginField_BStdCloseFrozen_get, _thostmduserapi.CThostFtdcInvestorProdRULEMarginField_BStdCloseFrozen_set, doc=r"""买标准平仓冻结""")
    SStdCloseFrozen: "TThostFtdcStdPositionType" = property(_thostmduserapi.CThostFtdcInvestorProdRULEMarginField_SStdCloseFrozen_get, _thostmduserapi.CThostFtdcInvestorProdRULEMarginField_SStdCloseFrozen_set, doc=r"""卖标准平仓冻结""")
    IntraProdStdPosition: "TThostFtdcStdPositionType" = property(_thostmduserapi.CThostFtdcInvestorProdRULEMarginField_IntraProdStdPosition_get, _thostmduserapi.CThostFtdcInvestorProdRULEMarginField_IntraProdStdPosition_set, doc=r"""品种内对冲标准持仓""")
    NetStdPosition: "TThostFtdcStdPositionType" = property(_thostmduserapi.CThostFtdcInvestorProdRULEMarginField_NetStdPosition_get, _thostmduserapi.CThostFtdcInvestorProdRULEMarginField_NetStdPosition_set, doc=r"""品种内单腿标准持仓""")
    InterProdStdPosition: "TThostFtdcStdPositionType" = property(_thostmduserapi.CThostFtdcInvestorProdRULEMarginField_InterProdStdPosition_get, _thostmduserapi.CThostFtdcInvestorProdRULEMarginField_InterProdStdPosition_set, doc=r"""品种间对冲标准持仓""")
    SingleStdPosition: "TThostFtdcStdPositionType" = property(_thostmduserapi.CThostFtdcInvestorProdRULEMarginField_SingleStdPosition_get, _thostmduserapi.CThostFtdcInvestorProdRULEMarginField_SingleStdPosition_set, doc=r"""单腿标准持仓""")
    IntraProdMargin: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcInvestorProdRULEMarginField_IntraProdMargin_get, _thostmduserapi.CThostFtdcInvestorProdRULEMarginField_IntraProdMargin_set, doc=r"""品种内对锁保证金""")
    InterProdMargin: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcInvestorProdRULEMarginField_InterProdMargin_get, _thostmduserapi.CThostFtdcInvestorProdRULEMarginField_InterProdMargin_set, doc=r"""品种间对锁保证金""")
    SingleMargin: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcInvestorProdRULEMarginField_SingleMargin_get, _thostmduserapi.CThostFtdcInvestorProdRULEMarginField_SingleMargin_set, doc=r"""跨品种单腿保证金""")
    NonCombMargin: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcInvestorProdRULEMarginField_NonCombMargin_get, _thostmduserapi.CThostFtdcInvestorProdRULEMarginField_NonCombMargin_set, doc=r"""非组合合约保证金""")
    AddOnMargin: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcInvestorProdRULEMarginField_AddOnMargin_get, _thostmduserapi.CThostFtdcInvestorProdRULEMarginField_AddOnMargin_set, doc=r"""附加保证金""")
    ExchMargin: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcInvestorProdRULEMarginField_ExchMargin_get, _thostmduserapi.CThostFtdcInvestorProdRULEMarginField_ExchMargin_set, doc=r"""交易所保证金""")
    AddOnFrozenMargin: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcInvestorProdRULEMarginField_AddOnFrozenMargin_get, _thostmduserapi.CThostFtdcInvestorProdRULEMarginField_AddOnFrozenMargin_set, doc=r"""附加冻结保证金""")
    OpenFrozenMargin: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcInvestorProdRULEMarginField_OpenFrozenMargin_get, _thostmduserapi.CThostFtdcInvestorProdRULEMarginField_OpenFrozenMargin_set, doc=r"""开仓冻结保证金""")
    CloseFrozenMargin: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcInvestorProdRULEMarginField_CloseFrozenMargin_get, _thostmduserapi.CThostFtdcInvestorProdRULEMarginField_CloseFrozenMargin_set, doc=r"""平仓冻结保证金""")
    Margin: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcInvestorProdRULEMarginField_Margin_get, _thostmduserapi.CThostFtdcInvestorProdRULEMarginField_Margin_set, doc=r"""品种保证金""")
    FrozenMargin: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcInvestorProdRULEMarginField_FrozenMargin_get, _thostmduserapi.CThostFtdcInvestorProdRULEMarginField_FrozenMargin_set, doc=r"""冻结保证金""")

    def __init__(self):
        _thostmduserapi.CThostFtdcInvestorProdRULEMarginField_swiginit(self, _thostmduserapi.new_CThostFtdcInvestorProdRULEMarginField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcInvestorProdRULEMarginField

# Register CThostFtdcInvestorProdRULEMarginField in _thostmduserapi:
_thostmduserapi.CThostFtdcInvestorProdRULEMarginField_swigregister(CThostFtdcInvestorProdRULEMarginField)
class CThostFtdcQryInvestorProdRULEMarginField(object):
    r"""投资者产品RULE保证金查询"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcQryInvestorProdRULEMarginField_ExchangeID_get, _thostmduserapi.CThostFtdcQryInvestorProdRULEMarginField_ExchangeID_set, doc=r"""交易所代码""")
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcQryInvestorProdRULEMarginField_BrokerID_get, _thostmduserapi.CThostFtdcQryInvestorProdRULEMarginField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "TThostFtdcInvestorIDType" = property(_thostmduserapi.CThostFtdcQryInvestorProdRULEMarginField_InvestorID_get, _thostmduserapi.CThostFtdcQryInvestorProdRULEMarginField_InvestorID_set, doc=r"""投资者代码""")
    ProdFamilyCode: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcQryInvestorProdRULEMarginField_ProdFamilyCode_get, _thostmduserapi.CThostFtdcQryInvestorProdRULEMarginField_ProdFamilyCode_set, doc=r"""品种代码""")
    CommodityGroupID: "TThostFtdcCommodityGroupIDType" = property(_thostmduserapi.CThostFtdcQryInvestorProdRULEMarginField_CommodityGroupID_get, _thostmduserapi.CThostFtdcQryInvestorProdRULEMarginField_CommodityGroupID_set, doc=r"""商品群号""")

    def __init__(self):
        _thostmduserapi.CThostFtdcQryInvestorProdRULEMarginField_swiginit(self, _thostmduserapi.new_CThostFtdcQryInvestorProdRULEMarginField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcQryInvestorProdRULEMarginField

# Register CThostFtdcQryInvestorProdRULEMarginField in _thostmduserapi:
_thostmduserapi.CThostFtdcQryInvestorProdRULEMarginField_swigregister(CThostFtdcQryInvestorProdRULEMarginField)
class CThostFtdcSyncDeltaSPBMPortfDefinitionField(object):
    r"""风险结算追平SPBM组合保证金套餐"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcSyncDeltaSPBMPortfDefinitionField_ExchangeID_get, _thostmduserapi.CThostFtdcSyncDeltaSPBMPortfDefinitionField_ExchangeID_set, doc=r"""交易所代码""")
    PortfolioDefID: "TThostFtdcPortfolioDefIDType" = property(_thostmduserapi.CThostFtdcSyncDeltaSPBMPortfDefinitionField_PortfolioDefID_get, _thostmduserapi.CThostFtdcSyncDeltaSPBMPortfDefinitionField_PortfolioDefID_set, doc=r"""组合保证金套餐代码""")
    ProdFamilyCode: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcSyncDeltaSPBMPortfDefinitionField_ProdFamilyCode_get, _thostmduserapi.CThostFtdcSyncDeltaSPBMPortfDefinitionField_ProdFamilyCode_set, doc=r"""品种代码""")
    IsSPBM: "TThostFtdcBoolType" = property(_thostmduserapi.CThostFtdcSyncDeltaSPBMPortfDefinitionField_IsSPBM_get, _thostmduserapi.CThostFtdcSyncDeltaSPBMPortfDefinitionField_IsSPBM_set, doc=r"""是否启用SPBM""")
    ActionDirection: "TThostFtdcActionDirectionType" = property(_thostmduserapi.CThostFtdcSyncDeltaSPBMPortfDefinitionField_ActionDirection_get, _thostmduserapi.CThostFtdcSyncDeltaSPBMPortfDefinitionField_ActionDirection_set, doc=r"""操作标志""")
    SyncDeltaSequenceNo: "TThostFtdcSequenceNoType" = property(_thostmduserapi.CThostFtdcSyncDeltaSPBMPortfDefinitionField_SyncDeltaSequenceNo_get, _thostmduserapi.CThostFtdcSyncDeltaSPBMPortfDefinitionField_SyncDeltaSequenceNo_set, doc=r"""追平序号""")

    def __init__(self):
        _thostmduserapi.CThostFtdcSyncDeltaSPBMPortfDefinitionField_swiginit(self, _thostmduserapi.new_CThostFtdcSyncDeltaSPBMPortfDefinitionField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcSyncDeltaSPBMPortfDefinitionField

# Register CThostFtdcSyncDeltaSPBMPortfDefinitionField in _thostmduserapi:
_thostmduserapi.CThostFtdcSyncDeltaSPBMPortfDefinitionField_swigregister(CThostFtdcSyncDeltaSPBMPortfDefinitionField)
class CThostFtdcSyncDeltaSPBMInvstPortfDefField(object):
    r"""风险结算追平投资者SPBM套餐选择"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcSyncDeltaSPBMInvstPortfDefField_ExchangeID_get, _thostmduserapi.CThostFtdcSyncDeltaSPBMInvstPortfDefField_ExchangeID_set, doc=r"""交易所代码""")
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcSyncDeltaSPBMInvstPortfDefField_BrokerID_get, _thostmduserapi.CThostFtdcSyncDeltaSPBMInvstPortfDefField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "TThostFtdcInvestorIDType" = property(_thostmduserapi.CThostFtdcSyncDeltaSPBMInvstPortfDefField_InvestorID_get, _thostmduserapi.CThostFtdcSyncDeltaSPBMInvstPortfDefField_InvestorID_set, doc=r"""投资者代码""")
    PortfolioDefID: "TThostFtdcPortfolioDefIDType" = property(_thostmduserapi.CThostFtdcSyncDeltaSPBMInvstPortfDefField_PortfolioDefID_get, _thostmduserapi.CThostFtdcSyncDeltaSPBMInvstPortfDefField_PortfolioDefID_set, doc=r"""组合保证金套餐代码""")
    ActionDirection: "TThostFtdcActionDirectionType" = property(_thostmduserapi.CThostFtdcSyncDeltaSPBMInvstPortfDefField_ActionDirection_get, _thostmduserapi.CThostFtdcSyncDeltaSPBMInvstPortfDefField_ActionDirection_set, doc=r"""操作标志""")
    SyncDeltaSequenceNo: "TThostFtdcSequenceNoType" = property(_thostmduserapi.CThostFtdcSyncDeltaSPBMInvstPortfDefField_SyncDeltaSequenceNo_get, _thostmduserapi.CThostFtdcSyncDeltaSPBMInvstPortfDefField_SyncDeltaSequenceNo_set, doc=r"""追平序号""")

    def __init__(self):
        _thostmduserapi.CThostFtdcSyncDeltaSPBMInvstPortfDefField_swiginit(self, _thostmduserapi.new_CThostFtdcSyncDeltaSPBMInvstPortfDefField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcSyncDeltaSPBMInvstPortfDefField

# Register CThostFtdcSyncDeltaSPBMInvstPortfDefField in _thostmduserapi:
_thostmduserapi.CThostFtdcSyncDeltaSPBMInvstPortfDefField_swigregister(CThostFtdcSyncDeltaSPBMInvstPortfDefField)
class CThostFtdcSyncDeltaSPBMFutureParameterField(object):
    r"""风险结算追平SPBM期货合约保证金参数"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    TradingDay: "TThostFtdcDateType" = property(_thostmduserapi.CThostFtdcSyncDeltaSPBMFutureParameterField_TradingDay_get, _thostmduserapi.CThostFtdcSyncDeltaSPBMFutureParameterField_TradingDay_set, doc=r"""交易日""")
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcSyncDeltaSPBMFutureParameterField_ExchangeID_get, _thostmduserapi.CThostFtdcSyncDeltaSPBMFutureParameterField_ExchangeID_set, doc=r"""交易所代码""")
    InstrumentID: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcSyncDeltaSPBMFutureParameterField_InstrumentID_get, _thostmduserapi.CThostFtdcSyncDeltaSPBMFutureParameterField_InstrumentID_set, doc=r"""合约代码""")
    ProdFamilyCode: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcSyncDeltaSPBMFutureParameterField_ProdFamilyCode_get, _thostmduserapi.CThostFtdcSyncDeltaSPBMFutureParameterField_ProdFamilyCode_set, doc=r"""品种代码""")
    Cvf: "TThostFtdcVolumeMultipleType" = property(_thostmduserapi.CThostFtdcSyncDeltaSPBMFutureParameterField_Cvf_get, _thostmduserapi.CThostFtdcSyncDeltaSPBMFutureParameterField_Cvf_set, doc=r"""期货合约因子""")
    TimeRange: "TThostFtdcTimeRangeType" = property(_thostmduserapi.CThostFtdcSyncDeltaSPBMFutureParameterField_TimeRange_get, _thostmduserapi.CThostFtdcSyncDeltaSPBMFutureParameterField_TimeRange_set, doc=r"""阶段标识""")
    MarginRate: "TThostFtdcRatioType" = property(_thostmduserapi.CThostFtdcSyncDeltaSPBMFutureParameterField_MarginRate_get, _thostmduserapi.CThostFtdcSyncDeltaSPBMFutureParameterField_MarginRate_set, doc=r"""品种保证金标准""")
    LockRateX: "TThostFtdcRatioType" = property(_thostmduserapi.CThostFtdcSyncDeltaSPBMFutureParameterField_LockRateX_get, _thostmduserapi.CThostFtdcSyncDeltaSPBMFutureParameterField_LockRateX_set, doc=r"""期货合约内部对锁仓费率折扣比例""")
    AddOnRate: "TThostFtdcRatioType" = property(_thostmduserapi.CThostFtdcSyncDeltaSPBMFutureParameterField_AddOnRate_get, _thostmduserapi.CThostFtdcSyncDeltaSPBMFutureParameterField_AddOnRate_set, doc=r"""提高保证金标准""")
    PreSettlementPrice: "TThostFtdcPriceType" = property(_thostmduserapi.CThostFtdcSyncDeltaSPBMFutureParameterField_PreSettlementPrice_get, _thostmduserapi.CThostFtdcSyncDeltaSPBMFutureParameterField_PreSettlementPrice_set, doc=r"""昨结算价""")
    AddOnLockRateX2: "TThostFtdcRatioType" = property(_thostmduserapi.CThostFtdcSyncDeltaSPBMFutureParameterField_AddOnLockRateX2_get, _thostmduserapi.CThostFtdcSyncDeltaSPBMFutureParameterField_AddOnLockRateX2_set, doc=r"""期货合约内部对锁仓附加费率折扣比例""")
    ActionDirection: "TThostFtdcActionDirectionType" = property(_thostmduserapi.CThostFtdcSyncDeltaSPBMFutureParameterField_ActionDirection_get, _thostmduserapi.CThostFtdcSyncDeltaSPBMFutureParameterField_ActionDirection_set, doc=r"""操作标志""")
    SyncDeltaSequenceNo: "TThostFtdcSequenceNoType" = property(_thostmduserapi.CThostFtdcSyncDeltaSPBMFutureParameterField_SyncDeltaSequenceNo_get, _thostmduserapi.CThostFtdcSyncDeltaSPBMFutureParameterField_SyncDeltaSequenceNo_set, doc=r"""追平序号""")

    def __init__(self):
        _thostmduserapi.CThostFtdcSyncDeltaSPBMFutureParameterField_swiginit(self, _thostmduserapi.new_CThostFtdcSyncDeltaSPBMFutureParameterField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcSyncDeltaSPBMFutureParameterField

# Register CThostFtdcSyncDeltaSPBMFutureParameterField in _thostmduserapi:
_thostmduserapi.CThostFtdcSyncDeltaSPBMFutureParameterField_swigregister(CThostFtdcSyncDeltaSPBMFutureParameterField)
class CThostFtdcSyncDeltaSPBMOptionParameterField(object):
    r"""风险结算追平SPBM期权合约保证金参数"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    TradingDay: "TThostFtdcDateType" = property(_thostmduserapi.CThostFtdcSyncDeltaSPBMOptionParameterField_TradingDay_get, _thostmduserapi.CThostFtdcSyncDeltaSPBMOptionParameterField_TradingDay_set, doc=r"""交易日""")
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcSyncDeltaSPBMOptionParameterField_ExchangeID_get, _thostmduserapi.CThostFtdcSyncDeltaSPBMOptionParameterField_ExchangeID_set, doc=r"""交易所代码""")
    InstrumentID: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcSyncDeltaSPBMOptionParameterField_InstrumentID_get, _thostmduserapi.CThostFtdcSyncDeltaSPBMOptionParameterField_InstrumentID_set, doc=r"""合约代码""")
    ProdFamilyCode: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcSyncDeltaSPBMOptionParameterField_ProdFamilyCode_get, _thostmduserapi.CThostFtdcSyncDeltaSPBMOptionParameterField_ProdFamilyCode_set, doc=r"""品种代码""")
    Cvf: "TThostFtdcVolumeMultipleType" = property(_thostmduserapi.CThostFtdcSyncDeltaSPBMOptionParameterField_Cvf_get, _thostmduserapi.CThostFtdcSyncDeltaSPBMOptionParameterField_Cvf_set, doc=r"""期权合约因子""")
    DownPrice: "TThostFtdcPriceType" = property(_thostmduserapi.CThostFtdcSyncDeltaSPBMOptionParameterField_DownPrice_get, _thostmduserapi.CThostFtdcSyncDeltaSPBMOptionParameterField_DownPrice_set, doc=r"""期权冲抵价格""")
    Delta: "TThostFtdcDeltaType" = property(_thostmduserapi.CThostFtdcSyncDeltaSPBMOptionParameterField_Delta_get, _thostmduserapi.CThostFtdcSyncDeltaSPBMOptionParameterField_Delta_set, doc=r"""Delta值""")
    SlimiDelta: "TThostFtdcDeltaType" = property(_thostmduserapi.CThostFtdcSyncDeltaSPBMOptionParameterField_SlimiDelta_get, _thostmduserapi.CThostFtdcSyncDeltaSPBMOptionParameterField_SlimiDelta_set, doc=r"""卖方期权风险转换最低值""")
    PreSettlementPrice: "TThostFtdcPriceType" = property(_thostmduserapi.CThostFtdcSyncDeltaSPBMOptionParameterField_PreSettlementPrice_get, _thostmduserapi.CThostFtdcSyncDeltaSPBMOptionParameterField_PreSettlementPrice_set, doc=r"""昨结算价""")
    ActionDirection: "TThostFtdcActionDirectionType" = property(_thostmduserapi.CThostFtdcSyncDeltaSPBMOptionParameterField_ActionDirection_get, _thostmduserapi.CThostFtdcSyncDeltaSPBMOptionParameterField_ActionDirection_set, doc=r"""操作标志""")
    SyncDeltaSequenceNo: "TThostFtdcSequenceNoType" = property(_thostmduserapi.CThostFtdcSyncDeltaSPBMOptionParameterField_SyncDeltaSequenceNo_get, _thostmduserapi.CThostFtdcSyncDeltaSPBMOptionParameterField_SyncDeltaSequenceNo_set, doc=r"""追平序号""")

    def __init__(self):
        _thostmduserapi.CThostFtdcSyncDeltaSPBMOptionParameterField_swiginit(self, _thostmduserapi.new_CThostFtdcSyncDeltaSPBMOptionParameterField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcSyncDeltaSPBMOptionParameterField

# Register CThostFtdcSyncDeltaSPBMOptionParameterField in _thostmduserapi:
_thostmduserapi.CThostFtdcSyncDeltaSPBMOptionParameterField_swigregister(CThostFtdcSyncDeltaSPBMOptionParameterField)
class CThostFtdcSyncDeltaSPBMIntraParameterField(object):
    r"""风险结算追平SPBM品种内对锁仓折扣参数"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    TradingDay: "TThostFtdcDateType" = property(_thostmduserapi.CThostFtdcSyncDeltaSPBMIntraParameterField_TradingDay_get, _thostmduserapi.CThostFtdcSyncDeltaSPBMIntraParameterField_TradingDay_set, doc=r"""交易日""")
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcSyncDeltaSPBMIntraParameterField_ExchangeID_get, _thostmduserapi.CThostFtdcSyncDeltaSPBMIntraParameterField_ExchangeID_set, doc=r"""交易所代码""")
    ProdFamilyCode: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcSyncDeltaSPBMIntraParameterField_ProdFamilyCode_get, _thostmduserapi.CThostFtdcSyncDeltaSPBMIntraParameterField_ProdFamilyCode_set, doc=r"""品种代码""")
    IntraRateY: "TThostFtdcRatioType" = property(_thostmduserapi.CThostFtdcSyncDeltaSPBMIntraParameterField_IntraRateY_get, _thostmduserapi.CThostFtdcSyncDeltaSPBMIntraParameterField_IntraRateY_set, doc=r"""品种内合约间对锁仓费率折扣比例""")
    AddOnIntraRateY2: "TThostFtdcRatioType" = property(_thostmduserapi.CThostFtdcSyncDeltaSPBMIntraParameterField_AddOnIntraRateY2_get, _thostmduserapi.CThostFtdcSyncDeltaSPBMIntraParameterField_AddOnIntraRateY2_set, doc=r"""品种内合约间对锁仓附加费率折扣比例""")
    ActionDirection: "TThostFtdcActionDirectionType" = property(_thostmduserapi.CThostFtdcSyncDeltaSPBMIntraParameterField_ActionDirection_get, _thostmduserapi.CThostFtdcSyncDeltaSPBMIntraParameterField_ActionDirection_set, doc=r"""操作标志""")
    SyncDeltaSequenceNo: "TThostFtdcSequenceNoType" = property(_thostmduserapi.CThostFtdcSyncDeltaSPBMIntraParameterField_SyncDeltaSequenceNo_get, _thostmduserapi.CThostFtdcSyncDeltaSPBMIntraParameterField_SyncDeltaSequenceNo_set, doc=r"""追平序号""")

    def __init__(self):
        _thostmduserapi.CThostFtdcSyncDeltaSPBMIntraParameterField_swiginit(self, _thostmduserapi.new_CThostFtdcSyncDeltaSPBMIntraParameterField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcSyncDeltaSPBMIntraParameterField

# Register CThostFtdcSyncDeltaSPBMIntraParameterField in _thostmduserapi:
_thostmduserapi.CThostFtdcSyncDeltaSPBMIntraParameterField_swigregister(CThostFtdcSyncDeltaSPBMIntraParameterField)
class CThostFtdcSyncDeltaSPBMInterParameterField(object):
    r"""风险结算追平SPBM跨品种抵扣参数"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    TradingDay: "TThostFtdcDateType" = property(_thostmduserapi.CThostFtdcSyncDeltaSPBMInterParameterField_TradingDay_get, _thostmduserapi.CThostFtdcSyncDeltaSPBMInterParameterField_TradingDay_set, doc=r"""交易日""")
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcSyncDeltaSPBMInterParameterField_ExchangeID_get, _thostmduserapi.CThostFtdcSyncDeltaSPBMInterParameterField_ExchangeID_set, doc=r"""交易所代码""")
    SpreadId: "TThostFtdcSpreadIdType" = property(_thostmduserapi.CThostFtdcSyncDeltaSPBMInterParameterField_SpreadId_get, _thostmduserapi.CThostFtdcSyncDeltaSPBMInterParameterField_SpreadId_set, doc=r"""优先级""")
    InterRateZ: "TThostFtdcRatioType" = property(_thostmduserapi.CThostFtdcSyncDeltaSPBMInterParameterField_InterRateZ_get, _thostmduserapi.CThostFtdcSyncDeltaSPBMInterParameterField_InterRateZ_set, doc=r"""品种间对锁仓费率折扣比例""")
    Leg1ProdFamilyCode: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcSyncDeltaSPBMInterParameterField_Leg1ProdFamilyCode_get, _thostmduserapi.CThostFtdcSyncDeltaSPBMInterParameterField_Leg1ProdFamilyCode_set, doc=r"""第一腿构成品种""")
    Leg2ProdFamilyCode: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcSyncDeltaSPBMInterParameterField_Leg2ProdFamilyCode_get, _thostmduserapi.CThostFtdcSyncDeltaSPBMInterParameterField_Leg2ProdFamilyCode_set, doc=r"""第二腿构成品种""")
    ActionDirection: "TThostFtdcActionDirectionType" = property(_thostmduserapi.CThostFtdcSyncDeltaSPBMInterParameterField_ActionDirection_get, _thostmduserapi.CThostFtdcSyncDeltaSPBMInterParameterField_ActionDirection_set, doc=r"""操作标志""")
    SyncDeltaSequenceNo: "TThostFtdcSequenceNoType" = property(_thostmduserapi.CThostFtdcSyncDeltaSPBMInterParameterField_SyncDeltaSequenceNo_get, _thostmduserapi.CThostFtdcSyncDeltaSPBMInterParameterField_SyncDeltaSequenceNo_set, doc=r"""追平序号""")

    def __init__(self):
        _thostmduserapi.CThostFtdcSyncDeltaSPBMInterParameterField_swiginit(self, _thostmduserapi.new_CThostFtdcSyncDeltaSPBMInterParameterField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcSyncDeltaSPBMInterParameterField

# Register CThostFtdcSyncDeltaSPBMInterParameterField in _thostmduserapi:
_thostmduserapi.CThostFtdcSyncDeltaSPBMInterParameterField_swigregister(CThostFtdcSyncDeltaSPBMInterParameterField)
class CThostFtdcSyncDeltaSPBMAddOnInterParamField(object):
    r"""风险结算追平SPBM附加跨品种抵扣参数"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    TradingDay: "TThostFtdcDateType" = property(_thostmduserapi.CThostFtdcSyncDeltaSPBMAddOnInterParamField_TradingDay_get, _thostmduserapi.CThostFtdcSyncDeltaSPBMAddOnInterParamField_TradingDay_set, doc=r"""交易日""")
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcSyncDeltaSPBMAddOnInterParamField_ExchangeID_get, _thostmduserapi.CThostFtdcSyncDeltaSPBMAddOnInterParamField_ExchangeID_set, doc=r"""交易所代码""")
    SpreadId: "TThostFtdcSpreadIdType" = property(_thostmduserapi.CThostFtdcSyncDeltaSPBMAddOnInterParamField_SpreadId_get, _thostmduserapi.CThostFtdcSyncDeltaSPBMAddOnInterParamField_SpreadId_set, doc=r"""优先级""")
    AddOnInterRateZ2: "TThostFtdcRatioType" = property(_thostmduserapi.CThostFtdcSyncDeltaSPBMAddOnInterParamField_AddOnInterRateZ2_get, _thostmduserapi.CThostFtdcSyncDeltaSPBMAddOnInterParamField_AddOnInterRateZ2_set, doc=r"""品种间对锁仓附加费率折扣比例""")
    Leg1ProdFamilyCode: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcSyncDeltaSPBMAddOnInterParamField_Leg1ProdFamilyCode_get, _thostmduserapi.CThostFtdcSyncDeltaSPBMAddOnInterParamField_Leg1ProdFamilyCode_set, doc=r"""第一腿构成品种""")
    Leg2ProdFamilyCode: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcSyncDeltaSPBMAddOnInterParamField_Leg2ProdFamilyCode_get, _thostmduserapi.CThostFtdcSyncDeltaSPBMAddOnInterParamField_Leg2ProdFamilyCode_set, doc=r"""第二腿构成品种""")
    ActionDirection: "TThostFtdcActionDirectionType" = property(_thostmduserapi.CThostFtdcSyncDeltaSPBMAddOnInterParamField_ActionDirection_get, _thostmduserapi.CThostFtdcSyncDeltaSPBMAddOnInterParamField_ActionDirection_set, doc=r"""操作标志""")
    SyncDeltaSequenceNo: "TThostFtdcSequenceNoType" = property(_thostmduserapi.CThostFtdcSyncDeltaSPBMAddOnInterParamField_SyncDeltaSequenceNo_get, _thostmduserapi.CThostFtdcSyncDeltaSPBMAddOnInterParamField_SyncDeltaSequenceNo_set, doc=r"""追平序号""")

    def __init__(self):
        _thostmduserapi.CThostFtdcSyncDeltaSPBMAddOnInterParamField_swiginit(self, _thostmduserapi.new_CThostFtdcSyncDeltaSPBMAddOnInterParamField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcSyncDeltaSPBMAddOnInterParamField

# Register CThostFtdcSyncDeltaSPBMAddOnInterParamField in _thostmduserapi:
_thostmduserapi.CThostFtdcSyncDeltaSPBMAddOnInterParamField_swigregister(CThostFtdcSyncDeltaSPBMAddOnInterParamField)
class CThostFtdcSyncDeltaSPMMInstParamField(object):
    r"""风险结算追平SPMM合约参数"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcSyncDeltaSPMMInstParamField_ExchangeID_get, _thostmduserapi.CThostFtdcSyncDeltaSPMMInstParamField_ExchangeID_set, doc=r"""交易所代码""")
    InstrumentID: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcSyncDeltaSPMMInstParamField_InstrumentID_get, _thostmduserapi.CThostFtdcSyncDeltaSPMMInstParamField_InstrumentID_set, doc=r"""合约代码""")
    InstMarginCalID: "TThostFtdcInstMarginCalIDType" = property(_thostmduserapi.CThostFtdcSyncDeltaSPMMInstParamField_InstMarginCalID_get, _thostmduserapi.CThostFtdcSyncDeltaSPMMInstParamField_InstMarginCalID_set, doc=r"""SPMM合约保证金算法""")
    CommodityID: "TThostFtdcSPMMProductIDType" = property(_thostmduserapi.CThostFtdcSyncDeltaSPMMInstParamField_CommodityID_get, _thostmduserapi.CThostFtdcSyncDeltaSPMMInstParamField_CommodityID_set, doc=r"""商品组代码""")
    CommodityGroupID: "TThostFtdcSPMMProductIDType" = property(_thostmduserapi.CThostFtdcSyncDeltaSPMMInstParamField_CommodityGroupID_get, _thostmduserapi.CThostFtdcSyncDeltaSPMMInstParamField_CommodityGroupID_set, doc=r"""商品群代码""")
    ActionDirection: "TThostFtdcActionDirectionType" = property(_thostmduserapi.CThostFtdcSyncDeltaSPMMInstParamField_ActionDirection_get, _thostmduserapi.CThostFtdcSyncDeltaSPMMInstParamField_ActionDirection_set, doc=r"""操作标志""")
    SyncDeltaSequenceNo: "TThostFtdcSequenceNoType" = property(_thostmduserapi.CThostFtdcSyncDeltaSPMMInstParamField_SyncDeltaSequenceNo_get, _thostmduserapi.CThostFtdcSyncDeltaSPMMInstParamField_SyncDeltaSequenceNo_set, doc=r"""追平序号""")

    def __init__(self):
        _thostmduserapi.CThostFtdcSyncDeltaSPMMInstParamField_swiginit(self, _thostmduserapi.new_CThostFtdcSyncDeltaSPMMInstParamField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcSyncDeltaSPMMInstParamField

# Register CThostFtdcSyncDeltaSPMMInstParamField in _thostmduserapi:
_thostmduserapi.CThostFtdcSyncDeltaSPMMInstParamField_swigregister(CThostFtdcSyncDeltaSPMMInstParamField)
class CThostFtdcSyncDeltaSPMMProductParamField(object):
    r"""风险结算追平SPMM产品相关参数"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcSyncDeltaSPMMProductParamField_ExchangeID_get, _thostmduserapi.CThostFtdcSyncDeltaSPMMProductParamField_ExchangeID_set, doc=r"""交易所代码""")
    ProductID: "TThostFtdcSPMMProductIDType" = property(_thostmduserapi.CThostFtdcSyncDeltaSPMMProductParamField_ProductID_get, _thostmduserapi.CThostFtdcSyncDeltaSPMMProductParamField_ProductID_set, doc=r"""产品代码""")
    CommodityID: "TThostFtdcSPMMProductIDType" = property(_thostmduserapi.CThostFtdcSyncDeltaSPMMProductParamField_CommodityID_get, _thostmduserapi.CThostFtdcSyncDeltaSPMMProductParamField_CommodityID_set, doc=r"""商品组代码""")
    CommodityGroupID: "TThostFtdcSPMMProductIDType" = property(_thostmduserapi.CThostFtdcSyncDeltaSPMMProductParamField_CommodityGroupID_get, _thostmduserapi.CThostFtdcSyncDeltaSPMMProductParamField_CommodityGroupID_set, doc=r"""商品群代码""")
    ActionDirection: "TThostFtdcActionDirectionType" = property(_thostmduserapi.CThostFtdcSyncDeltaSPMMProductParamField_ActionDirection_get, _thostmduserapi.CThostFtdcSyncDeltaSPMMProductParamField_ActionDirection_set, doc=r"""操作标志""")
    SyncDeltaSequenceNo: "TThostFtdcSequenceNoType" = property(_thostmduserapi.CThostFtdcSyncDeltaSPMMProductParamField_SyncDeltaSequenceNo_get, _thostmduserapi.CThostFtdcSyncDeltaSPMMProductParamField_SyncDeltaSequenceNo_set, doc=r"""追平序号""")

    def __init__(self):
        _thostmduserapi.CThostFtdcSyncDeltaSPMMProductParamField_swiginit(self, _thostmduserapi.new_CThostFtdcSyncDeltaSPMMProductParamField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcSyncDeltaSPMMProductParamField

# Register CThostFtdcSyncDeltaSPMMProductParamField in _thostmduserapi:
_thostmduserapi.CThostFtdcSyncDeltaSPMMProductParamField_swigregister(CThostFtdcSyncDeltaSPMMProductParamField)
class CThostFtdcSyncDeltaInvestorSPMMModelField(object):
    r"""风险结算追平投资者SPMM模板选择"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcSyncDeltaInvestorSPMMModelField_ExchangeID_get, _thostmduserapi.CThostFtdcSyncDeltaInvestorSPMMModelField_ExchangeID_set, doc=r"""交易所代码""")
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcSyncDeltaInvestorSPMMModelField_BrokerID_get, _thostmduserapi.CThostFtdcSyncDeltaInvestorSPMMModelField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "TThostFtdcInvestorIDType" = property(_thostmduserapi.CThostFtdcSyncDeltaInvestorSPMMModelField_InvestorID_get, _thostmduserapi.CThostFtdcSyncDeltaInvestorSPMMModelField_InvestorID_set, doc=r"""投资者代码""")
    SPMMModelID: "TThostFtdcSPMMModelIDType" = property(_thostmduserapi.CThostFtdcSyncDeltaInvestorSPMMModelField_SPMMModelID_get, _thostmduserapi.CThostFtdcSyncDeltaInvestorSPMMModelField_SPMMModelID_set, doc=r"""SPMM模板ID""")
    ActionDirection: "TThostFtdcActionDirectionType" = property(_thostmduserapi.CThostFtdcSyncDeltaInvestorSPMMModelField_ActionDirection_get, _thostmduserapi.CThostFtdcSyncDeltaInvestorSPMMModelField_ActionDirection_set, doc=r"""操作标志""")
    SyncDeltaSequenceNo: "TThostFtdcSequenceNoType" = property(_thostmduserapi.CThostFtdcSyncDeltaInvestorSPMMModelField_SyncDeltaSequenceNo_get, _thostmduserapi.CThostFtdcSyncDeltaInvestorSPMMModelField_SyncDeltaSequenceNo_set, doc=r"""追平序号""")

    def __init__(self):
        _thostmduserapi.CThostFtdcSyncDeltaInvestorSPMMModelField_swiginit(self, _thostmduserapi.new_CThostFtdcSyncDeltaInvestorSPMMModelField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcSyncDeltaInvestorSPMMModelField

# Register CThostFtdcSyncDeltaInvestorSPMMModelField in _thostmduserapi:
_thostmduserapi.CThostFtdcSyncDeltaInvestorSPMMModelField_swigregister(CThostFtdcSyncDeltaInvestorSPMMModelField)
class CThostFtdcSyncDeltaSPMMModelParamField(object):
    r"""风险结算追平SPMM模板参数设置"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcSyncDeltaSPMMModelParamField_ExchangeID_get, _thostmduserapi.CThostFtdcSyncDeltaSPMMModelParamField_ExchangeID_set, doc=r"""交易所代码""")
    SPMMModelID: "TThostFtdcSPMMModelIDType" = property(_thostmduserapi.CThostFtdcSyncDeltaSPMMModelParamField_SPMMModelID_get, _thostmduserapi.CThostFtdcSyncDeltaSPMMModelParamField_SPMMModelID_set, doc=r"""SPMM模板ID""")
    CommodityGroupID: "TThostFtdcSPMMProductIDType" = property(_thostmduserapi.CThostFtdcSyncDeltaSPMMModelParamField_CommodityGroupID_get, _thostmduserapi.CThostFtdcSyncDeltaSPMMModelParamField_CommodityGroupID_set, doc=r"""商品群代码""")
    IntraCommodityRate: "TThostFtdcSPMMDiscountRatioType" = property(_thostmduserapi.CThostFtdcSyncDeltaSPMMModelParamField_IntraCommodityRate_get, _thostmduserapi.CThostFtdcSyncDeltaSPMMModelParamField_IntraCommodityRate_set, doc=r"""SPMM品种内跨期优惠系数""")
    InterCommodityRate: "TThostFtdcSPMMDiscountRatioType" = property(_thostmduserapi.CThostFtdcSyncDeltaSPMMModelParamField_InterCommodityRate_get, _thostmduserapi.CThostFtdcSyncDeltaSPMMModelParamField_InterCommodityRate_set, doc=r"""SPMM品种间优惠系数""")
    OptionDiscountRate: "TThostFtdcSPMMDiscountRatioType" = property(_thostmduserapi.CThostFtdcSyncDeltaSPMMModelParamField_OptionDiscountRate_get, _thostmduserapi.CThostFtdcSyncDeltaSPMMModelParamField_OptionDiscountRate_set, doc=r"""SPMM期权优惠系数""")
    MiniMarginRatio: "TThostFtdcSPMMDiscountRatioType" = property(_thostmduserapi.CThostFtdcSyncDeltaSPMMModelParamField_MiniMarginRatio_get, _thostmduserapi.CThostFtdcSyncDeltaSPMMModelParamField_MiniMarginRatio_set, doc=r"""商品群最小保证金比例""")
    ActionDirection: "TThostFtdcActionDirectionType" = property(_thostmduserapi.CThostFtdcSyncDeltaSPMMModelParamField_ActionDirection_get, _thostmduserapi.CThostFtdcSyncDeltaSPMMModelParamField_ActionDirection_set, doc=r"""操作标志""")
    SyncDeltaSequenceNo: "TThostFtdcSequenceNoType" = property(_thostmduserapi.CThostFtdcSyncDeltaSPMMModelParamField_SyncDeltaSequenceNo_get, _thostmduserapi.CThostFtdcSyncDeltaSPMMModelParamField_SyncDeltaSequenceNo_set, doc=r"""追平序号""")

    def __init__(self):
        _thostmduserapi.CThostFtdcSyncDeltaSPMMModelParamField_swiginit(self, _thostmduserapi.new_CThostFtdcSyncDeltaSPMMModelParamField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcSyncDeltaSPMMModelParamField

# Register CThostFtdcSyncDeltaSPMMModelParamField in _thostmduserapi:
_thostmduserapi.CThostFtdcSyncDeltaSPMMModelParamField_swigregister(CThostFtdcSyncDeltaSPMMModelParamField)
class CThostFtdcSyncDeltaRCAMSCombProdInfoField(object):
    r"""风险结算追平RCAMS产品组合信息"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    TradingDay: "TThostFtdcDateType" = property(_thostmduserapi.CThostFtdcSyncDeltaRCAMSCombProdInfoField_TradingDay_get, _thostmduserapi.CThostFtdcSyncDeltaRCAMSCombProdInfoField_TradingDay_set, doc=r"""交易日""")
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcSyncDeltaRCAMSCombProdInfoField_ExchangeID_get, _thostmduserapi.CThostFtdcSyncDeltaRCAMSCombProdInfoField_ExchangeID_set, doc=r"""交易所代码""")
    ProductID: "TThostFtdcProductIDType" = property(_thostmduserapi.CThostFtdcSyncDeltaRCAMSCombProdInfoField_ProductID_get, _thostmduserapi.CThostFtdcSyncDeltaRCAMSCombProdInfoField_ProductID_set, doc=r"""产品代码""")
    CombProductID: "TThostFtdcProductIDType" = property(_thostmduserapi.CThostFtdcSyncDeltaRCAMSCombProdInfoField_CombProductID_get, _thostmduserapi.CThostFtdcSyncDeltaRCAMSCombProdInfoField_CombProductID_set, doc=r"""商品组代码""")
    ProductGroupID: "TThostFtdcProductIDType" = property(_thostmduserapi.CThostFtdcSyncDeltaRCAMSCombProdInfoField_ProductGroupID_get, _thostmduserapi.CThostFtdcSyncDeltaRCAMSCombProdInfoField_ProductGroupID_set, doc=r"""商品群代码""")
    ActionDirection: "TThostFtdcActionDirectionType" = property(_thostmduserapi.CThostFtdcSyncDeltaRCAMSCombProdInfoField_ActionDirection_get, _thostmduserapi.CThostFtdcSyncDeltaRCAMSCombProdInfoField_ActionDirection_set, doc=r"""操作标志""")
    SyncDeltaSequenceNo: "TThostFtdcSequenceNoType" = property(_thostmduserapi.CThostFtdcSyncDeltaRCAMSCombProdInfoField_SyncDeltaSequenceNo_get, _thostmduserapi.CThostFtdcSyncDeltaRCAMSCombProdInfoField_SyncDeltaSequenceNo_set, doc=r"""追平序号""")

    def __init__(self):
        _thostmduserapi.CThostFtdcSyncDeltaRCAMSCombProdInfoField_swiginit(self, _thostmduserapi.new_CThostFtdcSyncDeltaRCAMSCombProdInfoField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcSyncDeltaRCAMSCombProdInfoField

# Register CThostFtdcSyncDeltaRCAMSCombProdInfoField in _thostmduserapi:
_thostmduserapi.CThostFtdcSyncDeltaRCAMSCombProdInfoField_swigregister(CThostFtdcSyncDeltaRCAMSCombProdInfoField)
class CThostFtdcSyncDeltaRCAMSInstrParameterField(object):
    r"""风险结算追平RCAMS同合约风险对冲参数"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    TradingDay: "TThostFtdcDateType" = property(_thostmduserapi.CThostFtdcSyncDeltaRCAMSInstrParameterField_TradingDay_get, _thostmduserapi.CThostFtdcSyncDeltaRCAMSInstrParameterField_TradingDay_set, doc=r"""交易日""")
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcSyncDeltaRCAMSInstrParameterField_ExchangeID_get, _thostmduserapi.CThostFtdcSyncDeltaRCAMSInstrParameterField_ExchangeID_set, doc=r"""交易所代码""")
    ProductID: "TThostFtdcProductIDType" = property(_thostmduserapi.CThostFtdcSyncDeltaRCAMSInstrParameterField_ProductID_get, _thostmduserapi.CThostFtdcSyncDeltaRCAMSInstrParameterField_ProductID_set, doc=r"""产品代码""")
    HedgeRate: "TThostFtdcHedgeRateType" = property(_thostmduserapi.CThostFtdcSyncDeltaRCAMSInstrParameterField_HedgeRate_get, _thostmduserapi.CThostFtdcSyncDeltaRCAMSInstrParameterField_HedgeRate_set, doc=r"""同合约风险对冲比率""")
    ActionDirection: "TThostFtdcActionDirectionType" = property(_thostmduserapi.CThostFtdcSyncDeltaRCAMSInstrParameterField_ActionDirection_get, _thostmduserapi.CThostFtdcSyncDeltaRCAMSInstrParameterField_ActionDirection_set, doc=r"""操作标志""")
    SyncDeltaSequenceNo: "TThostFtdcSequenceNoType" = property(_thostmduserapi.CThostFtdcSyncDeltaRCAMSInstrParameterField_SyncDeltaSequenceNo_get, _thostmduserapi.CThostFtdcSyncDeltaRCAMSInstrParameterField_SyncDeltaSequenceNo_set, doc=r"""追平序号""")

    def __init__(self):
        _thostmduserapi.CThostFtdcSyncDeltaRCAMSInstrParameterField_swiginit(self, _thostmduserapi.new_CThostFtdcSyncDeltaRCAMSInstrParameterField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcSyncDeltaRCAMSInstrParameterField

# Register CThostFtdcSyncDeltaRCAMSInstrParameterField in _thostmduserapi:
_thostmduserapi.CThostFtdcSyncDeltaRCAMSInstrParameterField_swigregister(CThostFtdcSyncDeltaRCAMSInstrParameterField)
class CThostFtdcSyncDeltaRCAMSIntraParameterField(object):
    r"""风险结算追平RCAMS品种内风险对冲参数"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    TradingDay: "TThostFtdcDateType" = property(_thostmduserapi.CThostFtdcSyncDeltaRCAMSIntraParameterField_TradingDay_get, _thostmduserapi.CThostFtdcSyncDeltaRCAMSIntraParameterField_TradingDay_set, doc=r"""交易日""")
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcSyncDeltaRCAMSIntraParameterField_ExchangeID_get, _thostmduserapi.CThostFtdcSyncDeltaRCAMSIntraParameterField_ExchangeID_set, doc=r"""交易所代码""")
    CombProductID: "TThostFtdcProductIDType" = property(_thostmduserapi.CThostFtdcSyncDeltaRCAMSIntraParameterField_CombProductID_get, _thostmduserapi.CThostFtdcSyncDeltaRCAMSIntraParameterField_CombProductID_set, doc=r"""产品组合代码""")
    HedgeRate: "TThostFtdcHedgeRateType" = property(_thostmduserapi.CThostFtdcSyncDeltaRCAMSIntraParameterField_HedgeRate_get, _thostmduserapi.CThostFtdcSyncDeltaRCAMSIntraParameterField_HedgeRate_set, doc=r"""品种内对冲比率""")
    ActionDirection: "TThostFtdcActionDirectionType" = property(_thostmduserapi.CThostFtdcSyncDeltaRCAMSIntraParameterField_ActionDirection_get, _thostmduserapi.CThostFtdcSyncDeltaRCAMSIntraParameterField_ActionDirection_set, doc=r"""操作标志""")
    SyncDeltaSequenceNo: "TThostFtdcSequenceNoType" = property(_thostmduserapi.CThostFtdcSyncDeltaRCAMSIntraParameterField_SyncDeltaSequenceNo_get, _thostmduserapi.CThostFtdcSyncDeltaRCAMSIntraParameterField_SyncDeltaSequenceNo_set, doc=r"""追平序号""")

    def __init__(self):
        _thostmduserapi.CThostFtdcSyncDeltaRCAMSIntraParameterField_swiginit(self, _thostmduserapi.new_CThostFtdcSyncDeltaRCAMSIntraParameterField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcSyncDeltaRCAMSIntraParameterField

# Register CThostFtdcSyncDeltaRCAMSIntraParameterField in _thostmduserapi:
_thostmduserapi.CThostFtdcSyncDeltaRCAMSIntraParameterField_swigregister(CThostFtdcSyncDeltaRCAMSIntraParameterField)
class CThostFtdcSyncDeltaRCAMSInterParameterField(object):
    r"""风险结算追平RCAMS跨品种风险折抵参数"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    TradingDay: "TThostFtdcDateType" = property(_thostmduserapi.CThostFtdcSyncDeltaRCAMSInterParameterField_TradingDay_get, _thostmduserapi.CThostFtdcSyncDeltaRCAMSInterParameterField_TradingDay_set, doc=r"""交易日""")
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcSyncDeltaRCAMSInterParameterField_ExchangeID_get, _thostmduserapi.CThostFtdcSyncDeltaRCAMSInterParameterField_ExchangeID_set, doc=r"""交易所代码""")
    ProductGroupID: "TThostFtdcProductIDType" = property(_thostmduserapi.CThostFtdcSyncDeltaRCAMSInterParameterField_ProductGroupID_get, _thostmduserapi.CThostFtdcSyncDeltaRCAMSInterParameterField_ProductGroupID_set, doc=r"""商品群代码""")
    Priority: "TThostFtdcRCAMSPriorityType" = property(_thostmduserapi.CThostFtdcSyncDeltaRCAMSInterParameterField_Priority_get, _thostmduserapi.CThostFtdcSyncDeltaRCAMSInterParameterField_Priority_set, doc=r"""优先级""")
    CreditRate: "TThostFtdcHedgeRateType" = property(_thostmduserapi.CThostFtdcSyncDeltaRCAMSInterParameterField_CreditRate_get, _thostmduserapi.CThostFtdcSyncDeltaRCAMSInterParameterField_CreditRate_set, doc=r"""折抵率""")
    CombProduct1: "TThostFtdcProductIDType" = property(_thostmduserapi.CThostFtdcSyncDeltaRCAMSInterParameterField_CombProduct1_get, _thostmduserapi.CThostFtdcSyncDeltaRCAMSInterParameterField_CombProduct1_set, doc=r"""产品组合代码1""")
    CombProduct2: "TThostFtdcProductIDType" = property(_thostmduserapi.CThostFtdcSyncDeltaRCAMSInterParameterField_CombProduct2_get, _thostmduserapi.CThostFtdcSyncDeltaRCAMSInterParameterField_CombProduct2_set, doc=r"""产品组合代码2""")
    ActionDirection: "TThostFtdcActionDirectionType" = property(_thostmduserapi.CThostFtdcSyncDeltaRCAMSInterParameterField_ActionDirection_get, _thostmduserapi.CThostFtdcSyncDeltaRCAMSInterParameterField_ActionDirection_set, doc=r"""操作标志""")
    SyncDeltaSequenceNo: "TThostFtdcSequenceNoType" = property(_thostmduserapi.CThostFtdcSyncDeltaRCAMSInterParameterField_SyncDeltaSequenceNo_get, _thostmduserapi.CThostFtdcSyncDeltaRCAMSInterParameterField_SyncDeltaSequenceNo_set, doc=r"""追平序号""")

    def __init__(self):
        _thostmduserapi.CThostFtdcSyncDeltaRCAMSInterParameterField_swiginit(self, _thostmduserapi.new_CThostFtdcSyncDeltaRCAMSInterParameterField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcSyncDeltaRCAMSInterParameterField

# Register CThostFtdcSyncDeltaRCAMSInterParameterField in _thostmduserapi:
_thostmduserapi.CThostFtdcSyncDeltaRCAMSInterParameterField_swigregister(CThostFtdcSyncDeltaRCAMSInterParameterField)
class CThostFtdcSyncDeltaRCAMSSOptAdjParamField(object):
    r"""风险结算追平RCAMS空头期权风险调整参数"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    TradingDay: "TThostFtdcDateType" = property(_thostmduserapi.CThostFtdcSyncDeltaRCAMSSOptAdjParamField_TradingDay_get, _thostmduserapi.CThostFtdcSyncDeltaRCAMSSOptAdjParamField_TradingDay_set, doc=r"""交易日""")
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcSyncDeltaRCAMSSOptAdjParamField_ExchangeID_get, _thostmduserapi.CThostFtdcSyncDeltaRCAMSSOptAdjParamField_ExchangeID_set, doc=r"""交易所代码""")
    CombProductID: "TThostFtdcProductIDType" = property(_thostmduserapi.CThostFtdcSyncDeltaRCAMSSOptAdjParamField_CombProductID_get, _thostmduserapi.CThostFtdcSyncDeltaRCAMSSOptAdjParamField_CombProductID_set, doc=r"""产品组合代码""")
    HedgeFlag: "TThostFtdcHedgeFlagType" = property(_thostmduserapi.CThostFtdcSyncDeltaRCAMSSOptAdjParamField_HedgeFlag_get, _thostmduserapi.CThostFtdcSyncDeltaRCAMSSOptAdjParamField_HedgeFlag_set, doc=r"""投套标志""")
    AdjustValue: "TThostFtdcAdjustValueType" = property(_thostmduserapi.CThostFtdcSyncDeltaRCAMSSOptAdjParamField_AdjustValue_get, _thostmduserapi.CThostFtdcSyncDeltaRCAMSSOptAdjParamField_AdjustValue_set, doc=r"""空头期权风险调整标准""")
    ActionDirection: "TThostFtdcActionDirectionType" = property(_thostmduserapi.CThostFtdcSyncDeltaRCAMSSOptAdjParamField_ActionDirection_get, _thostmduserapi.CThostFtdcSyncDeltaRCAMSSOptAdjParamField_ActionDirection_set, doc=r"""操作标志""")
    SyncDeltaSequenceNo: "TThostFtdcSequenceNoType" = property(_thostmduserapi.CThostFtdcSyncDeltaRCAMSSOptAdjParamField_SyncDeltaSequenceNo_get, _thostmduserapi.CThostFtdcSyncDeltaRCAMSSOptAdjParamField_SyncDeltaSequenceNo_set, doc=r"""追平序号""")

    def __init__(self):
        _thostmduserapi.CThostFtdcSyncDeltaRCAMSSOptAdjParamField_swiginit(self, _thostmduserapi.new_CThostFtdcSyncDeltaRCAMSSOptAdjParamField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcSyncDeltaRCAMSSOptAdjParamField

# Register CThostFtdcSyncDeltaRCAMSSOptAdjParamField in _thostmduserapi:
_thostmduserapi.CThostFtdcSyncDeltaRCAMSSOptAdjParamField_swigregister(CThostFtdcSyncDeltaRCAMSSOptAdjParamField)
class CThostFtdcSyncDeltaRCAMSCombRuleDtlField(object):
    r"""风险结算追平RCAMS策略组合规则明细"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    TradingDay: "TThostFtdcDateType" = property(_thostmduserapi.CThostFtdcSyncDeltaRCAMSCombRuleDtlField_TradingDay_get, _thostmduserapi.CThostFtdcSyncDeltaRCAMSCombRuleDtlField_TradingDay_set, doc=r"""交易日""")
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcSyncDeltaRCAMSCombRuleDtlField_ExchangeID_get, _thostmduserapi.CThostFtdcSyncDeltaRCAMSCombRuleDtlField_ExchangeID_set, doc=r"""交易所代码""")
    ProdGroup: "TThostFtdcProductIDType" = property(_thostmduserapi.CThostFtdcSyncDeltaRCAMSCombRuleDtlField_ProdGroup_get, _thostmduserapi.CThostFtdcSyncDeltaRCAMSCombRuleDtlField_ProdGroup_set, doc=r"""策略产品""")
    RuleId: "TThostFtdcRuleIdType" = property(_thostmduserapi.CThostFtdcSyncDeltaRCAMSCombRuleDtlField_RuleId_get, _thostmduserapi.CThostFtdcSyncDeltaRCAMSCombRuleDtlField_RuleId_set, doc=r"""策略id""")
    Priority: "TThostFtdcRCAMSPriorityType" = property(_thostmduserapi.CThostFtdcSyncDeltaRCAMSCombRuleDtlField_Priority_get, _thostmduserapi.CThostFtdcSyncDeltaRCAMSCombRuleDtlField_Priority_set, doc=r"""优先级""")
    HedgeFlag: "TThostFtdcHedgeFlagType" = property(_thostmduserapi.CThostFtdcSyncDeltaRCAMSCombRuleDtlField_HedgeFlag_get, _thostmduserapi.CThostFtdcSyncDeltaRCAMSCombRuleDtlField_HedgeFlag_set, doc=r"""投套标志""")
    CombMargin: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcSyncDeltaRCAMSCombRuleDtlField_CombMargin_get, _thostmduserapi.CThostFtdcSyncDeltaRCAMSCombRuleDtlField_CombMargin_set, doc=r"""组合保证金标准""")
    ExchangeInstID: "TThostFtdcExchangeInstIDType" = property(_thostmduserapi.CThostFtdcSyncDeltaRCAMSCombRuleDtlField_ExchangeInstID_get, _thostmduserapi.CThostFtdcSyncDeltaRCAMSCombRuleDtlField_ExchangeInstID_set, doc=r"""交易所组合合约代码""")
    LegID: "TThostFtdcLegIDType" = property(_thostmduserapi.CThostFtdcSyncDeltaRCAMSCombRuleDtlField_LegID_get, _thostmduserapi.CThostFtdcSyncDeltaRCAMSCombRuleDtlField_LegID_set, doc=r"""单腿编号""")
    LegInstrumentID: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcSyncDeltaRCAMSCombRuleDtlField_LegInstrumentID_get, _thostmduserapi.CThostFtdcSyncDeltaRCAMSCombRuleDtlField_LegInstrumentID_set, doc=r"""单腿合约代码""")
    Direction: "TThostFtdcDirectionType" = property(_thostmduserapi.CThostFtdcSyncDeltaRCAMSCombRuleDtlField_Direction_get, _thostmduserapi.CThostFtdcSyncDeltaRCAMSCombRuleDtlField_Direction_set, doc=r"""买卖方向""")
    LegMultiple: "TThostFtdcLegMultipleType" = property(_thostmduserapi.CThostFtdcSyncDeltaRCAMSCombRuleDtlField_LegMultiple_get, _thostmduserapi.CThostFtdcSyncDeltaRCAMSCombRuleDtlField_LegMultiple_set, doc=r"""单腿乘数""")
    ActionDirection: "TThostFtdcActionDirectionType" = property(_thostmduserapi.CThostFtdcSyncDeltaRCAMSCombRuleDtlField_ActionDirection_get, _thostmduserapi.CThostFtdcSyncDeltaRCAMSCombRuleDtlField_ActionDirection_set, doc=r"""操作标志""")
    SyncDeltaSequenceNo: "TThostFtdcSequenceNoType" = property(_thostmduserapi.CThostFtdcSyncDeltaRCAMSCombRuleDtlField_SyncDeltaSequenceNo_get, _thostmduserapi.CThostFtdcSyncDeltaRCAMSCombRuleDtlField_SyncDeltaSequenceNo_set, doc=r"""追平序号""")

    def __init__(self):
        _thostmduserapi.CThostFtdcSyncDeltaRCAMSCombRuleDtlField_swiginit(self, _thostmduserapi.new_CThostFtdcSyncDeltaRCAMSCombRuleDtlField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcSyncDeltaRCAMSCombRuleDtlField

# Register CThostFtdcSyncDeltaRCAMSCombRuleDtlField in _thostmduserapi:
_thostmduserapi.CThostFtdcSyncDeltaRCAMSCombRuleDtlField_swigregister(CThostFtdcSyncDeltaRCAMSCombRuleDtlField)
class CThostFtdcSyncDeltaRCAMSInvstCombPosField(object):
    r"""风险结算追平RCAMS策略组合持仓"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcSyncDeltaRCAMSInvstCombPosField_ExchangeID_get, _thostmduserapi.CThostFtdcSyncDeltaRCAMSInvstCombPosField_ExchangeID_set, doc=r"""交易所代码""")
    BrokerID: "TThostFtdcBrokerIDType" = property(_thostmduserapi.CThostFtdcSyncDeltaRCAMSInvstCombPosField_BrokerID_get, _thostmduserapi.CThostFtdcSyncDeltaRCAMSInvstCombPosField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "TThostFtdcInvestorIDType" = property(_thostmduserapi.CThostFtdcSyncDeltaRCAMSInvstCombPosField_InvestorID_get, _thostmduserapi.CThostFtdcSyncDeltaRCAMSInvstCombPosField_InvestorID_set, doc=r"""投资者代码""")
    InstrumentID: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcSyncDeltaRCAMSInvstCombPosField_InstrumentID_get, _thostmduserapi.CThostFtdcSyncDeltaRCAMSInvstCombPosField_InstrumentID_set, doc=r"""合约代码""")
    HedgeFlag: "TThostFtdcHedgeFlagType" = property(_thostmduserapi.CThostFtdcSyncDeltaRCAMSInvstCombPosField_HedgeFlag_get, _thostmduserapi.CThostFtdcSyncDeltaRCAMSInvstCombPosField_HedgeFlag_set, doc=r"""投套标志""")
    PosiDirection: "TThostFtdcPosiDirectionType" = property(_thostmduserapi.CThostFtdcSyncDeltaRCAMSInvstCombPosField_PosiDirection_get, _thostmduserapi.CThostFtdcSyncDeltaRCAMSInvstCombPosField_PosiDirection_set, doc=r"""持仓多空方向""")
    CombInstrumentID: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcSyncDeltaRCAMSInvstCombPosField_CombInstrumentID_get, _thostmduserapi.CThostFtdcSyncDeltaRCAMSInvstCombPosField_CombInstrumentID_set, doc=r"""组合合约代码""")
    LegID: "TThostFtdcLegIDType" = property(_thostmduserapi.CThostFtdcSyncDeltaRCAMSInvstCombPosField_LegID_get, _thostmduserapi.CThostFtdcSyncDeltaRCAMSInvstCombPosField_LegID_set, doc=r"""单腿编号""")
    ExchangeInstID: "TThostFtdcExchangeInstIDType" = property(_thostmduserapi.CThostFtdcSyncDeltaRCAMSInvstCombPosField_ExchangeInstID_get, _thostmduserapi.CThostFtdcSyncDeltaRCAMSInvstCombPosField_ExchangeInstID_set, doc=r"""交易所组合合约代码""")
    TotalAmt: "TThostFtdcVolumeType" = property(_thostmduserapi.CThostFtdcSyncDeltaRCAMSInvstCombPosField_TotalAmt_get, _thostmduserapi.CThostFtdcSyncDeltaRCAMSInvstCombPosField_TotalAmt_set, doc=r"""持仓量""")
    ExchMargin: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcSyncDeltaRCAMSInvstCombPosField_ExchMargin_get, _thostmduserapi.CThostFtdcSyncDeltaRCAMSInvstCombPosField_ExchMargin_set, doc=r"""交易所保证金""")
    Margin: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcSyncDeltaRCAMSInvstCombPosField_Margin_get, _thostmduserapi.CThostFtdcSyncDeltaRCAMSInvstCombPosField_Margin_set, doc=r"""投资者保证金""")
    ActionDirection: "TThostFtdcActionDirectionType" = property(_thostmduserapi.CThostFtdcSyncDeltaRCAMSInvstCombPosField_ActionDirection_get, _thostmduserapi.CThostFtdcSyncDeltaRCAMSInvstCombPosField_ActionDirection_set, doc=r"""操作标志""")
    SyncDeltaSequenceNo: "TThostFtdcSequenceNoType" = property(_thostmduserapi.CThostFtdcSyncDeltaRCAMSInvstCombPosField_SyncDeltaSequenceNo_get, _thostmduserapi.CThostFtdcSyncDeltaRCAMSInvstCombPosField_SyncDeltaSequenceNo_set, doc=r"""追平序号""")

    def __init__(self):
        _thostmduserapi.CThostFtdcSyncDeltaRCAMSInvstCombPosField_swiginit(self, _thostmduserapi.new_CThostFtdcSyncDeltaRCAMSInvstCombPosField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcSyncDeltaRCAMSInvstCombPosField

# Register CThostFtdcSyncDeltaRCAMSInvstCombPosField in _thostmduserapi:
_thostmduserapi.CThostFtdcSyncDeltaRCAMSInvstCombPosField_swigregister(CThostFtdcSyncDeltaRCAMSInvstCombPosField)
class CThostFtdcSyncDeltaRULEInstrParameterField(object):
    r"""风险结算追平RULE合约保证金参数"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    TradingDay: "TThostFtdcDateType" = property(_thostmduserapi.CThostFtdcSyncDeltaRULEInstrParameterField_TradingDay_get, _thostmduserapi.CThostFtdcSyncDeltaRULEInstrParameterField_TradingDay_set, doc=r"""交易日""")
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcSyncDeltaRULEInstrParameterField_ExchangeID_get, _thostmduserapi.CThostFtdcSyncDeltaRULEInstrParameterField_ExchangeID_set, doc=r"""交易所代码""")
    InstrumentID: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcSyncDeltaRULEInstrParameterField_InstrumentID_get, _thostmduserapi.CThostFtdcSyncDeltaRULEInstrParameterField_InstrumentID_set, doc=r"""合约代码""")
    InstrumentClass: "TThostFtdcInstrumentClassType" = property(_thostmduserapi.CThostFtdcSyncDeltaRULEInstrParameterField_InstrumentClass_get, _thostmduserapi.CThostFtdcSyncDeltaRULEInstrParameterField_InstrumentClass_set, doc=r"""合约类型""")
    StdInstrumentID: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcSyncDeltaRULEInstrParameterField_StdInstrumentID_get, _thostmduserapi.CThostFtdcSyncDeltaRULEInstrParameterField_StdInstrumentID_set, doc=r"""标准合约""")
    BSpecRatio: "TThostFtdcRatioType" = property(_thostmduserapi.CThostFtdcSyncDeltaRULEInstrParameterField_BSpecRatio_get, _thostmduserapi.CThostFtdcSyncDeltaRULEInstrParameterField_BSpecRatio_set, doc=r"""投机买折算系数""")
    SSpecRatio: "TThostFtdcRatioType" = property(_thostmduserapi.CThostFtdcSyncDeltaRULEInstrParameterField_SSpecRatio_get, _thostmduserapi.CThostFtdcSyncDeltaRULEInstrParameterField_SSpecRatio_set, doc=r"""投机卖折算系数""")
    BHedgeRatio: "TThostFtdcRatioType" = property(_thostmduserapi.CThostFtdcSyncDeltaRULEInstrParameterField_BHedgeRatio_get, _thostmduserapi.CThostFtdcSyncDeltaRULEInstrParameterField_BHedgeRatio_set, doc=r"""套保买折算系数""")
    SHedgeRatio: "TThostFtdcRatioType" = property(_thostmduserapi.CThostFtdcSyncDeltaRULEInstrParameterField_SHedgeRatio_get, _thostmduserapi.CThostFtdcSyncDeltaRULEInstrParameterField_SHedgeRatio_set, doc=r"""套保卖折算系数""")
    BAddOnMargin: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcSyncDeltaRULEInstrParameterField_BAddOnMargin_get, _thostmduserapi.CThostFtdcSyncDeltaRULEInstrParameterField_BAddOnMargin_set, doc=r"""买附加风险保证金""")
    SAddOnMargin: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcSyncDeltaRULEInstrParameterField_SAddOnMargin_get, _thostmduserapi.CThostFtdcSyncDeltaRULEInstrParameterField_SAddOnMargin_set, doc=r"""卖附加风险保证金""")
    CommodityGroupID: "TThostFtdcCommodityGroupIDType" = property(_thostmduserapi.CThostFtdcSyncDeltaRULEInstrParameterField_CommodityGroupID_get, _thostmduserapi.CThostFtdcSyncDeltaRULEInstrParameterField_CommodityGroupID_set, doc=r"""商品群号""")
    ActionDirection: "TThostFtdcActionDirectionType" = property(_thostmduserapi.CThostFtdcSyncDeltaRULEInstrParameterField_ActionDirection_get, _thostmduserapi.CThostFtdcSyncDeltaRULEInstrParameterField_ActionDirection_set, doc=r"""操作标志""")
    SyncDeltaSequenceNo: "TThostFtdcSequenceNoType" = property(_thostmduserapi.CThostFtdcSyncDeltaRULEInstrParameterField_SyncDeltaSequenceNo_get, _thostmduserapi.CThostFtdcSyncDeltaRULEInstrParameterField_SyncDeltaSequenceNo_set, doc=r"""追平序号""")

    def __init__(self):
        _thostmduserapi.CThostFtdcSyncDeltaRULEInstrParameterField_swiginit(self, _thostmduserapi.new_CThostFtdcSyncDeltaRULEInstrParameterField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcSyncDeltaRULEInstrParameterField

# Register CThostFtdcSyncDeltaRULEInstrParameterField in _thostmduserapi:
_thostmduserapi.CThostFtdcSyncDeltaRULEInstrParameterField_swigregister(CThostFtdcSyncDeltaRULEInstrParameterField)
class CThostFtdcSyncDeltaRULEIntraParameterField(object):
    r"""风险结算追平RULE品种内对锁仓折扣参数"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    TradingDay: "TThostFtdcDateType" = property(_thostmduserapi.CThostFtdcSyncDeltaRULEIntraParameterField_TradingDay_get, _thostmduserapi.CThostFtdcSyncDeltaRULEIntraParameterField_TradingDay_set, doc=r"""交易日""")
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcSyncDeltaRULEIntraParameterField_ExchangeID_get, _thostmduserapi.CThostFtdcSyncDeltaRULEIntraParameterField_ExchangeID_set, doc=r"""交易所代码""")
    ProdFamilyCode: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcSyncDeltaRULEIntraParameterField_ProdFamilyCode_get, _thostmduserapi.CThostFtdcSyncDeltaRULEIntraParameterField_ProdFamilyCode_set, doc=r"""品种代码""")
    StdInstrumentID: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcSyncDeltaRULEIntraParameterField_StdInstrumentID_get, _thostmduserapi.CThostFtdcSyncDeltaRULEIntraParameterField_StdInstrumentID_set, doc=r"""标准合约""")
    StdInstrMargin: "TThostFtdcMoneyType" = property(_thostmduserapi.CThostFtdcSyncDeltaRULEIntraParameterField_StdInstrMargin_get, _thostmduserapi.CThostFtdcSyncDeltaRULEIntraParameterField_StdInstrMargin_set, doc=r"""标准合约保证金""")
    UsualIntraRate: "TThostFtdcRatioType" = property(_thostmduserapi.CThostFtdcSyncDeltaRULEIntraParameterField_UsualIntraRate_get, _thostmduserapi.CThostFtdcSyncDeltaRULEIntraParameterField_UsualIntraRate_set, doc=r"""一般月份合约组合保证金系数""")
    DeliveryIntraRate: "TThostFtdcRatioType" = property(_thostmduserapi.CThostFtdcSyncDeltaRULEIntraParameterField_DeliveryIntraRate_get, _thostmduserapi.CThostFtdcSyncDeltaRULEIntraParameterField_DeliveryIntraRate_set, doc=r"""临近交割合约组合保证金系数""")
    ActionDirection: "TThostFtdcActionDirectionType" = property(_thostmduserapi.CThostFtdcSyncDeltaRULEIntraParameterField_ActionDirection_get, _thostmduserapi.CThostFtdcSyncDeltaRULEIntraParameterField_ActionDirection_set, doc=r"""操作标志""")
    SyncDeltaSequenceNo: "TThostFtdcSequenceNoType" = property(_thostmduserapi.CThostFtdcSyncDeltaRULEIntraParameterField_SyncDeltaSequenceNo_get, _thostmduserapi.CThostFtdcSyncDeltaRULEIntraParameterField_SyncDeltaSequenceNo_set, doc=r"""追平序号""")

    def __init__(self):
        _thostmduserapi.CThostFtdcSyncDeltaRULEIntraParameterField_swiginit(self, _thostmduserapi.new_CThostFtdcSyncDeltaRULEIntraParameterField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcSyncDeltaRULEIntraParameterField

# Register CThostFtdcSyncDeltaRULEIntraParameterField in _thostmduserapi:
_thostmduserapi.CThostFtdcSyncDeltaRULEIntraParameterField_swigregister(CThostFtdcSyncDeltaRULEIntraParameterField)
class CThostFtdcSyncDeltaRULEInterParameterField(object):
    r"""风险结算追平RULE跨品种抵扣参数"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    TradingDay: "TThostFtdcDateType" = property(_thostmduserapi.CThostFtdcSyncDeltaRULEInterParameterField_TradingDay_get, _thostmduserapi.CThostFtdcSyncDeltaRULEInterParameterField_TradingDay_set, doc=r"""交易日""")
    ExchangeID: "TThostFtdcExchangeIDType" = property(_thostmduserapi.CThostFtdcSyncDeltaRULEInterParameterField_ExchangeID_get, _thostmduserapi.CThostFtdcSyncDeltaRULEInterParameterField_ExchangeID_set, doc=r"""交易所代码""")
    SpreadId: "TThostFtdcSpreadIdType" = property(_thostmduserapi.CThostFtdcSyncDeltaRULEInterParameterField_SpreadId_get, _thostmduserapi.CThostFtdcSyncDeltaRULEInterParameterField_SpreadId_set, doc=r"""优先级""")
    InterRate: "TThostFtdcRatioType" = property(_thostmduserapi.CThostFtdcSyncDeltaRULEInterParameterField_InterRate_get, _thostmduserapi.CThostFtdcSyncDeltaRULEInterParameterField_InterRate_set, doc=r"""品种间对锁仓费率折扣比例""")
    Leg1ProdFamilyCode: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcSyncDeltaRULEInterParameterField_Leg1ProdFamilyCode_get, _thostmduserapi.CThostFtdcSyncDeltaRULEInterParameterField_Leg1ProdFamilyCode_set, doc=r"""第一腿构成品种""")
    Leg2ProdFamilyCode: "TThostFtdcInstrumentIDType" = property(_thostmduserapi.CThostFtdcSyncDeltaRULEInterParameterField_Leg2ProdFamilyCode_get, _thostmduserapi.CThostFtdcSyncDeltaRULEInterParameterField_Leg2ProdFamilyCode_set, doc=r"""第二腿构成品种""")
    Leg1PropFactor: "TThostFtdcCommonIntType" = property(_thostmduserapi.CThostFtdcSyncDeltaRULEInterParameterField_Leg1PropFactor_get, _thostmduserapi.CThostFtdcSyncDeltaRULEInterParameterField_Leg1PropFactor_set, doc=r"""腿1比例系数""")
    Leg2PropFactor: "TThostFtdcCommonIntType" = property(_thostmduserapi.CThostFtdcSyncDeltaRULEInterParameterField_Leg2PropFactor_get, _thostmduserapi.CThostFtdcSyncDeltaRULEInterParameterField_Leg2PropFactor_set, doc=r"""腿2比例系数""")
    CommodityGroupID: "TThostFtdcCommodityGroupIDType" = property(_thostmduserapi.CThostFtdcSyncDeltaRULEInterParameterField_CommodityGroupID_get, _thostmduserapi.CThostFtdcSyncDeltaRULEInterParameterField_CommodityGroupID_set, doc=r"""商品群号""")
    CommodityGroupName: "TThostFtdcInstrumentNameType" = property(_thostmduserapi.CThostFtdcSyncDeltaRULEInterParameterField_CommodityGroupName_get, _thostmduserapi.CThostFtdcSyncDeltaRULEInterParameterField_CommodityGroupName_set, doc=r"""商品群名称""")
    ActionDirection: "TThostFtdcActionDirectionType" = property(_thostmduserapi.CThostFtdcSyncDeltaRULEInterParameterField_ActionDirection_get, _thostmduserapi.CThostFtdcSyncDeltaRULEInterParameterField_ActionDirection_set, doc=r"""操作标志""")
    SyncDeltaSequenceNo: "TThostFtdcSequenceNoType" = property(_thostmduserapi.CThostFtdcSyncDeltaRULEInterParameterField_SyncDeltaSequenceNo_get, _thostmduserapi.CThostFtdcSyncDeltaRULEInterParameterField_SyncDeltaSequenceNo_set, doc=r"""追平序号""")

    def __init__(self):
        _thostmduserapi.CThostFtdcSyncDeltaRULEInterParameterField_swiginit(self, _thostmduserapi.new_CThostFtdcSyncDeltaRULEInterParameterField())
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcSyncDeltaRULEInterParameterField

# Register CThostFtdcSyncDeltaRULEInterParameterField in _thostmduserapi:
_thostmduserapi.CThostFtdcSyncDeltaRULEInterParameterField_swigregister(CThostFtdcSyncDeltaRULEInterParameterField)
class CThostFtdcMdSpi(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def OnFrontConnected(self) -> "void":
        r"""当客户端与交易后台建立起通信连接时（还未登录前），该方法被调用。"""
        return _thostmduserapi.CThostFtdcMdSpi_OnFrontConnected(self)
    OnFrontConnected = _swig_new_instance_method(_thostmduserapi.CThostFtdcMdSpi_OnFrontConnected)

    def OnFrontDisconnected(self, nReason: "int") -> "void":
        r"""
        当客户端与交易后台通信连接断开时，该方法被调用。当发生这个情况后，API会自动重新连接，客户端可不做处理。
        :type nReason: int
        :param nReason: 错误原因
                    0x1001 网络读失败
                    0x1002 网络写失败
                    0x2001 接收心跳超时
                    0x2002 发送心跳失败
                    0x2003 收到错误报文
        """
        return _thostmduserapi.CThostFtdcMdSpi_OnFrontDisconnected(self, nReason)
    OnFrontDisconnected = _swig_new_instance_method(_thostmduserapi.CThostFtdcMdSpi_OnFrontDisconnected)

    def OnHeartBeatWarning(self, nTimeLapse: "int") -> "void":
        r"""
        心跳超时警告。当长时间未收到报文时，该方法被调用。
        :type nTimeLapse: int
        :param nTimeLapse: 距离上次接收报文的时间
        """
        return _thostmduserapi.CThostFtdcMdSpi_OnHeartBeatWarning(self, nTimeLapse)
    OnHeartBeatWarning = _swig_new_instance_method(_thostmduserapi.CThostFtdcMdSpi_OnHeartBeatWarning)

    def OnRspUserLogin(self, pRspUserLogin: "CThostFtdcRspUserLoginField", pRspInfo: "CThostFtdcRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        r"""登录请求响应"""
        return _thostmduserapi.CThostFtdcMdSpi_OnRspUserLogin(self, pRspUserLogin, pRspInfo, nRequestID, bIsLast)
    OnRspUserLogin = _swig_new_instance_method(_thostmduserapi.CThostFtdcMdSpi_OnRspUserLogin)

    def OnRspUserLogout(self, pUserLogout: "CThostFtdcUserLogoutField", pRspInfo: "CThostFtdcRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        r"""登出请求响应"""
        return _thostmduserapi.CThostFtdcMdSpi_OnRspUserLogout(self, pUserLogout, pRspInfo, nRequestID, bIsLast)
    OnRspUserLogout = _swig_new_instance_method(_thostmduserapi.CThostFtdcMdSpi_OnRspUserLogout)

    def OnRspQryMulticastInstrument(self, pMulticastInstrument: "CThostFtdcMulticastInstrumentField", pRspInfo: "CThostFtdcRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        r"""请求查询组播合约响应"""
        return _thostmduserapi.CThostFtdcMdSpi_OnRspQryMulticastInstrument(self, pMulticastInstrument, pRspInfo, nRequestID, bIsLast)
    OnRspQryMulticastInstrument = _swig_new_instance_method(_thostmduserapi.CThostFtdcMdSpi_OnRspQryMulticastInstrument)

    def OnRspError(self, pRspInfo: "CThostFtdcRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        r"""错误应答"""
        return _thostmduserapi.CThostFtdcMdSpi_OnRspError(self, pRspInfo, nRequestID, bIsLast)
    OnRspError = _swig_new_instance_method(_thostmduserapi.CThostFtdcMdSpi_OnRspError)

    def OnRspSubMarketData(self, pSpecificInstrument: "CThostFtdcSpecificInstrumentField", pRspInfo: "CThostFtdcRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        r"""订阅行情应答"""
        return _thostmduserapi.CThostFtdcMdSpi_OnRspSubMarketData(self, pSpecificInstrument, pRspInfo, nRequestID, bIsLast)
    OnRspSubMarketData = _swig_new_instance_method(_thostmduserapi.CThostFtdcMdSpi_OnRspSubMarketData)

    def OnRspUnSubMarketData(self, pSpecificInstrument: "CThostFtdcSpecificInstrumentField", pRspInfo: "CThostFtdcRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        r"""取消订阅行情应答"""
        return _thostmduserapi.CThostFtdcMdSpi_OnRspUnSubMarketData(self, pSpecificInstrument, pRspInfo, nRequestID, bIsLast)
    OnRspUnSubMarketData = _swig_new_instance_method(_thostmduserapi.CThostFtdcMdSpi_OnRspUnSubMarketData)

    def OnRspSubForQuoteRsp(self, pSpecificInstrument: "CThostFtdcSpecificInstrumentField", pRspInfo: "CThostFtdcRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        r"""订阅询价应答"""
        return _thostmduserapi.CThostFtdcMdSpi_OnRspSubForQuoteRsp(self, pSpecificInstrument, pRspInfo, nRequestID, bIsLast)
    OnRspSubForQuoteRsp = _swig_new_instance_method(_thostmduserapi.CThostFtdcMdSpi_OnRspSubForQuoteRsp)

    def OnRspUnSubForQuoteRsp(self, pSpecificInstrument: "CThostFtdcSpecificInstrumentField", pRspInfo: "CThostFtdcRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        r"""取消订阅询价应答"""
        return _thostmduserapi.CThostFtdcMdSpi_OnRspUnSubForQuoteRsp(self, pSpecificInstrument, pRspInfo, nRequestID, bIsLast)
    OnRspUnSubForQuoteRsp = _swig_new_instance_method(_thostmduserapi.CThostFtdcMdSpi_OnRspUnSubForQuoteRsp)

    def OnRtnDepthMarketData(self, pDepthMarketData: "CThostFtdcDepthMarketDataField") -> "void":
        r"""深度行情通知"""
        return _thostmduserapi.CThostFtdcMdSpi_OnRtnDepthMarketData(self, pDepthMarketData)
    OnRtnDepthMarketData = _swig_new_instance_method(_thostmduserapi.CThostFtdcMdSpi_OnRtnDepthMarketData)

    def OnRtnForQuoteRsp(self, pForQuoteRsp: "CThostFtdcForQuoteRspField") -> "void":
        r"""询价通知"""
        return _thostmduserapi.CThostFtdcMdSpi_OnRtnForQuoteRsp(self, pForQuoteRsp)
    OnRtnForQuoteRsp = _swig_new_instance_method(_thostmduserapi.CThostFtdcMdSpi_OnRtnForQuoteRsp)

    def __init__(self):
        if self.__class__ == CThostFtdcMdSpi:
            _self = None
        else:
            _self = self
        _thostmduserapi.CThostFtdcMdSpi_swiginit(self, _thostmduserapi.new_CThostFtdcMdSpi(_self, ))
    __swig_destroy__ = _thostmduserapi.delete_CThostFtdcMdSpi
    def __disown__(self):
        self.this.disown()
        _thostmduserapi.disown_CThostFtdcMdSpi(self)
        return weakref.proxy(self)

# Register CThostFtdcMdSpi in _thostmduserapi:
_thostmduserapi.CThostFtdcMdSpi_swigregister(CThostFtdcMdSpi)
class CThostFtdcMdApi(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    @staticmethod
    def CreateFtdcMdApi(*args) -> "CThostFtdcMdApi *":
        r"""
        创建MdApi
        :type pszFlowPath: string, optional
        :param pszFlowPath: 存贮订阅信息文件的目录，默认为当前目录
        :rtype: :py:class:`CThostFtdcMdApi`
        :return: 创建出的UserApi
            modify for udp marketdata
        """
        return _thostmduserapi.CThostFtdcMdApi_CreateFtdcMdApi(*args)
    CreateFtdcMdApi = _swig_new_static_method(_thostmduserapi.CThostFtdcMdApi_CreateFtdcMdApi)

    @staticmethod
    def GetApiVersion() -> "char const *":
        r"""
        获取API的版本信息
        :rtype: string
        :return: 获取到的版本号
        """
        return _thostmduserapi.CThostFtdcMdApi_GetApiVersion()
    GetApiVersion = _swig_new_static_method(_thostmduserapi.CThostFtdcMdApi_GetApiVersion)

    def Release(self) -> "void":
        r"""
        删除接口对象本身
        Remarks: 不再使用本接口对象时,调用该函数删除接口对象
        """
        return _thostmduserapi.CThostFtdcMdApi_Release(self)
    Release = _swig_new_instance_method(_thostmduserapi.CThostFtdcMdApi_Release)

    def Init(self) -> "void":
        r"""
        初始化
        Remarks: 初始化运行环境,只有调用后,接口才开始工作
        """
        return _thostmduserapi.CThostFtdcMdApi_Init(self)
    Init = _swig_new_instance_method(_thostmduserapi.CThostFtdcMdApi_Init)

    def Join(self) -> "int":
        r"""
        等待接口线程结束运行
        :rtype: int
        :return: 线程退出代码
        """
        return _thostmduserapi.CThostFtdcMdApi_Join(self)
    Join = _swig_new_instance_method(_thostmduserapi.CThostFtdcMdApi_Join)

    def GetTradingDay(self) -> "char const *":
        r"""
        获取当前交易日
        :rtype: string
        :return: 获取到的交易日
        Remarks: 只有登录成功后,才能得到正确的交易日
        """
        return _thostmduserapi.CThostFtdcMdApi_GetTradingDay(self)
    GetTradingDay = _swig_new_instance_method(_thostmduserapi.CThostFtdcMdApi_GetTradingDay)

    def RegisterFront(self, pszFrontAddress: "char *") -> "void":
        r"""
        注册前置机网络地址
        :param pszFrontAddress：前置机网络地址。:
        Remarks: 网络地址的格式为：“protocol://ipaddress:port”，如：”tcp://127.0.0.1:17001”。
        “tcp”代表传输协议，“127.0.0.1”代表服务器地址。”17001”代表服务器端口号。
        """
        return _thostmduserapi.CThostFtdcMdApi_RegisterFront(self, pszFrontAddress)
    RegisterFront = _swig_new_instance_method(_thostmduserapi.CThostFtdcMdApi_RegisterFront)

    def RegisterNameServer(self, pszNsAddress: "char *") -> "void":
        r"""
        注册名字服务器网络地址
        :param pszNsAddress：名字服务器网络地址。:
        Remarks: 网络地址的格式为：“protocol://ipaddress:port”，如：”tcp://127.0.0.1:12001”。
        “tcp”代表传输协议，“127.0.0.1”代表服务器地址。”12001”代表服务器端口号。
        RegisterNameServer优先于RegisterFront
        """
        return _thostmduserapi.CThostFtdcMdApi_RegisterNameServer(self, pszNsAddress)
    RegisterNameServer = _swig_new_instance_method(_thostmduserapi.CThostFtdcMdApi_RegisterNameServer)

    def RegisterFensUserInfo(self, pFensUserInfo: "CThostFtdcFensUserInfoField") -> "void":
        r"""
        注册名字服务器用户信息
        :param pFensUserInfo：用户信息。:
        """
        return _thostmduserapi.CThostFtdcMdApi_RegisterFensUserInfo(self, pFensUserInfo)
    RegisterFensUserInfo = _swig_new_instance_method(_thostmduserapi.CThostFtdcMdApi_RegisterFensUserInfo)

    def RegisterSpi(self, pSpi: "CThostFtdcMdSpi") -> "void":
        r"""
        注册回调接口
        :type pSpi: :py:class:`CThostFtdcMdSpi`
        :param pSpi: 派生自回调接口类的实例
        """
        return _thostmduserapi.CThostFtdcMdApi_RegisterSpi(self, pSpi)
    RegisterSpi = _swig_new_instance_method(_thostmduserapi.CThostFtdcMdApi_RegisterSpi)

    def SubscribeMarketData(self, ppInstrumentID: "char *[]", nCount: "int") -> "int":
        r"""
        订阅行情。
        :type ppInstrumentID: string
        :param ppInstrumentID: 合约ID
        :type nCount: int
        :param nCount: 要订阅/退订行情的合约个数
        Remarks: 
        """
        return _thostmduserapi.CThostFtdcMdApi_SubscribeMarketData(self, ppInstrumentID, nCount)
    SubscribeMarketData = _swig_new_instance_method(_thostmduserapi.CThostFtdcMdApi_SubscribeMarketData)

    def UnSubscribeMarketData(self, ppInstrumentID: "char *[]", nCount: "int") -> "int":
        r"""
        退订行情。
        :type ppInstrumentID: string
        :param ppInstrumentID: 合约ID
        :type nCount: int
        :param nCount: 要订阅/退订行情的合约个数
        Remarks: 
        """
        return _thostmduserapi.CThostFtdcMdApi_UnSubscribeMarketData(self, ppInstrumentID, nCount)
    UnSubscribeMarketData = _swig_new_instance_method(_thostmduserapi.CThostFtdcMdApi_UnSubscribeMarketData)

    def SubscribeForQuoteRsp(self, ppInstrumentID: "char *[]", nCount: "int") -> "int":
        r"""
        订阅询价。
        :type ppInstrumentID: string
        :param ppInstrumentID: 合约ID
        :type nCount: int
        :param nCount: 要订阅/退订行情的合约个数
        Remarks: 
        """
        return _thostmduserapi.CThostFtdcMdApi_SubscribeForQuoteRsp(self, ppInstrumentID, nCount)
    SubscribeForQuoteRsp = _swig_new_instance_method(_thostmduserapi.CThostFtdcMdApi_SubscribeForQuoteRsp)

    def UnSubscribeForQuoteRsp(self, ppInstrumentID: "char *[]", nCount: "int") -> "int":
        r"""
        退订询价。
        :type ppInstrumentID: string
        :param ppInstrumentID: 合约ID
        :type nCount: int
        :param nCount: 要订阅/退订行情的合约个数
        Remarks: 
        """
        return _thostmduserapi.CThostFtdcMdApi_UnSubscribeForQuoteRsp(self, ppInstrumentID, nCount)
    UnSubscribeForQuoteRsp = _swig_new_instance_method(_thostmduserapi.CThostFtdcMdApi_UnSubscribeForQuoteRsp)

    def ReqUserLogin(self, pReqUserLoginField: "CThostFtdcReqUserLoginField", nRequestID: "int") -> "int":
        r"""用户登录请求"""
        return _thostmduserapi.CThostFtdcMdApi_ReqUserLogin(self, pReqUserLoginField, nRequestID)
    ReqUserLogin = _swig_new_instance_method(_thostmduserapi.CThostFtdcMdApi_ReqUserLogin)

    def ReqUserLogout(self, pUserLogout: "CThostFtdcUserLogoutField", nRequestID: "int") -> "int":
        r"""登出请求"""
        return _thostmduserapi.CThostFtdcMdApi_ReqUserLogout(self, pUserLogout, nRequestID)
    ReqUserLogout = _swig_new_instance_method(_thostmduserapi.CThostFtdcMdApi_ReqUserLogout)

    def ReqQryMulticastInstrument(self, pQryMulticastInstrument: "CThostFtdcQryMulticastInstrumentField", nRequestID: "int") -> "int":
        r"""请求查询组播合约"""
        return _thostmduserapi.CThostFtdcMdApi_ReqQryMulticastInstrument(self, pQryMulticastInstrument, nRequestID)
    ReqQryMulticastInstrument = _swig_new_instance_method(_thostmduserapi.CThostFtdcMdApi_ReqQryMulticastInstrument)

# Register CThostFtdcMdApi in _thostmduserapi:
_thostmduserapi.CThostFtdcMdApi_swigregister(CThostFtdcMdApi)

